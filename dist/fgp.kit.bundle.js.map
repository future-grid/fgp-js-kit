{"version":3,"sources":["index.js","com/futuregrid/platform/kit/show/directives/fgp.stage.js","com/futuregrid/platform/kit/utils/data.api.js","com/futuregrid/platform/kit/show/directives/fgp.container.js","com/futuregrid/platform/kit/show/directives/fgp.graph.js","com/futuregrid/platform/kit/show/directives/fgp.page.title.js","com/futuregrid/platform/kit/show/directives/fgp.map.js","com/futuregrid/platform/kit/show/directives/fgp.device.detail.js","com/futuregrid/platform/kit/show/directives/fgp.span.js","com/futuregrid/platform/kit/show/directives/fgp.pie.js","com/futuregrid/platform/kit/show/directives/fgp.chart.table.js"],"names":["this","dataApi","fgpWidgetStatus","fgpWidgetDetail"],"mappings":"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","file":"fgp.kit.bundle.js","sourcesContent":["/**\n * Created by ericwang on 10/06/2016.\n */\n'use strict';\nimport angular from 'angular';\nimport fgpStage from './com/futuregrid/platform/kit/show/directives/fgp.stage.js';\nimport dataApi from './com/futuregrid/platform/kit/utils/data.api.js';\nimport fgpWidgetContainer from './com/futuregrid/platform/kit/show/directives/fgp.container.js';\nimport fgpWidgetGraph from './com/futuregrid/platform/kit/show/directives/fgp.graph.js';\nimport fgpWidgetPageTitle from './com/futuregrid/platform/kit/show/directives/fgp.page.title.js';\nimport fgpWidgetMap from './com/futuregrid/platform/kit/show/directives/fgp.map.js';\nimport fgpWidgetStatus from './com/futuregrid/platform/kit/show/directives/fgp.stage.js';\nimport fgpWidgetDetail from './com/futuregrid/platform/kit/show/directives/fgp.device.detail.js';\nimport fgpWidgetSpan from './com/futuregrid/platform/kit/show/directives/fgp.span.js';\nimport fgpWidgetPie from './com/futuregrid/platform/kit/show/directives/fgp.pie.js';\nimport fgpWidgetChartTable from './com/futuregrid/platform/kit/show/directives/fgp.chart.table.js';\n// angular module\nangular.module('fgp-kit', ['ngMap']).service('dataService', dataApi.buildFactory).directive('fgpContainer', fgpStage.buildFactory)\n    .directive('widgetContainer', fgpWidgetContainer.buildFactory)\n    .directive('widgetGraph', fgpWidgetGraph.buildFactory)\n    .directive('widgetPageTitle', fgpWidgetPageTitle.buildFactory)\n    .directive('widgetMap', fgpWidgetMap.buildFactory)\n    .directive('widgetStatus', fgpWidgetStatus.buildFactory)\n    .directive('widgetDeviceDetail', fgpWidgetDetail.buildFactory)\n    .directive('widgetDeviceSpan', fgpWidgetSpan.buildFactory)\n    .directive('widgetPie', fgpWidgetPie.buildFactory)\n    .directive('widgetChartTable', fgpWidgetChartTable.buildFactory).filter('tableformatter', ['$filter', function ($filter) {\n    return function (input, obj, field, formatter) {\n        if (formatter) {\n            if (obj[field]) {\n                if (\"date\" == formatter) {\n                    return $filter('date')(new Date(obj[field]), 'd/M/yy h:mm a');\n                } else {\n                    return input;\n                }\n            }\n        } else {\n            return input;\n        }\n    };\n}]);\nexport default 'fgp-kit';","/**\n * Created by ericwang on 10/06/2016.\n */\nimport angular from 'angular';\n'use strict';\nclass fgpStage {\n\n    constructor() {\n        this.scope = {\n            applicationName: \"=\",\n            deviceName: \"=\",\n            server: \"=\",\n            configuration: '=',\n            scatterColors: \"=\"\n        };\n        this.replace = true;\n        this.restrict = 'A';\n    }\n\n    template() {\n        return '<div id=\"pageStage\" class=\"wrapper col-md-12 col-xl-12\" style=\"background-color: #fff;height:100%;\">' +\n            '</div>';\n    }\n\n    controller($scope, $element, $timeout, $rootScope, $compile, dataService) {\n        $scope.showdata = {};\n\n        if ($scope.scatterColors && $scope.scatterColors.length > 0) {\n            dataService.setColors($scope.scatterColors);\n        }\n\n\n        $rootScope['applicationName'] = $scope.applicationName;\n        $rootScope['host'] = $scope.server;\n        $rootScope['device'] = $scope.deviceName;\n\n\n        var graphBindingArray = [];\n\n        $scope.$on('bindChildChartEvent', function (evt, msg) {\n            graphBindingArray.push(msg);\n        });\n\n\n        $scope.$on('fetchWidgetMetadataEvent', function (evt, msg) {\n            angular.forEach($scope.showdata, function (metadata, key) {\n                if (key == msg.id) {\n                    msg.callback({data: metadata, from: 'show'});\n                    return;\n                }\n            });\n        });\n\n        function findChild(parentId, parentHtmlObj, arrayItems) {\n\n            for (var i = 0; i < arrayItems.length; i++) {\n                if ('edit' + parentId === arrayItems[i].parent) {\n                    var currentItem = angular.element(arrayItems[i].html_render);\n                    var id = arrayItems[i].id;\n                    $scope.showdata[id] = arrayItems[i];\n                    parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                    findChild(arrayItems[i].id, currentItem, arrayItems);\n                } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                    var currentItem = angular.element(arrayItems[i].html_render);\n                    var id = arrayItems[i].id;\n                    $scope.showdata[id] = arrayItems[i];\n                    parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                    findChild(arrayItems[i].id, currentItem, arrayItems);\n                }\n            }\n        }\n\n        angular.forEach($scope.configuration, function (item) {\n            if ('workingArea' === item.parent) {\n                var currentItem = angular.element(item.html_render);\n                $scope.showdata[item.id] = item;\n                $element.append($compile(currentItem)($scope));\n                findChild(item.id, currentItem, $scope.configuration);\n            }\n        });\n\n        /**\n         * get device information\n         */\n        if ($scope.deviceName && $scope.deviceName != \"\" && \"undefined\" != $scope.deviceName) {\n            dataService.deviceInfo($scope.server, $scope.deviceName, null, $scope.applicationName).then(function (data) {\n                // send device info to all widget\n                $timeout(function () {\n                    $scope.$broadcast('deviceInfoEvent', {device: data, from: 'application'});\n                });\n            });\n        }\n\n\n        // all item created;\n        $timeout(function () {\n            angular.forEach(graphBindingArray, function (graph) {\n                $scope.$broadcast('bindFatherGraphEvent', {parent: graph.graphs, children: graph.children});\n            });\n        });\n    }\n\n\n    static buildFactory() {\n        fgpStage.instance = new fgpStage();\n        return fgpStage.instance;\n    }\n}\n\nexport {fgpStage as default}\n","import $ from 'jquery';\nimport angular from 'angular';\n/**\n * Created by ericwang on 15/06/2016.\n */\nclass dataAccessApi {\n\n    /**\n     * init dataApi\n     * @param $http\n     * @param $q\n     */\n    constructor($http, $q, $cacheFactory) {\n        this._$http = $http;\n        this._$q = $q;\n        // get cache\n        this.indexCache = $cacheFactory('indexCache');\n        this.deviceStores = $cacheFactory('deviceStores');\n    }\n\n\n    /**\n     * sync using JQuery\n     * @param deviceName\n     * @param deviceKey\n     * @param applicationName\n     * @returns {*}\n     */\n    deviceInfo(host, deviceName, deviceKey, applicationName) {\n        var deferred = this._$q.defer();\n        var url = host + \"/api/\";\n\n        if (applicationName) {\n            url += \"app/\" + applicationName;\n        }\n\n        if (deviceName) {\n            url += '/devices/parameter/jsonp?name=' + deviceName\n        } else if (deviceKey) {\n            url += 'devices/parameter/jsonp?key=' + deviceKey\n        }\n\n        $.ajaxSettings.async = false;\n        $.ajax({\n            type: 'GET',\n            url: url,\n            jsonpCallback: 'jsonCallback',\n            contentType: \"application/json\",\n            dataType: 'jsonp',\n            success: function (data) {\n                var url = host + \"/api/\";\n                if (applicationName) {\n                    url += \"app/\" + applicationName + \"/devices/extension-types/jsonp?device_type=\";\n                } else {\n                    url += \"devices/extension-types/jsonp?device_type=\";\n                }\n                $.ajaxSettings.async = false;\n                $.ajax({\n                    type: 'GET',\n                    url: url + data.type,\n                    jsonpCallback: 'jsonCallback',\n                    contentType: \"application/json\",\n                    dataType: 'jsonp',\n                    success: function (types) {\n                        angular.forEach(types, function (type) {\n                            Object.defineProperty(data, type.name, {\n                                get: function () {\n                                    var result = null;\n                                    var url = host + \"/api/\";\n                                    if (applicationName) {\n                                        url += \"app/\" + applicationName + \"/devices/extensions/jsonp?device_name=\";\n                                    } else {\n                                        url += \"devices/extensions/jsonp?device_name=\";\n                                    }\n                                    $.ajaxSettings.async = false;\n                                    $.ajax({\n                                        type: 'GET',\n                                        url: url + this.name + '&extension_type=' + type.name,\n                                        jsonpCallback: 'jsonCallback',\n                                        contentType: \"application/json\",\n                                        dataType: 'jsonp',\n                                        success: function (field) {\n                                            result = field;\n                                        },\n                                        error: function (e) {\n                                            deferred.reject(e);\n                                        }\n                                    });\n                                    return result;\n                                }\n                            });\n                        });\n                    },\n                    error: function (e) {\n                        console.log(e.message);\n                    }\n                });\n\n                deferred.resolve(data);\n            },\n            error: function (e) {\n                deferred.reject(e);\n            }\n        });\n        return deferred.promise;\n    }\n\n    /**\n     *\n     * @param application\n     * @param deviceKey\n     * @param storeSchema\n     * @returns {Promise}\n     */\n    deviceInitInfo(host, application, deviceKey, storeSchema, rangeLevel, otherLevels) {\n        var deferred = this._$q.defer();\n        this._$http.jsonp(host + '/api/app/' + application + '/store/index/jsonp/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n            params: {'otherLevels': otherLevels, 'callback': 'JSON_CALLBACK'}, cache: this.deviceStores\n        }).then(\n            function (response) {\n                deferred.resolve(response.data);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n    /**\n     *\n     * @param application\n     * @param deviceKey\n     * @param storeSchema\n     * @returns {Promise}\n     */\n    childrenDeviceInitInfo(host, application, deviceKey, storeSchema, relationType, relationDeviceType, rangeLevel, otherLevels) {\n        var deferred = this._$q.defer();\n        this._$http.jsonp(host + '/api/app/' + application + '/store/index/jsonp/children/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n            params: {\n                relationType: relationType,\n                relationDeviceType: relationDeviceType,\n                otherLevels: otherLevels,\n                'callback': 'JSON_CALLBACK'\n            },\n            cache: this.deviceStores\n        }).then(\n            function (response) {\n                deferred.resolve(response.data);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n    fillChildrenTree(buckets, tree, showData) {\n\n        if (tree.children[0] != null) {\n            fillChildrenTree(buckets, tree.children[0], showData);\n        }\n\n        if (tree.children[1] != null) {\n            fillChildrenTree(buckets, tree.children[1], showData);\n        }\n\n        if (tree.children[0] == null && tree.children[1] == null) {\n\n            angular.forEach(buckets, function (value, key) {\n                if (key == tree.id && value != null) {\n                    tree.data = value.array;\n                    tree['size'] = value.size;\n\n                    var flag = false;\n                    angular.forEach(showData, function (data) {\n                        if (data.id == tree.id) {\n                            data.data = tree.data;\n                            tree['size'] = value.size;\n                            flag = true;\n                        }\n                    });\n\n                    if (!flag) {\n                        console.info(\"error:\" + key);\n                    }\n                }\n            });\n        }\n    }\n\n\n    fillTree(buckets, tree, showData) {\n        if (tree.children[0] != null) {\n            fillTree(buckets, tree.children[0], showData);\n        }\n\n        if (tree.children[1] != null) {\n            fillTree(buckets, tree.children[1], showData);\n        }\n\n        if (tree.children[0] == null && tree.children[1] == null) {\n            angular.forEach(buckets, function (value, key) {\n                if (key == tree.id) {\n                    tree.data = value.array;\n                    tree['size'] = value.size;\n\n                    var flag = false;\n                    angular.forEach(showData, function (data) {\n                        if (data.id == tree.id) {\n                            data.data = tree.data;\n                            tree['size'] = value.size;\n                            flag = true;\n                        }\n                    });\n\n                    if (!flag) {\n                        console.info(\"error:\" + key);\n                    }\n                }\n            });\n        }\n\n    }\n\n    calTree(buckets, tree, start, end) {\n        if (tree.children[0] != null) {\n            calTree(buckets, tree.children[0], start, end);\n        }\n\n        if (tree.children[1] != null) {\n            calTree(buckets, tree.children[1], start, end);\n        }\n\n        if (tree.children[0] == null && tree.children[1] == null) {\n            if (tree.start >= start && tree.end <= end) {\n                if (buckets.filter(function (elem) {\n                        return elem.id == tree.id\n                    }).length == 0) {\n                    buckets.push(tree);\n                }\n            }\n\n            // start inclued in a bucket\n            if (start > tree.start && start < tree.end) {\n                if (buckets.filter(function (elem) {\n                        return elem.id == tree.id\n                    }).length == 0) {\n                    buckets.push(tree);\n                }\n            }\n\n            // end inclued in a bucket\n            if (end > tree.start && end < tree.end) {\n                if (buckets.filter(function (elem) {\n                        return elem.id == tree.id\n                    }).length == 0) {\n                    buckets.push(tree);\n                }\n            }\n\n\n        }\n    }\n\n\n    /**\n     *\n     * @param application\n     * @param deviceInfo deviceKey and tree\n     * @param storeSchema\n     * @param store\n     * @param start\n     * @param end\n     */\n    devicesStoreData(host, application, deviceInfo, storeSchema, store, start, end) {\n\n        var bucketsData = [];\n        var devicesNullBucket = [];\n        var calTree = this.calTree;\n        var fillChildrenTree = this.fillChildrenTree;\n        angular.forEach(deviceInfo, function (device, index) {\n            var bucketKeys = [];\n            calTree(bucketKeys, device.tree, start, end);\n            var nullBucket = [];\n            // get null buckets\n            angular.forEach(bucketKeys, function (bucket) {\n                if (bucket.data == null) {\n                    nullBucket.push(bucket.id);\n                }\n            });\n            if (nullBucket.length != 0) {\n                devicesNullBucket.push({device: device.name, nullBucket: nullBucket});\n            }\n            bucketsData.push({device: device.name, data: bucketKeys});\n        });\n\n        if (devicesNullBucket.length == 0) {\n            // get data from rest service\n            var deferred = this._$q.defer();\n            deferred.resolve(bucketsData);\n            return deferred.promise;\n        } else {\n            // get data from rest service\n            var deferred = this._$q.defer();\n            this._$http.jsonp(host + '/api/app/' + application + '/store/index/devices/store/data/jsonp/' + storeSchema + '/' + store, {\n                params: {\n                    deviceBucketKeys: JSON.stringify(devicesNullBucket),\n                    callback: 'JSON_CALLBACK'\n                }\n            }).then(\n                function (response) {\n                    // response.data\n                    angular.forEach(response.data, function (deviceData) {\n\n                        var currentBucketShowData = null;\n                        angular.forEach(bucketsData, function (showData) {\n                            if (showData.device == deviceData.device) {\n                                currentBucketShowData = showData.data; //  bucketKeys\n                                angular.forEach(deviceInfo, function (device, index) {\n                                    if (deviceData.device == device.name) {\n                                        fillChildrenTree(deviceData.data, device.tree, currentBucketShowData);\n                                    }\n                                });\n                            }\n                        });\n\n                    });\n                    // fill bucketKeys\n                    deferred.resolve(bucketsData);\n                },\n                function (response) {\n                    deferred.reject(response.data);\n                }\n            );\n            return deferred.promise;\n        }\n\n\n    }\n\n\n    deviceStoreData(host, application, deviceKey, storeSchema, store, tree, start, end) {\n        var fillTree = this.fillTree;\n        var calTree = this.calTree;\n        var bucketKeys = [];\n        calTree(bucketKeys, tree, start, end);\n        var nullBucket = [];\n        // get null buckets\n        angular.forEach(bucketKeys, function (bucket) {\n            if (bucket.data == null) {\n                nullBucket.push(bucket.id);\n            }\n        });\n\n        if (nullBucket.length == 0) {\n            // send rest request\n            var deferred = this._$q.defer();\n            deferred.resolve(bucketKeys);\n            return deferred.promise;\n        } else {\n            // send rest request\n            var deferred = this._$q.defer();\n            this._$http.jsonp(host + '/api/app/' + application + '/store/index/store/data/jsonp/' + deviceKey + '/' + storeSchema + '/' + store, {\n                params: {\n                    bucketKeys: nullBucket,\n                    callback: 'JSON_CALLBACK'\n                }\n            }).then(\n                function (response) {\n                    fillTree(response.data, tree, bucketKeys);\n                    // fill bucketKeys\n                    deferred.resolve(bucketKeys);\n                },\n                function (response) {\n                    deferred.reject(response.data);\n                }\n            );\n            return deferred.promise;\n        }\n\n\n    }\n\n    defaultColors() {\n        if (!this.colors) {\n            this['colors'] = [];\n            for (var i = 0; i < 300; i++) {\n                this.colors.push('#' + (function co(lor) {\n                        return (lor +=\n                            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                        && (lor.length == 6) ? lor : co(lor);\n                    })(''));\n            }\n        }\n        return this.colors;\n    }\n\n    setColors(colors) {\n        this.colors = colors;\n    }\n\n\n    static buildFactory($http, $q, $cacheFactory) {\n        dataAccessApi.instance = new dataAccessApi($http, $q, $cacheFactory);\n        return dataAccessApi.instance;\n    }\n\n}\n\ndataAccessApi.$inject = ['$http', '$q', '$cacheFactory'];\n\nexport {dataAccessApi as default}","/**\n * Created by ericwang on 15/06/2016.\n */\n'use strict';\nclass fgpWidgetContainer {\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(element, attrs) {\n        var flag = attrs.hasOwnProperty(\"shown\");\n        var showTitle = attrs.hasOwnProperty(\"showtitle\");\n        var element_id = attrs.id;\n        var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n            '<div class=\"{{css.width}}\">' +\n            '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n            '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}}\">{{css.title.text}}</div>' +\n            '<div class=\"panel-body\" id=\"edit' + element_id + '\" style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n            '</div>' +\n            '</div></div>';\n        var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '\">' +\n            '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;\">' +\n            '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n            '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n            '</div>' +\n            '</div></div>';\n\n        // show or design\n        if (flag) {\n            if (showTitle) {\n                return dom_show;\n            } else {\n                // without title\n                return dom_show_notitle;\n            }\n        }\n\n    }\n\n    controller($scope, $element, dataService, $rootScope, $timeout) {\n        // only show\n        var element_id = $element.attr(\"id\");\n\n\n        var widgetData = null;\n\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n\n        var metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n        $scope.css[\"title\"] = metadata.css.title;\n        $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n        $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n        $scope.data = {};\n        if (metadata.data) {\n            $scope.data[\"source\"] = metadata.data.source;\n            if ($scope.data && $scope.data.source.device && $scope.data.source.device != -1) {\n\n                if ($scope.data.source.device) {\n                    /**\n                     * get device information\n                     */\n                    dataService.deviceInfo($rootScope.host, JSON.parse($scope.data.source.device).name, null, $rootScope.applicationName).then(function (data) {\n                        // send device info to all widget\n                        $timeout(function () {\n                            $rootScope.$broadcast('deviceInfoEvent', {device: data, from: element_id});\n                        });\n                    });\n                }\n\n            }\n        }\n\n    }\n\n\n    static buildFactory() {\n        fgpWidgetContainer.instance = new fgpWidgetContainer();\n        return fgpWidgetContainer.instance;\n    }\n\n}\n\nfgpWidgetContainer.$inject = [];\n\nexport {fgpWidgetContainer as default}","/**\n * Created by ericwang on 15/06/2016.\n */\nimport angular from 'angular';\nimport Dygraph from \"dygraphs\";\nclass fgpWidgetGraph {\n\n    constructor($timeout, dataService, $rootScope, $interval, $filter, $location) {\n        this.restrict = 'E';\n        this.scope = {};\n        this.$timeout = $timeout;\n        this._dataService = dataService;\n    }\n\n    template(element, attrs) {\n        var flag = attrs.hasOwnProperty(\"shown\");\n        if (flag) {\n            var dom_loading = '<div ng-show=\"loadingShow\" id=\"loading_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\">' +\n                '<div class=\"rect1\"></div>' +\n                '<div class=\"rect2\"></div>' +\n                '<div class=\"rect3\"></div>' +\n                '<div class=\"rect4\"></div>' +\n                '<div class=\"rect5\"></div>' +\n                '</div></div>';\n\n\n            var dom_empty_data = '<div ng-show=\"emptyDataShow\" id=\"emptydata_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\" style=\"width: 100%;\">' +\n                '<h1>Empty Data!</h1>' +\n                '</div></div>';\n\n            return '<div class=\"{{css.width}}\"><div class=\"col-md-12\" style=\"padding:0px;height:{{css.height}}px;-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\"><div class=\"row\"><div class=\"col-md-12\"><a class=\"tooltips\" href=\"javascript:;\" style=\"float: right;margin-right: 10px;\" ng-click=\"currentView = -currentView\"><div class=\"relationBtn\">R</div><span>Scatter View</span></a><div ng-hide=\"true\" class=\"checkbox\" style=\"float: right;margin-right: 10px; margin-bottom: 5px; margin-top: 0;\" ng-model=\"fixInterval\" ng-click=\"fixInterval=!fixInterval\"><label><input type=\"checkbox\" ng-model=\"fixInterval\" ng-clicked=\"fixInterval\" ng-change=\"fixGraphWithGap_click()\">fixed interval</label></div><div style=\"float: right; margin-right: 10px;\"><label class=\"label-inline\" ng-repeat=\"item in intevals.device\"><span class=\"badge\" style=\"background-color: {{ item.name == currentIntervalName ? \\'#009900;\\' : \\'\\'}}\">{{item.name}}</span></label></div></div></div><div class=\"line-chart-graph\" style=\"width: 100%;height: 100%;\"></div></div>' + dom_loading + dom_empty_data + '<div class=\"row\"><div class=\"col-md-12\" style=\"min-height: 30px;\"></div><div class=\"col-md-6\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[0] | date : \\'h:mm a MMMM d, y\\'}}</div><div class=\"col-md-6\" style=\"text-align: right;\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[1] | date : \\'h:mm a MMMM d, y\\'}}</div><div class=\"col-md-12\" style=\"min-height: 40px;\"><div class=\"range-selector-bar\" style=\"height: 0px;margin-top: 30px;\"></div></div></div></div></div>';\n        }\n    }\n\n    link(scope, element, attrs) {\n        scope['defaultColors'] = this._dataService.defaultColors();\n        scope.status = true;\n        var timeOut = this.$timeout;\n        this.$timeout(function () {\n            var getData = function (numSeries, numRows, name) {\n                var result = {labels: null, data: null};\n                var data = [];\n                var labels = [];\n                //init date\n                var initDate = new Date(\"2014/01/01 00:00:00\");\n                for (var j = 0; j < numRows; ++j) {\n                    data[j] = [new Date(initDate.getTime() + 900000)];\n                    initDate = new Date(initDate.getTime() + 900000);\n                }\n                for (var i = 0; i < numSeries; ++i) {\n                    labels.push(name + i);\n                    var val = 0;\n                    for (var j = 0; j < numRows; ++j) {\n                        val += Math.random() - 0.5;\n                        data[j][i + 1] = val;\n                    }\n                }\n                result.labels = labels;\n                result.data = data;\n                return result;\n            };\n\n\n            var sampleData = getData(1, 10, 'Device');\n\n            function movePan(event, g, context, side) {\n\n                context.dragEndX = Dygraph.dragGetX_(event, context);\n                context.dragEndY = Dygraph.dragGetY_(event, context);\n\n\n                // y-axis scaling is automatic unless this is a full 2D pan.\n                if (context.is2DPan) {\n\n                    var pixelsDragged = context.dragEndY - context.dragStartY;\n                    // Adjust each axis appropriately.\n                    if (side == \"r\") {\n                        var axis = g.axes_[0];\n                        var axis_data = context.axes[0];\n                        var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                        var boundedValue = context.boundedValues ? context.boundedValues[0] : null;\n\n                        // In log scale, maxValue and minValue are the logs of those values.\n                        var maxValue = axis_data.initialTopValue + unitsDragged;\n                        if (boundedValue) {\n                            maxValue = Math.min(maxValue, boundedValue[1]);\n                        }\n                        var minValue = maxValue - axis_data.dragValueRange;\n                        if (boundedValue) {\n                            if (minValue < boundedValue[0]) {\n                                // Adjust maxValue, and recompute minValue.\n                                maxValue = maxValue - (minValue - boundedValue[0]);\n                                minValue = maxValue - axis_data.dragValueRange;\n                            }\n                        }\n                        if (g.attributes_.getForAxis(\"logscale\", 0)) {\n                            axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                                Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                            axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                                Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                        } else {\n                            axis.valueWindow = [minValue, maxValue];\n                            axis.valueRange = [minValue, maxValue];\n                        }\n                    } else if (side == 'l') {\n                        var axis = g.axes_[1];\n                        var axis_data = context.axes[1];\n                        var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                        var boundedValue = context.boundedValues ? context.boundedValues[1] : null;\n\n                        // In log scale, maxValue and minValue are the logs of those values.\n                        var maxValue = axis_data.initialTopValue + unitsDragged;\n                        if (boundedValue) {\n                            maxValue = Math.min(maxValue, boundedValue[1]);\n                        }\n                        var minValue = maxValue - axis_data.dragValueRange;\n                        if (boundedValue) {\n                            if (minValue < boundedValue[0]) {\n                                // Adjust maxValue, and recompute minValue.\n                                maxValue = maxValue - (minValue - boundedValue[0]);\n                                minValue = maxValue - axis_data.dragValueRange;\n                            }\n                        }\n                        if (g.attributes_.getForAxis(\"logscale\", 1)) {\n                            axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                                Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                            axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                                Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                        } else {\n                            axis.valueWindow = [minValue, maxValue];\n                            axis.valueRange = [minValue, maxValue];\n                        }\n                    } else {\n                        var minDate = context.initialLeftmostDate -\n                            (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n                        if (context.boundedDates) {\n                            minDate = Math.max(minDate, context.boundedDates[0]);\n                        }\n                        var maxDate = minDate + context.dateRange;\n                        if (context.boundedDates) {\n                            if (maxDate > context.boundedDates[1]) {\n                                // Adjust minDate, and recompute maxDate.\n                                minDate = minDate - (maxDate - context.boundedDates[1]);\n                                maxDate = minDate + context.dateRange;\n                            }\n                        }\n                        var zoomRange = g.xAxisZoomRange;\n                        if (g.xAxisZoomRange[0] instanceof Date) {\n                            zoomRange[0] = g.xAxisZoomRange[0].getTime();\n                        }\n                        if (g.xAxisZoomRange[1] instanceof Date) {\n                            zoomRange[1] = g.xAxisZoomRange[1].getTime();\n                        }\n\n                        if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                            return;\n                        }\n\n                        if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                            g.dateWindow_ = [Math.pow(Dygraph.LOG_SCALE, minDate),\n                                Math.pow(Dygraph.LOG_SCALE, maxDate)];\n                        } else {\n                            g.dateWindow_ = [minDate, maxDate];\n                        }\n                    }\n                }\n                g.drawGraph_(false);\n            }\n\n\n            function offsetToPercentage(g, offsetX, offsetY) {\n                // This is calculating the pixel offset of the leftmost date.\n                var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n                var yar0 = g.yAxisRange(0);\n\n                // This is calculating the pixel of the higest value. (Top pixel)\n                var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n                // x y w and h are relative to the corner of the drawing area,\n                // so that the upper corner of the drawing area is (0, 0).\n                var x = offsetX - xOffset;\n                var y = offsetY - yOffset;\n\n                // This is computing the rightmost pixel, effectively defining the\n                // width.\n                var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n                // This is computing the lowest pixel, effectively defining the height.\n                var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n                // Percentage from the left.\n                var xPct = w == 0 ? 0 : (x / w);\n                // Percentage from the top.\n                var yPct = h == 0 ? 0 : (y / h);\n\n                // The (1-) part below changes it from \"% distance down from the top\"\n                // to \"% distance up from the bottom\".\n                return [xPct, (1 - yPct)];\n            }\n\n\n            function zoom(g, zoomInPercentage, xBias, yBias, direction, side) {\n                if (scope.basicInfo && !scope.basicInfo.zoom) {\n                    return;\n                }\n\n                function adjustAxis(axis, zoomInPercentage, bias) {\n                    var delta = axis[1] - axis[0];\n                    var increment = delta * zoomInPercentage;\n                    var foo = [increment * bias, increment * (1 - bias)];\n                    return [axis[0] + foo[0], axis[1] - foo[1]];\n                }\n\n                xBias = xBias || 0.5;\n                yBias = yBias || 0.5;\n                var yAxes = g.axes_;\n                var newYAxes = [];\n                for (var i = 0; i < g.numAxes(); i++) {\n                    newYAxes[i] = adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n                }\n                if ('v' == direction) {\n                    if ('l' == side) {\n                        yAxes[0]['valueRange'] = newYAxes[0];\n                        yAxes[0]['valueWindow'] = newYAxes[0];\n                    } else if ('r' == side && g.numAxes() == 2) {\n                        yAxes[1]['valueRange'] = newYAxes[1];\n                        yAxes[1]['valueWindow'] = newYAxes[1];\n                    }\n                    g.drawGraph_(false);\n                } else {\n\n                    var ranges = [];\n                    angular.forEach(g.xAxisRange(), function (range) {\n                        if (range instanceof Date) {\n                            ranges.push(range.getTime());\n                        } else {\n                            ranges.push(range);\n                        }\n                    });\n\n                    var newZoomRange = adjustAxis(ranges, zoomInPercentage, xBias);\n                    // do not bigger than range data\n                    var zoomRange = [];\n                    if (g.hasOwnProperty(\"xAxisZoomRange\") && g.xAxisZoomRange) {\n                        zoomRange[0] = g.xAxisZoomRange[0];\n                        zoomRange[1] = g.xAxisZoomRange[1];\n                    } else {\n                        zoomRange[0] = g.xAxisExtremes()[0];\n                        zoomRange[1] = g.xAxisExtremes()[1];\n                    }\n                    if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                        return;\n                    } else if (newZoomRange[0] >= newZoomRange[1]) {\n                        return;\n                    } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                        g.updateOptions({\n                            dateWindow: [zoomRange[0], newZoomRange[1]]\n                        });\n                    } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                        g.updateOptions({\n                            dateWindow: [newZoomRange[0], zoomRange[1]]\n                        });\n                    } else {\n                        g.updateOptions({\n                            dateWindow: newZoomRange\n                        });\n                    }\n                }\n            }\n\n            var zoomTimer = null;\n            var scroll = function (e, g, context) {\n\n                if (scope.basicInfo && !scope.basicInfo.zoom) {\n                    return;\n                }\n\n                if (zoomTimer) {\n                    timeOut.cancel(zoomTimer);\n                }\n                var normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n                // For me the normalized value shows 0.075 for one click. If I took\n                // that verbatim, it would be a 7.5%.\n                var percentage = normal / 50;\n\n                if (!(e.offsetX && e.offsetY)) {\n                    e.offsetX = e.layerX - e.target.offsetLeft;\n                    e.offsetY = e.layerY - e.target.offsetTop;\n                }\n                var percentages = offsetToPercentage(g, e.offsetX, e.offsetY);\n                var xPct = percentages[0];\n                var yPct = percentages[1];\n                //\n                if (e.offsetX <= (g.plotter_.area.x)) {\n                    // console.info(\"v\", \"l\")\n                    // left zoom\n                    zoom(g, percentage, xPct, yPct, 'v', 'l');\n                } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                    // right zoom\n                    // console.info(\"v\", \"r\")\n                    zoom(g, percentage, xPct, yPct, 'v', 'r');\n                } else {\n                    // middle zoom\n                    // console.info(\"h\")\n                    zoom(g, percentage, xPct, yPct, 'h', null);\n                }\n\n                Dygraph.cancelEvent(e);\n                timeOut(function () {\n                    scope.chartDateWindow = g.xAxisRange();\n                });\n\n            };\n\n            var firstPoint = null;\n            var mousedownHandler = function (e, g, context) {\n                if (scope.basicInfo && !scope.basicInfo.zoom) {\n                    return;\n                }\n                context.initializeMouseDown(e, g, context);\n                firstPoint = e.clientX;\n                Dygraph.startPan(e, g, context);\n            };\n            var mousemoveHandler = function (e, g, context) {\n                if (context.isPanning) {\n                    if (event.offsetX <= (g.plotter_.area.x)) {\n                        movePan(event, g, context, 'r');\n                    } else if (event.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                        movePan(event, g, context, 'l');\n                    } else {\n                        movePan(event, g, context, 'h');\n                    }\n                    timeOut(function () {\n                        scope.chartDateWindow = scope.currentChart.xAxisRange();\n                    });\n                }\n            };\n\n            var mouseupHandler = function (e, g, context) {\n                if (context.isPanning) {\n                    Dygraph.endPan(e, g, context);\n                }\n            };\n\n            var interactionModel = {\n                'mousewheel': scroll,\n                'DOMMouseScroll': scroll,\n                'mousedown': mousedownHandler,\n                'mousemove': mousemoveHandler,\n                'mouseup': mouseupHandler\n            };\n\n\n            //init configuration\n            var configuration = {\n                drawGapEdgePoints: true,\n                'pointSize': 3,\n                labelsKMB: true,\n                // data formate\n                labels: ['x'].concat(sampleData.labels),\n                highlightCircleSize: 2,\n                strokeWidth: 1,\n                highlightSeriesOpts: {\n                    strokeWidth: 2,\n                    strokeBorderWidth: 1,\n                    highlightCircleSize: 2\n                },\n                drawPoints: false,\n                drawAxesAtZero: false,\n                labelsDivStyles: {\n                    'text-align': 'right',\n                    'position': 'relative',\n                    'display': 'inline-block'\n                },\n                yRangePad: 10,\n                // x label y label\n                ylabel: 'Value',\n                xlabel: 'Date',\n                colors: scope.defaultColors,\n                // multiple Y axis\n                series: {\n                    'Device0': {\n                        axis: 'y2'\n                    },\n                    'Device4': {\n                        axis: 'y2'\n                    }\n                },\n                // showRangeSelector: true,\n                axes: {\n                    y: {\n                        valueRange: [0, 1]\n                    },\n                    y2: {\n                        // set axis-related properties here\n                        'labelsKMB': true,\n                        valueRange: [0, 1]\n                    },\n                    x: {\n                        // datetime format\n                        valueFormatter: function (y) {\n                            return moment(y).format('LLLL'); //Hide legend label\n                        }\n                    }\n                },\n                pointClickCallback: function (e, p) {\n                    if (scope.currentView != -1) {\n                        scope.showOne(p.name);\n                    }\n                },\n                drawCallback: function (g, isInit) {\n                    timeOut(function () {\n                        if (scope.refersh) { // make sure \"scope.refersh\" doesn't call when the graph create first time.\n                            scope.refersh(g);\n                        }\n                    });\n                },\n                'interactionModel': interactionModel\n            };\n\n            scope.currentChart = new Dygraph(element.find(\"div[class='line-chart-graph']\")[0], sampleData.data, configuration);\n            element.find(\"canvas\").css(\"zIndex\", 99);\n\n\n            if (attrs.hasOwnProperty(\"shown\")) {\n\n\n                var basicInfo = scope.basicInfo;\n                if (basicInfo && basicInfo.range_show) {\n                    scope.rangeSelectorBar = new Dygraph(element.find(\"div[class='range-selector-bar']\")[0], sampleData.data, {\n                            xAxisHeight: 0,\n                            axes: {\n                                x: {\n                                    drawAxis: false\n                                }\n                            },\n                            showRangeSelector: true,\n                            rangeSelectorHeight: 30\n                        }\n                    );\n                    scope.chartDateWindow = scope.rangeSelectorBar.xAxisRange();\n                }\n\n\n                var status = false;\n                // add mouse up event to range select\n                element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mouseup', function (event) {\n                    status = false;\n                    timeOut(function () {\n                        var finalDateRagne = scope.currentChart.xAxisRange();\n                        scope.chartDateTime = {begin: finalDateRagne[0], end: finalDateRagne[1]};\n                    });\n                });\n\n                scope.$on('mouseUpMessage', function ($scope, e) {\n                    if (\"mouseup\" === e.type && status) {\n                        status = false;\n                        timeOut(function () {\n                            var finalDateRange = scope.currentChart.xAxisRange();\n                            scope.chartDateTime = {begin: finalDateRange[0], end: finalDateRange[1]};\n                        });\n                    }\n                });\n\n                scope.$on('bindFatherGraphEvent', function (event, data) {\n                    angular.forEach(data.children, function (child) {\n                        if (child == attrs.id) {\n                            Dygraph.synchronize([scope.currentChart].concat(data.parent), {\n                                zoom: true,\n                                selection: false,\n                                range: false\n                            });\n                            scope.currentChart.updateOptions({\n                                drawCallback: function (g, isInit) {\n                                    timeOut(function () {\n                                        scope.refersh(g);\n                                    });\n                                }\n                            });\n                        }\n                    });\n\n\n                });\n\n\n                element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousemove', function (event) {\n                    if (status) {\n                        timeOut(function () {\n                            scope.chartDateWindow = scope.currentChart.xAxisRange();\n                        });\n                    }\n                });\n\n                element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousedown', function (event) {\n                    status = true;\n                });\n\n                //bind chart\n                if (basicInfo && basicInfo.childrenChart.length > 0) {\n                    var param = {'graphs': [scope.currentChart], children: basicInfo.childrenChart};\n                    if (scope.rangeSelectorBar) {\n                        param.graphs.push(scope.rangeSelectorBar);\n                    }\n                    scope.$emit('bindChildChartEvent', param);\n                }\n            }\n        }, 0);\n    }\n\n    //controller: ['$scope', '$element', '$window', '$interval', '$timeout', '$filter', '$location', function ($scope, $element, $window, $interval, $timeout, $filter, $location) {\n    controller($scope, $element, $window, $interval, $timeout, $filter, $location, dataService, $rootScope) {\n        var element_id = $element.attr(\"id\");\n        $scope.elementId = element_id;\n\n        $scope['defaultColors'] = dataService.defaultColors();\n        var metadata = null;\n        var widgetData = null;\n        $scope.emptyDataShow = false;\n        // attributes----------------------\n\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        if (widgetData.data && widgetData.from == \"show\") {\n            $scope.loadingShow = false;\n\n            $scope.intevals = {device: []};\n\n\n            // update chart\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if (widgetData.data.metadata.css) {\n                $scope.css = widgetData.data.metadata.css;\n            }\n\n            //fix interval\n            $scope.fixInterval = false;\n            var noneFixed = [];\n            $scope.fixGraphWithGap = function () {\n                if ($scope.currentChart && $scope.fixInterval) {\n                    var currentInterval = -1;\n                    angular.forEach($scope.intevals.device, function (item) {\n                        if (item.name === $scope.currentIntervalName) {\n                            currentInterval = item.interval;\n                        }\n                    });\n                    if (noneFixed && noneFixed.length > 0) {\n                        //fix\n                        //get first one\n                        var fixed = [noneFixed[0]];\n                        var tempDate = fixed[0][0].getTime() + currentInterval;\n                        while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                            var flag = false;\n                            // add new\n                            for (var i = 0; i < noneFixed.length; i++) {\n                                if (noneFixed[i][0].getTime() == tempDate) {\n                                    flag = true;\n                                    fixed.push(noneFixed[i]);\n                                    break;\n                                }\n                            }\n\n                            if (!flag) {\n                                var obj = [new Date(tempDate)];\n                                // add NaN\n                                for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                    obj.push(NaN);\n                                }\n                                fixed.push(obj);\n                            }\n                            tempDate += currentInterval;\n                        }\n                        $scope.currentChart.updateOptions({file: fixed});\n                    }\n                } else if ($scope.currentChart && !$scope.fixInterval) {\n                    noneFixed = [];\n                    angular.copy($scope.currentChart.file_, noneFixed);\n                    $scope.currentChart.updateOptions({file: noneFixed});\n                }\n\n            };\n            $scope.fixGraphWithGap_click = function () {\n                if ($scope.currentChart && !$scope.fixInterval) {\n                    noneFixed = [];\n                    angular.copy($scope.currentChart.file_, noneFixed);\n                    var currentInterval = -1;\n                    angular.forEach($scope.intevals.device, function (item) {\n                        if (item.name === $scope.currentIntervalName) {\n                            currentInterval = item.interval;\n                        }\n                    });\n                    if (noneFixed && noneFixed.length > 0) {\n                        //fix\n                        //get first one\n                        var fixed = [noneFixed[0]];\n                        var tempDate = fixed[0][0].getTime() + currentInterval;\n                        while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                            var flag = false;\n                            // add new\n                            for (var i = 0; i < noneFixed.length; i++) {\n                                if (noneFixed[i][0].getTime() == tempDate) {\n                                    flag = true;\n                                    fixed.push(noneFixed[i]);\n                                    break;\n                                }\n                            }\n\n                            if (!flag) {\n                                var obj = [new Date(tempDate)];\n                                // add NaN\n                                for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                    obj.push(NaN);\n                                }\n                                fixed.push(obj);\n                            }\n                            tempDate += currentInterval;\n                        }\n                        $scope.currentChart.updateOptions({file: fixed});\n                    }\n                } else if ($scope.currentChart && $scope.fixInterval) {\n                    $scope.currentChart.updateOptions({file: noneFixed});\n                }\n\n            };\n\n\n            metadata = widgetData.data.metadata;\n            $scope.basicInfo = metadata.data.basic;\n            $scope.currentView = -1; // -1 is device view and 1 is scatter view\n\n            $scope.parent_container = widgetData.data.parent;\n\n            $scope.data_from = \"application\";\n\n            $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                // if the parent container sends a device to here, ignore global device.\n                if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                    return;\n                } else if (deviceData.from != \"application\") {\n                    if ($scope.parent_container != \"edit\" + deviceData.from) {\n                        return;\n                    } else {\n                        $scope.data_from = deviceData.from;\n                    }\n                }\n\n\n                $scope.$watch('currentView', function (nObj, oObj) {\n                    // change\n                    if (nObj != oObj) {\n                        if (nObj == -1) {\n                            var rangeLevel = null;\n                            var otherLevels = [];\n                            angular.forEach(metadata.data.groups[1].collections, function (level) {\n                                if (level.rows.length > 0) {\n                                    if (rangeLevel != null) {\n                                        otherLevels.push(rangeLevel);\n                                    }\n                                    rangeLevel = level.name;\n                                }\n                            });\n                            if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                                // show device view\n                                dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels).then(function (data) {\n                                    initChart(data);\n                                }, function (error) {\n                                    console.error(error)\n                                });\n                            }\n\n                        } else {\n                            //get relation config\n                            if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                                return;\n                            } else {\n                                var rangeLevel = null;\n                                var otherLevels = [];\n                                angular.forEach(metadata.data.groups[2].collections, function (level) {\n                                    if (level.rows.length > 0) {\n                                        if (rangeLevel != null) {\n                                            otherLevels.push(rangeLevel);\n                                        }\n                                        rangeLevel = level.name;\n                                    }\n                                });\n                                if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                                    // show children view\n                                    dataService.childrenDeviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, metadata.data.source.relation, metadata.data.source.relation_group, rangeLevel, otherLevels).then(function (data) {\n                                        // get all device trees\n                                        if (data != null && data.length > 0) {\n                                            initChildrenChart(data);\n                                        } else {\n                                            return;\n                                        }\n\n                                    }, function (error) {\n                                        console.error(error)\n                                    });\n\n                                }\n                            }\n                        }\n                    }\n                    $scope.fixInterval = false;\n\n                });\n\n\n                // first time of showing chart\n                $scope.$watch('currentChart', function (newValue) {\n                    if (newValue) {\n                        //device first level\n                        var rangeLevel = null;\n                        var otherLevels = [];\n                        angular.forEach(metadata.data.groups[1].collections, function (level) {\n                            if (level.rows.length > 0) {\n                                if (rangeLevel != null) {\n                                    otherLevels.push(rangeLevel);\n                                }\n                                rangeLevel = level.name;\n                            }\n                        });\n                        //send a rest request\n                        dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels).then(function (data) {\n                            initChart(data);\n                        }, function (error) {\n                            console.error(error)\n                        });\n                    }\n                });\n\n\n                $scope.$watch(\"chartDateTime\", function (newValue, oldValue) {\n                    if (newValue.begin != oldValue.begin || newValue.end != oldValue.end) {\n                        var expect_points = Math.floor($element.parent().width() / 2);\n                        // find a interval\n                        var expectedInterval = (newValue.end - newValue.begin) / expect_points;\n                        var conf = $scope.intevals.device;\n                        // device detail view\n                        var preOne = conf[0].interval;\n                        var lastOne = conf[conf.length - 1].interval;\n                        var cin = \"\";\n                        if (expectedInterval >= preOne) {\n                            expectedInterval = preOne;\n                        } else if (expectedInterval <= lastOne) {\n                            expectedInterval = lastOne;\n                        } else {\n                            for (var i = 1; i < conf.length; i++) {\n                                if (expectedInterval <= preOne && expectedInterval > conf[i].interval) {\n                                    expectedInterval = preOne;\n                                } else {\n                                    preOne = conf[i].interval;\n                                    cin = conf[i].name;\n                                }\n                            }\n                        }\n                        $scope.currentIntervalName = \"\";\n\n                        angular.forEach(conf, function (config) {\n                            if (config.interval == expectedInterval) {\n                                $scope.currentIntervalName = config.name;\n                            }\n                        });\n                        $scope.loadingShow = true;\n                        if ($scope.currentView == 1) {\n                            // scatter detail view\n                            if (expectedInterval == conf[0].interval) {\n                                // set valueRange;\n                                // re cal max and min\n                                // $scope.childrenRangeConfig[\"dateWindow\"] = $scope.chartDateWindow;\n                                $scope.currentChart.updateOptions({dateWindow: $scope.chartDateWindow});\n                                // if ($scope.rangeSelectorBar) {\n                                //     $scope.rangeSelectorBar.updateOptions({series: $scope.childRangeSeries});\n                                // }\n                                $scope.loadingShow = false;\n                            } else {\n                                var deviceInfo = [];\n                                var currentStore = \"\";\n                                // has problem....\n                                angular.forEach($scope.childTrees, function (device) {\n                                    angular.forEach(device.trees, function (tree, index) {\n                                        if (expectedInterval == tree.frequency && index != 0) {\n                                            currentStore = tree.store;\n                                            deviceInfo.push({name: device.name, tree: tree.tree});\n                                        }\n                                    });\n                                });\n\n                                dataService.devicesStoreData($rootScope.host, $rootScope.applicationName, deviceInfo, metadata.data.source.store, currentStore, newValue.begin, newValue.end).then(function (data) {\n                                    var showData = [];\n                                    angular.forEach(data, function (arr) {\n                                        var deviceData = [];\n                                        angular.forEach(arr.data, function (bucket) {\n                                            if (bucket.data != null) {\n                                                Array.prototype.push.apply(deviceData, bucket.data.slice(0, bucket.size));\n                                            }\n                                        });\n                                        showData.push({device: arr.device, data: deviceData});\n                                    });\n                                    //get configuration\n                                    updateChildrenDetailChart(metadata, currentStore, $scope.rangeChildrenData, showData);\n\n                                }, function (data) {\n                                    console.info(data);\n                                });\n                            }\n                            $scope.fixGraphWithGap();\n                        } else {\n                            // if expected interval is the biggest, show range data\n                            if (expectedInterval == conf[0].interval) {\n                                if (!($scope.chartDateWindow[0] instanceof Date)) {\n                                    $scope.chartDateWindow[0] = new Date($scope.chartDateWindow[0]);\n                                }\n\n                                if (!($scope.chartDateWindow[1] instanceof Date)) {\n                                    $scope.chartDateWindow[1] = new Date($scope.chartDateWindow[1]);\n                                }\n                                $scope.rangeConfig[\"dateWindow\"] = $scope.chartDateWindow;\n                                // set valueRange\n                                $scope.currentChart.updateOptions($scope.rangeConfig);\n                                if ($scope.rangeSelectorBar && $scope.rangeSeries) {\n                                    $scope.rangeSelectorBar.updateOptions({series: $scope.rangeSeries});\n                                }\n                                // tell some other widgets, the graph is changed.\n                                $timeout(function () {\n                                    $rootScope.$broadcast('chartDataChangeEvent', {\n                                        'id': element_id,\n                                        'group': 'device',\n                                        'data': {\n                                            'collection': conf[0].name,\n                                            'group': 'device',\n                                            'data': $scope.ordinalRangeData.filter(function (obj) {\n                                                return obj.timestamp >= $scope.rangeConfig[\"dateWindow\"][0].getTime() && obj.timestamp <= $scope.rangeConfig[\"dateWindow\"][1].getTime();\n                                            })\n                                        }\n                                    });\n                                });\n\n                                $scope.loadingShow = false;\n                            } else {\n                                // cal tree\n                                angular.forEach($scope.trees, function (tree, index) {\n                                    if (expectedInterval == tree.frequency && index != 0) {\n                                        // send request\n                                        dataService.deviceStoreData($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, newValue.begin, newValue.end).then(function (data) {\n                                            // udpate chart\n                                            var showData = [];\n                                            angular.forEach(data, function (arr) {\n                                                Array.prototype.push.apply(showData, arr.data.slice(0, arr.size));\n                                            });\n                                            showData = showData.filter(function (obj) {\n                                                return obj != null;\n                                            });\n                                            showData.sort(function (a, b) {\n                                                return a.timestamp > b.timestamp ? 1 : -1;\n                                            });\n                                            //get configuration\n                                            updateDetailChart(metadata, tree.store, $scope.rangeData, showData);\n\n                                            // tell some other widgets, the graph is changed.\n                                            $timeout(function () {\n                                                $rootScope.$broadcast('chartDataChangeEvent', {\n                                                    'id': element_id,\n                                                    'group': 'device',\n                                                    'data': {\n                                                        'collection': tree.store,\n                                                        'group': 'device',\n                                                        'data': showData\n                                                    }\n                                                });\n                                            });\n\n                                        }, function (data) {\n                                            console.info(data);\n                                        });\n                                    }\n                                });\n                            }\n                            $scope.fixGraphWithGap();\n                        }\n                        $scope.status = false;\n                    }\n                });\n\n\n            });\n\n\n            var fetchData = function (values, node) {\n                if (node.children[0] != null) {\n                    fetchData(values, node.children[0]);\n                }\n\n                if (node.children[1] != null) {\n                    fetchData(values, node.children[1]);\n                }\n\n                if (node.children[0] == null && node.children[1] == null) {\n                    Array.prototype.push.apply(values, node.data.array.slice(0, node.data.size));\n                }\n\n            };\n\n\n            $scope.trees = [];\n\n            $scope.rangeData = [];\n\n            $scope.ordinalRangeData = [];\n\n            var initChart = function (data) {\n                $scope.intevalforshow = [];\n                //\n                $scope.intevals.device = [];\n                var trees = data.trees;\n                $scope.trees = trees;\n                var rangeTree = null;\n                angular.forEach(trees, function (tree) {\n                    if (tree.range) {\n                        rangeTree = tree;\n                    }\n                    $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n                });\n\n\n                // init chart with range data\n                var store = rangeTree.store;\n\n                // get all data\n                var allData = [];\n                fetchData(allData, rangeTree.tree);\n                allData = allData.filter(function (obj) {\n                    return obj != null;\n                });\n                allData.sort(function (a, b) {\n                    return a.timestamp > b.timestamp ? 1 : -1;\n                });\n\n\n                if ($scope.trees.length == 0 || allData.length == 0) {\n                    $scope.emptyDataShow = true;\n                    return;\n                }\n\n                // if the data only has one point. change the data range to bigger\n                if (allData.length == 1) { //  means only one point.\n                    var newData = [];\n                    // add 1 points into both side\n                    var thePoint = allData[0];\n                    var timestamp = thePoint.timestamp;\n                    var currentInterval = $scope.intevals.device[0].interval;\n                    newData.push({timestamp: timestamp - currentInterval});\n                    Array.prototype.push.apply(newData, allData);\n                    newData.push({timestamp: timestamp + currentInterval});\n                    allData = newData;\n                }\n                $scope.ordinalRangeData = allData;\n                // get configuration and make real data\n                updateChart(metadata, store, allData);\n            };\n\n            var initChildrenChart = function (deviceDatas) {\n                var devicesInfo = {};\n                $scope.intevals.device = [];\n                //range data with all device\n                $scope.childTrees = [];\n                angular.forEach(deviceDatas, function (deviceData) {\n                    var device = deviceData.device;\n                    var trees = deviceData.trees;\n                    $scope.childTrees.push({name: device.name, trees: trees});\n                    var rangeTree = null;\n                    angular.forEach(trees, function (tree) {\n                        if (tree.range) {\n                            rangeTree = tree;\n                        }\n\n                        var flag = false;\n                        angular.forEach($scope.intevals.device, function (interval) {\n                            if (interval.name == tree.store && interval.interval == tree.frequency) {\n                                // has same one\n                                flag = true;\n                            }\n                        });\n                        if (!flag) {\n                            $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n                        }\n\n                    });\n\n                    if (rangeTree != null) {\n                        var deviceObj = devicesInfo[device.name] = {};\n                        // get all data\n                        var allData = [];\n                        fetchData(allData, rangeTree.tree);\n                        allData = allData.filter(function (obj) {\n                            return obj != null;\n                        });\n                        allData.sort(function (a, b) {\n                            return a.timestamp > b.timestamp ? 1 : -1;\n                        });\n                        //\n                        deviceObj[\"range\"] = rangeTree;\n                        deviceObj[\"data\"] = allData;\n                    } else {\n                        console.info(device.name + \" has none data.\");\n                    }\n\n                });\n\n                updateChildrenChart(metadata, devicesInfo);\n            };\n\n\n            var updateChildrenChart = function (metadata, devicesInfo) {\n                //relation\n                var relationConfig = metadata.data.groups[2];\n                // scatter view shows only one collection\n                var collections = relationConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n                var allLines = [];\n                var allXLabels = [];\n                angular.forEach(devicesInfo, function (device, key) {\n                    angular.forEach(device.data, function (item) {\n                        var flag = false;\n                        angular.forEach(allXLabels, function (label) {\n                            if (label.getTime() == item.timestamp) {\n                                flag = true;\n                            }\n                        });\n                        if (!flag) {\n                            allXLabels.push(new Date(item.timestamp));\n                        }\n\n\n                    });\n                });\n                // order\n                allXLabels.sort(function (a, b) {\n                    return a > b ? 1 : -1;\n                });\n\n                // make all line\n                angular.forEach(allXLabels, function (label) {\n                    allLines.push([label]);\n                });\n\n\n                var yRange = {min: null, max: null};\n                var showY2axis = false;\n                var counter = 0;\n                angular.forEach(devicesInfo, function (device, key) {\n                    if ($scope.defaultColors[counter]) {\n                        colors.push($scope.defaultColors[counter]);\n                    } else {\n                        colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                    }\n                    counter++;\n\n                    angular.forEach(collections, function (collection) {\n                        if (collection.name == device.range.store) {\n                            $scope.currentIntervalName = device.range.store;\n                            var originalData = device.data;\n\n                            // always same for each device\n                            if (collection.rows[0].yaxis == 0) {\n                                series[collection.rows[0].label] = {'axis': 'y1'};\n                            } else {\n                                series[collection.rows[0].label] = {'axis': 'y2'};\n                                showY2axis = true;\n                            }\n                            labels.push(key);\n                            // make a line\n                            var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                            // add value\n                            angular.forEach(allLines, function (realLine, index) {\n\n                                var flag = false;\n                                angular.forEach(originalData, function (odata) {\n                                    if (realLine[0].getTime() == odata.timestamp) {\n                                        try {\n                                            var value = f(odata);\n                                            realLine.push(value);\n                                            if (yRange.min == null) {\n                                                yRange.min = value;\n                                            }\n\n                                            if (yRange.max == null) {\n                                                yRange.max = value;\n                                            }\n\n                                            if (yRange.min > value) {\n                                                yRange.min = value;\n                                            }\n\n                                            if (yRange.max < value) {\n                                                yRange.max = value;\n                                            }\n                                        } catch (ex) {\n                                            realLine.push(null);\n                                        }\n                                        flag = true;\n                                    }\n                                });\n\n                                if (!flag) {\n                                    realLine.push(null);\n                                }\n                            });\n\n\n                        }\n                    });\n                });\n\n                if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                    yRange.min = yRange.min - (yRange.min) * 0.10;\n                    yRange.max = yRange.max + (yRange.max) * 0.10;\n                }\n                //update chart\n\n                if ($scope.currentChart) {\n                    $scope.rangeChildrenData = allLines;\n\n                    if (showY2axis) {\n                        $scope.childrenRangeConfig = {\n                            'labelsKMB': true,\n                            'file': allLines,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max]},\n                                'y2': {}\n                            }\n                            // showRangeSelector: true\n                        };\n                    } else {\n                        var newLines = [];\n                        angular.copy(allLines, newLines);\n                        angular.forEach(newLines, function (line) {\n                            line.push(NaN);\n                        });\n                        series[\"span_y2\"] = {'axis': 'y2'};\n                        $scope.childrenRangeConfig = {\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'labelsKMB': true,\n                            'file': newLines,\n                            'labels': ['x'].concat(labels).concat(['span_y2']),\n                            'ylabel': leftAndRight.left,\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max]},\n                                'y2': {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    }\n                                }\n                            }\n                            // showRangeSelector: true\n                        };\n                    }\n                    $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n                    $scope.loadingShow = false;\n                }\n\n\n            };\n\n\n            var updateChildrenDetailChart = function (metadata, store, rangeData, allData) {\n                //relation\n                var relationConfig = metadata.data.groups[2];\n                // scatter view shows only one collection\n                var collections = relationConfig.collections;\n                var newLines = [];\n                var newTime = [];\n                var series = {};\n                var labels = [];\n                var colors = [];\n                var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n                var yRange = {min: null, max: null};\n                var counter = 0;\n                var showY2axis = null;\n                angular.forEach(allData, function (device) {\n                    if ($scope.defaultColors[counter]) {\n                        colors.push($scope.defaultColors[counter]);\n                    } else {\n                        colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                    }\n                    counter++;\n\n                    if (device.data.length > 0) {\n                        labels.push(device.device);\n                        angular.forEach(collections, function (collection) {\n                            if (collection.name == store) {\n                                $scope.currentIntervalName = store;\n                                if (collection.rows[0].yaxis == 0) {\n                                    series[collection.rows[0].label] = {'axis': 'y1'};\n                                } else {\n                                    series[collection.rows[0].label] = {'axis': 'y2'};\n                                    showY2axis = true;\n                                }\n                                var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \")return \" + collection.rows[0].value + \";return null;}\");\n                                var tempData = [];\n                                var tempTime = [];\n                                // make data\n                                angular.forEach(device.data, function (data) {\n                                    var dateTime = new Date(data.timestamp);\n                                    try {\n                                        var value = f(data);\n                                        tempData.push({timestamp: dateTime, value: value});\n\n                                        if (yRange.min == null) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max == null) {\n                                            yRange.max = value;\n                                        }\n\n                                        if (yRange.min > value) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max < value) {\n                                            yRange.max = value;\n                                        }\n\n                                    } catch (e) {\n                                        tempData.push({timestamp: dateTime, value: null});\n                                    }\n                                    tempTime.push(dateTime.getTime());\n                                });\n                                newTime = newTime.concat(tempTime.filter(function (item) {\n                                    return newTime.indexOf(item) < 0;\n                                }));\n                                newLines.push({device: device.device, data: tempData});\n                            }\n                        });\n                    }\n                });\n\n                var chartData = [];\n\n                angular.forEach(newTime, function (nt) {\n                    chartData.push([new Date(nt)]);\n                });\n\n\n                angular.forEach(newLines, function (line) {\n                    angular.forEach(chartData, function (timeTicket) {\n                        // line data\n                        var flag = false;\n                        var lineData = line.data;\n                        for (var i = 0; i < lineData.length; i++) {\n                            if (lineData[i].timestamp.getTime() == timeTicket[0].getTime()) {\n                                timeTicket.push(lineData[i].value);\n                                flag = true;\n                                break;\n                            }\n                        }\n                        if (flag != true) {\n                            timeTicket.push(null);\n                        }\n                    });\n                });\n\n\n                if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                    yRange.min = yRange.min - (yRange.min) * 0.10;\n                    yRange.max = yRange.max + (yRange.max) * 0.10;\n                }\n\n\n                if (chartData.length == 0) {\n                    $scope.currentChart.updateOptions({\n                        'file': []\n                    });\n                    $scope.loadingShow = false;\n                } else {\n                    if ($scope.currentChart) {\n\n                        if (showY2axis) {\n                            $scope.currentChart.updateOptions({\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'labelsKMB': true,\n                                'file': chartData,\n                                'labels': ['x'].concat(labels),\n                                'ylabel': leftAndRight.left,\n                                'y2label': leftAndRight.right,\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRange.min, yRange.max]}\n                                }\n                                // showRangeSelector: true\n                            });\n                        } else {\n                            var newLines = [];\n                            angular.copy(chartData, newLines);\n                            angular.forEach(newLines, function (line) {\n                                line.push(NaN);\n                            });\n                            series[\"span_y2\"] = {axis: 'y2'};\n                            $scope.currentChart.updateOptions({\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'labelsKMB': true,\n                                'file': newLines,\n                                'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                                'ylabel': leftAndRight.left,\n                                'y2label': \"\",\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRange.min, yRange.max]},\n                                    \"y2\": {\n                                        axisLabelFormatter: function (d) {\n                                            return '';\n                                        }\n                                    }\n                                }\n                                // showRangeSelector: true\n                            });\n                        }\n                        $scope.loadingShow = false;\n                    }\n                }\n\n\n            };\n\n\n            /**\n             * update detail chart\n             * @param metadata\n             * @param store\n             * @param rangeData\n             * @param allData\n             */\n            var updateDetailChart = function (metadata, store, rangeData, allData) {\n                var deviceConfig = metadata.data.groups[1];\n                var collections = deviceConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n                var allLines = [];\n                //0 for y  1 for y2\n                var yRanges = [{min: null, max: null}, {min: null, max: null}];\n                angular.forEach(collections, function (collection) {\n                    if (collection.name == store) {\n                        angular.forEach(allData, function (line) {\n                            allLines.push([new Date(line.timestamp)]);\n                        });\n\n                        // var yRange = {'min': null, 'max': null};\n                        var showY2axis = false;\n                        angular.forEach(collection.rows, function (row) {\n                            labels.push(row.label);\n                            colors.push(row.color);\n\n                            if (row.yaxis == 0) {\n                                series[row.label] = {'axis': 'y1'};\n                            } else {\n                                series[row.label] = {'axis': 'y2'};\n                                showY2axis = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + row.value + \")return \" + row.value + \";return null;}\");\n                            // add value\n                            var counter = 0;\n                            angular.forEach(allLines, function (realLine) {\n                                try {\n                                    var value = f(allData[counter]);\n                                    realLine.push(value);\n                                    if (row.yaxis == 0) {\n                                        if (yRanges[0].min == null) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max == null) {\n                                            yRanges[0].max = value;\n                                        }\n\n                                        if (yRanges[0].min > value) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max < value) {\n                                            yRanges[0].max = value;\n                                        }\n                                    } else {\n                                        if (yRanges[1].min == null) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max == null) {\n                                            yRanges[1].max = value;\n                                        }\n\n                                        if (yRanges[1].min > value) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max < value) {\n                                            yRanges[1].max = value;\n                                        }\n                                    }\n                                } catch (ex) {\n                                    realLine.push(null);\n                                }\n                                counter++;\n                            });\n\n                        });\n\n                        angular.forEach(yRanges, function (yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max) * 0.10;\n                            }\n                        });\n\n\n                        if (allLines.length == 0) {\n                            $scope.currentChart.updateOptions({\n                                'file': []\n                            });\n                            if ($scope.rangeSelectorBar) {\n                                $scope.currentChart[\"xAxisZoomRange\"] = $scope.rangeSelectorBar.xAxisExtremes();\n                            }\n                            $scope.loadingShow = false;\n                        } else {\n                            if ($scope.currentChart) {\n\n                                if (showY2axis) {\n                                    $scope.currentChart.updateOptions({\n                                        'drawGapEdgePoints': true,\n                                        'pointSize': 3,\n                                        'labelsKMB': true,\n                                        'file': allLines,\n                                        'labels': ['x'].concat(labels),\n                                        'ylabel': leftAndRight.left,\n                                        'y2label': leftAndRight.right,\n                                        'series': series,\n                                        'axes': {\n                                            'y': {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                            'y2': {'labelsKMB': true, valueRange: [yRanges[1].min, yRanges[1].max]}\n                                        },\n                                        'colors': colors\n                                        // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                    });\n                                } else {\n\n                                    var newLines = [];\n                                    angular.copy(allLines, newLines);\n                                    angular.forEach(newLines, function (line) {\n                                        line.push(NaN);\n                                    });\n\n                                    series[\"span-Y2\"] = {axis: 'y2'};\n                                    $scope.currentChart.updateOptions({\n                                        'drawGapEdgePoints': true,\n                                        'pointSize': 3,\n                                        'labelsKMB': true,\n                                        'file': newLines,\n                                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                                        'ylabel': leftAndRight.left,\n                                        'y2label': \"\",\n                                        'series': series,\n                                        'axes': {\n                                            'y': {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                            'y2': {\n                                                axisLabelFormatter: function (d) {\n                                                    return '';\n                                                }\n                                            }\n                                        },\n                                        'colors': colors\n                                        // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                    });\n\n                                }\n\n                                $scope.loadingShow = false;\n                            }\n                        }\n\n\n                    }\n                });\n\n\n            };\n\n            /**\n             * update range chart\n             * @param metadata\n             * @param store\n             * @param allData\n             */\n            var updateChart = function (metadata, store, allData) {\n                var deviceConfig = metadata.data.groups[1];\n                var collections = deviceConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n                var allLines = [];\n                //0 for y  1 for y2\n                var yRanges = [{min: null, max: null}, {min: null, max: null}];\n                angular.forEach(collections, function (collection) {\n                    if (collection.name == store) {\n                        $scope.currentIntervalName = store;\n                        angular.forEach(allData, function (line) {\n                            allLines.push([new Date(line.timestamp)]);\n                        });\n\n                        $scope.rangeSeriesNumber = collection.rows.length;\n                        var showY2axis = false;\n                        angular.forEach(collection.rows, function (row) {\n                            labels.push(row.label);\n                            colors.push(row.color);\n\n                            if (row.yaxis == 0) {\n                                series[row.label] = {'axis': 'y1'};\n                            } else {\n                                series[row.label] = {'axis': 'y2'};\n                                showY2axis = true;\n                            }\n\n                            var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                            // add value\n                            var counter = 0;\n                            angular.forEach(allLines, function (realLine) {\n                                try {\n                                    var value = f(allData[counter]);\n                                    realLine.push(value);\n                                    if (row.yaxis == 0) {\n                                        if (yRanges[0].min == null) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max == null) {\n                                            yRanges[0].max = value;\n                                        }\n\n                                        if (yRanges[0].min > value) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max < value) {\n                                            yRanges[0].max = value;\n                                        }\n                                    } else {\n                                        if (yRanges[1].min == null) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max == null) {\n                                            yRanges[1].max = value;\n                                        }\n\n                                        if (yRanges[1].min > value) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max < value) {\n                                            yRanges[1].max = value;\n                                        }\n                                    }\n\n                                } catch (ex) {\n                                    realLine.push(null);\n                                }\n                                counter++;\n                            });\n\n                        });\n\n                        if ($scope.currentChart) {\n                            $scope.rangeData = allLines;\n                            var basicInfo = $scope.basicInfo;\n                            if (basicInfo && basicInfo.range_show) {\n                                var rangeBarLabels = [];\n                                for (var i = 0; i < labels.length; i++) {\n                                    rangeBarLabels.push(\"l\" + i);\n                                }\n                                var series_range = {'l0': {axis: 'y1'}};\n                                if (showY2axis) {\n                                    //noinspection JSDuplicatedDeclaration\n                                    series_range = {\n                                        'l0': {axis: 'y1'},\n                                        'l0': {axis: 'y2'}\n                                    };\n                                    $scope.rangeSeries = series_range;\n\n                                    $scope.rangeSelectorBar.updateOptions({\n                                        'file': allLines,\n                                        'labels': ['x'].concat(rangeBarLabels),\n                                        'series': series_range\n                                    });\n                                } else {\n                                    series_range[\"span_y2\"] = {axis: 'y2'};\n                                    $scope.rangeSeries = series_range;\n                                    var newLines = [];\n                                    angular.copy(allLines, newLines);\n                                    angular.forEach(newLines, function (line) {\n                                        line.push(NaN);\n                                    });\n                                    $scope.rangeSelectorBar.updateOptions({\n                                        'file': newLines,\n                                        'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                        'series': series_range\n                                    });\n                                }\n\n\n                            }\n\n                            angular.forEach(yRanges, function (yrange) {\n                                if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                    yrange.min = yrange.min - (yrange.min) * 0.10;\n                                    yrange.max = yrange.max + (yrange.max) * 0.10;\n                                }\n                            });\n\n\n                            // if graph has 2 yAxis or a yAxis\n\n\n                            if (showY2axis) {\n                                $scope.rangeConfig = {\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'colors': colors,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                        'y2': {'labelsKMB': true, valueRange: [yRanges[1].min, yRanges[1].max]}\n                                    },\n                                    'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                    // showRangeSelector: true\n                                };\n                            } else {\n                                series['span_y2'] = {axis: 'y2'};\n                                var newLines = [];\n                                angular.copy(allLines, newLines);\n                                angular.forEach(newLines, function (line) {\n                                    line.push(NaN);\n                                });\n                                $scope.rangeConfig = {\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'colors': colors,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                        'y2': {\n                                            axisLabelFormatter: function (d) {\n                                                return '';\n                                            }\n                                        }\n                                    },\n                                    'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                    // showRangeSelector: true\n                                };\n                            }\n\n\n                            if (basicInfo && basicInfo.range_show) {\n                                Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                    zoom: true,\n                                    selection: false,\n                                    range: false\n                                });\n                            }\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            $scope.chartDateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            //bind\n                            $scope.loadingShow = false;\n                        }\n\n                    }\n                });\n            };\n\n\n            $scope.chartDateTime = {begin: null, end: null};\n\n            // function for show one\n            $scope.showOne = function (deviceName) {\n                // device type is\n                if ($location.url().indexOf('/app/page/param/') != -1) {\n                    //open window\n                    $window.open(\"/#/app/page/param/\" + $rootScope.applicationName + \"/\" + metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1]));\n                } else {\n                    //open window\n                    $window.open(\"/#\" + $location.url().replace(\"show\", \"param\").replace($location.url().substr($location.url().lastIndexOf('/', $location.url().lastIndexOf('/') - 1) + 1), metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1])));\n                }\n\n            };\n\n            var timer = null;\n            $scope.refersh = function (g) {\n                if (timer) {\n                    $timeout.cancel(timer);\n                }\n                timer = $timeout(function () {\n                    $scope.chartDateTime = {begin: g.xAxisRange()[0], end: g.xAxisRange()[1]};\n                    $scope.chartDateWindow = g.xAxisRange();\n                }, 600);\n            };\n\n\n        }\n\n    }\n\n\n    static buildFactory($timeout, dataService, $rootScope, $interval, $filter, $location) {\n        fgpWidgetGraph.instance = new fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location);\n        return fgpWidgetGraph.instance;\n    }\n\n}\n\nfgpWidgetGraph.$inject = ['$timeout', 'dataService', '$rootScope', '$interval', '$filter', '$location'];\n\nexport {fgpWidgetGraph as default}","/**\n * Created by ericwang on 20/06/2016.\n */\n'use strict';\nexport default class fgpWidgetPageTitle {\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(element, attrs) {\n        var element_id = attrs.id;\n        //drag-channel  item means this widget accepts items\n        var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n            '<div class=\"{{css.width}}\" style=\"-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\">' +\n            '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n            '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"\">' +\n            '<h1>{{css.title.text}}</h1>' +\n            '<h3>{{css.subtitle.text}}</h3>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>';\n        return dom_show;\n    }\n\n\n    controller($scope, $element) {\n        var metadata = null;\n        var element_id = $element.attr(\"id\");\n        var widgetData = null;\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        if (widgetData.data && widgetData.from == \"show\") {\n            metadata = widgetData.data.metadata;\n            $scope.css = {};\n            $scope.css[\"color\"] = metadata.css.color;\n            $scope.css[\"width\"] = metadata.css.width;\n            $scope.css[\"minHeight\"] = metadata.css.minHeight;\n            $scope.css[\"border\"] = {};\n            $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n            $scope.css[\"background\"] = {};\n            $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n            $scope.css[\"title\"] = metadata.css.title;\n            $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n            $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n            $scope.css[\"subtitle\"] = metadata.css.subtitle;\n            $scope.css[\"subtitle\"][\"color\"] = metadata.css.subtitle.color;\n            $scope.css[\"subtitle\"][\"show\"] = metadata.css.subtitle.show;\n\n            $scope.data_from = \"application\";\n            $scope.parent_container = widgetData.data.parent;\n\n            $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                // if the parent container sends a device to here, ignore global device.\n                if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                    return;\n                } else if (deviceData.from != \"application\") {\n                    if ($scope.parent_container != \"edit\" + deviceData.from) {\n                        return;\n                    } else {\n                        $scope.data_from = deviceData.from;\n                    }\n                }\n                var f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"title\"].text + \"}\");\n                $scope.css[\"title\"].text = f(deviceData.device);\n                f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"subtitle\"].text + \"}\");\n                $scope.css[\"subtitle\"].text = f(deviceData.device);\n            });\n        }\n\n\n\n\n    }\n\n    static buildFactory() {\n        fgpWidgetPageTitle.instance = new fgpWidgetPageTitle();\n        return fgpWidgetPageTitle.instance;\n    }\n}","/**\n * Created by ericwang on 20/06/2016.\n */\nimport angular from 'angular';\nimport ngMap from 'ngmap';\nexport default class fgpWidgetMap {\n\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(element, attrs) {\n        var dom_show = '<div class = \"{{css.width}}\" style=\"padding:0px;height:{{css.height}}px;\" map-lazy-load=\"https://maps.google.com/maps/api/js\">' +\n            '<ng-map style=\"height: 100%;width: 100%;\" center=\"{{center}}\" zoom=\"15\">' +\n            '<marker on-click=\"map.showInfoWindow(\\'info_' + attrs.id + '\\')\" id=\"marker_' + attrs.id + '\" ng-repeat=\"item in markers\" icon=\"{{item.image}}\" position=\"{{item.latitude}},{{item.longitude}}\" title=\"{{item.name}}\" animation=\"Animation.DROP\" ></marker>' +\n            '</ng-map>' +\n            '</div>' +\n            '';\n        return dom_show;\n    }\n\n\n    controller($scope, $element) {\n        var metadata = null;\n        var element_id = $element.attr(\"id\");\n        var widgetData = null;\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        /**\n         * get device information\n         */\n        if (widgetData.data && widgetData.from == \"show\") {\n            $scope.data_from = \"application\";\n            $scope.parent_container = widgetData.data.parent;\n\n            $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                // if the parent container sends a device to here, ignore global device.\n                if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                    return;\n                } else if (deviceData.from != \"application\") {\n                    if ($scope.parent_container != \"edit\" + deviceData.from) {\n                        return;\n                    } else {\n                        $scope.data_from = deviceData.from;\n                    }\n                }\n                metadata = widgetData.data.metadata;\n\n                $scope.showdata = widgetData.data;\n\n                $scope.css = {\n                    width: \"col-md-12\",\n                    height: \"400\"\n                };\n                if ($scope.showdata.metadata.css) {\n                    $scope.css = $scope.showdata.metadata.css;\n                }\n\n                var location = {};\n                $scope.markers = [];\n                $scope.details = $scope.$parent.device;\n\n\n                // show one point.\n                var f = null;\n                angular.forEach($scope.showdata.metadata.data, function (item) {\n                    try {\n                        f = new Function(\"device\", \"with(device) { return \" + item.value + \";}\");\n                        var result = f(deviceData.device);\n                        if (result) {\n                            location[item.label] = result;\n                        } else {\n                            location[item.label] = \"\";\n                        }\n                    } catch (error) {\n                        // show image\n                        if (\"image\" == item.label) {\n                            location[item.label] = item.value;\n                        } else {\n                            location[item.label] = \"\";\n                        }\n\n                    }\n                });\n\n\n                //do not show\n                if (location.latitude == \"\" || location.longitude == \"\") {\n                    //hard code. the location is Melbourne\n                    location.latitude = \"-37.810000\";\n                    location.longitude = \"144.950000\";\n                    $scope.center = [location.latitude, location.longitude];\n                    // $scope.markers.push(location);\n                } else {\n                    $scope.center = [location.latitude, location.longitude];\n                    $scope.markers.push(location);\n                }\n\n            });\n        }\n\n    }\n\n    static buildFactory() {\n        fgpWidgetMap.instance = new fgpWidgetMap();\n        return fgpWidgetMap.instance;\n    }\n\n\n}","/**\n * Created by ericwang on 20/06/2016.\n */\nimport angular from 'angular';\nexport default class fgpWidgetDeviceDetail {\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(element, attrs) {\n        return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n            '<div class=\"row\" ng-repeat=\"item in data\">' +\n            '<div class=\"col-xs-4 col-md-4\" style=\"text-align: right; font-weight: bold;line-height: 30px;\">{{item.label}}</div><div class=\"col-xs-8 col-md-8\" style=\"text-align: left;line-height: 30px;\">{{item.value}}</div>' +\n            '</div>' +\n            '</div>' +\n            '<div id=\"detail_status_' + attrs.id + '\" class=\"row\" style=\"min-height: 50px;\">' +\n            '</div>' +\n            '</div>';\n    }\n\n\n    controller($scope, $element) {\n        var metadata = null;\n        var element_id = $element.attr(\"id\");\n        var widgetData = null;\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n\n        /**\n         * get device information\n         */\n        if (widgetData.data && widgetData.from == \"show\") {\n\n            $scope.data_from = \"application\";\n            $scope.parent_container = widgetData.data.parent;\n\n            $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                // if the parent container sends a device to here, ignore global device.\n                if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                    return;\n                } else if (deviceData.from != \"application\") {\n                    if ($scope.parent_container != \"edit\" + deviceData.from) {\n                        return;\n                    } else {\n                        $scope.data_from = deviceData.from;\n                    }\n                }\n                metadata = widgetData.data.metadata;\n\n                $scope.showdata = widgetData.data;\n\n                $scope.css = {\n                    width: \"col-md-12\",\n                    height: \"400\"\n                };\n                if ($scope.showdata.metadata.css) {\n                    $scope.css = $scope.showdata.metadata.css;\n                }\n\n\n                $scope.data = [];\n                //get all columns\n                var f = null;\n                angular.forEach($scope.showdata.metadata.data, function (item) {\n                    try {\n                        f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                        item.value = f(deviceData.device);\n                        $scope.data.push(item);\n                    } catch (error) {\n                        item.value = \"\";\n                        $scope.data.push(item);\n                    }\n                });\n\n\n            });\n\n        }\n\n    }\n\n\n    static buildFactory() {\n        fgpWidgetDeviceDetail.instance = new fgpWidgetDeviceDetail();\n        return fgpWidgetDeviceDetail.instance;\n    }\n}","/**\n * Created by ericwang on 20/06/2016.\n */\nexport default class fgpWidgetSpan {\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(scope, element) {\n        return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n            '</div>';\n    }\n\n    controller($scope, $element) {\n\n        var element_id = $element.attr(\"id\");\n        var widgetData = null;\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        $scope.showdata = widgetData.data;\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if ($scope.showdata.metadata.css) {\n            $scope.css = $scope.showdata.metadata.css;\n        }\n    }\n\n    static buildFactory() {\n        fgpWidgetSpan.instance = new fgpWidgetSpan();\n        return fgpWidgetSpan.instance;\n    }\n\n}","/**\n * Created by ericwang on 20/06/2016.\n */\nimport angular from 'angular';\nimport chartjs from  'chart.js';\nclass fgpWidgetPie {\n\n    constructor($timeout) {\n        this.restrict = 'E';\n        this.scope = {};\n        this.$timeout = $timeout;\n    }\n\n\n    template(element, attrs) {\n        return '<div class = \"{{css.width}}\" ><div style=\"height: {{css.height}}px;\">' +\n            '<canvas class=\"fgpPieChart\"></canvas>' +\n            '</div>' +\n            '</div>';\n    }\n\n    link(scope, element) {\n\n        this.$timeout(function () {\n            var ctx = element.find(\"canvas\")[0];\n            scope.chart = new Chart(ctx, {\n                type: 'pie',\n                data: {\n                    labels: ['1'],\n                    datasets: [\n                        {\n                            data: [1],\n                            backgroundColor: []\n                        }]\n                },\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    animation: false,\n                    legend: {display: true}\n                }\n            });\n        });\n    }\n\n\n    controller($scope, $element, $timeout) {\n\n        var id = $element.attr(\"id\");\n        var metadata = null;\n        var widgetData = null;\n\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        if (widgetData.from == \"show\" && widgetData.data) {\n            $scope.data_from = \"application\";\n            $scope.parent_container = widgetData.data.parent;\n\n            $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                // if the parent container sends a device to here, ignore global device.\n                if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                    return;\n                } else if (deviceData.from != \"application\") {\n                    if ($scope.parent_container != \"edit\" + deviceData.from) {\n                        return;\n                    } else {\n                        $scope.data_from = deviceData.from;\n                    }\n                }\n                metadata = widgetData.data.metadata;\n                $scope.showdata = widgetData.data;\n                $scope.css = {\n                    width: \"col-md-12\",\n                    height: \"400\"\n                };\n                if ($scope.showdata.metadata.css) {\n                    $scope.css = $scope.showdata.metadata.css;\n                }\n                $scope.data = [];\n                var colors = [];\n                //get all columns\n                var f = null;\n                angular.forEach($scope.showdata.metadata.data, function (item) {\n                    try {\n                        f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                        item.value = f(deviceData.device);\n                        $scope.data.push(item);\n                    } catch (error) {\n                        item.value = item.value;\n                        $scope.data.push(item);\n                    }\n                    if (item.color) {\n                        colors.push(item.color);\n                    } else {\n                        colors.push('#' + (function co(lor) {\n                                return (lor +=\n                                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                                && (lor.length == 6) ? lor : co(lor);\n                            })(''));\n                    }\n                });\n                // timeout\n                $scope.pieData = {labels: [], value: []};\n                $timeout(function () {\n                    // create data\n                    angular.forEach($scope.data, function (item) {\n                        $scope.pieData.labels.push(item.label);\n                        $scope.pieData.value.push(item.value);\n                    });\n\n                    $scope.chart.data.labels = $scope.pieData.labels;\n                    $scope.chart.data.datasets[0].data = $scope.pieData.value;\n                    $scope.chart.data.datasets[0].backgroundColor = colors;\n                    // update chart\n                    $scope.chart.update();\n                });\n\n            });\n\n\n        }\n\n\n    }\n\n    static buildFactory($timeout) {\n        fgpWidgetPie.instance = new fgpWidgetPie($timeout);\n        return fgpWidgetPie.instance;\n    }\n\n}\nfgpWidgetPie.$inject = ['$timeout'];\n\nexport {fgpWidgetPie as default}","/**\n * Created by ericwang on 21/06/2016.\n */\nimport angular from 'angular';\n\nclass fgpWidgetChartTable {\n\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(element, attrs) {\n        return '<div style=\"padding:0px;height: {{css.height}}px;position: relative; overflow-y : auto;\">' +\n            '<table st-table=\"rowCollection\" class=\"col-md-12 table table-striped\">' +\n            '<thead>' +\n            '<tr>' +\n            '<th ng-repeat=\"column in sampledata.columns\">{{column.label}}</th>' +\n            '</tr>' +\n            '</thead>' +\n            '<tbody>' +\n            '<tr ng-repeat=\"value in sampledata.values\">' +\n            '<td ng-repeat=\"col in sampledata.columns\">{{value[col.label] | tableformatter: value : col.label : col.formatter}}</td>' +\n            '</tr>' +\n            '</tbody>' +\n            '</table>' +\n            '</div>';\n    }\n\n    controller($scope, $element) {\n\n        var element_id = $element.attr(\"id\");\n        var widgetData = null;\n\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        //show\n        $scope.showdata = widgetData.data;\n\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if ($scope.showdata.metadata.css) {\n            $scope.css = $scope.showdata.metadata.css;\n        }\n\n\n        $scope.$on('chartDataChangeEvent', function (event, chartData) {\n            var chartId = chartData.id;\n            if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"device\") {\n                $scope.sampledata = {};\n                // make data\n                var collectionName = chartData.data.collection;\n                var groupName = chartData.group;\n                var columns = [];\n                //get group and collection configuration\n                angular.forEach($scope.showdata.metadata.data.groups, function (group) {\n                    if (group.name == groupName) {\n                        angular.forEach(group.collections, function (collection) {\n                            if (collection.name === collectionName) {\n                                columns = collection.rows;\n                            }\n                        });\n                    }\n                });\n\n\n                $scope.sampledata.columns = [];\n\n                angular.forEach(columns, function (column) {\n                    $scope.sampledata.columns.push({label: column.label, formatter: column.formatter});\n                });\n                $scope.sampledata.values = [];\n                angular.forEach(columns, function (column) {\n                    var f = new Function(\"data\", \"with(data) { if(\" + column.value + \") return \" + column.value + \";return '';}\");\n                    angular.forEach(chartData.data.data, function (record, index) {\n                        if ($scope.sampledata.values.length < chartData.data.data.length) {\n                            //add new one\n                            var item = {};\n                            item[column.label] = f(record);\n                            $scope.sampledata.values.push(item);\n                        } else {\n                            $scope.sampledata.values[index][column.label] = f(record);\n                        }\n                    });\n                });\n\n                var cleanData = [];\n                angular.forEach($scope.sampledata.values, function (value, index) {\n                    var flag = false;\n                    angular.forEach(columns, function (column) {\n                        if (value[column.label] && value[column.label] != \"\") {\n                            flag = true;\n                        }\n                    });\n\n                    if (flag) {\n                        cleanData.push(value);\n                    }\n                });\n                $scope.sampledata.values = cleanData;\n\n            } else if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"relation\") {\n                //\n\n\n            }\n\n        });\n\n\n    }\n\n    static buildFactory() {\n        fgpWidgetChartTable.instance = new fgpWidgetChartTable();\n        return fgpWidgetChartTable.instance;\n    }\n\n\n}\n\nexport {fgpWidgetChartTable as default}"],"sourceRoot":"/source/"}
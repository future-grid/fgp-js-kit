{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"fgp.kit.bundle.js","sourcesContent":["/**\n * fgp-kit\n * @version 1.0 - Homepage <http://www.future-grid.com.au>\n * @copyright (c) 2013-2016 Eric.Wang <flexdeviser@gmail.com>\n * @license Apache2. \n * @overview fgp.kit.js is a useful toolkit for future-grid's clients.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular'), require('jquery'), require('dygraphs'), require('ngmap'), require('chart.js')) :\n    typeof define === 'function' && define.amd ? define(['angular', 'jquery', 'dygraphs', 'ngmap', 'chart.js'], factory) :\n    (global.fgp_kit = factory(global.angular,global.$,global.Dygraph,global.ngmap,global.chartJS));\n}(this, (function (angular$1,jquery,Dygraph,ngmap,chart_js) {\n\nangular$1 = 'default' in angular$1 ? angular$1['default'] : angular$1;\nDygraph = 'default' in Dygraph ? Dygraph['default'] : Dygraph;\n\n/**\n * Created by ericwang on 10/06/2016.\n */\nclass fgpStage {\n\n    constructor() {\n        this.scope = {\n            applicationName: \"=\",\n            deviceName: \"=\",\n            deviceType: \"@\",\n            server: \"=\",\n            configuration: '=',\n            scatterColors: \"=\",\n            standalone: \"=\",\n            interactions: \"=\",\n            drill: \"=\",\n            childrenDrill: \"=\",\n            highlights: \"=\",\n            eventsHandler: \"=\",\n            dateFormatter: \"=\"\n        };\n        this.replace = true;\n        this.restrict = 'A';\n    }\n\n    template() {\n        return '<div id=\"pageStage\" class=\"wrapper col-md-12 col-xl-12\" style=\"background-color: #fff;height:100%;padding: 0px;\">' +\n            '</div>';\n    }\n\n    controller($scope, $element, $timeout, $rootScope, $compile, dataService, $interval) {\n        $scope.showdata = {};\n\n        if ($scope.scatterColors && $scope.scatterColors.length > 0) {\n            dataService.setColors($scope.scatterColors);\n        }\n\n\n        $rootScope['applicationName'] = $scope.applicationName;\n        $rootScope['host'] = $scope.server;\n        $rootScope['device'] = $scope.deviceName;\n        $rootScope['standalone'] = $scope.standalone;\n\n\n        var graphBindingArray = [];\n\n\n        function findChild4Repeat(parentId, parentHtmlObj, arrayItems, newId, newScope) {\n\n            for (var i = 0; i < arrayItems.length; i++) {\n                if ('edit' + parentId === arrayItems[i].parent) {\n                    var currentItem = angular$1.element(arrayItems[i].html_render);\n                    var id = arrayItems[i].id;\n\n                    newScope.showdata[id] = arrayItems[i];\n                    if (parentHtmlObj.attr(\"repeat-id\")) {\n                        newScope.repeat = parentHtmlObj.attr(\"repeat-id\");\n                    }\n                    if (parentHtmlObj.find('#edit' + parentId).find(\"#\" + id).length == 0) {\n                        parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)(newScope));\n                    }\n                    findChild4Repeat(arrayItems[i].id, currentItem, arrayItems, newScope);\n                } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                    var currentItem = angular$1.element(arrayItems[i].html_render);\n                    var id = arrayItems[i].id;\n                    newScope.showdata[id] = arrayItems[i];\n                    parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)(newScope));\n                    findChild4Repeat(arrayItems[i].id, currentItem, arrayItems, newScope);\n                }\n            }\n        }\n\n        function findChild(parentId, parentHtmlObj, arrayItems, newScope) {\n\n            for (var i = 0; i < arrayItems.length; i++) {\n                if ('edit' + parentId === arrayItems[i].parent) {\n                    var currentItem = angular$1.element(arrayItems[i].html_render);\n                    var id = arrayItems[i].id;\n                    newScope.showdata[id] = arrayItems[i];\n                    parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)(newScope));\n                    findChild(arrayItems[i].id, currentItem, arrayItems, newScope);\n                } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                    var currentItem = angular$1.element(arrayItems[i].html_render);\n                    var id = arrayItems[i].id;\n                    newScope.showdata[id] = arrayItems[i];\n                    parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)(newScope));\n                    findChild(arrayItems[i].id, currentItem, arrayItems, newScope);\n                }\n            }\n        }\n\n        var newScope = null;\n        $scope.$watch('deviceName', function(newVal, oldVal) {\n            if (newVal) {\n                $element.empty();\n                if (newScope) {\n                    newScope.$destroy();\n                }\n                newScope = $rootScope.$new(true);\n                newScope[\"showdata\"] = {};\n\n                newScope.$on('bindChildChartEvent', function(evt, msg) {\n                    graphBindingArray.push(msg);\n                });\n\n                newScope[\"interactions\"] = $scope.interactions;\n                newScope[\"drill\"] = $scope.drill;\n                newScope[\"childrenDrill\"] = $scope.childrenDrill;\n                newScope[\"highlights\"] = $scope.highlights;\n                newScope[\"eventsHandler\"] = $scope.eventsHandler;\n                newScope[\"dateFormatter\"] = $scope.dateFormatter;\n                newScope.$on('bindChildRepeatEvent', function(evt, msg) {\n                    angular$1.forEach($scope.configuration, function(item) {\n                        if (item.id == msg.id) {\n                            var items = angular$1.element(\"body\").find(\"#\" + item.id).children();\n                            angular$1.forEach(items, function(item_new) {\n                                newScope.showdata[item_new.id] = item;\n                                var currentElement = angular$1.element(item_new);\n                                if (currentElement.attr(\"dulp\")) {\n                                    var groupItems = angular$1.element(\"body\").find(\"div[dulp='\" + item.id + \"']\");\n                                    angular$1.forEach(groupItems, function(dulpItem) {\n                                        findChild4Repeat(item.id, angular$1.element(dulpItem), $scope.configuration, item_new.id, newScope);\n                                    });\n                                } else {\n                                    findChild4Repeat(item.id, currentElement, $scope.configuration, item_new.id, newScope);\n                                }\n                            });\n                        }\n                    });\n                });\n\n                newScope.$on('listStyleEvent', function(evt, param) {\n                    var config = newScope.showdata[param.id.replace(\"edit\", \"\")];\n                    param.callback(config.metadata.data.datasource.style);\n                });\n\n\n                newScope.$on('fetchWidgetMetadataEvent', function(evt, msg) {\n                    angular$1.forEach(newScope.showdata, function(metadata, key) {\n                        if (key == msg.id) {\n                            msg.callback({\n                                data: metadata,\n                                from: 'show'\n                            });\n                            return;\n                        }\n                    });\n                });\n\n                // refersh\n                angular$1.forEach($scope.configuration, function(item) {\n                    if ('workingArea' === item.parent) {\n                        var currentItem = angular$1.element(item.html_render);\n                        newScope.showdata[item.id] = item;\n                        $element.append($compile(currentItem)(newScope));\n                        findChild(item.id, currentItem, $scope.configuration, newScope);\n                    }\n                });\n                /**\n                 * get device information\n                 */\n                if ($scope.deviceName && $scope.deviceName != \"\" && \"undefined\" != $scope.deviceName) {\n                    // first time\n                    sendDeviceData(newScope);\n                }\n                // all item created;\n                $timeout(function() {\n                    angular$1.forEach(graphBindingArray, function(graph) {\n                        newScope.$broadcast('bindFatherGraphEvent', {\n                            parent: graph.graphs,\n                            children: graph.children\n                        });\n                    });\n                });\n            }\n        });\n\n\n        var sendDeviceData = function(newScope) {\n            dataService.deviceInfo($scope.server, $scope.deviceName, null, $scope.deviceType, $scope.applicationName).then(function(data) {\n                // send device info to all widget\n                $timeout(function() {\n                    data[\"from\"] = 'application';\n                    newScope.$broadcast('deviceInfoEvent', data);\n                });\n            });\n        };\n    }\n    static buildFactory() {\n        fgpStage.instance = new fgpStage();\n        return fgpStage.instance;\n    }\n}\n\nclass validator {\n\n    isDeviceKey(param) {\n        var patt = /[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}/;\n        return patt.test(param);\n    }\n\n    static buildFactory() {\n        validator.instance = new validator();\n        return validator.instance;\n    }\n}\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nclass dataAccessApi {\n\n    /**\n     * init dataApi\n     * @param $http\n     * @param $q\n     */\n    constructor($http, $q, $cacheFactory, $interval, graphDataService, $location) {\n        this._$http = $http;\n        this._$q = $q;\n        this._$location = $location;\n        // get cache\n        this.indexCache = $cacheFactory('indexCache');\n        this.deviceStores = $cacheFactory('deviceStores');\n        this._$interval = $interval;\n        this._$graphDataService = graphDataService;\n        this._validator = validator.buildFactory();\n    }\n\n    mergeArraySimple(array1, array2) {\n        var result_array = [];\n        var arr = array1.concat(array2);\n        var len = arr.length;\n        var assoc = {};\n\n        while (len--) {\n            var item = arr[len];\n\n            if (!assoc[item]) {\n                result_array.unshift(item);\n                assoc[item] = true;\n            }\n        }\n        return result_array;\n    }\n\n    /**\n     * reference table jdbc query api\n     * @param {*} host restapi url\n     * @param {*} application application name\n     * @param {*} reference reference name\n     * @param {*} page start page number\n     * @param {*} size page size\n     */\n    referenceTableRSQL(host, application, reference, rsql, page, size, isHazelcast, pkColumn, timeout) {\n\n        var deferred = this._$q.defer();\n        var promise = deferred.promise;\n        var url = \"\";\n        if (isHazelcast) {\n            // data stored in cassandra and loaded into hazelcast on startup\n            url = host + '/' + application + '/' + reference + '/data/hz/' + size + '/' + page + '/' + pkColumn + ' desc';\n        } else {\n            // data stored in other relation type database (mysql, postgresql, etc)\n            url = host + '/' + application + '/' + reference + '/data/' + size + '/' + page + '/' + pkColumn + ' desc';\n        }\n\n        // check rsql, should be a string like name==why;age=gt=30\n        if (rsql && rsql != '') {\n            url = url + '?' + rsql;\n        }\n\n        this._$http({\n            method: 'GET',\n            url: url,\n            timeout: timeout ? timeout : 10000,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            deferred.resolve(response);\n        }, function (error) {\n            deferred.reject(error);\n        });\n        return promise;\n    };\n\n    getDeviceWithExtensions(host, application, id, type, extensionTypes){\n        var deferred = this._$q.defer();\n        var deviceObj = {};\n        var _this = this;\n        _this.getDevice(host, application, id, type).then(function success(resp){\n            deviceObj = resp.device;\n            _this.getDeviceExtensions(host, application, id, type, extensionTypes).then(function success(resp){\n                angular$1.forEach(resp, (_ext,key) => {\n                    deviceObj[key] = _ext;\n                });\n                deferred.resolve(deviceObj);\n            }, function error(error){\n                deferred.reject(error);\n            });\n        }, function error(error){\n            deferred.reject(error);\n        });\n\n        return deferred.promise;\n    }\n\n    /**\n     * get device extensions\n     * @param {*} host \n     * @param {*} application \n     * @param {*} id \n     * @param {*} type \n     * @param {*} extensionTypes \n     */\n    getDeviceExtensions(host, application, id, type, extensionTypes){\n        var deferred = this._$q.defer();\n        var url = host + \"/\" + application + \"/\" + type;\n\n        if (!host || \"\" === host || !application || \"\" === application || !type || \"\" === type) {\n            console.error(\"host url/applicaiton is empty or device type not found~\");\n            return false;\n        }\n        // check id (UUID key,  string name)\n        if (this._validator.isDeviceKey(id)) {\n            // device key\n            url += '/key/' + id + '?hasExtensions=true';\n        } else {\n            // device name\n            url += '/name/' + id + '?hasExtensions=true';\n        }\n\n        this._$http({\n            method: 'POST',\n            url: url,\n            data: {\n                'extensions': [].concat(extensionTypes)\n            },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).success(function (data) {\n            deferred.resolve(data);\n        }).error(function (error) {\n            deferred.reject(error);\n        });\n        return deferred.promise;\n    }\n\n\n    /**\n     * \n     * @param {string} host \n     * @param {string} applicatoin \n     * @param {string} id \n     * @param {string} type \n     */\n    getDevice(host, application, id, type) {\n        if (!host || \"\" === host || !application || \"\" === application || !type || \"\" === type) {\n            console.error(\"host url/applicaiton is empty or device type not found~\");\n            return false;\n        }\n\n        var deferred = this._$q.defer();\n        var url = host + \"/\" + application + \"/\" + type;\n        // check id (UUID key,  string name)\n        if (this._validator.isDeviceKey(id)) {\n            // device key\n            url += '/key/' + id + '?hasExtensions=true';\n        } else {\n            // device name\n            url += '/name/' + id + '?hasExtensions=true';\n        }\n        // send request to rest-api\n        this._$http({\n            method: 'GET',\n            url: url\n        }).success(function (data) {\n            deferred.resolve(data);\n        }).error(function (error) {\n            deferred.reject(error);\n        });\n\n        return deferred.promise;\n\n\n\n    };\n\n    /**\n     * sync using JQuery\n     * @param deviceName\n     * @param deviceKey\n     * @param applicationName\n     * @returns {*}\n     */\n    deviceInfo(host, deviceName, deviceKey, deviceType, application) {\n\n        if (!host || \"\" === host || !application || \"\" === application || !deviceType || \"\" === deviceType) {\n            console.error(\"host url/applicaiton is empty~\");\n            return false;\n        }\n\n        var deferred = this._$q.defer();\n        var url = host + \"/\" + application + \"/\" + deviceType;\n\n        if (deviceName) {\n            url += '/name/' + deviceName + '?hasExtensions=true';\n        } else if (deviceKey) {\n            url += '/key/' + deviceKey + '?hasExtensions=true';\n        }\n\n        var httpServices = this._$http;\n        httpServices({\n            method: 'GET',\n            url: url\n        }).success(function (data) {\n            if (deviceName) {\n                url = host + \"/\" + application + \"/\" + deviceType + \"/name/\" + deviceName;\n            } else if (deviceKey) {\n                url = host + \"/\" + application + \"/\" + deviceType + \"/key/\" + deviceKey;\n            }\n            if (data.extensions) {\n                var _extensions = [];\n                data.extensions.forEach((_extension) => {\n                    _extensions.push(_extension.name);\n                });\n                // call extension service\n                //get all extension types\n                httpServices({\n                    method: 'POST',\n                    url: url,\n                    data: {\n                        'extensions': [].concat(_extensions)\n                    },\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }).success(function (extensions) {\n                    if (!extensions) {\n                        deferred.resolve(data);\n                    } else {\n                        // all extensions\n                        Object.keys(extensions).forEach((key, _index) => {\n                            data.extensions.forEach((_ex) => {\n                                if (_ex.name == key) {\n                                    angular$1.extend(_ex, extensions[key]);\n                                }\n                            });\n                        });\n                        deferred.resolve(data);\n                    }\n                }).error(function (error) {\n                    deferred.reject(error);\n                });\n            } else {\n                // return device info and stop here.\n                deferred.resolve(data);\n            }\n        }).error(function (error) {\n            deferred.reject(error);\n        });\n\n        return deferred.promise;\n    }\n\n    /**\n     *\n     * @param application\n     * @param deviceKey\n     * @param storeSchema\n     * @returns {Promise}\n     */\n    deviceInitInfo(host, application, deviceName, deviceType, rangeLevel) {\n        if (!host || \"\" === host || !application || \"\" === application || !deviceType || \"\" === deviceType) {\n            console.error(\"host url/applicaiton is empty~\");\n            return false;\n        }\n\n        var deferred = this._$q.defer();\n        this._$http.post(host + '/' + application + '/' + deviceType + '/' + rangeLevel + '/' + deviceName + '/all', {\n            // cache: this.deviceStores\n        }).then(\n            function (response) {\n                deferred.resolve(response.data);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n\n    /**\n     *\n     * @param application\n     * @param deviceKey\n     * @param storeSchema\n     * @returns {Promise}\n     */\n    childrenExtensionInitInfo(host, application, deviceName, deviceType, relationType, relationDeviceType, extensionType) {\n\n        if (!host || \"\" === host || !application || \"\" === application || !relationDeviceType || \"\" === relationDeviceType) {\n            console.error(\"host url/applicaiton is empty~\");\n            return false;\n        }\n        var deferred = this._$q.defer();\n\n        var __q = this._$q;\n        var __http = this._$http;\n\n        // first get children devices\n        this._$http.get(host + '/' + application + '/' + deviceType + '/' + deviceName + '/relation/' + relationType).then(function successCallback(resp) {\n            if (!extensionType || \"\" === extensionType) {\n                var result = [];\n                angular$1.forEach(resp.data, function (_device) {\n                    result.push({\n                        \"name\": _device.name,\n                        \"device\": _device\n                    });\n                });\n                deferred.resolve(result);\n            } else {\n                var promises = [];\n                angular$1.forEach(resp.data, function (_device) {\n                    if (_device && _device.name) {\n\n                        var deferred = __q.defer();\n                        __http({\n                            method: 'POST',\n                            url: host + '/' + application + '/' + _device.type + '/name/' + _device.name,\n                            data: {\n                                'extensions': [].concat([extensionType])\n                            },\n                            headers: {\n                                'Content-Type': 'application/json'\n                            }\n                        }).success(function (extension) {\n                            deferred.resolve({\n                                \"name\": _device.name,\n                                \"extension\": extension[extensionType],\n                                \"device\": _device\n                            });\n                        }).error(function (error) {\n                            deferred.reject(error);\n                        });\n                        promises.push(deferred.promise);\n                    }\n                });\n\n                // waiting for all request come back\n                __q.all(promises).then(function successCallback(_result) {\n                    deferred.resolve(_result);\n                }, function errorCallback(_data) {\n                    deferred.reject(error);\n                });\n            }\n\n\n\n        }, function errorCallback(error) {\n            deferred.reject(error);\n        });\n        return deferred.promise;\n    }\n\n    /**\n     *\n     * @param application\n     * @param deviceKey\n     * @param storeSchema\n     * @returns {Promise}\n     */\n    devicesExtensionInitInfo(host, application, devices, storeSchema, extensionType) {\n        if (!host || \"\" === host || !application || \"\" === application || !extensionType || \"\" === extensionType) {\n            console.error(\"host url/applicaiton is empty~\");\n            return false;\n        }\n\n        var result = {};\n        var promises = [];\n        var __http = this._$http;\n        var __q = this._$q;\n\n\n        angular$1.forEach(devices, function (_name) {\n            if (_name && \"\" != _name) {\n                var deferred = __q.defer();\n                __http({\n                    method: 'POST',\n                    url: host + '/' + application + '/' + deviceType + '/name/' + _name,\n                    data: {\n                        'extensions': [].concat([extensionType])\n                    },\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }).success(function (extension) {\n                    deferred.resolve({\n                        \"name\": _device.name,\n                        \"extension\": extension[extensionType],\n                        \"device\": _device\n                    });\n                }).error(function (error) {\n                    deferred.reject(error);\n                });\n                promises.push(deferred.promise);\n            }\n        });\n        // call $q.all on the other side\n        return promises;\n    }\n\n\n    \n\n\n\n    devicesStoreData(id, host, application, devices, deviceType, store, start, end, fields, interval) {\n\n        if (!host || \"\" === host || !application || \"\" === application || !deviceType || \"\" === deviceType) {\n            console.error(\"host url/applicaiton is empty~\");\n            return false;\n        }\n\n        var $graphDataService = this._$graphDataService;\n        // new way to get the data without tree index.\n        var deferred = this._$q.defer();\n        if (start instanceof Date) {\n            start = start.getTime();\n        }\n        if (end instanceof Date) {\n            end = end.getTime();\n        }\n        // send request to back-end    http://localhost:8082/smud/meter/meter_hour\n        this._$http({\n            method: 'POST',\n            url: host + \"/\" + application + \"/\" + deviceType + \"/\" + store,\n            data: {\n                \"start\": start,\n                \"end\": end,\n                \"fields\": fields,\n                \"devices\": [].concat(devices),\n                \"frequency\": interval\n            },\n            header: {\n                \"content-type\": \"application/json\"\n            }\n        }).then(\n            function (response) {\n                // only return 1 device data\n                var devicesGraphData = [].concat(response.data);\n                deferred.resolve(devicesGraphData);\n            },\n            function (error) {\n                deferred.reject(error);\n            }\n        );\n\n\n        return deferred.promise;\n    }\n\n    getRelatedDevices(host, application, device, deviceType, relationType, isParent) {\n        var deferred = this._$q.defer();\n        this._$http({\n            url: host + '/' + application + '/' + deviceType + '/' + device + '/relation/' + relationType + '?isParent='+(isParent ? true : false),\n            method: 'GET'\n        }).then(function successCallback(resp) {\n            deferred.resolve(resp);\n        }, function errorCallback(error) {\n            deferred.reject(error);\n        });\n        return deferred.promise;\n    };\n\n    getStoreData(host, application, devices, deviceType, store, start, end, fields){\n        return this.devicesStoreData(\"_id\", host, application, devices, deviceType, store, start, end, fields, 0);\n    }\n\n\n    deviceStoreData(id, host, application, deviceName, deviceType, store, start, end, fields, interval) {\n\n        if (!host || \"\" === host || !application || \"\" === application || !deviceType || \"\" === deviceType) {\n            console.error(\"host url/applicaiton is empty~\");\n            return false;\n        }\n\n        var $graphDataService = this._$graphDataService;\n        // new way to get the data without tree index.\n        var deferred = this._$q.defer();\n        if (start instanceof Date) {\n            start = start.getTime();\n        }\n        if (end instanceof Date) {\n            end = end.getTime();\n        }\n        // send request to back-end    http://localhost:8082/smud/meter/meter_hour\n        this._$http({\n            method: 'POST',\n            url: host + \"/\" + application + \"/\" + deviceType + \"/\" + store,\n            data: {\n                \"start\": start,\n                \"end\": end,\n                \"fields\": fields,\n                \"devices\": [deviceName],\n                \"frequency\": interval\n            },\n            header: {\n                \"content-type\": \"application/json\"\n            }\n        }).then(\n            function (response) {\n                // only return 1 device data\n                var deviceGraphData = [];\n                var newComeResult = response.data[deviceName].data;\n                newComeResult.forEach(function (item) {\n                    deviceGraphData.push(item);\n                });\n                // order by timestamp\n                deviceGraphData.sort(function (a, b) {\n                    if (a.timestamp > b.timestamp) {\n                        return 1;\n                    } else if (a.timestamp < b.timestamp) {\n                        return -1;\n                    }\n                    return 0;\n                });\n                deferred.resolve(deviceGraphData);\n            },\n            function (error) {\n                deferred.reject(error);\n            }\n        );\n\n\n        return deferred.promise;\n    }\n\n    defaultColors() {\n        if (!this.colors) {\n            // dark blue, green, orange,pink,red\n            var defaultColors = [\"#1B2631\", \"#C0392B\", \"#884EA0\", \"#2471A3\", \"#138D75\", \"#229954\", \"#F39C12\", \"#34495E\", \"#154360\", \"#641E16\", \"#4A235A\", \"#0B5345\", \"#7D6608\", \"#6E2C00\"];\n\n            var _tempColors = [];\n            // generate 500 colors\n            for (var i = 0; i < 500; i++) {\n                _tempColors.push(defaultColors[Math.floor(Math.random() * (10))]);\n            }\n            this['colors'] = defaultColors.concat(_tempColors);\n        }\n        return this.colors;\n    }\n\n    setColors(colors) {\n        this.colors = colors;\n    }\n\n\n    /**\n     * device id\n     * @param id\n     */\n    healthcheck(application, id) {\n\n        if (id = null || id == \"\") {\n            return;\n        }\n        this._$http.get('/rest/api/app/' + application + '/docker/healthcheck/reports?id=' + id)\n            .success(function (response) {\n                console.info(response);\n                return response;\n            });\n\n\n    }\n\n\n    autoUpdateGraph(application, device, schema, store, fields, count, callback) {\n        var _$interval = this._$interval;\n        var _$http = this._$http;\n        var fetcher = null;\n        this._$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n            .success(function (response) {\n                var last = -1;\n                var interval = -1;\n                if (response.trees && response.trees.length === 1) {\n                    interval = response.trees[0].frequency;\n                    last = response.trees[0].last.timeKey;\n                }\n                if (interval != -1) {\n                    var start = last - (count * interval);\n                    var end = last;\n                    // first time\n                    _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                        params: {\n                            \"devices\": JSON.stringify([device]),\n                            \"fields\": JSON.stringify(fields),\n                            \"start\": start,\n                            \"end\": end\n                        }\n                    }).success(function (graphData) {\n\n                        // start task\n                        fetcher = _$interval(function () {\n                            _$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n                                .success(function (response) {\n                                    if (response.trees && response.trees.length === 1) {\n                                        last = response.trees[0].last.timeKey;\n                                        start = last - (count * interval);\n                                        end = last;\n                                        _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                                            params: {\n                                                \"devices\": JSON.stringify([device]),\n                                                \"fields\": JSON.stringify(fields),\n                                                \"start\": start,\n                                                \"end\": end\n                                            }\n                                        }).success(function (graphData) {\n                                            // put the data back\n                                            callback(graphData[device], null, interval);\n                                        });\n                                    }\n                                });\n                        }, interval);\n\n                        // put the data back\n                        callback(graphData[device], fetcher, interval);\n                    });\n                }\n            });\n\n    }\n\n\n    static buildFactory($http, $q, $cacheFactory, $interval, graphDataService, $location) {\n        dataAccessApi.instance = new dataAccessApi($http, $q, $cacheFactory, $interval, graphDataService, $location);\n        return dataAccessApi.instance;\n    }\n\n}\n\ndataAccessApi.$inject = ['$http', '$q', '$cacheFactory', '$interval', 'graphDataService', '$location'];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nclass fgpWidgetContainer {\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {\n            interactions: \"=\",\n            drill: \"=\",\n            highlights: \"=\",\n            eventsHandler:\"=\"\n        };\n    }\n\n    template(element, attrs) {\n        var flag = attrs.hasOwnProperty(\"shown\");\n        var showTitle = attrs.hasOwnProperty(\"showtitle\");\n        var element_id = attrs.id;\n        var dom_show = '<div class=\"\" id=\"' + element_id + '\" style=\"margin-top:10px;margin-bottom:10px;\">' +\n            '<div class=\"{{css.width}}\" style=\"padding: 0px;\">' +\n            '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n            '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}}\">{{css.title.text}}</div>' +\n            '<div class=\"panel-body\" id=\"edit' + element_id + '\" style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n            '</div>' +\n            '</div></div>';\n        var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '\" style=\"margin-top:2px;margin-bottom:2px;\">' +\n            '<div class=\"{{css.width}}\" style=\"margin-top:10px;margin-bottom:10px;\">' +\n            '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n            '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n            '</div>' +\n            '</div></div>';\n\n        // show or design\n        if (flag) {\n            if (showTitle) {\n                return dom_show;\n            } else {\n                // without title\n                return dom_show_notitle;\n            }\n        }\n\n    }\n\n    controller($scope, $element, dataService, $rootScope, $timeout) {\n        // only show\n        var element_id = $element.attr(\"id\");\n\n\n        var widgetData = null;\n\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        // dynamic change title\n        $rootScope.$on('changeContainerTitleEvent', function (event, params) {\n            if(params.id == element_id){\n                // change title\n                $scope.css[\"title\"][\"text\"] = params.title;\n            }\n        });\n\n\n        var metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n        $scope.css[\"title\"] = metadata.css.title;\n        $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n        $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n        $scope.data = {};\n        if (metadata.data) {\n            $scope.data[\"source\"] = metadata.data.source;\n            if ($scope.data && $scope.data.source.device && $scope.data.source.device != -1) {\n                if ($scope.data.source.device) {\n                    /**\n                     * get device information\n                     */\n                    dataService.deviceInfo($rootScope.host, JSON.parse($scope.data.source.device).name, null, JSON.parse($scope.data.source.device).type, $scope.applicationName).then(function(data) {\n                        // send device info to all widget\n                        $timeout(function() {\n                            data[\"from\"] = element_id;\n                            newScope.$broadcast('deviceInfoEvent', data);\n                        });\n                    });\n                }\n            }\n        }\n\n    }\n\n\n    static buildFactory() {\n        fgpWidgetContainer.instance = new fgpWidgetContainer();\n        return fgpWidgetContainer.instance;\n    }\n\n}\n\nfgpWidgetContainer.$inject = [];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nclass fgpWidgetGraph {\n\n    constructor($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams, $compile, $q) {\n        this.restrict = 'E';\n        this.scope = {\n            interactions: \"=\",\n            drill: \"=\",\n            highlights: \"=\",\n            eventsHandler: \"=\",\n            dateFormatter: \"=\" // has 2 attributes  pattern & timezone\n        };\n        this.$timeout = $timeout;\n        this._dataService = dataService;\n        this._$interval = $interval;\n        this._$q = $q;\n    }\n\n    template(element, attrs) {\n        var flag = attrs.hasOwnProperty(\"shown\");\n        if (flag) {\n            var dom_loading = '<div ng-show=\"loadingShow\" id=\"loading_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\">' +\n                '<div class=\"rect1\"></div>' +\n                '<div class=\"rect2\"></div>' +\n                '<div class=\"rect3\"></div>' +\n                '<div class=\"rect4\"></div>' +\n                '<div class=\"rect5\"></div>' +\n                '</div></div>';\n\n\n            var dom_legend = '<li ng-if=\"legendText_device_name\">{{legendText_device_name}}</li><li>{{legendText_datetime}}</li><li><label style=\"color: {{legendColor}}\">{{legendText_column}}</label>:{{legendText_value}}</li>';\n\n            var dom_empty_data = '<div ng-show=\"emptyDataShow\" id=\"emptydata_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\" style=\"width: 100%;\">' +\n                '<h1>Empty Data!</h1>' +\n                '</div></div>';\n\n            var dom_alert_info = '<span class=\"label label-warning\" ng-show=\"alertMessage\" style=\"color: #000;\">{{alertMessage}}</span>';\n\n            var dom_datetime_interval = '<div ng-show=\"rangeSelectorBar && dateTimeIntervals.length > 0\" class=\"dropdown\"> <button class=\"btn btn-info dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">{{currentIntervalChoosed.name}}<span class=\"caret\"></span></button> <ul class=\"dropdown-menu\" style=\"font-size:12px;\"><li ng-repeat=\"interval in dateTimeIntervals\"><a href=\"javascript:;\" ng-click=\"changeInterval(interval)\">{{interval.name}}</a></li></ul> </div>';\n\n\n            //selectControl\n            var dom_rect = '<div>' +\n                '</div>';\n\n            var dom_series_list = '<div ng-show=\"currentView === 1\" class=\"dropdown\"> <button class=\"btn btn-warning dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">Devices<span class=\"caret\"></span></button> <ul class=\"dropdown-menu\" style=\"font-size:12px;height:auto;max-height:300px;overflow-x:hidden;\"><li ng-repeat=\"device in childrenDevices\"><input type=\"checkbox\" ng-click=\"showOrHideDevice(device)\" ng-checked=\"device.show\"/>{{device[childrenDeviceNameColumn]}}</li></ul> </div>';\n\n            var dom_series_list_device = '<div ng-show=\"currentView === -1\" class=\"dropdown\"> <button class=\"btn btn-warning dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">Series<span class=\"caret\"></span></button> <ul class=\"dropdown-menu\" style=\"font-size:12px;height:auto;max-height:300px;overflow-x:hidden;\"><li ng-repeat=\"series in seriesList\"><input type=\"checkbox\" ng-click=\"showOrHideSeries(series)\" ng-checked=\"series.show\"/>&nbsp;&nbsp;{{series.label}}</li></ul> </div>';\n\n\n            var dom_real_time_grap = '<div class=\"modal fade \" id=\"real_time_graph_' + attrs.id + '\" role=\"dialog\">' +\n                '<div class=\"modal-dialog modal-lg\">' +\n                '<div class=\"modal-content\">' +\n                '<div class=\"col-md-12\"  style=\"padding-top:3px;height: 1px;background-color: #0e90d2;\" ng-style=\"{ \\'width\\': completionPercent + \\'%\\' }\"></div>' +\n                '<div class=\"modal-body\" style=\"width: 100%;height: 300px;\">' +\n                '<div class=\"real-time-graph\" style=\"width: 100%;height: 100%\"></div>' +\n                '</div>' +\n                '</div>' +\n                '</div>' +\n                '</div>';\n\n            var html = '<div id=\"legendbox' + attrs.id + '\" ng-show=\"legendText\" ng-style=\"{top:legendTop,left:legendLeft}\" style=\"border-radius:10px;background-color:#ffffff;position: absolute;border: 1px solid {{legendColor}};-moz-box-shadow: 5px 5px 5px #888888;box-shadow: 5px 5px 5px #888888;z-index: 99999999;margin-right: 5px;\"><ul style=\"list-style: none;list-style-position: inside;text-align: right;\">' + dom_legend + '</ul></div><div class=\"{{css.width}}\"><div class=\"col-md-12\" style=\"padding:0px;height:{{css.height}}px;-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\"><div class=\"row\"><div class=\"col-md-12\"><a class=\"btn btn-xs btn-info badge\" href=\"javascript:;\" ng-hide=\"interactions.graphs.btns.scatter == \\'hide\\'\" style=\"float: right;margin-right: 10px;\" ng-click=\"currentView = -currentView\"><i class=\"glyphicon glyphicon-transfer\"></i></a><a class=\"btn btn-xs btn-info badge\" href=\"javascript:;\" style=\"float: right;margin-right: 10px;\" ng-click=\"graphDatadownload()\"><i class=\"glyphicon glyphicon-download-alt\"></i></a><a class=\"btn btn-xs btn-info badge\" href=\"javascript:;\" style=\"float: right;margin-right: 10px;\" ng-click=\"saveGraphAsPng()\"><i class=\"glyphicon glyphicon-picture\"></i></a><div id=\"buttons_area\" style=\"\"></div><a ng-show=\"false\" class=\"btn btn-xs btn-info badge\" style=\"float: right;margin-right: 10px;\" ng-click=\"showRealTimeGraph()\" data-toggle=\"modal\"><i class=\"glyphicon glyphicon-random\"></i></a><a ng-show=\"selectControl\" class=\"btn btn-xs btn-info badge\" style=\"float: right;margin-right: 10px;\" ng-click=\"switchSelectFeature()\"><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></a><div style=\"float: right; margin-right: 10px;\">' + dom_series_list + ' ' + dom_series_list_device + '</div><div style=\"float: right; margin-right: 10px;\">' + dom_datetime_interval + '</div><div ng-hide=\"true\" class=\"checkbox\" style=\"float: right;margin-right: 10px; margin-bottom: 5px; margin-top: 0;\" ng-model=\"fixInterval\" ng-click=\"fixInterval=!fixInterval\"><label><input type=\"checkbox\" ng-model=\"fixInterval\" ng-clicked=\"fixInterval\" ng-change=\"fixGraphWithGap_click()\"/>fixed interval</label></div><div style=\"float: right; margin-right: 10px;\"><label class=\"label-inline\" ng-repeat=\"item in intevals.device\"><span class=\"badge\" style=\"background-color: {{ item.name == currentIntervalName ? (locked_interval.name == item.name ? \\'#e57432;\\':\\'#009900;\\') : (locked_interval.name == item.name ? \\'#e57432;\\':\\'\\') }}\" ng-click=\"lock(item)\">{{item.name}}</span></label></div><div style=\"float: right; margin-right: 10px;\">' + dom_alert_info + '</div><div style=\"float: right; margin-right: 10px;\">Timezone:{{dateFormatter.timezone}}</div></div></div><div style=\"position: relative;width: 100%;height:100%;\"><div style=\"position: absolute;left:25px;z-index: 999;\" ng-show=\"basicInfo.zoom\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVULeft()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDLeft()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVLeft()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVLeft()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div><div class=\"line-chart-graph\" style=\"width: 100%;height:100%;\" ng-dblclick=\"drillDown()\" ng-click=\"singleClickEventHandler()\"></div><div style=\"position: absolute;right:-15px;top:0px;z-index: 999;\" ng-show=\"checkY2Btns()\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVURight()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDRight()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVRight()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVRight()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div>' + dom_loading + dom_empty_data + '<div class=\"row\"><div class=\"col-md-12\" style=\"min-height: 30px;\"></div><div class=\"col-md-6\" style=\"text-align: left;\" ng-show=\"rangeSelectorBar\">{{rangeSelectorBar.xAxisRange()[0] | df : (dateFormatter.pattern ? dateFormatter.pattern : \\'\\') : dateFormatter.timezone}}</div><div class=\"col-md-6\" style=\"text-align: right;\" ng-show=\"rangeSelectorBar\">{{rangeSelectorBar.xAxisRange()[1] | df : (dateFormatter.pattern ? dateFormatter.pattern : \\'\\') : dateFormatter.timezone}}</div><div class=\"col-md-12\" style=\"min-height: 40px;position: relative\"><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;left: 20px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanleft()\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanright()\"><i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></div><div class=\"range-selector-bar\" style=\"height: 0px;margin-top: 30px;width: 100%;position: absolute;\"></div><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;right: 0px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomin()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomout()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div></div></div>' + dom_real_time_grap;\n\n            return html;\n        }\n    }\n\n    link(scope, element, attrs) {\n        scope['defaultColors'] = this._dataService.defaultColors();\n        var dataService = this._dataService;\n        var _$interval = this._$interval;\n        scope.status = true;\n        var timeOut = this.$timeout;\n        scope.completionPercent = 0;\n        scope.graphId = attrs.id;\n        scope.deviceTitle = attrs.hasOwnProperty(\"dTitle\") ? attrs[\"dTitle\"] : null;\n        scope.scatterTitle = attrs.hasOwnProperty(\"sTitle\") ? attrs[\"sTitle\"] : null;\n        scope.parent_id = attrs.container;\n        scope.graphId = attrs.id;\n        this.$timeout(function () {\n            var getData = function (numSeries, numRows, name) {\n                var result = {\n                    labels: null,\n                    data: null\n                };\n                var data = [];\n                var labels = [];\n                //init date\n                var initDate = new Date(\"1970/01/01 00:00:00\");\n                for (var j = 0; j < numRows; ++j) {\n                    data[j] = [new Date(initDate.getTime() + 900000)];\n                }\n                for (var i = 0; i < numSeries; ++i) {\n                    labels.push(name + i);\n                    var val = 0;\n                    for (var j = 0; j < numRows; ++j) {\n                        val += Math.random() - 0.5;\n                        data[j][i + 1] = val;\n                    }\n                }\n                result.labels = labels;\n                result.data = data;\n                return result;\n            };\n\n\n            var sampleData = getData(1, 10, 'Device');\n\n            function movePan(event, g, context, side) {\n                context.dragEndX = Dygraph.dragGetX_(event, context);\n                context.dragEndY = Dygraph.dragGetY_(event, context);\n                // y-axis scaling is automatic unless this is a full 2D pan.\n                if (context.is2DPan) {\n                    var pixelsDragged = context.dragEndY - context.dragStartY;\n                    // Adjust each axis appropriately.\n                    if (side == \"l\") {\n                        var axis = g.axes_[0];\n                        var axis_data = context.axes[0];\n                        var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n                        var boundedValue = context.boundedValues ? context.boundedValues[0] : null;\n                        // In log scale, maxValue and minValue are the logs of those values.\n                        var maxValue = axis_data.initialTopValue + unitsDragged;\n                        if (boundedValue) {\n                            maxValue = Math.min(maxValue, boundedValue[1]);\n                        }\n                        var minValue = maxValue - axis_data.dragValueRange;\n                        if (boundedValue) {\n                            if (minValue < boundedValue[0]) {\n                                // Adjust maxValue, and recompute minValue.\n                                maxValue = maxValue - (minValue - boundedValue[0]);\n                                minValue = maxValue - axis_data.dragValueRange;\n                            }\n                        }\n                        if (g.attributes_.getForAxis(\"logscale\", 0)) {\n                            axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                                Math.pow(Dygraph.LOG_SCALE, maxValue)\n                            ];\n                            axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                                Math.pow(Dygraph.LOG_SCALE, maxValue)\n                            ];\n                        } else {\n                            axis.valueWindow = [minValue, maxValue];\n                            axis.valueRange = [minValue, maxValue];\n                        }\n                    } else if (side == 'r') {\n                        var axis = g.axes_[1];\n                        var axis_data = context.axes[1];\n                        var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                        var boundedValue = context.boundedValues ? context.boundedValues[1] : null;\n\n                        // In log scale, maxValue and minValue are the logs of those values.\n                        var maxValue = axis_data.initialTopValue + unitsDragged;\n                        if (boundedValue) {\n                            maxValue = Math.min(maxValue, boundedValue[1]);\n                        }\n                        var minValue = maxValue - axis_data.dragValueRange;\n                        if (boundedValue) {\n                            if (minValue < boundedValue[0]) {\n                                // Adjust maxValue, and recompute minValue.\n                                maxValue = maxValue - (minValue - boundedValue[0]);\n                                minValue = maxValue - axis_data.dragValueRange;\n                            }\n                        }\n                        if (g.attributes_.getForAxis(\"logscale\", 1)) {\n                            axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                                Math.pow(Dygraph.LOG_SCALE, maxValue)\n                            ];\n                            axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                                Math.pow(Dygraph.LOG_SCALE, maxValue)\n                            ];\n                        } else {\n                            axis.valueWindow = [minValue, maxValue];\n                            axis.valueRange = [minValue, maxValue];\n                        }\n                    } else {\n                        var minDate = context.initialLeftmostDate -\n                            (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n                        if (context.boundedDates) {\n                            minDate = Math.max(minDate, context.boundedDates[0]);\n                        }\n                        var maxDate = minDate + context.dateRange;\n                        if (context.boundedDates) {\n                            if (maxDate > context.boundedDates[1]) {\n                                // Adjust minDate, and recompute maxDate.\n                                minDate = minDate - (maxDate - context.boundedDates[1]);\n                                maxDate = minDate + context.dateRange;\n                            }\n                        }\n                        var zoomRange = g.xAxisZoomRange;\n\n                        if (!zoomRange) {\n                            return false;\n                        }\n\n                        if (g.xAxisZoomRange[0] instanceof Date) {\n                            zoomRange[0] = g.xAxisZoomRange[0].getTime();\n                        }\n                        if (g.xAxisZoomRange[1] instanceof Date) {\n                            zoomRange[1] = g.xAxisZoomRange[1].getTime();\n                        }\n\n                        if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                            return;\n                        }\n\n                        if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                            g.dateWindow_ = [Math.pow(Dygraph.LOG_SCALE, minDate),\n                                Math.pow(Dygraph.LOG_SCALE, maxDate)\n                            ];\n                        } else {\n                            g.dateWindow_ = [minDate, maxDate];\n                        }\n                    }\n                }\n                g.drawGraph_(true);\n            }\n\n\n            function offsetToPercentage(g, offsetX, offsetY) {\n                // This is calculating the pixel offset of the leftmost date.\n                var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n                var yar0 = g.yAxisRange(0);\n\n                // This is calculating the pixel of the higest value. (Top pixel)\n                var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n                // x y w and h are relative to the corner of the drawing area,\n                // so that the upper corner of the drawing area is (0, 0).\n                var x = offsetX - xOffset;\n                var y = offsetY - yOffset;\n\n                // This is computing the rightmost pixel, effectively defining the\n                // width.\n                var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n                // This is computing the lowest pixel, effectively defining the height.\n                var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n                // Percentage from the left.\n                var xPct = w == 0 ? 0 : (x / w);\n                // Percentage from the top.\n                var yPct = h == 0 ? 0 : (y / h);\n\n                // The (1-) part below changes it from \"% distance down from the top\"\n                // to \"% distance up from the bottom\".\n                return [xPct, (1 - yPct)];\n            }\n\n\n            function zoom(g, zoomInPercentage, xBias, yBias, direction, side) {\n\n                if (scope.basicInfo && !scope.basicInfo.zoom) {\n                    return;\n                }\n\n                function adjustAxis(axis, zoomInPercentage, bias) {\n                    var delta = axis[1] - axis[0];\n                    var increment = delta * zoomInPercentage;\n                    var foo = [increment * bias, increment * (1 - bias)];\n                    return [axis[0] + foo[0], axis[1] - foo[1]];\n                }\n\n                xBias = xBias || 0.5;\n                yBias = yBias || 0.5;\n                var yAxes = g.axes_;\n                var newYAxes = [];\n                for (var i = 0; i < g.numAxes(); i++) {\n                    if (yAxes[i].valueWindow) {\n                        newYAxes[i] = adjustAxis(yAxes[i].valueWindow, zoomInPercentage, yBias);\n                    } else {\n                        newYAxes[i] = adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n                    }\n                }\n                if ('v' == direction) {\n                    if ('l' == side) {\n                        yAxes[0]['valueRange'] = newYAxes[0];\n                        yAxes[0]['valueWindow'] = newYAxes[0];\n                        if (scope.currentInitScaleLevelLeftConf) {\n                            scope.currentInitScaleLevelLeftConf.range = newYAxes[0];\n                        }\n                    } else if ('r' == side && g.numAxes() == 2) {\n                        yAxes[1]['valueRange'] = newYAxes[1];\n                        yAxes[1]['valueWindow'] = newYAxes[1];\n                        if (scope.currentInitScaleLevelRightConf) {\n                            scope.currentInitScaleLevelRightConf.range = newYAxes[1];\n                        }\n                    }\n                    g.drawGraph_(true);\n                } else {\n                    var ranges = [];\n                    angular$1.forEach(g.xAxisRange(), function (range) {\n                        if (range instanceof Date) {\n                            ranges.push(range.getTime());\n                        } else {\n                            ranges.push(range);\n                        }\n                    });\n\n                    var newZoomRange = adjustAxis(ranges, zoomInPercentage, xBias);\n                    // do not bigger than range data\n                    var zoomRange = [];\n                    if (g.hasOwnProperty(\"xAxisZoomRange\") && g.xAxisZoomRange) {\n                        zoomRange[0] = g.xAxisZoomRange[0];\n                        zoomRange[1] = g.xAxisZoomRange[1];\n                    } else {\n                        zoomRange[0] = g.xAxisExtremes()[0];\n                        zoomRange[1] = g.xAxisExtremes()[1];\n                    }\n                    if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                        return;\n                    } else if (newZoomRange[0] >= newZoomRange[1]) {\n                        return;\n                    } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                        if (scope.memoryVisibility && scope.memoryVisibility.length == 0 && scope.hp && scope.hp == true) {\n                            scope.memoryVisibility = g.getOption(\"visibility\");\n                            var vis = g.getOption(\"visibility\");\n                            var _tempVi = [];\n                            vis.forEach(function (v, _index) {\n                                _tempVi[_index] = false;\n                            });\n                            g.updateOptions({\n                                dateWindow: newZoomRange,\n                                visibility: _tempVi\n                            }, false);\n                        } else {\n                            g.updateOptions({\n                                dateWindow: newZoomRange\n                            }, false);\n                        }\n\n                    } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                        if (scope.memoryVisibility && scope.memoryVisibility.length == 0 && scope.hp && scope.hp == true) {\n                            scope.memoryVisibility = g.getOption(\"visibility\");\n                            var vis = g.getOption(\"visibility\");\n                            var _tempVi = [];\n                            vis.forEach(function (v, _index) {\n                                _tempVi[_index] = false;\n                            });\n                            g.updateOptions({\n                                dateWindow: newZoomRange,\n                                visibility: _tempVi\n                            }, false);\n                        } else {\n                            g.updateOptions({\n                                dateWindow: newZoomRange\n                            }, false);\n                        }\n                    } else {\n                        if (scope.memoryVisibility && scope.memoryVisibility.length == 0 && scope.hp && scope.hp == true) {\n                            scope.memoryVisibility = g.getOption(\"visibility\");\n                            var vis = g.getOption(\"visibility\");\n                            var _tempVi = [];\n                            vis.forEach(function (v, _index) {\n                                _tempVi[_index] = false;\n                            });\n                            g.updateOptions({\n                                dateWindow: newZoomRange,\n                                visibility: _tempVi\n                            }, false);\n                        } else {\n                            g.updateOptions({\n                                dateWindow: newZoomRange\n                            }, false);\n                        }\n                    }\n                }\n            }\n\n\n            var canScroll = false;\n\n            var timer = null;\n            var mouseOverHandler = function (e, g, context) {\n                //\n                if (scope.basicInfo && !scope.basicInfo.zoom) {\n                    return;\n                }\n                //\n                if (timer != null) {\n                    timeOut.cancel(timer);\n                }\n                timer = timeOut(function () {\n                    timer = null;\n                    canScroll = true;\n                }, 1000);\n            };\n\n\n            var mouseEnterHandler = function (e, g, context) {\n                if (scope.basicInfo && !scope.basicInfo.zoom) {\n                    return;\n                }\n                //\n                if (timer != null) {\n                    timeOut.cancel(timer);\n                }\n                timer = timeOut(function () {\n                    timer = null;\n                    canScroll = true;\n                }, 1000);\n            };\n\n            var mouseOutHandler = function (e, g, context) {\n                // set flag to false\n                if (timer != null) {\n                    timeOut.cancel(timer);\n                }\n                canScroll = false;\n            };\n\n            var scroll = function (e, g, context) {\n\n                if ((scope.basicInfo && !scope.basicInfo.zoom) || !canScroll) {\n                    return;\n                }\n\n                var normal;\n\n                if (e instanceof WheelEvent) {\n                    normal = e.detail ? e.detail * -1 : e.deltaY / 40;\n                } else {\n                    normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n                }\n\n                // For me the normalized value shows 0.075 for one click. If I took\n                // that verbatim, it would be a 7.5%.\n                var percentage = normal / 50;\n\n                if (!(e.offsetX && e.offsetY)) {\n                    e.offsetX = e.layerX - e.target.offsetLeft;\n                    e.offsetY = e.layerY - e.target.offsetTop;\n                }\n                var percentages = offsetToPercentage(g, e.offsetX, e.offsetY);\n                var xPct = percentages[0];\n                var yPct = percentages[1];\n                //\n                if (e.offsetX <= (g.plotter_.area.x)) {\n                    // console.info(\"v\", \"l\")\n                    // left zoom\n                    zoom(g, percentage, xPct, yPct, 'v', 'l');\n                } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                    // right zoom\n                    // console.info(\"v\", \"r\")\n                    zoom(g, percentage, xPct, yPct, 'v', 'r');\n                } else {\n                    // middle zoom\n                    if (scope.basicInfo && scope.basicInfo.range_show) {\n                        //\n                        zoom(g, percentage, xPct, yPct, 'h', null);\n                    }\n                }\n                Dygraph.cancelEvent(e);\n                timeOut(function () {\n                    scope.chartDateWindow = g.xAxisRange();\n                });\n            };\n\n            var firstPoint = null;\n            var mousedownHandler = function (e, g, context) {\n                if (scope.basicInfo && !scope.basicInfo.zoom) {\n                    return;\n                }\n                context.initializeMouseDown(e, g, context);\n                firstPoint = e.clientX;\n                Dygraph.startPan(e, g, context);\n            };\n            var mousemoveHandler = function (e, g, context) {\n                if (context.isPanning) {\n                    if (e.offsetX <= (g.plotter_.area.x)) {\n                        movePan(e, g, context, 'l');\n                    } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                        movePan(e, g, context, 'r');\n                    } else {\n                        if (scope.memoryVisibility && scope.memoryVisibility.length == 0 && scope.hp && scope.hp == true) {\n                            scope.memoryVisibility = g.getOption(\"visibility\");\n                            var _tempVi = [];\n                            g.getOption(\"visibility\").forEach(function (_v, _index) {\n                                _tempVi[_index] = false;\n                            });\n                            g.updateOptions({\n                                \"visibility\": _tempVi\n                            });\n                        }\n                        movePan(e, g, context, 'h');\n                    }\n                    timeOut(function () {\n                        scope.chartDateWindow = scope.currentChart.xAxisRange();\n                    });\n                }\n            };\n\n            var mouseupHandler = function (e, g, context) {\n                if (context.isPanning) {\n                    Dygraph.endPan(e, g, context);\n                }\n\n                canScroll = true;\n            };\n\n            var interactionModel = {\n                'mousewheel': scroll,\n                'DOMMouseScroll': scroll,\n                'wheel': scroll,\n                'mousedown': mousedownHandler,\n                'mousemove': mousemoveHandler,\n                'mouseenter': mouseEnterHandler,\n                'mouseup': mouseupHandler,\n                // 'mouseover': mouseOverHandler,\n                'mouseout': mouseOutHandler\n            };\n\n\n            //init configuration\n            var configuration = scope.defaultNullCOnfig = {\n                drawGapEdgePoints: true,\n                'pointSize': 2,\n                legend: 'follow',\n                labelsKMB: true,\n                labelsSeparateLines: true,\n                // data formate\n                labels: ['x'].concat(sampleData.labels),\n                highlightSeriesOpts: {\n                    strokeWidth: 1.5,\n                    strokeBorderWidth: 1,\n                    highlightCircleSize: 2\n                },\n                drawPoints: false,\n                drawAxesAtZero: false,\n                labelsDivStyles: {\n                    'text-align': 'right',\n                    'position': 'relative',\n                    'display': 'inline-block'\n                },\n                yRangePad: 10,\n                // x label y label\n                ylabel: 'Value',\n                xlabel: 'Date',\n                colors: scope.defaultColors,\n                // multiple Y axis\n                series: {\n                    'Device0': {\n                        axis: 'y2'\n                    },\n                    'Device4': {\n                        axis: 'y2'\n                    }\n                },\n                // showRangeSelector: true,\n                axes: {\n                    y: {\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    y2: {\n                        // set axis-related properties here\n                        'labelsKMB': true,\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    }\n                },\n                pointClickCallback: function (e, p) {\n                    // if (scope.currentView != -1) {\n                    //     scope.showOne(p.name);\n                    // }\n                },\n                drawCallback: function (g, isInit) {\n                    if (scope.refersh) { // make sure \"scope.refersh\" doesn't call when the graph create first time.\n                        scope.refersh(g, isInit);\n                    }\n                },\n                'interactionModel': interactionModel\n            };\n            configuration[\"plugins\"] = [];\n            // enable and disables\n            if (Dygraph.Plugins.RectSelection && scope.highlights) {\n                scope.selectControl = new Dygraph.Plugins.RectSelection({\n                    highlight: function (series) {\n                        console.info(\"highlight:\" + series); // would be children devices in scatter view\n                        var tempArray = [];\n                        if (scope.highlights && scope.highlights.onExternal && scope.currentView == 1) {\n                            series.forEach(function (_item) {\n                                tempArray.push({\n                                    'name': _item.substring(0, 16),\n                                    'id': _item.substring(0, 16)\n                                });\n                            });\n                            scope.highlights.onExternal = [];\n                            scope.highlights.onExternal = tempArray;\n                        }\n                    }\n                });\n                configuration[\"plugins\"].push(scope.selectControl);\n                scope.selectControlStatus = false;\n                scope.switchSelectFeature = function () {\n                    if (scope.selectControlStatus) {\n                        scope.selectControl.disable();\n                        scope.selectControlStatus = false;\n                    } else {\n                        scope.selectControl.enable();\n                        scope.selectControlStatus = true;\n                    }\n                };\n            }\n\n\n            // if (Dygraph.Plugins.HideLines) {\n            //     configuration[\"plugins\"].push(new Dygraph.Plugins.HideLines());\n            // }\n            scope.chartInitStatus = true;\n            scope.areaElement = element.find(\"div[class='line-chart-graph']\")[0];\n            scope.currentChart = new Dygraph(scope.areaElement, sampleData.data, configuration);\n\n            // start and end are timestamp\n            scope.currentChart._updateDatetimeWindow = function (datetimeWindow) {\n                // change chart datetime and refersh graph\n                scope.chartDateTime = datetimeWindow;\n            };\n\n\n            element.find(\"canvas\").css(\"zIndex\", 99);\n            var timer_auto = null;\n            var process_bar_timer = null;\n            element.find(\"#real_time_graph_\" + attrs.id).on(\"hidden.bs.modal\", function () {\n                // put your default event here\n                _$interval.cancel(timer_auto);\n                _$interval.cancel(process_bar_timer);\n            });\n\n\n            //real-time-graph\n            element.find(\"#real_time_graph_\" + attrs.id).on('shown.bs.modal', function () {\n\n                var tempConifg = {\n                    drawGapEdgePoints: true,\n                    'pointSize': 3,\n                    labelsKMB: true,\n                    labelsSeparateLines: false,\n                    drawPoints: false,\n                    drawAxesAtZero: false,\n                    labelsDivStyles: {\n                        'text-align': 'right',\n                        'position': 'relative',\n                        'display': 'inline-block'\n                    },\n                    // x label y label\n                    ylabel: 'Value',\n                    xlabel: 'Date',\n                    colors: scope.defaultColors,\n                    // multiple Y axis\n                    series: {\n                        'Device0': {\n                            axis: 'y2'\n                        },\n                        'Device4': {\n                            axis: 'y2'\n                        }\n                    },\n                    // showRangeSelector: true,\n                    axes: {\n                        y: {\n                            valueRange: [0, 1],\n                            axisLabelWidth: 80\n                        },\n                        y2: {\n                            // set axis-related properties here\n                            'labelsKMB': true,\n                            valueRange: [0, 1],\n                            axisLabelWidth: 80\n                        }\n                    },\n                    interactionModel: {}\n                };\n\n                scope.realTimeGraph = new Dygraph(element.find(\"div[class='real-time-graph']\")[0], sampleData.data, tempConifg);\n                scope.realTimeGraph.updateOptions(scope.currentChartOptions);\n                scope.realTimeGraph.updateOptions({\n                    \"file\": [],\n                    highlightSeriesOpts: {\n                        strokeWidth: 1.5,\n                        strokeBorderWidth: 1,\n                        highlightCircleSize: 2\n                    }\n                });\n\n                timer_auto = dataService.autoUpdateGraph(scope.applicationName, scope.auto_device_name, scope.auto_schema, scope.auto_store, scope.auto_fields, element.find(\"div[class='real-time-graph']\").width() / 4, function (graph_data, worker, interval) {\n                    // update graph\n                    var deviceConfig = scope.auto_metadata.data.groups[1];\n                    var collections = deviceConfig.collections;\n                    var labels = [];\n                    var series = {};\n                    var colors = [];\n                    var allLines = [];\n                    //0 for y  1 for y2\n                    var yRanges = [{\n                        min: null,\n                        max: null\n                    }, {\n                        min: null,\n                        max: null\n                    }];\n                    angular$1.forEach(collections, function (collection) {\n                        if (collection.name == scope.auto_store) {\n                            angular$1.forEach(graph_data.data, function (line) {\n                                allLines.push([new Date(line.timestamp)]);\n                            });\n\n                            var showY2axis = false;\n                            angular$1.forEach(collection.rows, function (row) {\n                                labels.push(row.label);\n                                colors.push(row.color);\n\n\n                                if (row.yaxis == 0) {\n                                    series[row.label] = {\n                                        'axis': 'y1'\n                                    };\n                                } else {\n                                    series[row.label] = {\n                                        'axis': 'y2'\n                                    };\n                                    showY2axis = true;\n                                }\n                                var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                                var filterF = null; // this is a function\n                                if (row.filter) {\n                                    filterF = row.filter;\n                                }\n                                // add value\n                                var counter = 0;\n                                angular$1.forEach(allLines, function (realLine) {\n                                    try {\n                                        var value = f(graph_data.data[counter]);\n                                        if ((filterF && filterF(falue)) || !filterF) {\n                                            realLine.push(value);\n                                            if (row.yaxis == 0) {\n                                                if (yRanges[0].min == null) {\n                                                    yRanges[0].min = value;\n                                                }\n                                                if (yRanges[0].max == null) {\n                                                    yRanges[0].max = value;\n                                                }\n                                                if (yRanges[0].min > value) {\n                                                    yRanges[0].min = value;\n                                                }\n                                                if (yRanges[0].max < value) {\n                                                    yRanges[0].max = value;\n                                                }\n                                            } else {\n                                                if (yRanges[1].min == null) {\n                                                    yRanges[1].min = value;\n                                                }\n                                                if (yRanges[1].max == null) {\n                                                    yRanges[1].max = value;\n                                                }\n                                                if (yRanges[1].min > value) {\n                                                    yRanges[1].min = value;\n                                                }\n                                                if (yRanges[1].max < value) {\n                                                    yRanges[1].max = value;\n                                                }\n                                            }\n                                        } else {\n                                            realLine.push(null);\n                                        }\n\n\n                                    } catch (ex) {\n                                        realLine.push(null);\n                                    }\n                                    counter++;\n                                });\n                            });\n\n                            angular$1.forEach(yRanges, function (yrange) {\n                                if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                    yrange.min = yrange.min - (yrange.min) * 0.10;\n                                    yrange.max = yrange.max + (yrange.min) * 0.10;\n                                } else {\n                                    yrange.min = yrange.min - (yrange.max - yrange.min) * 0.10;\n                                    yrange.max = yrange.max + (yrange.max - yrange.min) * 0.10;\n                                }\n                            });\n\n                            var newLines = [];\n                            if (!showY2axis) {\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function (line) {\n                                    line.push(null);\n                                });\n                                // update graph\n                                scope.realTimeGraph.updateOptions({\n                                    file: newLines,\n                                    axes: {\n                                        y: {\n                                            valueRange: [yRanges[0].min, yRanges[0].max]\n                                        },\n                                        y2: {\n                                            valueRange: [yRanges[1].min, yRanges[1].max]\n                                        }\n                                    }\n                                });\n                            } else {\n                                // update graph\n                                scope.realTimeGraph.updateOptions({\n                                    file: allLines,\n                                    axes: {\n                                        y: {\n                                            valueRange: [yRanges[0].min, yRanges[0].max]\n                                        },\n                                        y2: {\n                                            valueRange: [yRanges[1].min, yRanges[1].max]\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                    if (worker) {\n                        timer_auto = worker;\n                    }\n                    //\n                    var perInterval = interval / 100;\n                    var counter = 0;\n\n                    if (process_bar_timer) {\n                        _$interval.cancel(process_bar_timer);\n                        counter = 0;\n                    }\n                    process_bar_timer = _$interval(function () {\n                        scope.completionPercent = counter;\n                        counter++;\n                    }, perInterval, 100);\n                });\n            });\n            scope.currentChartOptions = {};\n            scope.showRealTimeGraph = function () {\n                element.find(\"#real_time_graph_\" + attrs.id).modal();\n            };\n            if (attrs.hasOwnProperty(\"shown\")) {\n                var basicInfo = scope.basicInfo;\n                if (basicInfo && basicInfo.range_show) {\n                    scope.rangeSelectorBar = new Dygraph(element.find(\"div[class='range-selector-bar']\")[0], sampleData.data, {\n                        xAxisHeight: 0,\n                        axes: {\n                            x: {\n                                drawAxis: false\n                            }\n                        },\n                        showRangeSelector: true,\n                        rangeSelectorHeight: 30\n                    });\n                    scope.chartDateWindow = scope.rangeSelectorBar.xAxisRange();\n                }\n                var status = false;\n                // add mouse up event to range select\n                // element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mouseup', function (event) {\n                //     status = false;\n                //     timeOut(function () {\n                //         var finalDateRagne = scope.currentChart.xAxisRange();\n                //         scope.chartDateTime = {\n                //             begin: finalDateRagne[0],\n                //             end: finalDateRagne[1]\n                //         };\n                //     });\n                // });\n                scope.$on('mouseUpMessage', function ($scope, e) {\n                    if (\"mouseup\" === e.type && status) {\n                        status = false;\n                        timeOut(function () {\n                            var finalDateRange = scope.currentChart.xAxisRange();\n                            scope.chartDateTime = {\n                                begin: finalDateRange[0],\n                                end: finalDateRange[1]\n                            };\n                        });\n                    }\n                });\n                scope.$on('parentScatterViewChangedEvent', function (event, params) {\n                    angular$1.forEach(params.children, function (item) {\n                        if (item == attrs.id) {\n                            scope.currentView = params.view;\n                        }\n                    });\n                });\n                scope.$on('bindFatherGraphEvent', function (event, data) {\n                    angular$1.forEach(data.children, function (child) {\n                        if (child == attrs.id) {\n                            scope.currentChart[\"id\"] = attrs.id;\n                            Dygraph.synchronize([scope.currentChart].concat(data.parent), {\n                                zoom: true,\n                                selection: false,\n                                range: false\n                            });\n                            scope.currentChart.updateOptions({\n                                drawCallback: function (g, isInit) {\n                                    // console.info(\"refersh running!\" + \" is  Init?\"+ isInit);\n                                    scope.refersh(g, isInit, true);\n                                }\n                            });\n                        }\n                    });\n                });\n                element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousemove', function (event) {\n                    if (status) {\n                        if (scope.memoryVisibility && scope.memoryVisibility.length == 0 && scope.hp && scope.hp == true) {\n                            scope.memoryVisibility = scope.currentChart.getOption(\"visibility\");\n                            var _tempVi = [];\n                            scope.currentChart.getOption(\"visibility\").forEach(function (_v, _index) {\n                                _tempVi[_index] = false;\n                            });\n                            scope.currentChart.updateOptions({\n                                \"visibility\": _tempVi\n                            });\n                        }\n                        timeOut(function () {\n                            scope.chartDateWindow = scope.currentChart.xAxisRange();\n                        });\n                    }\n                });\n                element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousedown', function (event) {\n                    status = true;\n                    window.addEventListener(\"mouseup\", (e) => {\n                        status = false;\n                        timeOut(function () {\n                            var finalDateRagne = scope.currentChart.xAxisRange();\n                            scope.chartDateTime = {\n                                begin: finalDateRagne[0],\n                                end: finalDateRagne[1]\n                            };\n                        });\n                    }, {\n                        once: true\n                    });\n                });\n                //bind chart\n                if (basicInfo && basicInfo.childrenChart.length > 0) {\n                    var param = {\n                        'graphs': [scope.currentChart],\n                        children: basicInfo.childrenChart\n                    };\n                    if (scope.rangeSelectorBar) {\n                        param.graphs.push(scope.rangeSelectorBar);\n                    }\n                    scope.$emit('bindChildChartEvent', param);\n                }\n            }\n        }, 0);\n    }\n\n    //controller: ['$scope', '$element', '$window', '$interval', '$timeout', '$filter', '$location', function ($scope, $element, $window, $interval, $timeout, $filter, $location) {\n    controller($scope, $element, $window, $interval, $timeout, $filter, $location, dataService, $rootScope, $stateParams, graphDataService, $compile, $q) {\n\n        var darkenColor = function (colorStr) {\n            // Defined in dygraph-utils.js\n            var color = Dygraph.toRGB_(colorStr);\n            color.r = Math.floor((255 + color.r) / 2);\n            color.g = Math.floor((255 + color.g) / 2);\n            color.b = Math.floor((255 + color.b) / 2);\n            return 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n        };\n\n        var barChartPlotter = function (e) {\n            var ctx = e.drawingContext;\n            var points = e.points;\n            var y_bottom = e.dygraph.toDomYCoord(0);\n\n            ctx.fillStyle = darkenColor(e.color);\n\n            // Find the minimum separation between x-values.\n            // This determines the bar width.\n            var min_sep = Infinity;\n            for (var i = 1; i < points.length; i++) {\n                var sep = points[i].canvasx - points[i - 1].canvasx;\n                if (sep < min_sep) min_sep = sep;\n            }\n            var bar_width = Math.floor(2.0 / 3 * min_sep);\n\n            // Do the actual plotting.\n            for (var i = 0; i < points.length; i++) {\n                var p = points[i];\n                var center_x = p.canvasx;\n\n                ctx.fillRect(center_x - bar_width / 2, p.canvasy,\n                    bar_width, y_bottom - p.canvasy);\n\n                ctx.strokeRect(center_x - bar_width / 2, p.canvasy,\n                    bar_width, y_bottom - p.canvasy);\n            }\n        };\n\n        var dotsPlotter = function (e) {\n            var g = e.dygraph;\n            var setName = e.setName;\n            var drawPointCallback = g.getOption(\"drawPointCallback\", setName) ||\n                Dygraph.Circles.DEFAULT;\n            var strokePattern = g.getOption(\"strokePattern\", setName);\n            var pointSize = g.getNumericOption(\"pointSize\", setName);\n            var setName = e.setName;\n\n            var points = e.points;\n            var setName = e.setName;\n            var iter = Dygraph.createIterator(points, 0, points.length,\n              DygraphCanvasRenderer._getIteratorPredicate(\n                g.getBooleanOption(\"connectSeparatedPoints\", setName)));\n\n\n            var stroking = strokePattern && (strokePattern.length >= 2);\n            var ctx = e.drawingContext;\n            ctx.save();\n            if (stroking) {\n                ctx.installPattern(strokePattern);\n            }\n\n            // get poinsts\n\n            var arr = iter.array_;\n            var limit = iter.end_;\n            var predicate = iter.predicate_;\n            var pointsOnLine = [];\n\n            var point = null;\n            for (var i = iter.start_; i < limit; i++) {\n                point = arr[i];\n                if (predicate) {\n                  while (i < limit && !predicate(arr, i)) {\n                    i++;\n                  }\n                  if (i == limit) break;\n                  point = arr[i];\n                }\n                pointsOnLine.push([point.canvasx, point.canvasy, point.idx]);\n            }\n\n            for (var idx = 0; idx < pointsOnLine.length; idx++) {\n                var cb = pointsOnLine[idx];\n                ctx.save();\n                drawPointCallback.call(e.dygraph,\n                    e.dygraph, e.setName, ctx, cb[0], cb[1], e.color, pointSize, cb[2]);\n                ctx.restore();\n            }\n            if (stroking) {\n                ctx.uninstallPattern();\n            }\n            ctx.restore();\n        };\n\n\n        var stackedBarPlotter = function (e) {\n            //\n            var _seriesIndex = e.seriesIndex;\n            var ctx = e.drawingContext;\n            var g = e.dygraph;\n            var ctx = e.drawingContext;\n            var sets = e.allSeriesPoints;\n            var setName = e.setName;\n            var y_bottom = e.dygraph.toDomYCoord(0);\n            var points = e.points;\n            var barDefine = [];\n            var _series = g.attributes_.series_;\n            var currentBarIndex = -1;\n            var currenBarDef = null;\n            var currentGroupIndex = -1;\n            angular$1.forEach(_series, function (value, key) {\n                // key is lable\n                if (value && value.options && value.options.group) {\n                    var barDef = null;\n                    barDefine.forEach(function (_def, _index) {\n                        if (_def.name == value.options.group) {\n                            barDef = _def;\n                            if (key === setName) {\n                                currentBarIndex = _index;\n                            }\n                        }\n                    });\n\n                    if (barDef) {\n                        barDef.members.push(key);\n                        if (key === setName) {\n                            currentGroupIndex = barDef.members.length - 1;\n                        }\n                    } else {\n                        barDef = {\n                            \"name\": value.options.group,\n                            \"members\": [key]\n                        };\n                        barDefine.push(barDef);\n                        if (key === setName) {\n                            currentBarIndex = barDefine.length - 1;\n                            currentGroupIndex = 0;\n                        }\n                    }\n\n                    if (key === setName) {\n                        currenBarDef = barDef;\n                    }\n                }\n\n            });\n\n\n\n\n            var min_sep = Infinity;\n            for (var j = 0; j < sets.length; j++) {\n                var points = sets[j];\n                for (var i = 1; i < points.length; i++) {\n                    var sep = points[i].canvasx - points[i - 1].canvasx;\n                    if (sep < min_sep) min_sep = sep;\n                }\n            }\n            var full_bar_width = Math.floor(2.0 / 3 * min_sep);\n            //draw\n            var points = e.points;\n            for (var i = 0; i < points.length; i++) {\n                var p = points[i];\n                var center_x = p.canvasx;\n                var partentY = 0;\n                // find all parents series point\n                currenBarDef.members.forEach(function (_member, _index) {\n                    if (_index < currentGroupIndex) {\n                        partentY += (y_bottom - sets[_series[_member].idx][i].canvasy);\n                    }\n                });\n\n                ctx.lineWidth = 0.5;\n                ctx.fillStyle = darkenColor(g.getColors()[_seriesIndex]);\n                ctx.strokeStyle = g.getColors()[_seriesIndex];\n\n\n                // xleft\n                var x_left = (center_x - (full_bar_width / 2)) + ((full_bar_width / barDefine.length) * currentBarIndex);\n\n                if (p.yval != 0) {\n                    ctx.fillRect(x_left, p.canvasy - partentY,\n                        ((full_bar_width / barDefine.length)), (y_bottom - p.canvasy));\n\n                    ctx.strokeRect(x_left, p.canvasy - partentY,\n                        ((full_bar_width / barDefine.length)), (y_bottom - p.canvasy));\n                }\n\n                ctx.lineWidth = 1;\n\n            }\n        };\n\n\n        var multiColumnBarPlotter = function (e) {\n            // We need to handle all the series simultaneously.\n            if (e.seriesIndex !== 0) return;\n\n            var g = e.dygraph;\n            var ctx = e.drawingContext;\n            var sets = e.allSeriesPoints;\n            var y_bottom = e.dygraph.toDomYCoord(0);\n\n            // Find the minimum separation between x-values.\n            // This determines the bar width.\n            var min_sep = Infinity;\n            for (var j = 0; j < sets.length; j++) {\n                var points = sets[j];\n                for (var i = 1; i < points.length; i++) {\n                    var sep = points[i].canvasx - points[i - 1].canvasx;\n                    if (sep < min_sep) min_sep = sep;\n                }\n            }\n            var bar_width = Math.floor(2.0 / 3 * min_sep);\n\n            var fillColors = [];\n            var strokeColors = g.getColors();\n            for (var i = 0; i < strokeColors.length; i++) {\n                fillColors.push(darkenColor(strokeColors[i]));\n            }\n\n            for (var j = 0; j < sets.length; j++) {\n                ctx.fillStyle = fillColors[j];\n                ctx.strokeStyle = strokeColors[j];\n                for (var i = 0; i < sets[j].length; i++) {\n                    var p = sets[j][i];\n                    var center_x = p.canvasx;\n                    var x_left = center_x - (bar_width / 2) * (1 - j / (sets.length - 1));\n\n                    ctx.fillRect(x_left, p.canvasy,\n                        bar_width / sets.length, y_bottom - p.canvasy);\n\n                    ctx.strokeRect(x_left, p.canvasy,\n                        bar_width / sets.length, y_bottom - p.canvasy);\n                }\n            }\n        };\n\n\n\n\n\n\n\n\n\n        var element_id = $element.attr(\"id\");\n        $scope.elementId = element_id;\n        $scope.maxVisibilitySize = 0;\n\n        $scope['defaultColors'] = dataService.defaultColors();\n        var metadata = null;\n        var widgetData = null;\n        $scope.emptyDataShow = false;\n        // attributes----------------------\n        $scope.applicationName = $rootScope.applicationName;\n        $scope.alertMessage;\n        $scope.showY2Btns = false;\n        $scope.legendText = null;\n        $scope.legendText_device = null;\n        $scope.legendText_datetime = null;\n        $scope.legendText_column = null;\n        $scope.legendText_value = null;\n        $scope.legendColor = null;\n        $scope.autoupdate = false;\n        $scope.auto_device_name = \"\";\n        $scope.auto_schema = \"\";\n        $scope.auto_store = \"\";\n        $scope.auto_fields = [];\n        $scope.hp = false;\n        $scope.seriesList = [];\n\n        $scope.memoryVisibility = [];\n\n        $scope.saveGraphAsPng = function () {\n            var lnk = document.createElement('a'),\n                e;\n            lnk.download = \"fgp_graph.png\";\n            lnk.href = Dygraph.Export.asPNGStr($scope.currentChart);\n            if (document.createEvent) {\n                e = document.createEvent(\"MouseEvents\");\n                e.initMouseEvent(\"click\", true, true, window,\n                    0, 0, 0, 0, 0, false, false, false,\n                    false, 0, null);\n\n                lnk.dispatchEvent(e);\n            } else if (lnk.fireEvent) {\n                lnk.fireEvent(\"onclick\");\n            }\n        };\n\n        $scope.graphDatadownload = function () {\n\n            var fileName = \"graphdata.csv\";\n            var mimeType = \"text/csv;encoding:utf-8\";\n\n            var csvContent = '';\n            var datetimeWindow = $scope.currentChart.dateWindow_;\n            // put the header in the first row\n            $scope.downloadData.labels.forEach(function (title, __index) {\n                csvContent += __index < $scope.downloadData.labels.length - 1 ? title + \",\" : title;\n            });\n            csvContent += '\\n';\n            // should call back-end by paging\n            var tableData = $scope.downloadData.data;\n            tableData.forEach(function (infoArray, index) {\n                var _tempDate = infoArray[0];\n                if (_tempDate instanceof Date) {\n                    _tempDate = _tempDate.getTime();\n                }\n                if (_tempDate >= datetimeWindow[0] && _tempDate <= datetimeWindow[1]) {\n                    //dataString\n                    var dataString = \"\";\n                    $scope.downloadData.labels.forEach(function (item, _index) {\n                        dataString += _index < $scope.downloadData.labels.length - 1 ? infoArray[_index] + \",\" : infoArray[_index];\n                    });\n                    csvContent += index < tableData.length ? dataString + '\\n' : dataString;\n                }\n            });\n\n            var a = document.createElement('a');\n            mimeType = mimeType || 'application/octet-stream';\n\n            if (navigator.msSaveBlob) { // IE10\n                navigator.msSaveBlob(new Blob([csvContent], {\n                    type: mimeType\n                }), fileName);\n            } else if (URL && 'download' in a) { //html5 A[download]\n                a.href = URL.createObjectURL(new Blob([csvContent], {\n                    type: mimeType\n                }));\n                a.setAttribute('download', fileName);\n                document.body.appendChild(a);\n                a.click();\n                document.body.removeChild(a);\n            } else {\n                $location.href = 'data:application/octet-stream,' + encodeURIComponent(csvContent); // only this mime type is supported\n            }\n        };\n\n        // default data-time intervals\n        $scope.defaultTimeIntervals = [{\n                name: \"10 seconds\",\n                interval: 10000\n            },\n            {\n                name: \"30 seconds\",\n                interval: 30000,\n                scales: [10000]\n            },\n            {\n                name: \"1 minutes\",\n                interval: 60000,\n                scales: [10000, 30000]\n            },\n            {\n                name: \"5 minutes\",\n                interval: 300000,\n                scales: [30000, 60000]\n            },\n            {\n                name: \"30 minutes\",\n                interval: 1800000,\n                scales: [60000, 300000]\n            }, {\n                name: \"1 hour\",\n                interval: 3600000,\n                scales: [60000, 300000, 1800000]\n            }, {\n                name: \"1 day\",\n                interval: 86400000,\n                scales: [300000, 1800000, 3600000]\n            }, {\n                name: \"1 week\",\n                interval: 604800017,\n                scales: [3600000, 86400000]\n            }, {\n                name: \"1 month\",\n                interval: 2629800000,\n                scales: [86400000, 604800017]\n            }, {\n                name: \"1 year\",\n                interval: 31557600000,\n                scales: [2629800000]\n            }\n        ];\n        $scope.dateTimeIntervals = [].concat($scope.defaultTimeIntervals);\n        $scope.locked_interval = null;\n\n        $scope.chartDateWindow = [];\n        $scope.button_handlers = [];\n        var initDeviceInteractions = function () {\n            if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.buttons && $scope.interactions.graphs.buttons.device) {\n                if ($scope.interactions.graphs.buttons.device.dataFilter) {\n                    var buttons = $scope.interactions.graphs.buttons.device.dataFilter;\n                    angular$1.forEach(buttons, function (button) {\n                        var buttons_html = '';\n                        // create an event handler\n                        var _func = '_' + (Math.random().toString(36).slice(2, 13));\n                        $scope.button_handlers[_func] = function () {\n                            // set button status\n                            // the custom func returns color.\n                            var _func = button._func;\n                            var v = [];\n\n                            var graphSeries = $scope.currentChart.getLabels();\n                            graphSeries.forEach(function (_series, _index) {\n                                if (_func(_series)) {\n                                    v[_index] = true;\n                                } else {\n                                    v[_index] = false;\n                                }\n                            });\n\n                            // update visibility once\n                            $timeout(function () {\n                                var oldVisibility = $scope.currentChart.getOption('visibility');\n                                // reset by new Visibility\n                                v.forEach(function (item, _index) {\n                                    oldVisibility[_index] = item;\n                                });\n                                $scope.currentChart.updateOptions({\n                                    'visibility': oldVisibility\n                                });\n                            });\n\n                        };\n                        // create click event handler for this button and put it into $scope\n                        buttons_html += '<span class=\"btn btn-xs btn-info badge\" style=\"float:right;margin-right:10px;\" ng-click=\"button_handlers.' + _func + '();\">' + button.label + '</span>';\n                        // compile the html and add it into toolbar\n                        $element.find(\"#buttons_area\").append($compile(buttons_html)($scope));\n                    });\n                }\n            }\n        };\n\n\n        // lock interval\n        $scope.lock = function (interval) {\n            if ($scope.locked_interval) {\n                if ($scope.locked_interval == interval) {\n                    $scope.locked_interval = null; // unlocked\n                    if (!$scope.dateTimeIntervals) {\n                        $scope.dateTimeIntervals = [].concat($scope.defaultTimeIntervals);\n                    }\n                    // change default choosed interval\n                    $scope.currentIntervalName = $scope.dateTimeIntervals[0].name;\n                    $scope.currentIntervalChoosed = $scope.dateTimeIntervals[0];\n                } else {\n                    $scope.locked_interval = interval; // locked\n                    // change color\n                    // change dropdown list\n                    $scope.defaultTimeIntervals.forEach(function (item) {\n                        //\n                        if (item[\"scales\"] && item[\"scales\"].length > 0) {\n                            item[\"scales\"].forEach(function (_item) {\n                                if (_item == interval.interval) {\n                                    //\n                                    $scope.dateTimeIntervals.push(item);\n                                }\n                            });\n                        }\n                    });\n                    $scope.currentIntervalName = $scope.dateTimeIntervals[0].name;\n                    $scope.currentIntervalChoosed = $scope.dateTimeIntervals[0];\n                }\n            } else {\n                $scope.locked_interval = interval;\n                // change color\n\n                // change dropdown list\n                // check the user default config first\n                if ($scope.dateTimeIntervals) {\n\n                } else {\n                    $scope.defaultTimeIntervals.forEach(function (item) {\n                        //\n                        if (item[\"scales\"] && item[\"scales\"].length > 0) {\n                            item[\"scales\"].forEach(function (_item) {\n                                if (_item == interval.interval) {\n                                    //\n                                    $scope.dateTimeIntervals.push(item);\n                                }\n                            });\n                        }\n                    });\n                }\n                $scope.currentIntervalName = $scope.dateTimeIntervals[0].name;\n                $scope.currentIntervalChoosed = $scope.dateTimeIntervals[0];\n            }\n            // change\n            $scope.changeInterval($scope.currentIntervalChoosed);\n        };\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id,\n            callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                    if (widgetData.data.metadata.data.basic.ranges) {\n                        if (widgetData.data.metadata.data.basic.hasOwnProperty(\"ranges\")) {\n                            $scope.dateTimeIntervals = widgetData.data.metadata.data.basic.ranges;\n                            angular$1.forEach($scope.dateTimeIntervals, function (range) {\n                                range[\"interval\"] = range.value;\n                                if (range.checked == true) {\n                                    $scope.currentIntervalChoosed = range;\n                                }\n                            });\n                        }\n                    } else {\n                        $scope.currentIntervalChoosed = $scope.dateTimeIntervals[1];\n                    }\n                }\n            }\n        });\n        $scope.changeInterval = function (interval) {\n            var range = $scope.currentChart[\"xAxisZoomRange\"];\n            if (range[0] instanceof Date) {\n                range[0] = range[0].getTime();\n            }\n            if (range[1] instanceof Date) {\n                range[1] = range[1].getTime();\n            }\n            if (interval && ((range[1] - interval.interval) >= range[0])) {\n                $scope.rangeConfig.dateWindow = [new Date(range[1] - interval.interval), range[1]];\n                $scope.currentChart.updateOptions($scope.rangeConfig);\n                $scope.currentIntervalChoosed = interval;\n            }\n        };\n        if (widgetData.data && widgetData.from == \"show\") {\n            $scope.loadingShow = false;\n            $scope.intevals = {\n                device: []\n            };\n            // update chart\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if (widgetData.data.metadata.css) {\n                $scope.css = widgetData.data.metadata.css;\n            }\n            // get begin_path and end_path from interaction\n            var begin_path = null;\n            var end_path = null;\n            //\n            if($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.initDatetimeWindow){\n                begin_path = $scope.interactions.graphs.initDatetimeWindow[0];\n                end_path = $scope.interactions.graphs.initDatetimeWindow[1];\n                // watch on this var and update graphs when the var changed\n                $scope.$watchCollection('interactions.graphs.initDatetimeWindow', function(newVal, oldVal){\n                    //\n                    if(newVal && newVal.length == 2 && $scope.rangeConfig && $scope.currentChart){\n                        // update range bar\n                        $scope.rangeConfig.dateWindow = [new Date(newVal[0]), new Date(newVal[1])];\n                        $scope.currentChart.updateOptions($scope.rangeConfig);\n                    }\n\n                });\n            }\n\n            var init_flag = false;\n            //fix interval\n            $scope.fixInterval = false;\n            var noneFixed = [];\n            $scope.fixGraphWithGap = function () {\n                if ($scope.currentChart && $scope.fixInterval) {\n                    var currentInterval = -1;\n                    angular$1.forEach($scope.intevals.device, function (item) {\n                        if (item.name === $scope.currentIntervalName) {\n                            currentInterval = item.interval;\n                        }\n                    });\n                    if (noneFixed && noneFixed.length > 0) {\n                        //fix\n                        //get first one\n                        var fixed = [noneFixed[0]];\n                        var tempDate = fixed[0][0].getTime() + currentInterval;\n                        while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                            var flag = false;\n                            // add new\n                            for (var i = 0; i < noneFixed.length; i++) {\n                                if (noneFixed[i][0].getTime() == tempDate) {\n                                    flag = true;\n                                    fixed.push(noneFixed[i]);\n                                    break;\n                                }\n                            }\n                            if (!flag) {\n                                var obj = [new Date(tempDate)];\n                                // add NaN\n                                for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                    obj.push(null);\n                                }\n                                fixed.push(obj);\n                            }\n                            tempDate += currentInterval;\n                        }\n                        $scope.currentChart.updateOptions({\n                            file: fixed\n                        });\n                    }\n                } else if ($scope.currentChart && !$scope.fixInterval) {\n                    noneFixed = [];\n                    angular$1.copy($scope.currentChart.file_, noneFixed);\n                    $scope.currentChart.updateOptions({\n                        file: noneFixed\n                    });\n                }\n            };\n            $scope.showOrHideDevice = function (device) {\n                angular$1.forEach($scope.childrenDevices, function (item, index) {\n                    if (item.name === device.name) {\n                        var graph = $scope.currentChart;\n                        if (device.show == true) {\n                            graph.setVisibility(index, false);\n                            device.show = false;\n                        } else {\n                            graph.setVisibility(index, true);\n                            device.show = true;\n                        }\n\n                    }\n                });\n            };\n\n            $scope.showOrHideSeries = function (series) {\n                angular$1.forEach($scope.seriesList, function (item, index) {\n                    if (item.label === series.label) {\n                        var graph = $scope.currentChart;\n                        if (series.show == true) {\n                            graph.setVisibility(index, false);\n                            series.show = false;\n                        } else {\n                            graph.setVisibility(index, true);\n                            series.show = true;\n                        }\n\n                    }\n                });\n            };\n\n            $scope.fixGraphWithGap_click = function () {\n                if ($scope.currentChart && !$scope.fixInterval) {\n                    noneFixed = [];\n                    angular$1.copy($scope.currentChart.file_, noneFixed);\n                    var currentInterval = -1;\n                    angular$1.forEach($scope.intevals.device, function (item) {\n                        if (item.name === $scope.currentIntervalName) {\n                            currentInterval = item.interval;\n                        }\n                    });\n                    if (noneFixed && noneFixed.length > 0) {\n                        //fix\n                        //get first one\n                        var fixed = [noneFixed[0]];\n                        var tempDate = fixed[0][0].getTime() + currentInterval;\n                        while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                            var flag = false;\n                            // add new\n                            for (var i = 0; i < noneFixed.length; i++) {\n                                if (noneFixed[i][0].getTime() == tempDate) {\n                                    flag = true;\n                                    fixed.push(noneFixed[i]);\n                                    break;\n                                }\n                            }\n                            if (!flag) {\n                                var obj = [new Date(tempDate)];\n                                // add NaN\n                                for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                    obj.push(null);\n                                }\n                                fixed.push(obj);\n                            }\n                            tempDate += currentInterval;\n                        }\n                        $scope.currentChart.updateOptions({\n                            file: fixed\n                        });\n                    }\n                } else if ($scope.currentChart && $scope.fixInterval) {\n                    $scope.currentChart.updateOptions({\n                        file: noneFixed\n                    });\n                }\n            };\n            metadata = widgetData.data.metadata;\n            $scope.basicInfo = metadata.data.basic;\n            $scope.currentView = -1; // -1 is device view and 1 is scatter view\n            $scope.parent_container = widgetData.data.parent;\n            $scope.data_from = \"application\";\n            $scope.checkY2Btns = function () {\n                return $scope.basicInfo.zoom === true && $scope.showY2Btns === true;\n            };\n\n            $scope.selectedDevices = [];\n\n            $scope.singleClickEventHandler = function () {\n                if (!$scope.selectControlStatus) {\n                    if ($scope.highlights && $scope.highlights.onExternal) {\n                        $scope.highlights.onExternal = [];\n                        // add only one point\n                        if ($scope.currentHighLightChildDevice) {\n                            $scope.highlights.onExternal = [];\n                            var labels = $scope.currentChart.getLabels();\n                            var _tempData = [];\n                            var _color = null;\n                            labels.forEach(function (_l, _index) {\n                                if (_l == $scope.currentHighLightChildDevice) {\n                                    // do not send color for click event.\n                                    //_color = colors[_index];\n                                    $scope.currentChart.file_.forEach(function (_row) {\n                                        var tempObj = {};\n                                        tempObj[_row[0].getTime()] = _row[_index];\n                                        _tempData.push(tempObj);\n                                    });\n                                }\n                            });\n                            $scope.highlights.onExternal.push({\n                                name: $scope.currentHighLightChildDevice.substring(0, 16),\n                                id: $scope.currentHighLightChildDevice.substring(0, 16)\n                            });\n                        }\n                    }\n                }\n            };\n\n\n            if ($scope.highlights && $scope.highlights.onGraphHover) {\n                var highlight_timer_ = null;\n                var lines_timer_ = [];\n                var currentHoverSelection = [];\n                var messageTimer = null;\n                var replay = null;\n                $scope.$watchCollection(\"highlights.onGraphHover\", function (newValue, oldValue) {\n                    if (newValue) {\n                        if (highlight_timer_) {\n                            $timeout.cancel(highlight_timer_);\n                        }\n                        // cancel all the old timers\n                        if (lines_timer_.length > 0) {\n                            lines_timer_.forEach(function (_timer) {\n                                $timeout.cancel(_timer);\n                            });\n                        }\n\n                        if (replay) {\n                            $interval.cancel(replay);\n                        }\n\n                        if (newValue.length == 0 && $scope.currentChart) {\n                            $scope.currentChart.clearSelection();\n                        } else {\n                            highlight_timer_ = $timeout(function () {\n                                if ($scope.currentView == 1 && newValue && newValue.length > 0) {\n                                    var highlightDevice = [];\n                                    var ghostDevices = [];\n                                    angular$1.forEach(newValue, function (deviceName) {\n                                        var exist = false;\n                                        $scope.childrenDevices.forEach((_child, _index) => {\n                                            if (_child.name == deviceName) {\n                                                highlightDevice.push(deviceName);\n                                                exist = true;\n                                            }\n                                        });\n                                        if (!exist) {\n                                            if (ghostDevices.indexOf(deviceName.split(\"_\")[0]) == -1) {\n                                                ghostDevices.push(deviceName.split(\"_\")[0]);\n                                            }\n                                        }\n                                    });\n\n                                    if (lines_timer_.length > 0) {\n                                        lines_timer_.forEach(function (_timer) {\n                                            $timeout.cancel(_timer);\n                                        });\n                                    }\n\n                                    if (highlightDevice.length == 0) {\n                                        // show message \"not found\"\n\n                                        if (ghostDevices.length > 1) {\n                                            $scope.alertMessage = \"devices [\" + ghostDevices.join(\",\") + \"] not found!\";\n                                        } else {\n                                            $scope.alertMessage = \"device [\" + ghostDevices.join(\",\") + \"] not found!\";\n                                        }\n                                        if (messageTimer) {\n                                            $timeout.cancel(messageTimer);\n                                        }\n                                        messageTimer = $timeout(function () {\n                                            $scope.alertMessage = \"\";\n                                        }, 5000);\n                                    }\n\n                                    // highlight lines one by one in 500\n                                    highlightDevice.forEach(function (_deviceName) {\n                                        $timeout(function () {\n                                            $scope.currentChart.setSelection(false, _deviceName);\n                                        }, 0);\n                                    });\n\n\n                                    // replay\n                                    replay = $interval(function () {\n                                        if (lines_timer_.length > 0) {\n                                            lines_timer_.forEach(function (_timer) {\n                                                $timeout.cancel(_timer);\n                                            });\n                                        }\n                                        // highlight lines one by one in 500\n                                        var timerInterval_ = 500;\n                                        highlightDevice.forEach(function (_deviceName) {\n                                            $timeout(function () {\n                                                $scope.currentChart.setSelection(false, _deviceName);\n                                            }, timerInterval_);\n                                            timerInterval_ += 500;\n                                        });\n                                    }, 2000);\n\n                                }\n                            });\n                        }\n                    } else {\n                        if (replay) {\n                            $interval.cancel(replay);\n                        }\n                    }\n                });\n            }\n\n            //\n            if ($scope.highlights && $scope.highlights.onGraph) {\n                var highlight_timer_ = null;\n                $scope.$watchCollection(\"highlights.onGraph\", function (newValue, oldValue) {\n                    if (newValue) {\n                        if (highlight_timer_) {\n                            $timeout.cancel(highlight_timer_);\n                        }\n                        highlight_timer_ = $timeout(function () {\n                            if ($scope.currentView == 1 && newValue && newValue.length > 0) {\n                                var highlightDeviceIndex = [];\n                                // uncheck\n                                $scope.childrenDevices.forEach((_child, _index) => {\n                                    _child.show = false;\n                                });\n                                angular$1.forEach(newValue, function (deviceName) {\n                                    $scope.childrenDevices.forEach((_child, _index) => {\n                                        if (_child.name == deviceName) {\n                                            highlightDeviceIndex.push(_index);\n                                            _child.show = true;\n                                        }\n                                    });\n                                });\n                                // update graph\n                                var oldVisibility = $scope.currentChart.getOption('visibility');\n                                // reset by new Visibility\n                                oldVisibility.forEach(function (item, _index) {\n                                    if (highlightDeviceIndex.indexOf(_index) != -1) {\n                                        oldVisibility[_index] = true;\n                                    } else {\n                                        oldVisibility[_index] = false;\n                                    }\n                                });\n                                $scope.currentChart.updateOptions({\n                                    'visibility': oldVisibility\n                                });\n                            } else if ($scope.currentView == 1 && newValue && newValue.length == 0) {\n                                $scope.highlights.onGraph = [];\n\n                                if ($scope.childrenDevices) {\n                                    $scope.childrenDevices.forEach((_child, _index) => {\n                                        _child.show = true;\n                                    });\n                                    //show all\n                                    var oldVisibility = $scope.currentChart.getOption('visibility');\n                                    // reset by new Visibility\n                                    oldVisibility.forEach(function (item, _index) {\n                                        oldVisibility[_index] = true;\n                                    });\n                                    $scope.currentChart.updateOptions({\n                                        'visibility': oldVisibility\n                                    });\n                                }\n                            }\n                        }, 1000);\n                    }\n                });\n            }\n\n            $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                // if the parent container sends a device to here, ignore global device.\n                if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                    return;\n                } else if (deviceData.from != \"application\") {\n                    if ($scope.parent_container != \"edit\" + deviceData.from) {\n                        return;\n                    } else {\n                        $scope.data_from = deviceData.from;\n                    }\n                }\n                $scope.auto_schema = metadata.data.source.store;\n                $scope.auto_metadata = metadata;\n                $scope.auto_device_name = deviceData.device.name;\n\n                $scope.$watch('currentView', function (nObj, oObj) {\n                    // change\n                    if (nObj != oObj) {\n                        $scope.resetVisibilityRequest = true;\n                        $scope.currentInitScaleLevelLeftConf = null;\n                        $scope.forceScale = true;\n                        if ($scope.eventsHandler && $scope.eventsHandler.viewChangeListener) {\n                            $scope.eventsHandler.viewChangeListener(nObj);\n                        }\n                        $scope.$emit('graphScatterViewChangeEvent', {\n                            children: $scope.basicInfo.childrenChart,\n                            view: nObj\n                        });\n\n                        // get titles from interactions\n                        $scope.button_handlers = {}; // clean handlers\n                        $element.find(\"#buttons_area\").empty();\n                        if (nObj == -1) {\n                            $scope.autoupdate = true;\n                            $scope.hp = false;\n\n                            var rangeLevel = null;\n                            var otherLevels = [];\n                            angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                if (level.rows.length > 0) {\n                                    if (!rangeLevel) {\n                                        rangeLevel = {\n                                            \"store\": level.name,\n                                            \"interval\": level.interval,\n                                            \"first\": 0,\n                                            \"last\": 0,\n                                            \"range\": true\n                                        };\n                                    } else {\n                                        //\n                                        if (rangeLevel.interval < level.interval) {\n                                            // put the old ragneLevel into otherLevels\n                                            otherLevels.push({\n                                                \"store\": rangeLevel.store + '',\n                                                \"interval\": rangeLevel.interval + 0,\n                                                \"first\": 0,\n                                                \"last\": 0,\n                                                \"range\": false\n                                            });\n                                            // new rangeLevel\n                                            rangeLevel = {\n                                                \"store\": level.name,\n                                                \"interval\": level.interval,\n                                                \"first\": 0,\n                                                \"last\": 0,\n                                                \"range\": true\n                                            };\n\n                                        } else {\n                                            otherLevels.push({\n                                                \"store\": level.name,\n                                                \"interval\": level.interval,\n                                                \"first\": 0,\n                                                \"last\": 0,\n                                                \"range\": false\n                                            });\n                                        }\n                                    }\n                                }\n                            });\n\n                            if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                                if ($scope.deviceTitle) {\n                                    $scope.$emit('changeContainerTitleEvent', {\n                                        \"id\": $scope.parent_id,\n                                        \"title\": $scope.deviceTitle\n                                    });\n                                }\n\n                                // call initDeviceInteractions\n                                initDeviceInteractions();\n\n                                //deviceInitInfo(host, application, deviceName, deviceType, rangeLevel, fields)\n                                dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, deviceData.device.type, rangeLevel.store).then(function (data) {\n                                    var deviceStoreInfo = {};\n\n                                    deviceStoreInfo[\"trees\"] = [{\n                                        \"first\": {\n                                            \"timestamp\": data.first.timestamp\n                                        },\n                                        \"range\": true,\n                                        \"store\": rangeLevel.store,\n                                        \"interval\": rangeLevel.interval,\n                                        \"last\": {\n                                            \"timestamp\": data.last.timestamp\n                                        }\n                                    }];\n\n                                    // other level\n                                    otherLevels.forEach(function (_level, _index) {\n                                        deviceStoreInfo[\"trees\"].push({\n                                            \"first\": {\n                                                \"timestamp\": data.first.timestamp\n                                            },\n                                            \"range\": false,\n                                            \"store\": _level.store,\n                                            \"interval\": _level.interval,\n                                            \"last\": {\n                                                \"timestamp\": data.last.timestamp\n                                            }\n                                        });\n                                    });\n                                    initChart(deviceStoreInfo, deviceData.device.name);\n                                }, function (error) {\n                                    console.error(error);\n                                });\n                            }\n                        } else {\n                            $scope.autoupdate = false;\n                            // check interactions configuration $scope.hp\n                            if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.performance == true) {\n                                $scope.hp = true;\n                            }\n                            //get relation config\n                            if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                                return;\n                            } else {\n                                if ($scope.scatterTitle) {\n                                    $scope.$emit('changeContainerTitleEvent', {\n                                        \"id\": $scope.parent_id,\n                                        \"title\": $scope.scatterTitle\n                                    });\n                                }\n                                \n                                // reset btn label\n                                var _resetScatterButton = {\n                                    label : \"Show All\"\n                                };\n                                // add reset button for restore scatter view visibility\n                                var _resetScatterButton_func = '_' + (Math.random().toString(36).slice(2, 13));\n                                // create click event handler for this button and put it into $scope\n                                var buttons_html = '<span class=\"btn btn-xs btn-info badge\" style=\"float:right;margin-right:10px;\" ng-click=\"button_handlers.' + _resetScatterButton_func + '();\">' + _resetScatterButton.label + '</span>';\n                                // compile the html and add it into toolbar\n                                $element.find(\"#buttons_area\").append($compile(buttons_html)($scope));\n\n\n                                $scope.button_handlers[_resetScatterButton_func] = function(){\n                                    $timeout(function () {\n                                        var oldVisibility = $scope.currentChart.getOption('visibility');\n                                        var v = [];\n                                        // reset by new Visibility\n                                        oldVisibility.forEach(function () {\n                                            v.push(true);\n                                        });\n                                        $scope.childrenDevices.forEach(function(_item){\n                                            _item.show = true;\n                                        });\n                                        $scope.currentChart.updateOptions({\n                                            'visibility': v\n                                        });\n                                    });\n                                };\n\n                                if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.buttons && $scope.interactions.graphs.buttons.scatter) {\n                                    // use for filter\n                                    if ($scope.interactions.graphs.buttons.scatter.filters) {\n                                        $scope.filtersCurrent = \"\";\n                                        var buttons = $scope.interactions.graphs.buttons.scatter.filters;\n                                            angular$1.forEach(buttons, function (button) {\n                                                var buttons_html = '';\n                                                // create an event handler\n                                                var _func = '_' + (Math.random().toString(36).slice(2, 13));\n    \n                                                if (!$scope.button_handlers) {\n                                                    $scope.button_handlers = {};\n                                                }\n\n                                                $scope.button_handlers[_func] = function () {\n                                                    $scope.filtersCurrent = button.label;\n                                                    // get all data\n                                                    var v = [];\n                                                    var graphSeries = $scope.currentChart.getLabels();\n                                                    var graphData = $scope.currentChart.file_;\n                                                    graphSeries.forEach(function (_series, _index) {\n                                                        if(_series != \"x\" && _series !=\"span_y2\"){\n                                                            // get data and call func\n                                                            var _tempData = [];\n                                                            graphData.forEach(function(_data){\n                                                                var _tempObj = {\"timestamp\": _data[0], \"data\":  _data[_index]};\n                                                                _tempData.push(_tempObj);\n                                                            });\n                                                            // call filter\n                                                            if(button.func(_series, _tempData)){\n                                                                v.push(true);\n                                                            }else{\n                                                                v.push(false);\n                                                            }\n                                                        }\n                                                    });\n                                                    // update visibility once\n                                                    $timeout(function () {\n                                                        var oldVisibility = $scope.currentChart.getOption('visibility');\n                                                        // reset by new Visibility\n                                                        v.forEach(function (item, _index) {\n                                                            oldVisibility[_index] = item;\n                                                            $scope.childrenDevices[_index][\"show\"] = item;\n                                                        });\n                                                        $scope.currentChart.updateOptions({\n                                                            'visibility': oldVisibility\n                                                        });\n                                                    });\n\n\n                                                };\n\n                                                // create click event handler for this button and put it into $scope btn-info\n                                                buttons_html += '<span class=\"btn btn-xs badge\" ng-class=\"{\\'btn-warning\\' : filtersCurrent == \\'' +button.label+'\\' , \\'btn-info\\' : filtersCurrent != \\''+button.label+'\\'}\" style=\"float:right;margin-right:10px;\" ng-click=\"button_handlers.' + _func + '();\">' + button.label + '</span>';\n                                                // compile the html and add it into toolbar\n                                                $element.find(\"#buttons_area\").append($compile(buttons_html)($scope));\n\n                                            });\n                                    }\n\n\n                                    if ($scope.interactions.graphs.buttons.scatter.extraDataConfig) {\n                                        // create buttons\n                                        $scope.extraDataCurrent = \"\";\n                                        var buttons = $scope.interactions.graphs.buttons.scatter.extraDataConfig;\n                                        angular$1.forEach(buttons, function (button) {\n                                            var buttons_html = '';\n                                            // create an event handler\n                                            var _func = '_' + (Math.random().toString(36).slice(2, 13));\n                                            var _config = button.config;\n\n                                            if (!$scope.button_handlers) {\n                                                $scope.button_handlers = {};\n                                            }\n\n                                            $scope.button_handlers[_func] = function () {\n                                                $scope.extraDataCurrent = button.label;\n                                                var oldVisibility = $scope.currentChart.getOption('visibility');\n                                                var v = [];\n                                                // reset by new Visibility\n                                                oldVisibility.forEach(function () {\n                                                    v.push(true);\n                                                });\n                                                $scope.childrenDevices.forEach(function(_item){\n                                                    _item.show = true;\n                                                });\n                                                $scope.currentChart.updateOptions({\n                                                    'visibility': v\n                                                }, true);\n                                                // change config then refersh scatter view\n                                                $scope.autoupdate = false;\n                                                $scope.forceScale = true;\n                                                // check interactions configuration $scope.hp\n                                                if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.performance == true) {\n                                                    $scope.hp = true;\n                                                }\n                                                //get relation config\n                                                if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                                                    return;\n                                                } else {\n                                                    // send title to parent container\n                                                    $scope.$emit('changeContainerTitleEvent', {\n                                                        \"id\": $scope.parent_id,\n                                                        \"title\": button.title\n                                                    });\n\n                                                    metadata.data.groups[2] = _config;\n                                                    var rangeLevel;\n                                                    var otherLevels = [];\n                                                    var relationConfig = metadata.data.groups[2];\n                                                    if (relationConfig.nameColumn) {\n                                                        $scope.childrenDeviceNameColumn = relationConfig.nameColumn;\n                                                    } else {\n                                                        $scope.childrenDeviceNameColumn = \"name\";\n                                                    }\n                                                    angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                                        if (level.rows.length > 0) {\n                                                            if (!rangeLevel) {\n                                                                //\n                                                                rangeLevel = {\n                                                                    \"store\": level.name,\n                                                                    \"frequency\": level.interval,\n                                                                    \"range\": true\n                                                                };\n                                                            } else if (rangeLevel.frequency < level.interval) {\n                                                                otherLevels.push({\n                                                                    \"store\": rangeLevel.store,\n                                                                    \"frequency\": rangeLevel.frequency,\n                                                                    \"range\": false\n                                                                });\n                                                                rangeLevel = {\n                                                                    \"store\": level.name,\n                                                                    \"frequency\": level.interval,\n                                                                    \"range\": true\n                                                                };\n                                                            } else {\n                                                                otherLevels.push({\n                                                                    \"store\": rangeLevel.store,\n                                                                    \"frequency\": rangeLevel.frequency,\n                                                                    \"range\": false\n                                                                });\n                                                            }\n\n                                                        }\n                                                    });\n                                                    if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                                                        var fields = [];\n                                                        var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n                                                        angular$1.forEach(_config.collections, function (level) {\n                                                            if (level.rows.length > 0 && level.name === rangeLevel) {\n                                                                var lines = level.rows;\n                                                                if (lines) {\n                                                                    angular$1.forEach(lines, function (line) {\n                                                                        if (line.value) {\n                                                                            var columns = (line.value).match(patt);\n                                                                            angular$1.forEach(columns, function (column) {\n                                                                                if (column.startsWith('data.')) {\n                                                                                    fields.push(column.replace('data.', ''));\n                                                                                }\n                                                                            });\n                                                                        }\n                                                                    });\n                                                                }\n                                                            }\n                                                        });\n                                                        $scope.auto_fields = fields;\n                                                        // show children view\n                                                        //host, application, deviceName, relationType, relationDeviceType, extensionType, rangeLevel, otherLevels\n                                                        dataService.childrenExtensionInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, deviceData.device.type, metadata.data.source.relation, metadata.data.source.relation_group, metadata.data.source.relation_group_extension, rangeLevel, otherLevels).then(function (data) {\n                                                            if (data != null && data.length > 0) {\n                                                                data.forEach(function (_item) {\n                                                                    _item[\"trees\"] = [rangeLevel].concat(otherLevels);\n                                                                    _item[\"trees\"].sort(function (a, b) {\n                                                                        return b.frequency - a.frequency;\n                                                                    });\n                                                                });\n                                                                initChildrenChart(data);\n                                                                // interactionHandler(); // do not need to update interactions\n                                                            } else if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.device && $scope.interactions.graphs.device.children) {\n                                                                // no relationship in fgp platform just take it from interactions Configuration  extension_type\n                                                                if ($scope.interactions.graphs.device.children.data) {\n                                                                    var devices_key = $scope.interactions.graphs.device.children.data().then(\n                                                                        function (data) {\n                                                                            $q.all(dataService.devicesExtensionInitInfo($rootScope.host, $rootScope.applicationName, data, metadata.data.source.store, $scope.interactions.graphs.device.children.extension_type)).then(\n                                                                                function (data) {\n                                                                                    data.forEach(function (_item) {\n                                                                                        _item[\"trees\"] = [rangeLevel].concat(otherLevels);\n                                                                                        _item[\"trees\"].sort(function (a, b) {\n                                                                                            return b.frequency - a.frequency;\n                                                                                        });\n                                                                                    });\n                                                                                    initChildrenChart(data);\n                                                                                    interactionHandler();\n                                                                                },\n                                                                                function (error) {\n                                                                                    console.error(error);\n                                                                                }\n                                                                            );\n                                                                        },\n                                                                        function (error) {\n                                                                            return;\n                                                                        }\n                                                                    );\n                                                                } else {\n                                                                    return;\n                                                                }\n                                                            } else {\n                                                                return;\n                                                            }\n                                                        }, function (error) {\n                                                            console.error(error);\n                                                        });\n\n                                                    }\n                                                }\n\n\n\n\n\n                                            };\n                                            // create click event handler for this button and put it into $scope\n                                            buttons_html += '<span class=\"btn btn-xs badge\" ng-class=\"{\\'btn-warning\\': extraDataCurrent == \\''+button.label+'\\' , \\'btn-info\\': extraDataCurrent != \\''+button.label+'\\'}\" style=\"float:right;margin-right:10px;\" ng-click=\"button_handlers.' + _func + '();\">' + button.label + '</span>';\n                                            // compile the html and add it into toolbar\n                                            $element.find(\"#buttons_area\").append($compile(buttons_html)($scope));\n                                        });\n                                    }\n                                }\n\n                                var rangeLevel;\n                                var otherLevels = [];\n                                var relationConfig = metadata.data.groups[2];\n                                if (relationConfig.nameColumn) {\n                                    $scope.childrenDeviceNameColumn = relationConfig.nameColumn;\n                                } else {\n                                    $scope.childrenDeviceNameColumn = \"name\";\n                                }\n                                angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                    if (level.rows.length > 0) {\n                                        if (!rangeLevel) {\n                                            //\n                                            rangeLevel = {\n                                                \"store\": level.name,\n                                                \"frequency\": level.interval,\n                                                \"range\": true\n                                            };\n                                        } else if (rangeLevel.frequency < level.interval) {\n                                            otherLevels.push({\n                                                \"store\": rangeLevel.store,\n                                                \"frequency\": rangeLevel.frequency,\n                                                \"range\": false\n                                            });\n                                            rangeLevel = {\n                                                \"store\": level.name,\n                                                \"frequency\": level.interval,\n                                                \"range\": true\n                                            };\n                                        } else {\n                                            otherLevels.push({\n                                                \"store\": rangeLevel.store,\n                                                \"frequency\": rangeLevel.frequency,\n                                                \"range\": false\n                                            });\n                                        }\n\n                                    }\n                                });\n                                if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                                    // show children view\n                                    dataService.childrenExtensionInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, deviceData.device.type, metadata.data.source.relation, metadata.data.source.relation_group, metadata.data.source.relation_group_extension).then(function (data) {\n                                        if (data != null && data.length > 0) {\n                                            data.forEach(function (_item) {\n                                                _item[\"trees\"] = [rangeLevel].concat(otherLevels);\n                                                _item[\"trees\"].sort(function (a, b) {\n                                                    return b.frequency - a.frequency;\n                                                });\n                                            });\n                                            initChildrenChart(data);\n                                            interactionHandler();\n                                        } else if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.device && $scope.interactions.graphs.device.children) {\n                                            // no relationship in fgp platform just take it from interactions Configuration  extension_type\n                                            if ($scope.interactions.graphs.device.children.data) {\n                                                var devices_key = $scope.interactions.graphs.device.children.data().then(\n                                                    function (_children) {\n\n                                                        //TODO: these children devices not comes from fgp platform\n                                                        $q.all(dataService.devicesExtensionInitInfo($rootScope.host, $rootScope.applicationName, _children, $scope.interactions.graphs.device.children.extension_type)).then(\n                                                            function (data) {\n                                                                data.forEach(function (_item) {\n                                                                    _item[\"trees\"] = [rangeLevel].concat(otherLevels);\n                                                                });\n                                                                initChildrenChart(data.data);\n                                                                interactionHandler();\n                                                            },\n                                                            function (error) {\n                                                                console.error(error);\n                                                            }\n                                                        );\n                                                    },\n                                                    function (error) {\n                                                        return;\n                                                    }\n                                                );\n                                            } else {\n                                                return;\n                                            }\n                                        } else {\n                                            return;\n                                        }\n                                    }, function (error) {\n                                        console.error(error);\n                                    });\n\n                                }\n                            }\n\n\n\n\n\n                        }\n                    }\n                    $scope.fixInterval = false;\n                });\n\n\n                var interactionHandler = function () {\n                    // interactions for scatter view\n                    if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.buttons && $scope.interactions.graphs.buttons.scatter) {\n                        // 1. color\n                        if ($scope.interactions.graphs.buttons.scatter.color) {\n                            // change color by \"field\"\n                            var buttons = $scope.interactions.graphs.buttons.scatter.color;\n                            angular$1.forEach(buttons, function (button) {\n                                var buttons_html = '';\n                                // create an event handler\n                                var _func = '_' + (Math.random().toString(36).slice(2, 13));\n                                $scope.button_handlers[_func] = function () {\n                                    var colors = [];\n                                    // set button status\n                                    if (button[\"active\"]) {\n                                        // make them oragin colors\n                                        angular$1.forEach($scope.childrenDevices, function (device, $index) {\n                                            if ($scope.childrenColors) {\n                                                $scope.childrenColors.forEach(function (_item) {\n                                                    if (_item.name == device.name) {\n                                                        colors.push(_item.color);\n                                                    }\n                                                });\n                                            } else {\n                                                // need to change\n                                                if ($scope.defaultColors[$index]) {\n                                                    colors.push($scope.defaultColors[$index]);\n                                                } else {\n                                                    colors.push($scope.defaultColors[Math.floor(Math.random() * (10))]);\n                                                }\n                                            }\n                                        });\n                                        button[\"active\"] = false;\n                                    } else {\n                                        // the custom func returns color.\n                                        var field = button.field;\n                                        var _func = button._func;\n                                        // devices\n                                        angular$1.forEach($scope.childrenDevices, function (device, $index) {\n                                            colors.push(_func(device[field]));\n                                        });\n                                        button[\"active\"] = true;\n                                    }\n                                    // update graph colors\n                                    $scope.currentChart.updateOptions({\n                                        \"colors\": colors\n                                    });\n                                };\n                                // create click event handler for this button and put it into $scope\n                                buttons_html += '<span class=\"btn btn-xs btn-info badge\" style=\"float:right;margin-right:10px;\" ng-click=\"button_handlers.' + _func + '();\">' + button.label + '</span>';\n                                // compile the html and add it into toolbar\n                                $element.find(\"#buttons_area\").append($compile(buttons_html)($scope));\n                            });\n                        }\n                        // 2. data filter\n                        if ($scope.interactions.graphs.buttons.scatter.dataFilter) {\n                            var buttons = $scope.interactions.graphs.buttons.scatter.dataFilter;\n\n                            angular$1.forEach(buttons, function (button) {\n                                var buttons_html = '';\n                                // create an event handler\n                                var _func = '_' + (Math.random().toString(36).slice(2, 13));\n                                $scope.button_handlers[_func] = function () {\n                                    // set button status\n                                    // the custom func returns color.\n                                    var field = button.field;\n                                    var _func = button._func;\n                                    var v = [];\n                                    // devices\n                                    angular$1.forEach($scope.childrenDevices, function (device, $index) {\n                                        if (_func(device[field])) {\n                                            device.show = true;\n                                            // $scope.currentChart.setVisibility($index, true);\n                                            v[$index] = true;\n                                        } else {\n                                            device.show = false;\n                                            // $scope.currentChart.setVisibility($index, false);\n                                            v[$index] = false;\n                                        }\n                                    });\n                                    // update visibility once\n                                    $timeout(function () {\n                                        var oldVisibility = $scope.currentChart.getOption('visibility');\n                                        // reset by new Visibility\n                                        v.forEach(function (item, _index) {\n                                            oldVisibility[_index] = item;\n                                        });\n                                        $scope.currentChart.updateOptions({\n                                            'visibility': oldVisibility\n                                        });\n                                    });\n\n                                };\n                                // create click event handler for this button and put it into $scope\n                                buttons_html += '<span class=\"btn btn-xs btn-info badge\" style=\"float:right;margin-right:10px;\" ng-click=\"button_handlers.' + _func + '();\">' + button.label + '</span>';\n                                // compile the html and add it into toolbar\n                                $element.find(\"#buttons_area\").append($compile(buttons_html)($scope));\n                            });\n                        }\n                        // highlight   $scope.currentChart.setSelection(false, line);\n                        if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.buttons && $scope.interactions.graphs.buttons.scatter && $scope.interactions.graphs.buttons.scatter.highlighting) {\n                            var buttons = $scope.interactions.graphs.buttons.scatter.highlighting;\n                            angular$1.forEach(buttons, function (button) {\n                                var buttons_html = '';\n                                // create an event handler\n                                var _func = '_' + (Math.random().toString(36).slice(2, 13));\n                                $scope.button_handlers[_func] = function () {\n                                    // set button status\n                                    // the custom func returns color.\n                                    var field = button.field;\n                                    var _func = button._func;\n                                    var hideAllOthers = button.hideOther;\n                                    // devices\n                                    var timerInterval = 0;\n                                    var v = [];\n                                    angular$1.forEach($scope.childrenDevices, function (device, $index) {\n                                        if (_func(device[field])) {\n                                            $timeout(function () {\n                                                $scope.currentChart.setSelection(false, device[field]);\n                                            }, timerInterval);\n                                            timerInterval += 1000;\n                                            v[$index] = true;\n                                        } else {\n                                            if (hideAllOthers && hideAllOthers == true) {\n                                                device.show = false;\n                                                // $scope.currentChart.setVisibility($index, false);\n                                                v[$index] = false;\n                                            }\n                                        }\n                                    });\n                                    //\n                                    // update visibility once\n                                    $timeout(function () {\n                                        var oldVisibility = $scope.currentChart.getOption('visibility');\n                                        // reset by new Visibility\n                                        v.forEach(function (item, _index) {\n                                            oldVisibility[_index] = item;\n                                        });\n                                        $scope.currentChart.updateOptions({\n                                            'visibility': oldVisibility\n                                        });\n                                    });\n                                };\n                                // create click event handler for this button and put it into $scope\n                                buttons_html += '<span class=\"btn btn-xs btn-info badge\" style=\"float:right;margin-right:10px;\" ng-click=\"button_handlers.' + _func + '();\">' + button.label + '</span>';\n                                // compile the html and add it into toolbar\n                                $element.find(\"#buttons_area\").append($compile(buttons_html)($scope));\n                            });\n                        }\n\n                        if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.buttons && $scope.interactions.graphs.buttons.scatter && $scope.interactions.graphs.buttons.scatter.others) {\n                            var buttons = $scope.interactions.graphs.buttons.scatter.others;\n                            angular$1.forEach(buttons, function (button) {\n                                var buttons_html = '';\n                                var _func = '_' + (Math.random().toString(36).slice(2, 13));\n                                $scope.button_handlers[_func] = function () {\n                                    button._func($scope.currentChart);\n                                };\n                                // add buttons and call this function when click\n                                buttons_html += '<span class=\"btn btn-xs btn-info badge\" style=\"float:right;margin-right:10px;\" ng-click=\"button_handlers.' + _func + '();\">' + button.label + '</span>';\n                                // compile the html and add it into toolbar\n                                $element.find(\"#buttons_area\").append($compile(buttons_html)($scope));\n                            });\n\n\n                        }\n\n                    }\n                    // n. other.....\n                };\n                // first time of showing chart\n                $scope.$watch('currentChart', function (newValue) {\n                    if (newValue) {\n                        //device first level\n                        var rangeLevel = null;\n                        var otherLevels = [];\n                        angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                            if (level.rows.length > 0) {\n                                if (!rangeLevel) {\n                                    rangeLevel = {\n                                        \"store\": level.name,\n                                        \"interval\": level.interval,\n                                        \"first\": 0,\n                                        \"last\": 0,\n                                        \"range\": true\n                                    };\n                                } else {\n                                    //\n                                    if (rangeLevel.interval < level.interval) {\n                                        // put the old ragneLevel into otherLevels\n                                        otherLevels.push({\n                                            \"store\": rangeLevel.store + '',\n                                            \"interval\": rangeLevel.interval + 0,\n                                            \"first\": 0,\n                                            \"last\": 0,\n                                            \"range\": false\n                                        });\n                                        // new rangeLevel\n                                        rangeLevel = {\n                                            \"store\": level.name,\n                                            \"interval\": level.interval,\n                                            \"first\": 0,\n                                            \"last\": 0,\n                                            \"range\": true\n                                        };\n\n                                    } else {\n                                        otherLevels.push({\n                                            \"store\": level.name,\n                                            \"interval\": level.interval,\n                                            \"first\": 0,\n                                            \"last\": 0,\n                                            \"range\": false\n                                        });\n                                    }\n                                }\n                            }\n                        });\n\n                        //send a rest request\n                        //deviceInitInfo(host, application, deviceName, deviceType, rangeLevel)\n                        dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, deviceData.device.type, rangeLevel.store).then(function (data) {\n                            // tree info\n                            var deviceStoreInfo = {};\n\n                            deviceStoreInfo[\"trees\"] = [{\n                                \"first\": {\n                                    \"timestamp\": data.first.timestamp\n                                },\n                                \"range\": true,\n                                \"store\": rangeLevel.store,\n                                \"interval\": rangeLevel.interval,\n                                \"last\": {\n                                    \"timestamp\": data.last.timestamp\n                                }\n                            }];\n\n                            // other level\n                            otherLevels.forEach(function (_level, _index) {\n                                deviceStoreInfo[\"trees\"].push({\n                                    \"first\": {\n                                        \"timestamp\": data.first.timestamp\n                                    },\n                                    \"range\": false,\n                                    \"store\": _level.store,\n                                    \"interval\": _level.interval,\n                                    \"last\": {\n                                        \"timestamp\": data.last.timestamp\n                                    }\n                                });\n                            });\n\n\n                            if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.scatter) {\n\n                                if ($scope['interactions'].graphs.scatter instanceof Array) {\n                                    //try to find the id in this array\n                                    var found = false;\n                                    $scope['interactions'].graphs.scatter.forEach(function (_id) {\n                                        if (_id == $scope.graphId) {\n                                            found = true;\n                                        }\n                                    });\n                                    if (found) {\n                                        $scope.currentView = 1;\n                                    } else {\n                                        $scope.currentView = -1;\n                                        initChart(deviceStoreInfo, deviceData.device.name);\n                                    }\n\n                                } else if ($scope['interactions'].graphs.scatter == true) {\n                                    //call scatter view init.\n                                    $scope.currentView = 1;\n                                } else {\n                                    // not found\n                                    $scope.currentView = -1;\n                                    initChart(deviceStoreInfo, deviceData.device.name);\n                                }\n                            } else {\n                                $scope.currentView = -1;\n                                initChart(deviceStoreInfo, deviceData.device.name);\n                            }\n                        }, function (error) {\n                            console.error(error);\n                        });\n                    }\n                });\n\n                $scope.$watch(\"chartDateTime\", function (newValue, oldValue) {\n                    if (newValue.begin != null && newValue.end != null) {\n                        var expect_points = Math.floor($element.parent().width());\n                        if (expect_points == 0) {\n                            expect_points = 1000;\n                        }\n                        // find a interval\n                        var expectedInterval = (newValue.end - newValue.begin) / expect_points;\n                        if ($scope.locked_interval) {\n                            expectedInterval = $scope.locked_interval.interval;\n                        }\n                        var conf = $scope.intevals.device;\n                        if (conf == null || conf.length == 0) {\n                            return false;\n                        }\n                        // device detail view\n                        var preOne = conf[0].interval;\n                        var lastOne = conf[conf.length - 1].interval;\n                        var cin = \"\";\n                        if (expectedInterval >= preOne) {\n                            expectedInterval = preOne;\n                            $scope.autoupdate = false;\n                        } else if (expectedInterval <= lastOne) {\n                            expectedInterval = lastOne;\n                            if ($scope.currentView == -1) {\n                                $scope.autoupdate = true;\n                                $scope.auto_store = conf[conf.length - 1].name;\n                            }\n                        } else {\n                            for (var i = 1; i < conf.length; i++) {\n                                if (expectedInterval <= preOne && expectedInterval > conf[i].interval) {\n                                    expectedInterval = preOne;\n                                } else {\n                                    preOne = conf[i].interval;\n                                    cin = conf[i].name;\n                                }\n                            }\n                            $scope.autoupdate = false;\n                        }\n                        $scope.currentIntervalName = \"\";\n                        $scope.fixedInterval = 0;\n                        angular$1.forEach(conf, function (config) {\n                            if (config.interval == expectedInterval) {\n                                $scope.currentIntervalName = config.name;\n                                $scope.fixedInterval = config.fixedInterval;\n                            }\n                        });\n                        // check the interval(data) no more than the number of expected points\n                        if (expectedInterval == lastOne) {\n                            // check\n                            if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.limits) {\n                                expect_points = $scope['interactions'].graphs.limits;\n                            }\n                            //\n                            if (((newValue.end - newValue.begin) / expectedInterval) > expect_points) {\n                                // reset range bar\n                                $scope.rangeConfig.dateWindow = [new Date(newValue.end - (expect_points - 1) * expectedInterval), new Date(newValue.end)];\n                                $scope.currentChart.updateOptions($scope.rangeConfig);\n                                $scope.currentChartOptions = $scope.rangeConfig;\n                                $scope.alertMessage = \"Limit the number of \\\"Zoom-Out\\\" points to \" + expect_points + \".\";\n                                $timeout(function () {\n                                    $scope.alertMessage = null;\n                                }, 5000);\n                                return;\n                            }\n                        }\n                        //\n                        if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.datetimeWindowCallback) {\n                            if (typeof $scope.interactions.graphs.datetimeWindowCallback == \"function\") {\n                                $scope.interactions.graphs.datetimeWindowCallback(newValue);\n                            } else {\n                                $scope.interactions.graphs.datetimeWindowCallback = newValue;\n                            }\n                        }\n                        // get fixedInterval from configuration\n\n\n                        // update range-bar\n                        if ($scope.rangeSelectorBar) {\n                            angular$1.forEach($scope.trees, function (tree) {\n                                if (tree.range == true) {\n                                    // send request\n                                    var fields = [];\n                                    var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n                                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                        if (level.rows.length > 0 && level.name === tree.store) {\n                                            var lines = level.rows;\n                                            if (lines) {\n                                                angular$1.forEach(lines, function (line) {\n                                                    //\n                                                    if (line.value) {\n                                                        var columns = (line.value).match(patt);\n                                                        angular$1.forEach(columns, function (column) {\n                                                            if ((column).startsWith('data.')) {\n                                                                fields.push(column.replace('data.', ''));\n                                                            }\n                                                        });\n                                                    }\n                                                });\n                                            }\n                                        }\n                                    });\n\n                                    //get rid of duplicates\n                                    fields = fields.filter(function (item, pos) {\n                                        return fields.indexOf(item) == pos;\n                                    });\n\n\n\n                                    $scope.auto_fields = fields;\n                                    //id, host, application, deviceName, deviceType, store, start, end, fields, interval\n                                    dataService.deviceStoreData($scope.graphId, $rootScope.host, $rootScope.applicationName, deviceData.device.name, deviceData.device.type, tree.store, new Date(newValue.begin).getTime(), new Date(newValue.end).getTime(), fields, 0).then(function (data) {\n                                            // udpate chart\n                                            var showData = data;\n                                            showData = showData.filter(function (obj) {\n                                                return obj != null;\n                                            });\n                                            // update range bar\n                                            var basicInfo = $scope.basicInfo;\n                                            var allLines = [];\n                                            angular$1.forEach(showData, function (line) {\n                                                allLines.push([new Date(line.timestamp)]);\n                                            });\n                                            var series_range = {\n                                                'l0': {\n                                                    axis: 'y1'\n                                                }\n                                            };\n                                            var rangeBarLabels = [];\n\n\n                                            if ($scope.currentChart) {\n                                                rangeBarLabels = $scope.currentChart.getLabels();\n                                            }\n\n                                            //get rangeBar data formulas\n                                            var collection_ = $scope.rangeCollectionConfig;\n\n                                            angular$1.forEach(collection_.rows, function (row) {\n                                                var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                                                // add value\n                                                var counter = 0;\n                                                angular$1.forEach(allLines, function (realLine) {\n                                                    try {\n                                                        var value = f(showData[counter]);\n                                                        realLine.push(value);\n                                                    } catch (ex) {\n                                                        realLine.push(null);\n                                                    }\n                                                    counter++;\n                                                });\n                                            });\n\n\n                                            //\n                                            var objNeed2Add = [];\n                                            if ($scope.rangeConfig && $scope.rangeConfig.file && $scope.rangeConfig.file != null && allLines.length > 0) {\n\n                                                angular$1.forEach($scope.rangeConfig.file, function (item) {\n                                                    var flag = false;\n                                                    var dataLength = -1;\n                                                    angular$1.forEach(allLines, function (line) {\n                                                        dataLength = line.length;\n                                                        if (line.length > 0 && line[0].getTime() === item[0].getTime()) {\n                                                            flag = true;\n                                                        } else if (line.length === 0) {\n                                                            flag = true;\n                                                        } else {\n                                                            dataLength = line.length;\n                                                        }\n\n                                                    });\n                                                    if (!flag) {\n                                                        var tempObj = [];\n                                                        for (var i = 0; i < dataLength; i++) {\n                                                            tempObj[i] = item[i];\n                                                        }\n                                                        objNeed2Add.push(tempObj);\n                                                    }\n                                                });\n                                            }\n                                            allLines = allLines.concat(objNeed2Add);\n                                            allLines.sort(function (a, b) {\n                                                return a[0] > b[0] ? 1 : -1;\n                                            });\n                                            if ($scope.showY2Btns) {\n                                                //noinspection JSDuplicatedDeclaration\n                                                if (!$scope.rangeConfig.axes.hasOwnProperty(\"y2\")) {\n                                                    series_range = {\n                                                        'l0': {\n                                                            axis: 'y1'\n                                                        },\n                                                        'l0': {\n                                                            axis: 'y2'\n                                                        }\n                                                    };\n                                                    $scope.rangeSeries = series_range;\n                                                    $scope.rangeConfig = {\n                                                        'file': allLines,\n                                                        'labels': rangeBarLabels,\n                                                        'series': series_range,\n                                                        highlightSeriesOpts: {\n                                                            strokeWidth: 1.5,\n                                                            strokeBorderWidth: 1,\n                                                            highlightCircleSize: 2\n                                                        }\n                                                    };\n                                                    if (basicInfo && basicInfo.range_show) {\n                                                        $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                                    }\n                                                } else {\n                                                    if (allLines && allLines.length > 0) {\n                                                        $scope.rangeConfig['file'] = allLines;\n                                                        $scope.rangeSelectorBar.updateOptions({\n                                                            'file': allLines,\n                                                            highlightSeriesOpts: {\n                                                                strokeWidth: 1.5,\n                                                                strokeBorderWidth: 1,\n                                                                highlightCircleSize: 2\n                                                            }\n                                                        });\n                                                    }\n\n                                                }\n\n                                            } else {\n                                                series_range[\"span_y2\"] = {\n                                                    axis: 'y2'\n                                                };\n                                                $scope.rangeSeries = series_range;\n                                                var newLines = [];\n                                                angular$1.copy(allLines, newLines);\n\n                                                newLines.forEach(function (_line) {\n                                                    _line.push(null);\n                                                });\n                                                if (newLines && newLines.length > 0) {\n\n                                                    $scope.rangeConfig = {\n                                                        'file': newLines,\n                                                        'labels': rangeBarLabels,\n                                                        'series': series_range,\n                                                        highlightSeriesOpts: {\n                                                            strokeWidth: 1.5,\n                                                            strokeBorderWidth: 1,\n                                                            highlightCircleSize: 2\n                                                        }\n                                                    };\n\n                                                    var rangebar_label = ['x'];\n                                                    for (var i = 0; i < newLines[0].length - 2; i++) {\n                                                        rangebar_label.push(\"l\" + i);\n                                                    }\n                                                    rangebar_label.push(\"span_y2\");\n\n                                                }\n                                                if (basicInfo && basicInfo.range_show && allLines.length > 0) {\n                                                    $scope.rangeSelectorBar.updateOptions({\n                                                        'file': newLines,\n                                                        'labels': rangebar_label,\n                                                        'series': series_range,\n                                                        highlightSeriesOpts: {\n                                                            strokeWidth: 1.5,\n                                                            strokeBorderWidth: 1,\n                                                            highlightCircleSize: 2\n                                                        }\n                                                    });\n                                                }\n                                            }\n                                        },\n                                        function (data) {\n                                            console.info(data);\n                                        }\n                                    );\n                                }\n                            });\n                        }\n\n\n                        $scope.loadingShow = true;\n                        // check separated points config\n                        if ($scope.basicInfo && $scope.basicInfo.points) {\n                            if ($scope.basicInfo.points.connected) {\n                                $scope.currentChart.updateOptions({\n                                    connectSeparatedPoints: true\n                                });\n                            } else {\n                                if ($scope.currentView === 1) {\n                                    $scope.currentChart.updateOptions({\n                                        connectSeparatedPoints: false,\n                                        drawPoints: true,\n                                        strokeWidth: 0\n                                    });\n                                } else {\n                                    $scope.currentChart.updateOptions({\n                                        connectSeparatedPoints: false,\n                                        drawPoints: false,\n                                        strokeWidth: 1.5\n                                    });\n                                }\n                            }\n                        }\n\n                        if ($scope.currentView == 1) {\n                            // scatter detail view\n                            $scope.legendText = null;\n                            var deviceInfo = [];\n                            var currentStore = \"\";\n                            $scope.childrenDevices = [];\n                            angular$1.forEach($scope.childTrees, function (device) {\n                                angular$1.forEach(device.trees, function (tree, index) {\n                                    if (expectedInterval == tree.frequency) {\n                                        currentStore = tree.store;\n                                        var _tempDeviceObj = {\n                                            name: device.name,\n                                            tree: tree\n                                        };\n                                        if ($scope.childrenDeviceNameColumn && device[$scope.childrenDeviceNameColumn] != null) {\n                                            _tempDeviceObj[$scope.childrenDeviceNameColumn] = device[$scope.childrenDeviceNameColumn];\n                                        }\n                                        deviceInfo.push(_tempDeviceObj);\n                                        device[\"show\"] = true;\n                                        $scope.childrenDevices.push(device);\n                                    }\n                                });\n                            });\n\n\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n                            angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function (line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function (column) {\n                                                    if (column && (column).startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n\n                            fields = fields.filter(function (item, pos) {\n                                return fields.indexOf(item) == pos;\n                            });\n\n\n                            var _init = function (deviceInfo, currentStore, begin, end, fields, expectedInterval, fixedInterval) {\n                                $scope.auto_fields = fields;\n                                var devices_name = [];\n                                deviceInfo.forEach((_d) => {\n                                    devices_name.push(_d.name);\n                                });\n                                //id, host, application, devices, deviceType, store, start, end, fields, interval\n                                dataService.devicesStoreData($scope.graphId, $rootScope.host, $rootScope.applicationName, devices_name, metadata.data.source.relation_group, currentStore, new Date(begin).getTime(), new Date(end).getTime(), fields, fixedInterval).then(function (data) {\n                                    var showData = [];\n                                    data.forEach((_item) => {\n                                        deviceInfo.forEach((_device) => {\n                                            if (_item.hasOwnProperty(_device.name)) {\n                                                // we need to add another name for device when $scope.childrenDeviceNameColumn\n                                                var _tempDeviceObj = {\n                                                    device: _device.name,\n                                                    data: _item[_device.name].data\n                                                };\n                                                if ($scope.childrenDeviceNameColumn && _device[$scope.childrenDeviceNameColumn] != null) {\n                                                    _tempDeviceObj[$scope.childrenDeviceNameColumn] = _device[$scope.childrenDeviceNameColumn];\n                                                }\n\n                                                showData.push(_tempDeviceObj);\n                                            }\n                                        });\n                                    });\n                                    // order childrenDevices by showData\n                                    var devicesMatchData = [];\n                                    angular$1.forEach(showData, function (item, _index) {\n                                        angular$1.forEach($scope.childrenDevices, function (device) {\n                                            // just show devices with data\n                                            if (item.device == device.name && item.data.length > 0) {\n                                                devicesMatchData.splice(_index, 0, device);\n                                            }\n                                        });\n                                    });\n                                    showData.sort(function (a, b) {\n                                        return a.device > b.device ? 1 : -1;\n                                    });\n                                    //reset childrenDevies\n                                    $scope.childrenDevices = devicesMatchData;\n                                    $scope.childrenDevices.sort(function (a, b) {\n                                        return a.name > b.name ? 1 : -1;\n                                    });\n                                    //get configuration\n                                    updateChildrenDetailChart(metadata, currentStore, $scope.rangeChildrenData, showData);\n                                }, function (data) {\n                                    console.info(data);\n                                });\n                            };\n                            var relationConfig = metadata.data.groups[2];\n                            if (deviceInfo.length == 0) {\n                                var rangeLevel = null;\n                                var otherLevels = [];\n                                if (relationConfig.nameColumn) {\n                                    $scope.childrenDeviceNameColumn = relationConfig.nameColumn;\n                                } else {\n                                    $scope.childrenDeviceNameColumn = \"name\";\n                                }\n                                angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                    if (level.rows.length > 0) {\n                                        if (rangeLevel != null) {\n                                            otherLevels.push(rangeLevel);\n                                        }\n                                        rangeLevel = level.name;\n                                    }\n                                });\n\n\n\n                                // try to find\n                                if ($scope.interactions.graphs.device.children.data) {\n                                    var devices_key = $scope.interactions.graphs.device.children.data().then(\n                                        function (data) {\n                                            $q.all(dataService.devicesExtensionInitInfo($rootScope.host, $rootScope.applicationName, data, metadata.data.source.store, $scope.interactions.graphs.device.children.extension_type, rangeLevel, otherLevels, fields)).then(\n                                                function (data) {\n                                                    if (data) {\n                                                        data.forEach((_device) => {\n                                                            deviceInfo.push(_device.device);\n                                                        });\n                                                    }\n                                                    // do we need fixed interval\n                                                    _init(deviceInfo, currentStore, newValue.begin, newValue.end, fields, expectedInterval, $scope.fixedInterval);\n                                                },\n                                                function (error) {\n                                                    console.error(error);\n                                                }\n                                            );\n                                        },\n                                        function (error) {\n                                            return;\n                                        }\n                                    );\n                                } else {\n                                    return;\n                                }\n                            } else {\n                                _init(deviceInfo, currentStore, newValue.begin, newValue.end, fields, expectedInterval, $scope.fixedInterval);\n                            }\n                            $scope.fixGraphWithGap();\n                        } else {\n                            // cal tree\n                            angular$1.forEach($scope.trees, function (tree, index) {\n                                if (expectedInterval == tree.interval) {\n                                    // send request\n                                    var fields = [];\n                                    var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                        if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                            var lines = level.rows;\n                                            if (lines) {\n                                                angular$1.forEach(lines, function (line) {\n                                                    //\n                                                    if (line.value) {\n                                                        var columns = (line.value).match(patt);\n                                                        angular$1.forEach(columns, function (column) {\n                                                            if ((column).startsWith('data.')) {\n                                                                fields.push(column.replace('data.', ''));\n                                                            }\n                                                        });\n\n                                                    }\n\n                                                });\n                                            }\n                                        }\n                                    });\n\n                                    $scope.auto_fields = fields;\n                                    dataService.deviceStoreData($scope.graphId, $rootScope.host, $rootScope.applicationName, deviceData.device.name, deviceData.device.type, tree.store, new Date(newValue.begin).getTime(), new Date(newValue.end).getTime(), fields, 0).then(function (data) {\n                                        // udpate chart\n                                        var showData = data;\n                                        showData = showData.filter(function (obj) {\n                                            return obj != null;\n                                        });\n                                        showData.sort(function (a, b) {\n                                            return a.timestamp > b.timestamp ? 1 : -1;\n                                        });\n                                        // get configuration\n                                        updateDetailChart(metadata, tree.store, $scope.rangeData, showData);\n                                        // rest visibility\n                                        angular$1.forEach(showData, function (item) {\n                                            item[\"show\"] = true;\n                                        });\n\n                                        // tell some other widgets, the graph is changed.\n                                        $timeout(function () {\n                                            $rootScope.$broadcast('chartDataChangeEvent', {\n                                                'id': element_id,\n                                                'group': 'device',\n                                                'data': {\n                                                    'collection': tree.store,\n                                                    'group': 'device',\n                                                    'data': showData\n                                                }\n                                            });\n                                        });\n\n                                    }, function (data) {\n                                        console.info(data);\n                                    });\n                                }\n                            });\n\n                            $scope.fixGraphWithGap();\n                        }\n                        // 2. series highlighting\n\n                        $scope.status = false;\n                    }\n                });\n\n            });\n\n\n            var fetchData = function (values, node) {\n                if (node.children[0] != null) {\n                    fetchData(values, node.children[0]);\n                }\n\n                if (node.children[1] != null) {\n                    fetchData(values, node.children[1]);\n                }\n\n                if (node.children[0] == null && node.children[1] == null) {\n                    if (node.data != null && node.data.array) {\n                        Array.prototype.push.apply(values, node.data.array.slice(0, node.data.size));\n                    } else if (node.data != null) {\n                        Array.prototype.push.apply(values, node.data.slice(0, node.data.length));\n                    }\n\n                }\n\n            };\n\n\n            $scope.trees = [];\n            $scope.rangeData = [];\n\n            $scope.ordinalRangeData = [];\n\n            var initChart = function (data, deviceName) {\n                $scope.intevalforshow = [];\n                //\n                $scope.intevals.device = [];\n                var trees = data.trees;\n                $scope.trees = trees;\n                var rangeTree = null;\n                angular$1.forEach(trees, function (tree) {\n                    if (tree.range) {\n                        rangeTree = tree;\n                    }\n                    $scope.intevals.device.push({\n                        name: tree.store,\n                        interval: tree.interval\n                    });\n                });\n\n                $scope.intevals.device.sort(function (a, b) {\n                    return b.interval - a.interval;\n                });\n\n                // init chart with range data\n                var store = rangeTree.store;\n\n                // get all data\n                var allData = [];\n                // fetchData(allData, rangeTree.tree);    only get first and last\n                // fix the problem of never seen the current data.\n                rangeTree.last.timestamp = rangeTree.last.timestamp + (rangeTree.interval - 1);\n                allData = allData.concat([rangeTree.first, rangeTree.last]);\n\n                allData = allData.filter(function (obj) {\n                    return obj != null;\n                });\n\n                allData.sort(function (a, b) {\n                    return a.timestamp > b.timestamp ? 1 : -1;\n                });\n\n\n                if ($scope.trees.length == 0 || allData.length == 0) {\n                    $scope.emptyDataShow = true;\n                    return;\n                }\n\n                $scope.ordinalRangeData = allData;\n                // put the data into range tree cache\n                if (rangeTree) {\n                    //\n                    graphDataService.put(deviceName + \"/\" + rangeTree.store + \"/\" + $scope.graphId, [rangeTree.first, {\n                        timestamp: moment().endOf('day').toDate().getTime()\n                    }]);\n                }\n                // get configuration and make real data\n                updateChart(metadata, store, allData, rangeTree);\n            };\n\n            $scope.childrenColors = [];\n\n            var initChildrenChart = function (deviceDatas) {\n                var devicesInfo = {};\n                $scope.intevals.device = [];\n                //range data with all device\n                $scope.childTrees = [];\n                $scope.childrenDevices = [];\n                //reset colors\n                $scope.childrenColors = [];\n\n                deviceDatas.sort(function (a, b) {\n                    return a.device.name > b.device.name ? 1 : -1;\n                });\n\n                // we should give colors to all devices (no matter has data or not)\n                deviceDatas.forEach(function (_device, _index) {\n                    var _tempDeviceColorInfo = {\n                        name: _device.device.name\n                    };\n\n                    if ($scope.childrenDeviceNameColumn && _device.device[$scope.childrenDeviceNameColumn] != null) {\n                        _tempDeviceColorInfo[$scope.childrenDeviceNameColumn] = _device.device[$scope.childrenDeviceNameColumn];\n                    }\n\n\n                    if ($scope.defaultColors[_index]) {\n                        _tempDeviceColorInfo[\"color\"] = $scope.defaultColors[_index];\n                    } else {\n                        _tempDeviceColorInfo[\"color\"] = $scope.defaultColors[Math.floor(Math.random() * (10))];\n                    }\n\n                    $scope.childrenColors.push(_tempDeviceColorInfo);\n                });\n                angular$1.forEach(deviceDatas, function (deviceData, _index) {\n                    var device = {};\n                    device[\"show\"] = true;\n                    angular$1.merge(device, deviceData.device, deviceData.extension);\n                    // $scope.childrenDevices.push(device);\n                    var trees = deviceData.trees;\n                    device[\"trees\"] = trees;\n                    $scope.childTrees.push(device);\n                    var rangeTree = null;\n                    //relation\n                    var relationConfig = metadata.data.groups[2];\n                    // scatter view shows only one collection\n                    var collections = relationConfig.collections;\n                    angular$1.forEach(trees, function (tree) {\n                        if (tree.range) {\n                            rangeTree = tree;\n                        }\n\n                        var flag = false;\n                        angular$1.forEach($scope.intevals.device, function (interval) {\n                            if (interval.name == tree.store && interval.interval == tree.frequency) {\n                                // has same one\n                                flag = true;\n                            }\n                        });\n                        if (!flag) {\n                            var fixedInterval = 0;\n                            // get fixedInterval\n                            collections.forEach(function (_collection) {\n                                if (tree.store == _collection.name && _collection.hasOwnProperty(\"fixedInterval\")) {\n                                    fixedInterval = _collection.fixedInterval;\n                                }\n                            });\n                            $scope.intevals.device.push({\n                                name: tree.store,\n                                interval: tree.frequency,\n                                fixedInterval: fixedInterval\n                            });\n                        }\n                    });\n                    devicesInfo[device.name] = {\n                        \"range\": rangeTree\n                    };\n                });\n                updateChildrenChart(metadata, devicesInfo);\n            };\n\n            var updateChildrenChart = function (metadata, devicesInfo) {\n                //relation\n                var relationConfig = metadata.data.groups[2];\n                // scatter view shows only one collection\n                var collections = relationConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var leftAndRight = {\n                    left: relationConfig.leftYAxis,\n                    right: relationConfig.rightYAxis\n                };\n                var allLines = [];\n                var allXLabels = [];\n                angular$1.forEach(devicesInfo, function (device, key, _index) {\n                    angular$1.forEach(device.data, function (item) {\n                        var flag = false;\n                        angular$1.forEach(allXLabels, function (label) {\n                            if (label.getTime() == item.timestamp) {\n                                flag = true;\n                            }\n                        });\n                        if (!flag) {\n                            allXLabels.push(new Date(item.timestamp));\n                        }\n                    });\n                });\n                // order\n                allXLabels.sort(function (a, b) {\n                    return a > b ? 1 : -1;\n                });\n\n                // make all line\n                angular$1.forEach(allXLabels, function (label) {\n                    allLines.push([label]);\n                });\n\n\n                var yRange = {\n                    min: null,\n                    max: null\n                };\n                var showY2axis = false;\n                var counter = 0;\n                angular$1.forEach(devicesInfo, function (device, key) {\n                    counter++;\n                    angular$1.forEach(collections, function (collection) {\n                        if (collection.name == device.range.store) {\n                            $scope.currentIntervalName = device.range.store;\n                            var originalData = device.data;\n                            // always same for each device\n                            if (collection.rows[0].yaxis == 0) {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y1'\n                                };\n                            } else {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y2'\n                                };\n                                showY2axis = true;\n                                $scope.showY2Btns = true;\n                            }\n                            labels.push(key); // put the name here and\n                            var filterF = null;\n                            if (collection.rows[0].filter) {\n                                filterF = collection.rows[0].filter;\n                            }\n\n                            // make a line\n                            var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                            // add value\n                            angular$1.forEach(allLines, function (realLine, index) {\n\n                                var flag = false;\n                                angular$1.forEach(originalData, function (odata) {\n                                    if (realLine[0].getTime() == odata.timestamp) {\n                                        try {\n                                            var value = f(odata);\n                                            if ((filterF && filterF(value)) || !filterF) {\n                                                realLine.push(value);\n                                                if (yRange.min == null) {\n                                                    yRange.min = value;\n                                                }\n\n                                                if (yRange.max == null) {\n                                                    yRange.max = value;\n                                                }\n\n                                                if (yRange.min > value) {\n                                                    yRange.min = value;\n                                                }\n\n                                                if (yRange.max < value) {\n                                                    yRange.max = value;\n                                                }\n                                            } else {\n                                                realLine.push(null);\n                                            }\n                                        } catch (ex) {\n                                            realLine.push(null);\n                                        }\n                                        flag = true;\n                                    }\n                                });\n\n                                if (!flag) {\n                                    realLine.push(null);\n                                }\n                            });\n\n\n                        }\n                    });\n                });\n\n                if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                    yRange.min = yRange.min - (yRange.min) * 0.10;\n                    yRange.max = yRange.max + (yRange.max) * 0.10;\n                }\n                var connectSeparatedPoints = false;\n                if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                    connectSeparatedPoints = true; //'connectSeparatedPoints': connectSeparatedPoints,\n                }\n\n                //update chart\n                if ($scope.currentChart) {\n                    $scope.rangeChildrenData = allLines;\n                    // reset colors by labels\n                    colors = [];\n                    var _initVisibility = [];\n                    labels.forEach(function (key) {\n                        $scope.childrenColors.forEach(function (_item) {\n                            if (_item.name == key || ($scope.childrenDeviceNameColumn && _item[$scope.childrenDeviceNameColumn] == key)) {\n                                colors.push(_item.color);\n                                _initVisibility.push(true);\n                            }\n\n                        });\n                    });\n                    if (showY2axis) {\n                        $scope.childrenRangeConfig = {\n                            'connectSeparatedPoints': connectSeparatedPoints,\n                            'labelsKMB': true,\n                            'file': allLines,\n                            'visibility': _initVisibility,\n                            legend: 'never',\n                            labelsKMB: true,\n                            labelsSeparateLines: false,\n                            highlightCircleSize: 2,\n                            strokeBorderWidth: 0,\n                            highlightSeriesOpts: {\n                                strokeWidth: 1.5,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                },\n                                \"y2\": {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        };\n                    } else {\n                        $scope.showY2Btns = false;\n                        var newLines = [];\n                        angular$1.copy(allLines, newLines);\n                        angular$1.forEach(newLines, function (line) {\n                            line.push(null);\n                        });\n                        series[\"span_y2\"] = {\n                            'axis': 'y2'\n                        };\n\n\n                        $scope.childrenRangeConfig = {\n                            'connectSeparatedPoints': connectSeparatedPoints,\n                            'drawGapEdgePoints': true,\n                            'pointSize': 2,\n                            'visibility': _initVisibility,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            'labelsSeparateLines': false,\n                            highlightCircleSize: 2,\n                            strokeBorderWidth: 0,\n                            highlightSeriesOpts: {\n                                strokeWidth: 1.5,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            'labels': ['x'].concat(labels).concat(['span_y2']),\n                            'ylabel': leftAndRight.left,\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max]\n                                },\n                                \"y2\": {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        };\n                    }\n\n                    // TODO: we need to destory old graph instance and create a new one.\n                    // $scope.currentChart.updateOptions($scope.childrenRangeConfig, false);\n\n                    // set the first one to range bar\n                    // update range bar with the first channel data\n                    if ($scope.basicInfo && $scope.basicInfo.range_show && $scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.scatter) {\n                        if ($scope['interactions'].graphs.scatter instanceof Array) {\n                            //try to find the id in this array\n                            var found = false;\n                            $scope['interactions'].graphs.scatter.forEach(function (_id) {\n                                if (_id == $scope.graphId) {\n                                    found = true;\n                                }\n                            });\n                            if (found) {\n                                Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                    zoom: true,\n                                    selection: false,\n                                    range: false\n                                });\n                                if (showY2axis) {\n                                    $scope.rangeConfig = {\n                                        'file': newLines,\n                                        'series': series,\n                                        'labels': ['x'].concat(labels),\n                                        highlightSeriesOpts: {\n                                            strokeWidth: 1.5,\n                                            strokeBorderWidth: 1,\n                                            highlightCircleSize: 2\n                                        }\n                                    };\n                                } else {\n                                    $scope.rangeConfig = {\n                                        'file': newLines,\n                                        'series': series,\n                                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                                        highlightSeriesOpts: {\n                                            strokeWidth: 1.5,\n                                            strokeBorderWidth: 1,\n                                            highlightCircleSize: 2\n                                        }\n                                    };\n                                }\n\n                                \n                                // reset the datetime for current chart\n                                // && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000)\n                                if ($scope.chartDateWindow && ($scope.chartDateWindow[0] >= newLines[0][0] && $scope.chartDateWindow[1] <= newLines[newLines.length - 1][0])) {\n                                    // keep the current range bar refresh once.\n                                    $scope.chartDateTime = {\n                                        begin: $scope.chartDateTime.begin,\n                                        end: $scope.chartDateTime.end\n                                    };\n                                    $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                                } else {\n                                    $scope.currentChart[\"xAxisZoomRange\"] = [newLines[0][0], newLines[newLines.length - 1][0]];\n                                    if (begin_path && end_path && !init_flag) {\n                                        // $scope.chartDateWindow = [new Date(new Number(begin_path)).getTime(), new Date(new Number(end_path)).getTime()];\n                                        $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)).getTime(), new Date(new Number(end_path)).getTime()];\n                                        init_flag = true;\n                                    } else {\n                                        if ($scope.currentIntervalChoosed && ((newLines[newLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= newLines[0][0].getTime())) {\n                                            $scope.rangeConfig.dateWindow = [newLines[newLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval, newLines[newLines.length - 1][0].getTime()];\n                                        } else {\n                                            $scope.chartDateWindow = [newLines[0][0].getTime(), newLines[newLines.length - 1][0].getTime()];\n                                            $scope.rangeConfig.dateWindow = [newLines[0][0].getTime(), newLines[newLines.length - 1][0].getTime()];\n                                        }\n                                    }\n                                    $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                    $scope.currentChart.updateOptions($scope.rangeConfig);\n                                    $scope.currentChartOptions = $scope.rangeConfig;\n                                }\n                            }\n\n                        } else if ($scope['interactions'].graphs.scatter == true) {\n                            //call scatter view init.\n                            Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                zoom: true,\n                                selection: false,\n                                range: false\n                            });\n                            if (showY2axis) {\n                                $scope.rangeConfig = {\n                                    'file': newLines,\n                                    'series': series,\n                                    'labels': ['x'].concat(labels),\n                                    highlightSeriesOpts: {\n                                        strokeWidth: 1.5,\n                                        strokeBorderWidth: 1,\n                                        highlightCircleSize: 2\n                                    }\n                                };\n                            } else {\n                                $scope.rangeConfig = {\n                                    'file': newLines,\n                                    'series': series,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    highlightSeriesOpts: {\n                                        strokeWidth: 1.5,\n                                        strokeBorderWidth: 1,\n                                        highlightCircleSize: 2\n                                    }\n                                };\n                            }\n                            // reset the datetime for current chart\n\n                            if ($scope.chartDateWindow && ($scope.chartDateWindow[0] >= newLines[0][0] && $scope.chartDateWindow[1] <= newLines[newLines.length - 1][0])) {\n                                // keep the current range bar refresh once.\n                                $scope.chartDateTime = {\n                                    begin: $scope.chartDateTime.begin,\n                                    end: $scope.chartDateTime.end\n                                };\n                                $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                            } else {\n                                $scope.currentChart[\"xAxisZoomRange\"] = [newLines[0][0], newLines[newLines.length - 1][0]];\n                                if (begin_path && end_path && !init_flag) {\n                                    // $scope.chartDateWindow = [new Date(new Number(begin_path)).getTime(), new Date(new Number(end_path)).getTime()];\n                                    $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)).getTime(), new Date(new Number(end_path)).getTime()];\n                                    init_flag = true;\n                                } else {\n                                    if ($scope.currentIntervalChoosed && ((newLines[newLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= newLines[0][0].getTime())) {\n                                        $scope.rangeConfig.dateWindow = [newLines[newLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval, newLines[newLines.length - 1][0].getTime()];\n                                    } else {\n                                        $scope.chartDateWindow = [newLines[0][0].getTime(), newLines[newLines.length - 1][0].getTime()];\n                                        $scope.rangeConfig.dateWindow = [newLines[0][0].getTime(), newLines[newLines.length - 1][0].getTime()];\n                                    }\n                                }\n                                $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                $scope.currentChart.updateOptions($scope.rangeConfig);\n                                $scope.currentChartOptions = $scope.rangeConfig;\n                            }\n\n                        }\n\n                    } else {\n                        //  keep the same time window and refersh\n                        $scope.chartDateTime = {\n                            begin: $scope.chartDateTime.begin,\n                            end: $scope.chartDateTime.end\n                        };\n                        $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                        $scope.loadingShow = false;\n                    }\n\n                }\n\n\n            };\n\n\n            var updateChildrenDetailChart = function (metadata, store, rangeData, allData) {\n                //relation\n                var relationConfig = metadata.data.groups[2];\n                // scatter view shows only one collection\n                var collections = relationConfig.collections;\n                var newLines = [];\n                var newTime = [];\n                var series = {};\n                var labels = [];\n                var colors = [];\n                var leftAndRight = {\n                    left: relationConfig.leftYAxis,\n                    right: relationConfig.rightYAxis\n                };\n                var yRange = {\n                    min: null,\n                    max: null\n                };\n\n\n                var initScale = null;\n                if (relationConfig.initScale) {\n                    initScale = relationConfig.initScale; // {left:{level:\"\",range:[num1,num2]},right:{}}\n                }\n\n                var counter = 0;\n                angular$1.forEach(allData, function (device) {\n                    counter++;\n                    if (device.data.length > 0) {\n\n                        if ($scope.childrenDeviceNameColumn) {\n                            labels.push(device[$scope.childrenDeviceNameColumn]);\n                        } else {\n                            labels.push(device.device);\n                        }\n\n                        angular$1.forEach(collections, function (collection) {\n                            if (collection.name == store) {\n                                $scope.currentIntervalName = store;\n                                if (collection.rows[0].yaxis == 0) {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y1',\n                                    };\n                                }\n                                var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                                var filterF = null;\n                                if (collection.rows[0].filter) {\n                                    filterF = collection.rows[0].filter;\n                                }\n                                var tempData = [];\n                                var tempTime = [];\n                                // make data\n                                angular$1.forEach(device.data, function (data) {\n                                    var dateTime = new Date(data.timestamp);\n                                    try {\n                                        var value = f(data);\n                                        if ((filterF && filterF(value)) || !filterF) {\n                                            tempData.push({\n                                                timestamp: dateTime,\n                                                value: value\n                                            });\n\n                                            if (yRange.min == null) {\n                                                yRange.min = value;\n                                            }\n\n                                            if (yRange.max == null) {\n                                                yRange.max = value;\n                                            }\n\n                                            if (yRange.min > value) {\n                                                yRange.min = value;\n                                            }\n\n                                            if (yRange.max < value) {\n                                                yRange.max = value;\n                                            }\n                                        } else {\n                                            tempData.push({\n                                                timestamp: dateTime,\n                                                value: null\n                                            });\n                                        }\n                                    } catch (e) {\n                                        tempData.push({\n                                            timestamp: dateTime,\n                                            value: null\n                                        });\n                                    }\n                                    tempTime.push(dateTime.getTime());\n                                });\n                                newTime = newTime.concat(tempTime.filter(function (item) {\n                                    return newTime.indexOf(item) < 0;\n                                }));\n                                newLines.push({\n                                    device: device.device,\n                                    data: tempData\n                                });\n                            }\n                        });\n                    }\n                });\n\n                var chartData = [];\n                // time needs sort!!!\n                newTime = newTime.sort();\n                angular$1.forEach(newTime, function (nt) {\n                    chartData.push([new Date(nt)]);\n                });\n\n                angular$1.forEach(newLines, function (line) {\n                    angular$1.forEach(chartData, function (timeTicket) {\n                        // line data\n                        var flag = false;\n                        var lineData = line.data;\n                        for (var i = 0; i < lineData.length; i++) {\n                            if (lineData[i].timestamp.getTime() == timeTicket[0].getTime()) {\n                                timeTicket.push(lineData[i].value);\n                                flag = true;\n                                break;\n                            }\n                        }\n                        if (flag != true) {\n                            // we should use \"NaN\"\n                            timeTicket.push(null);\n                        }\n                    });\n                });\n\n                if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                    yRange.min = yRange.min - (yRange.min) * 0.10;\n                    yRange.max = yRange.max + (yRange.max) * 0.10;\n                }\n\n                if (chartData.length == 0) {\n                    $scope.currentChart.updateOptions({\n                        'file': []\n                    });\n                    $scope.loadingShow = false;\n                } else {\n                    if ($scope.currentChart) {\n                        var connectSeparatedPoints = false;\n                        if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                            connectSeparatedPoints = true; //'connectSeparatedPoints': connectSeparatedPoints,\n                        }\n\n                        //rest colors by labels\n                        colors = [];\n                        labels.forEach(function (key) {\n                            $scope.childrenColors.forEach(function (_item) {\n                                if (_item.name == key || ($scope.childrenDeviceNameColumn && _item[$scope.childrenDeviceNameColumn] == key)) {\n                                    colors.push(_item.color);\n                                }\n                            });\n                        });\n\n                        var newLines = [];\n                        $scope.showY2Btns = false;\n                        angular$1.copy(chartData, newLines);\n                        angular$1.forEach(newLines, function (line) {\n                            line.push(null);\n                        });\n                        series[\"span_y2\"] = {\n                            axis: 'y2'\n                        };\n                        $scope.currentChartOptions = {\n                            'connectSeparatedPoints': connectSeparatedPoints,\n                            'pointSize': 2,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            highlightSeriesOpts: {\n                                strokeWidth: 1.5,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                },\n                                \"y2\": {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        };\n\n\n                        var _tempVisibility = [];\n                        $scope.currentChart.getOption('visibility').forEach(function (v, _index) {\n                            if ($scope.currentVisibility_[_index]) {\n                                _tempVisibility[_index] = $scope.currentVisibility_[_index];\n                            } else {\n                                if ($scope.memoryVisibility[_index]) {\n                                    _tempVisibility[_index] = $scope.memoryVisibility[_index];\n                                } else {\n                                    _tempVisibility[_index] = v;\n                                }\n                            }\n                            if ($scope.childrenDevices && $scope.childrenDevices[_index] && $scope.childrenDevices[_index].hasOwnProperty(\"show\")) {\n                                $scope.childrenDevices[_index][\"show\"] = _tempVisibility[_index];\n                            }\n                        });\n\n                        $scope.downloadData = {\n                            \"labels\": ['datetime'].concat(labels).concat([\"span_y2\"]),\n                            \"data\": newLines\n                        };\n                        $scope.currentVisibility_ = [];\n                        $scope.memoryVisibility = [];\n                        var stroke_width = 1.5;\n                        if ($scope.basicInfo && $scope.basicInfo.points && !$scope.basicInfo.points.connected) {\n                            if ($scope.currentView === 1) {\n                                stroke_width = 0;\n                            }\n                        }\n                        var _tempConfig = {\n                            'connectSeparatedPoints': connectSeparatedPoints,\n                            'pointSize': 2,\n                            'legend': 'highlight',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            highlightCircleSize: 2,\n                            strokeBorderWidth: 0,\n                            highlightSeriesOpts: {\n                                strokeWidth: stroke_width,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function (e, x, pts, row, seriesName) {\n                                if ($scope.currentView == -1) {\n                                    // device view is using default legend\n                                    return false;\n                                }\n                                // set current child device and will do show one\n                                $scope.currentHighLightChildDevice = seriesName;\n\n                                // if $scope.childrenDeviceNameColumn\n                                if ($scope.childrenDeviceNameColumn && $scope.childrenDeviceNameColumn != \"\") {\n                                    $scope.childrenDevices.forEach(function (_device) {\n                                        if (_device[$scope.childrenDeviceNameColumn] && _device[$scope.childrenDeviceNameColumn] == seriesName) {\n                                            $scope.currentHighLightChildDevice = _device.name;\n                                        }\n                                    });\n                                }\n\n                                $scope.$apply(function () {\n\n                                    // send data to outside\n                                    if ($scope.highlights && $scope.highlights.onExternal) {\n                                        $scope.highlights.onExternal = [];\n                                        var labels = $scope.currentChart.getLabels();\n                                        var _tempData = [];\n                                        var _color = null;\n                                        labels.forEach(function (_l, _index) {\n                                            if (_l == $scope.currentHighLightChildDevice) {\n                                                _color = colors[_index];\n                                                $scope.currentChart.file_.forEach(function (_row) {\n                                                    var tempObj = {};\n                                                    tempObj[_row[0].getTime()] = _row[_index];\n                                                    _tempData.push(tempObj);\n                                                });\n                                            }\n                                        });\n                                        $scope.highlights.onExternal.push({\n                                            name: $scope.currentHighLightChildDevice,\n                                            id: $scope.currentHighLightChildDevice,\n                                            data: _tempData,\n                                            color: _color\n                                        });\n                                    }\n                                });\n\n                            },\n                            unhighlightCallback: function (e) {\n\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                },\n                                \"y2\": {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        };\n                        if (newLines && newLines.length > 0) {\n                            if (labels.length > _tempVisibility.length) {\n                                // don't\n                                console.info(\"first time\");\n                            } else {\n                                _tempConfig['visibility'] = _tempVisibility;\n                            }\n                            // \n                            $scope.currentChart.updateOptions(_tempConfig);\n\n                            if ($scope.resetVisibilityRequest === true) {\n                                // reset visibility\n                                var visibilities = $scope.currentChart.getOption('visibility');\n                                var _tempV = [];\n                                visibilities.forEach(function (_v) {\n                                    _tempV.push(true);\n                                });\n                                $scope.currentChart.updateOptions({\n                                    'visibility': _tempV\n                                });\n                                $scope.resetVisibilityRequest = false;\n                            }\n\n\n                        }\n                        // reset l & r axes window\n                        var axesRight = $scope.currentChart.axes_[1];\n                        var axesLeft = $scope.currentChart.axes_[0];\n                        if (initScale && initScale.left && initScale.left.length > 0) {\n                            //init scale found\n                            initScale.left.forEach(function (_levelConfig) {\n                                // find current\n                                if ((store == _levelConfig.level && !$scope.currentInitScaleLevelLeftConf) || $scope.forceScale) {\n                                    // found it\n                                    // set\n                                    axesLeft.valueWindow = _levelConfig.range;\n                                    $scope.currentInitScaleLevelLeftConf = _levelConfig;\n                                    $scope.currentChart.drawGraph_(false);\n                                    $scope.forceScale = false;\n                                }\n                            });\n                        }\n\n                        if (initScale && initScale.right && initScale.right.length > 0) {\n                            //init scale found\n                            initScale.right.forEach(function (_levelConfig) {\n                                // find current\n                                if (store == _levelConfig.level) {\n                                    // found it\n                                    // set\n                                    axesRight.valueWindow = _levelConfig.range;\n                                    $scope.currentInitScaleLevelRightConf = _levelConfig;\n                                    $scope.currentChart.drawGraph_(false);\n                                    $scope.forceScale = false;\n                                }\n                            });\n                        }\n                        $scope.loadingShow = false;\n                    }\n                }\n            };\n\n\n            /**\n             * update detail chart\n             * @param metadata\n             * @param store\n             * @param rangeData\n             * @param allData\n             */\n            var updateDetailChart = function (metadata, store, rangeData, allData) {\n\n                var deviceConfig = metadata.data.groups[1];\n                var collections = deviceConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var leftAndRight = {\n                    left: deviceConfig.leftYAxis,\n                    right: deviceConfig.rightYAxis\n                };\n\n                var initScale = null;\n                if (deviceConfig.initScale) {\n                    initScale = deviceConfig.initScale; // {left:{level:\"\",range:[num1,num2]},right:{}}\n                }\n\n                var legendStyle = \"follow\";\n                if (deviceConfig.legend && \"\" != deviceConfig.legend) {\n                    legendStyle = deviceConfig.legend;\n                }\n\n                var allLines = [];\n                //0 for y  1 for y2\n                var yRanges = [{\n                    min: null,\n                    max: null\n                }, {\n                    min: null,\n                    max: null\n                }];\n\n                var yStartLeft0 = false;\n                var yStartRight0 = false;\n\n\n                angular$1.forEach(collections, function (collection) {\n                    if (collection.name == store) {\n                        angular$1.forEach(allData, function (line) {\n                            allLines.push([new Date(line.timestamp)]);\n                        });\n\n                        // var yRange = {'min': null, 'max': null};\n                        var showY2axis = false;\n                        angular$1.forEach(collection.rows, function (row) {\n                            labels.push(row.label);\n                            colors.push(row.color);\n                            series[row.label] = {\n                                'axis': 'y1'\n                            };\n                            if (row.yaxis == 1) {\n                                series[row.label].axis = 'y2';\n                                showY2axis = true;\n                                $scope.showY2Btns = true;\n                            }\n\n                            if (row.type && row.type === \"bar\") {\n                                series[row.label][\"group\"] = \"_\" + Math.floor(Math.random() * 1000) + 1;\n                                series[row.label][\"plotter\"] = stackedBarPlotter;\n                                if (row.yaxis == 0) {\n                                    yStartLeft0 = true;\n                                } else if (row.yaxis == 1) {\n                                    yStartRight0 = true;\n                                }\n\n                            }\n\n                            if (row.type && row.type === \"dots\") {\n                                series[row.label][\"group\"] = \"_\" + Math.floor(Math.random() * 1000) + 1;\n                                series[row.label][\"plotter\"] = dotsPlotter;\n                            }\n\n                            if (row.type && row.type === \"stacked-bar\") {\n                                //group name\n                                series[row.label][\"group\"] = row.group || \"_\" + Math.floor(Math.random() * 1000) + 1;\n                                series[row.label][\"plotter\"] = stackedBarPlotter;\n                                if (row.yaxis == 0) {\n                                    yStartLeft0 = true;\n                                } else if (row.yaxis == 1) {\n                                    yStartRight0 = true;\n                                }\n                            }\n\n\n                            var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n\n                            var filterF = null;\n                            if (row.filter) {\n                                filterF = row.filter;\n                            }\n\n                            // add value\n                            var counter = 0;\n                            angular$1.forEach(allLines, function (realLine) {\n                                try {\n                                    var value = f(allData[counter]);\n                                    if ((filterF && filterF(value)) || !filterF) {\n                                        realLine.push(value);\n                                        if (row.yaxis == 0) {\n                                            if (yRanges[0].min == null) {\n                                                yRanges[0].min = value;\n                                            }\n\n                                            if (yRanges[0].max == null) {\n                                                yRanges[0].max = value;\n                                            }\n\n                                            if (yRanges[0].min > value) {\n                                                yRanges[0].min = value;\n                                            }\n\n                                            if (yRanges[0].max < value) {\n                                                yRanges[0].max = value;\n                                            }\n                                        } else {\n                                            if (yRanges[1].min == null) {\n                                                yRanges[1].min = value;\n                                            }\n\n                                            if (yRanges[1].max == null) {\n                                                yRanges[1].max = value;\n                                            }\n\n                                            if (yRanges[1].min > value) {\n                                                yRanges[1].min = value;\n                                            }\n\n                                            if (yRanges[1].max < value) {\n                                                yRanges[1].max = value;\n                                            }\n                                        }\n                                    } else {\n                                        realLine.push(value);\n                                    }\n                                } catch (ex) {\n                                    realLine.push(null);\n                                }\n                                counter++;\n                            });\n\n                        });\n\n                        angular$1.forEach(yRanges, function (yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max) * 0.10;\n                            }\n                        });\n\n                        if (allLines.length == 0) {\n                            $scope.currentChart.updateOptions({\n                                'file': [],\n                                highlightSeriesOpts: {\n                                    strokeWidth: 1.5,\n                                    strokeBorderWidth: 1,\n                                    highlightCircleSize: 2\n                                }\n                            });\n                            if ($scope.rangeSelectorBar) {\n                                // $scope.currentChart[\"xAxisZoomRange\"] = $scope.rangeSelectorBar.xAxisExtremes();\n                            }\n                            $scope.loadingShow = false;\n                        } else {\n                            if ($scope.currentChart) {\n                                var connectSeparatedPoints = false;\n                                if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                                    connectSeparatedPoints = true; //'connectSeparatedPoints': connectSeparatedPoints,\n                                }\n                                initDeviceInteractions();\n                                if (showY2axis) {\n                                    $scope.currentChartOptions = {\n                                        'connectSeparatedPoints': connectSeparatedPoints,\n                                        'drawGapEdgePoints': true,\n                                        'pointSize': 2,\n                                        'legend': legendStyle ? legendStyle : \"follow\",\n                                        labelsSeparateLines: true,\n                                        highlightSeriesOpts: {\n                                            strokeWidth: 1.5,\n                                            strokeBorderWidth: 1,\n                                            highlightCircleSize: 2\n                                        },\n                                        'labelsKMB': true,\n                                        'file': allLines,\n                                        'labels': ['x'].concat(labels),\n                                        'ylabel': leftAndRight.left,\n                                        'y2label': leftAndRight.right,\n                                        'series': series,\n                                        'axes': {\n                                            'y': {\n                                                valueRange: [yStartLeft0 == true ? 0 : yRanges[0].min, yRanges[0].max],\n                                                axisLabelWidth: 80\n                                            },\n                                            'y2': {\n                                                'labelsKMB': true,\n                                                axisLabelFormatter: function (y2, granularity, opts, g) {\n                                                    return Dygraph.numberValueFormatter(y2,opts);\n                                                },\n                                                valueRange: [yStartRight0 == true ? 0 : yRanges[1].min, yRanges[1].max],\n                                                axisLabelWidth: 80\n                                            }\n                                        },\n                                        'colors': colors\n                                        // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                    };\n                                    $scope.currentVisibility_ = [];\n                                    $scope.memoryVisibility = [];\n\n                                    $scope.downloadData = {\n                                        \"labels\": ['datetime'].concat(labels),\n                                        \"data\": allLines\n                                    };\n\n\n                                    $scope.currentChart.updateOptions({\n                                        'connectSeparatedPoints': connectSeparatedPoints,\n                                        'drawGapEdgePoints': true,\n                                        'pointSize': 2,\n                                        'legend': legendStyle ? legendStyle : \"follow\",\n                                        labelsSeparateLines: true,\n                                        highlightSeriesOpts: {\n                                            strokeWidth: 1.5,\n                                            strokeBorderWidth: 1,\n                                            highlightCircleSize: 2\n                                        },\n                                        'labelsKMB': true,\n                                        'file': allLines,\n                                        'labels': ['x'].concat(labels),\n                                        'labelsTimezone': {\n                                            getFullYear: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.year();\n                                                } else {\n                                                    return d.getFullYear();\n                                                }\n                                            },\n                                            getMonth: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.month();\n                                                } else {\n                                                    return d.getMonth();\n                                                }\n                                            },\n                                            getDate: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.date();\n                                                } else {\n                                                    return d.getDate();\n                                                }\n\n                                            },\n                                            getHours: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.hour();\n                                                } else {\n                                                    return d.getHours();\n                                                }\n\n                                            },\n                                            getMinutes: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.minute();\n                                                } else {\n                                                    return d.getMinutes();\n                                                }\n\n                                            },\n                                            getSeconds: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.second();\n                                                } else {\n                                                    return d.getSeconds();\n                                                }\n\n                                            },\n                                            getMilliseconds: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.millisecond();\n                                                } else {\n                                                    return d.getMilliseconds();\n                                                }\n\n                                            },\n                                            getDay: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.day();\n                                                } else {\n                                                    return d.getDay();\n                                                }\n                                            },\n                                            makeDate: function (y, m, d, hh, mm, ss, ms) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _temp = new Date(y, m, d, hh, mm, ss, ms);\n                                                    return moment.tz([_temp.getFullYear(), _temp.getMonth(), _temp.getDate(), _temp.getHours(), _temp.getMinutes(), _temp.getMilliseconds()], $scope.dateFormatter.timezone).toDate();\n                                                } else {\n                                                    return new Date(y, m, d, hh, mm, ss, ms);\n                                                }\n                                            }\n                                        },\n                                        'ylabel': leftAndRight.left,\n                                        'y2label': leftAndRight.right,\n                                        'series': series,\n                                        'zoomCallback': function (minX, maxX, yRanges) {\n                                            console.info(minX, maxX, yRanges);\n                                        },\n                                        'axes': {\n                                            'x': {\n                                                valueFormatter: function (ms) {\n                                                    var result = moment(ms);\n                                                    if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                        result = result.tz($scope.dateFormatter.timezone);\n                                                    } else {\n                                                        result = result.tz(moment.tz.guess());\n                                                    }\n\n                                                    if ($scope.dateFormatter && $scope.dateFormatter.pattern) {\n                                                        return result.format($scope.dateFormatter.pattern);\n                                                    } else {\n                                                        return result.format();\n                                                    }\n                                                }\n                                            },\n                                            'y': {\n                                                valueRange: [yStartLeft0 == true ? 0 : yRanges[0].min, yRanges[0].max],\n                                                axisLabelWidth: 80\n                                            },\n                                            'y2': {\n                                                'labelsKMB': true,\n                                                axisLabelFormatter: function (y2, granularity, opts, g) {\n                                                    return Dygraph.numberValueFormatter(y2,opts);\n                                                },\n                                                valueRange: [yStartRight0 == true ? 0 : yRanges[1].min, yRanges[1].max],\n                                                axisLabelWidth: 80\n                                            }\n                                        },\n                                        'colors': colors\n                                        // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n\n                                    });\n                                } else {\n                                    var newLines = [];\n                                    $scope.showY2Btns = false;\n                                    angular$1.copy(allLines, newLines);\n                                    angular$1.forEach(newLines, function (line) {\n                                        line.push(null);\n                                    });\n\n                                    series[\"span-Y2\"] = {\n                                        axis: 'y2'\n                                    };\n\n                                    $scope.currentChartOptions = {\n                                        'connectSeparatedPoints': connectSeparatedPoints,\n                                        'drawGapEdgePoints': true,\n                                        'pointSize': 2,\n                                        'legend': legendStyle ? legendStyle : \"follow\",\n                                        labelsSeparateLines: true,\n                                        highlightSeriesOpts: {\n                                            strokeWidth: 1.5,\n                                            strokeBorderWidth: 1,\n                                            highlightCircleSize: 2\n                                        },\n                                        'labelsKMB': true,\n                                        'file': newLines,\n                                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                                        'ylabel': leftAndRight.left,\n                                        'y2label': \"\",\n                                        'series': series,\n                                        'axes': {\n                                            'y': {\n                                                valueRange: [yStartLeft0 == true ? 0 : yRanges[0].min, yRanges[0].max],\n                                                axisLabelWidth: 80\n                                            },\n                                            'y2': {\n                                                'labelsKMB': true,\n                                                axisLabelFormatter: function (y2, granularity, opts, g) {\n                                                    return Dygraph.numberValueFormatter(y2,opts);\n                                                },\n                                                valueRange: [yStartRight0 == true ? 0 : yRanges[1].min, yRanges[1].max],\n                                                axisLabelWidth: 80\n                                            }\n                                        },\n                                        'colors': colors\n                                        // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                    };\n\n                                    $scope.downloadData = {\n                                        \"labels\": ['datetime'].concat(labels).concat(['span_y2']),\n                                        \"data\": newLines\n                                    };\n\n                                    $scope.currentVisibility_ = [];\n                                    $scope.memoryVisibility = [];\n                                    $scope.currentChart.updateOptions({\n                                        'connectSeparatedPoints': connectSeparatedPoints,\n                                        'drawGapEdgePoints': true,\n                                        'pointSize': 2,\n                                        'legend': legendStyle ? legendStyle : \"follow\",\n                                        labelsSeparateLines: true,\n                                        // 'visibility': _tempVisibility,\n                                        highlightSeriesOpts: {\n                                            strokeWidth: 1.5,\n                                            strokeBorderWidth: 1,\n                                            highlightCircleSize: 2\n                                        },\n                                        'labelsKMB': true,\n                                        'file': newLines,\n                                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                                        'labelsTimezone': {\n                                            getFullYear: function (d) {\n\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.year();\n                                                } else {\n                                                    return d.getFullYear();\n                                                }\n\n                                            },\n                                            getMonth: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.month();\n                                                } else {\n                                                    return d.getMonth();\n                                                }\n                                            },\n                                            getDate: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.date();\n                                                } else {\n                                                    return d.getDate();\n                                                }\n\n                                            },\n                                            getHours: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.hour();\n                                                } else {\n                                                    return d.getHours();\n                                                }\n\n                                            },\n                                            getMinutes: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.minute();\n                                                } else {\n                                                    return d.getMinutes();\n                                                }\n\n                                            },\n                                            getSeconds: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.second();\n                                                } else {\n                                                    return d.getSeconds();\n                                                }\n\n                                            },\n                                            getMilliseconds: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.millisecond();\n                                                } else {\n                                                    return d.getMilliseconds();\n                                                }\n\n                                            },\n                                            getDay: function (d) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _date = moment.tz(d.getTime(), $scope.dateFormatter.timezone);\n                                                    return _date.day();\n                                                } else {\n                                                    return d.getDay();\n                                                }\n\n                                            },\n                                            makeDate: function (y, m, d, hh, mm, ss, ms) {\n                                                if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                    var _temp = new Date(y, m, d, hh, mm, ss, ms);\n                                                    return moment.tz([_temp.getFullYear(), _temp.getMonth(), _temp.getDate(), _temp.getHours(), _temp.getMinutes(), _temp.getMilliseconds()], $scope.dateFormatter.timezone).toDate();\n                                                } else {\n                                                    return new Date(y, m, d, hh, mm, ss, ms);\n                                                }\n                                            }\n                                        },\n                                        'ylabel': leftAndRight.left,\n                                        'y2label': \"\",\n                                        'series': series,\n                                        'axes': {\n                                            'x': {\n                                                valueFormatter: function (ms) {\n                                                    var result = moment(ms);\n\n                                                    if ($scope.dateFormatter && $scope.dateFormatter.timezone) {\n                                                        result = result.tz($scope.dateFormatter.timezone);\n                                                    } else {\n                                                        result = result.tz(moment.tz.guess());\n                                                    }\n\n                                                    if ($scope.dateFormatter && $scope.dateFormatter.pattern) {\n                                                        return result.format($scope.dateFormatter.pattern);\n                                                    } else {\n                                                        return result.format();\n                                                    }\n                                                }\n                                            },\n                                            'y': {\n                                                valueRange: [yStartLeft0 == true ? 0 : yRanges[0].min, yRanges[0].max],\n                                                axisLabelWidth: 80\n                                            },\n                                            \"y2\": {\n                                                axisLabelFormatter: function (d) {\n                                                    return '';\n                                                },\n                                                axisLabelWidth: 80\n                                            }\n                                        },\n                                        'colors': colors\n                                        // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                    });\n                                }\n\n\n                                if ($scope.resetVisibilityRequest === true) {\n                                    // reset visibility\n                                    var visibilities = $scope.currentChart.getOption('visibility');\n                                    var _tempV = [];\n                                    visibilities.forEach(function (_v) {\n                                        _tempV.push(true);\n                                    });\n                                    $scope.currentChart.updateOptions({\n                                        'visibility': _tempV\n                                    });\n                                    $scope.resetVisibilityRequest = false;\n                                }\n\n                                // reset l & r axes window\n                                var axesRight = $scope.currentChart.axes_[1];\n                                var axesLeft = $scope.currentChart.axes_[0];\n                                if (initScale && initScale.left && initScale.left.length > 0) {\n                                    //init scale found\n                                    initScale.left.forEach(function (_levelConfig) {\n                                        // find current\n                                        if ((store == _levelConfig.level && !$scope.currentInitScaleLevelLeftConf) || $scope.forceScale) {\n                                            // found it\n                                            // set\n                                            axesLeft.valueWindow = _levelConfig.range;\n                                            $scope.currentInitScaleLevelLeftConf = _levelConfig;\n                                            $scope.currentChart.drawGraph_(false);\n                                            $scope.forceScale = false;\n                                        }\n                                    });\n                                }\n\n                                if (initScale && initScale.right && initScale.right.length > 0) {\n                                    //init scale found\n                                    initScale.right.forEach(function (_levelConfig) {\n                                        // find current\n                                        if (store == _levelConfig.level) {\n                                            // found it\n                                            // set\n                                            axesRight.valueWindow = _levelConfig.range;\n                                            $scope.currentInitScaleLevelRightConf = _levelConfig;\n                                            $scope.currentChart.drawGraph_(false);\n                                        }\n                                    });\n                                }\n\n                                $scope.loadingShow = false;\n                            }\n                        }\n\n\n                    }\n                });\n\n\n            };\n\n            $scope.autoUpdateChart = updateDetailChart;\n\n            /**\n             * update range chart\n             * @param metadata\n             * @param store\n             * @param allData\n             */\n            var updateChart = function (metadata, store, allData, rangeTree) {\n                $scope.seriesList = [];\n                var deviceConfig = metadata.data.groups[1];\n                var collections = deviceConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var leftAndRight = {\n                    left: deviceConfig.leftYAxis,\n                    right: deviceConfig.rightYAxis\n                };\n                var initScale = null;\n                if (deviceConfig.initScale) {\n                    initScale = deviceConfig.initScale; // {left:{level:\"\",range:[num1,num2]},right:{}}\n                }\n                var allLines = [];\n                //0 for y  1 for y2\n                var yRanges = [{\n                    min: null,\n                    max: null\n                }, {\n                    min: null,\n                    max: null\n                }];\n                angular$1.forEach(collections, function (collection) {\n                    if (collection.name == store) {\n                        $scope.currentIntervalName = store;\n                        angular$1.forEach(allData, function (line) {\n                            allLines.push([new Date(line.timestamp)]);\n                        });\n\n                        $scope.rangeSeriesNumber = collection.rows.length;\n                        $scope.rangeCollectionConfig = collection;\n                        var showY2axis = false;\n                        angular$1.forEach(collection.rows, function (row) {\n                            labels.push(row.label);\n                            colors.push(row.color);\n                            $scope.seriesList.push({\n                                \"label\": row.label,\n                                \"show\": true\n                            });\n\n                            if (row.yaxis == 0) {\n                                series[row.label] = {\n                                    'axis': 'y1'\n                                };\n                            } else {\n                                series[row.label] = {\n                                    'axis': 'y2'\n                                };\n                                showY2axis = true;\n                                $scope.showY2Btns = true;\n                            }\n\n                            var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                            var filterF = null;\n                            if (row.filter) {\n                                filterF = row.filter;\n                            }\n                            // add value\n                            var counter = 0;\n                            angular$1.forEach(allLines, function (realLine) {\n                                try {\n                                    var value = f(allData[counter]);\n                                    if ((filterF && filterF(value)) || !filterF) {\n                                        realLine.push(value);\n                                        if (row.yaxis == 0) {\n                                            if (yRanges[0].min == null) {\n                                                yRanges[0].min = value;\n                                            }\n\n                                            if (yRanges[0].max == null) {\n                                                yRanges[0].max = value;\n                                            }\n\n                                            if (yRanges[0].min > value) {\n                                                yRanges[0].min = value;\n                                            }\n\n                                            if (yRanges[0].max < value) {\n                                                yRanges[0].max = value;\n                                            }\n                                        } else {\n                                            if (yRanges[1].min == null) {\n                                                yRanges[1].min = value;\n                                            }\n\n                                            if (yRanges[1].max == null) {\n                                                yRanges[1].max = value;\n                                            }\n\n                                            if (yRanges[1].min > value) {\n                                                yRanges[1].min = value;\n                                            }\n\n                                            if (yRanges[1].max < value) {\n                                                yRanges[1].max = value;\n                                            }\n                                        }\n                                    } else {\n                                        realLine.push(null);\n                                    }\n                                } catch (ex) {\n                                    realLine.push(null);\n                                }\n                                counter++;\n                            });\n\n                        });\n\n                        if ($scope.currentChart) {\n                            $scope.rangeData = allLines;\n                            var basicInfo = $scope.basicInfo;\n                            if (basicInfo && basicInfo.range_show) {\n                                var rangeBarLabels = [];\n                                for (var i = 0; i < labels.length; i++) {\n                                    rangeBarLabels.push(\"l\" + i);\n                                }\n                                var series_range = {\n                                    'l0': {\n                                        axis: 'y1'\n                                    }\n                                };\n                                if (showY2axis) {\n                                    //noinspection JSDuplicatedDeclaration\n                                    series_range = {\n                                        'l0': {\n                                            axis: 'y1'\n                                        },\n                                        'l0': {\n                                            axis: 'y2'\n                                        }\n                                    };\n                                    $scope.rangeSeries = series_range;\n\n                                    $scope.rangeSelectorBar.updateOptions({\n                                        'file': allLines,\n                                        'labels': ['x'].concat(rangeBarLabels),\n                                        'series': series_range,\n                                        highlightSeriesOpts: {\n                                            strokeWidth: 1.5,\n                                            strokeBorderWidth: 1,\n                                            highlightCircleSize: 2\n                                        }\n                                    });\n                                } else {\n                                    series_range[\"span_y2\"] = {\n                                        axis: 'y2'\n                                    };\n                                    $scope.showY2Btns = false;\n                                    $scope.rangeSeries = series_range;\n                                    var newLines = [];\n                                    angular$1.copy(allLines, newLines);\n                                    angular$1.forEach(newLines, function (line) {\n                                        line.push(null);\n                                    });\n                                    $scope.rangeSelectorBar.updateOptions({\n                                        'file': newLines,\n                                        'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                        'series': series_range,\n                                        highlightSeriesOpts: {\n                                            strokeWidth: 1.5,\n                                            strokeBorderWidth: 1,\n                                            highlightCircleSize: 2\n                                        }\n                                    });\n                                    // save\n                                }\n\n\n                            }\n\n                            angular$1.forEach(yRanges, function (yrange) {\n                                if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                    yrange.min = yrange.min - (yrange.min) * 0.10;\n                                    yrange.max = yrange.max + (yrange.max) * 0.10;\n                                }\n                            });\n\n\n                            // if graph has 2 yAxis or a yAxis\n                            var connectSeparatedPoints = false;\n                            if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                                connectSeparatedPoints = true; //'connectSeparatedPoints': connectSeparatedPoints,\n                            }\n\n                            if (showY2axis) {\n                                $scope.rangeConfig = {\n                                    'connectSeparatedPoints': connectSeparatedPoints,\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 2,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: {\n                                        strokeWidth: 1.5,\n                                        strokeBorderWidth: 1,\n                                        highlightCircleSize: 2\n                                    },\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n\n                                    'series': series,\n                                    'colors': colors,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            axisLabelFormatter: function (y2, granularity, opts, g) {\n                                                return Dygraph.numberValueFormatter(y2,opts);\n                                            },\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                    // showRangeSelector: true\n                                };\n                            } else {\n                                series['span_y2'] = {\n                                    axis: 'y2'\n                                };\n                                $scope.showY2Btns = false;\n                                var newLines = [];\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function (line) {\n                                    line.push(null);\n                                });\n                                $scope.rangeConfig = {\n                                    'connectSeparatedPoints': connectSeparatedPoints,\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 2,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: {\n                                        strokeWidth: 1.5,\n                                        strokeBorderWidth: 1,\n                                        highlightCircleSize: 2\n                                    },\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'colors': colors,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        \"y2\": {\n                                            axisLabelFormatter: function (d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                    // showRangeSelector: true\n                                };\n                            }\n\n\n                            if (basicInfo && basicInfo.range_show) {\n                                $scope.rangeSelectorBar[\"_name_fgp\"] = \"rangebar\";\n                                $scope.currentChart[\"_name_fgp\"] = deviceConfig;\n                                Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                    zoom: true,\n                                    selection: false,\n                                    range: false\n                                });\n                            }\n\n                            //&& ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000)\n                            if ($scope.chartDateWindow && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                                // keep the current range bar refresh once.\n                                $scope.chartDateTime = {\n                                    begin: $scope.chartDateTime.begin,\n                                    end: $scope.chartDateTime.end\n                                };\n                                $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                            } else {\n                                $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                if (begin_path && end_path && !init_flag) {\n                                    // $scope.chartDateWindow = [new Date(new Number(begin_path)).getTime(), new Date(new Number(end_path)).getTime()];\n                                    $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)).getTime(), new Date(new Number(end_path)).getTime()];\n                                    init_flag = true;\n                                } else {\n\n                                    if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.period && $scope.interactions.graphs.period.device) {\n                                        //this is a function\n                                        var period = [];\n                                        if (typeof $scope.interactions.graphs.period.device === \"function\") {\n                                            period = $scope.interactions.graphs.period.device();\n                                        } else if ($scope.interactions.graphs.period.device instanceof Array) {\n                                            period = $scope.interactions.graphs.period.device;\n                                        }\n                                        $scope.rangeConfig.dateWindow = period;\n                                    } else {\n                                        if ($scope.currentIntervalChoosed && ((allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= allLines[0][0].getTime())) {\n                                            $scope.rangeConfig.dateWindow = [allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval, allLines[allLines.length - 1][0].getTime()];\n                                        } else {\n                                            $scope.chartDateWindow = [allLines[0][0].getTime(), allLines[allLines.length - 1][0].getTime()];\n                                            $scope.rangeConfig.dateWindow = [allLines[0][0].getTime(), allLines[allLines.length - 1][0].getTime()];\n                                        }\n                                    }\n                                }\n                                $scope.currentChart.updateOptions($scope.rangeConfig);\n                                // reset l & r axes window\n                                var axesRight = $scope.currentChart.axes_[1];\n                                var axesLeft = $scope.currentChart.axes_[0];\n                                if (initScale && initScale.left && initScale.left.length > 0) {\n                                    //init scale found\n                                    initScale.left.forEach(function (_levelConfig) {\n                                        // find current\n                                        if ((store == _levelConfig.level && !$scope.currentInitScaleLevelLeftConf) || $scope.forceScale) {\n                                            // found it\n                                            // set\n                                            axesLeft.valueWindow = _levelConfig.range;\n                                            $scope.currentInitScaleLevelLeftConf = _levelConfig;\n                                            $scope.currentChart.drawGraph_(false);\n                                            $scope.forceScale = false;\n                                        }\n                                    });\n                                }\n\n                                if (initScale && initScale.right && initScale.right.length > 0) {\n                                    //init scale found\n                                    initScale.right.forEach(function (_levelConfig) {\n                                        // find current\n                                        if (store == _levelConfig.level) {\n                                            // found it\n                                            // set\n                                            axesRight.valueWindow = _levelConfig.range;\n                                            $scope.currentInitScaleLevelRightConf = _levelConfig;\n                                            $scope.currentChart.drawGraph_(false);\n                                        }\n                                    });\n                                }\n\n\n                                $scope.currentChartOptions = $scope.rangeConfig;\n                            }\n                            //bind\n                            $scope.loadingShow = false;\n                        }\n\n                    }\n                });\n            };\n\n            $scope.chartDateTime = {\n                begin: null,\n                end: null\n            };\n\n\n            $scope.drillDown = function () {\n                //get redirect configuration from interactions\n                if ($scope.currentView == 1 && $scope.currentHighLightChildDevice && $scope.drill && $scope.drill.graphs && $scope.drill.graphs.drillDown && $scope.drill.graphs.drillDown.url) {\n                    //\n                    var url = $scope.drill.graphs.drillDown.url;\n                    url = url.replace(\"{0}\", $scope.currentHighLightChildDevice);\n                    $window.open(url);\n                }\n            };\n            // function for show one\n            $scope.showOne = function (deviceName) {\n\n                if ($rootScope['standalone'] && $rootScope['standalone'] == true) {\n                    return false;\n                }\n\n                // device type is\n                if ($location.url().indexOf('/app/page/param/') != -1) {\n                    //open window\n                    $window.open(\"/admin/#/app/page/param/\" + $rootScope.applicationName + \"/\" + metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1]));\n                } else {\n                    //open window\n                    $window.open(\"/admin/#\" + $location.url().replace(\"show\", \"param\").replace($location.url().substr($location.url().lastIndexOf('/', $location.url().lastIndexOf('/') - 1) + 1), metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1])));\n                }\n\n            };\n\n\n            var btntimer = null;\n\n            $scope.btnZoomInVLeft = function () {\n                var g = $scope.currentChart;\n                var yAxes = g.axes_;\n                var range = yAxes[0].valueRange;\n                yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n                yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n                g.drawGraph_(true);\n            };\n\n            $scope.btnZoomOutVLeft = function () {\n                var g = $scope.currentChart;\n                var yAxes = g.axes_;\n                var range = yAxes[0].valueRange;\n                yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n                yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n                g.drawGraph_(true);\n            };\n\n            $scope.btnZoomInVRight = function () {\n                var g = $scope.currentChart;\n                var yAxes = g.axes_;\n                var range = yAxes[1].valueRange;\n                yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n                yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n                g.drawGraph_(true);\n            };\n\n            $scope.btnZoomOutVRight = function () {\n                var g = $scope.currentChart;\n                var yAxes = g.axes_;\n                var range = yAxes[1].valueRange;\n                yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n                yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n                g.drawGraph_(true);\n            };\n\n            $scope.btnPanVULeft = function () {\n                var g = $scope.currentChart;\n                var yAxes = g.axes_;\n                var range = [];\n                if (yAxes[0].valueWindow) {\n                    range = yAxes[0].valueWindow;\n                } else {\n                    range = yAxes[0].valueRange;\n                }\n                yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n                yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n                g.drawGraph_(true);\n            };\n\n\n            $scope.btnPanVDLeft = function () {\n                var g = $scope.currentChart;\n                var yAxes = g.axes_;\n                var range = [];\n                if (yAxes[0].valueWindow) {\n                    range = yAxes[0].valueWindow;\n                } else {\n                    range = yAxes[0].valueRange;\n                }\n                yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n                yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n                g.drawGraph_(true);\n            };\n\n\n            $scope.btnPanVURight = function () {\n                var g = $scope.currentChart;\n                var yAxes = g.axes_;\n                var range = [];\n                if (yAxes[1].valueWindow) {\n                    range = yAxes[1].valueWindow;\n                } else {\n                    range = yAxes[1].valueRange;\n                }\n                yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n                yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n                g.drawGraph_(true);\n            };\n\n            $scope.btnPanVDRight = function () {\n                var g = $scope.currentChart;\n                var yAxes = g.axes_;\n                var range = [];\n                if (yAxes[1].valueWindow) {\n                    range = yAxes[1].valueWindow;\n                } else {\n                    range = yAxes[1].valueRange;\n                }\n                yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n                yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n                g.drawGraph_(true);\n            };\n\n            // functions for buttons\n            $scope.btnpanleft = function () {\n                // get current datetime window\n                var g = $scope.currentChart;\n                if ($scope.memoryVisibility && $scope.memoryVisibility.length == 0 && $scope.hp && $scope.hp == true) {\n                    $scope.memoryVisibility = g.getOption(\"visibility\");\n                    var _tempVi = [];\n                    $scope.currentChart.getOption(\"visibility\").forEach(function (_v, _index) {\n                        _tempVi[_index] = false;\n                    });\n                    $scope.currentChart.updateOptions({\n                        \"visibility\": _tempVi\n                    });\n                }\n                var panRange = g.xAxisZoomRange;\n                if (g.xAxisZoomRange[0] instanceof Date) {\n                    panRange[0] = g.xAxisZoomRange[0].getTime();\n                }\n                if (g.xAxisZoomRange[1] instanceof Date) {\n                    panRange[1] = g.xAxisZoomRange[1].getTime();\n                }\n\n                //split range to 20 pieces\n                var pan_delta = (panRange[1] - panRange[0]) / 20;\n                var startDate;\n                var endDate;\n                if ($scope.chartDateWindow[0] instanceof Date) {\n                    if (($scope.chartDateWindow[0].getTime() - pan_delta) < panRange[0]) {\n                        // go to the left\n                        startDate = panRange[0];\n                    } else {\n                        startDate = $scope.chartDateWindow[0].getTime() - pan_delta;\n                    }\n                } else {\n                    if (($scope.chartDateWindow[0] - pan_delta) < panRange[0]) {\n                        // go to the left\n                        startDate = panRange[0];\n                    } else {\n                        startDate = $scope.chartDateWindow[0] - pan_delta;\n                    }\n                }\n\n                if ($scope.chartDateWindow[1] instanceof Date) {\n                    if (($scope.chartDateWindow[1].getTime() - pan_delta) < (panRange[0] + pan_delta)) {\n                        // go to the left\n                        endDate = panRange[0] + pan_delta;\n                    } else {\n                        endDate = $scope.chartDateWindow[1].getTime() - pan_delta;\n                    }\n                } else {\n                    if (($scope.chartDateWindow[1] - pan_delta) < (panRange[0] + pan_delta)) {\n                        // go to the left\n                        endDate = panRange[0] + pan_delta;\n                    } else {\n                        endDate = $scope.chartDateWindow[1] - pan_delta;\n                    }\n                }\n\n                //update graph\n                $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n                g.updateOptions({\n                    dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n                });\n\n                if (btntimer) {\n                    $timeout.cancel(btntimer);\n                }\n\n                btntimer = $timeout(function () {\n                    btntimer = null;\n                    $scope.chartDateTime = {\n                        begin: new Date(new Number(startDate)),\n                        end: new Date(new Number(endDate))\n                    };\n                }, 600);\n            };\n\n            $scope.btnpanright = function () {\n                // get current datetime window\n                var g = $scope.currentChart;\n                if ($scope.memoryVisibility && $scope.memoryVisibility.length == 0 && $scope.hp && $scope.hp == true) {\n                    $scope.memoryVisibility = g.getOption(\"visibility\");\n                    var _tempVi = [];\n                    $scope.currentChart.getOption(\"visibility\").forEach(function (_v, _index) {\n                        _tempVi[_index] = false;\n                    });\n                    $scope.currentChart.updateOptions({\n                        \"visibility\": _tempVi\n                    });\n                }\n                var panRange = g.xAxisZoomRange;\n                if (g.xAxisZoomRange[0] instanceof Date) {\n                    panRange[0] = g.xAxisZoomRange[0].getTime();\n                }\n                if (g.xAxisZoomRange[1] instanceof Date) {\n                    panRange[1] = g.xAxisZoomRange[1].getTime();\n                }\n\n                //split range to 20 pieces\n                var pan_delta = (panRange[1] - panRange[0]) / 20;\n                var startDate;\n                var endDate;\n                if ($scope.chartDateWindow[0] instanceof Date) {\n                    if (($scope.chartDateWindow[0].getTime() + pan_delta) < (panRange[1] - pan_delta)) {\n                        // go to the left\n                        startDate = $scope.chartDateWindow[0].getTime() + pan_delta;\n                    } else {\n                        startDate = (panRange[1] - pan_delta);\n                    }\n                } else {\n                    if (($scope.chartDateWindow[0] + pan_delta) < (panRange[1] - pan_delta)) {\n                        // go to the left\n                        startDate = ($scope.chartDateWindow[0] + pan_delta);\n                    } else {\n                        startDate = (panRange[1] - pan_delta);\n                    }\n                }\n\n                if ($scope.chartDateWindow[1] instanceof Date) {\n                    if (($scope.chartDateWindow[1].getTime() + pan_delta) < panRange[1]) {\n                        // go to the left\n                        endDate = ($scope.chartDateWindow[1].getTime() + pan_delta);\n                    } else {\n                        endDate = panRange[1];\n                    }\n                } else {\n                    if (($scope.chartDateWindow[1] + pan_delta) < panRange[1]) {\n                        // go to the left\n                        endDate = ($scope.chartDateWindow[1] + pan_delta);\n                    } else {\n                        endDate = panRange[1];\n                    }\n                }\n\n                //update graph\n                if (btntimer) {\n                    $timeout.cancel(btntimer);\n                }\n\n                $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n                g.updateOptions({\n                    dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n                });\n\n                btntimer = $timeout(function () {\n                    btntimer = null;\n                    $scope.chartDateTime = {\n                        begin: new Date(new Number(startDate)),\n                        end: new Date(new Number(endDate))\n                    };\n                }, 600);\n            };\n\n\n            $scope.btnzoomin = function () {\n                // get current datetime window\n                var g = $scope.currentChart;\n                if ($scope.memoryVisibility && $scope.memoryVisibility.length == 0 && $scope.hp && $scope.hp == true) {\n                    $scope.memoryVisibility = g.getOption(\"visibility\");\n                    var _tempVi = [];\n                    $scope.currentChart.getOption(\"visibility\").forEach(function (_v, _index) {\n                        _tempVi[_index] = false;\n                    });\n                    $scope.currentChart.updateOptions({\n                        \"visibility\": _tempVi\n                    });\n                }\n                //split range to 20 pieces\n                var startDate;\n                var endDate;\n\n                var rangeStart = $scope.chartDateWindow[0];\n                if ($scope.chartDateWindow[0] instanceof Date) {\n                    rangeStart = $scope.chartDateWindow[0].getTime();\n                }\n                var rangeEnd = $scope.chartDateWindow[1];\n                if ($scope.chartDateWindow[1] instanceof Date) {\n                    rangeEnd = $scope.chartDateWindow[1].getTime();\n                }\n\n                var delta = (rangeEnd - rangeStart) / 20;\n\n                startDate = rangeStart + (delta * 2);\n                endDate = rangeEnd - (delta * 2);\n                //update graph\n                $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n                //\n                g.updateOptions({\n                    dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n                });\n\n                if (btntimer) {\n                    $timeout.cancel(btntimer);\n                }\n\n                btntimer = $timeout(function () {\n                    $scope.chartDateTime = {\n                        begin: new Date(new Number(startDate)),\n                        end: new Date(new Number(endDate))\n                    };\n                }, 600);\n            };\n\n            $scope.btnzoomout = function () {\n                // get current datetime window\n                var g = $scope.currentChart;\n                if ($scope.memoryVisibility && $scope.memoryVisibility.length == 0 && $scope.hp && $scope.hp == true) {\n                    $scope.memoryVisibility = g.getOption(\"visibility\");\n                    var _tempVi = [];\n                    $scope.currentChart.getOption(\"visibility\").forEach(function (_v, _index) {\n                        _tempVi[_index] = false;\n                    });\n                    $scope.currentChart.updateOptions({\n                        \"visibility\": _tempVi\n                    });\n                }\n                var panRange = g.xAxisZoomRange;\n                if (g.xAxisZoomRange[0] instanceof Date) {\n                    panRange[0] = g.xAxisZoomRange[0].getTime();\n                }\n                if (g.xAxisZoomRange[1] instanceof Date) {\n                    panRange[1] = g.xAxisZoomRange[1].getTime();\n                }\n                //split range to 20 pieces\n                var startDate;\n                var endDate;\n\n                var rangeStart = $scope.chartDateWindow[0];\n                if ($scope.chartDateWindow[0] instanceof Date) {\n                    rangeStart = $scope.chartDateWindow[0].getTime();\n                }\n                var rangeEnd = $scope.chartDateWindow[1];\n                if ($scope.chartDateWindow[1] instanceof Date) {\n                    rangeEnd = $scope.chartDateWindow[1].getTime();\n                }\n\n                var delta = (rangeEnd - rangeStart) / 20;\n\n                if ((rangeStart - (delta * 2)) > panRange[0]) {\n                    startDate = rangeStart - (delta * 2);\n                } else {\n                    startDate = panRange[0];\n                }\n\n                if ((rangeEnd + (delta * 2)) < panRange[1]) {\n                    endDate = rangeEnd + (delta * 2);\n                } else {\n                    endDate = panRange[1];\n                }\n\n                //update graph\n                $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n                g.updateOptions({\n                    dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n                });\n\n                if (btntimer) {\n                    $timeout.cancel(btntimer);\n                }\n\n                btntimer = $timeout(function () {\n                    $scope.chartDateTime = {\n                        begin: new Date(new Number(startDate)),\n                        end: new Date(new Number(endDate))\n                    };\n                }, 600);\n            };\n\n            $scope.currentGxAxisRange = [];\n\n            $scope.currentVisibility_ = [];\n\n            $scope.refershTimer;\n            $scope.childrenInit = true;\n            $scope.refersh = function (g, init, childGraph) {\n                if (init || (g.xAxisRange()[0] != $scope.chartDateTime.begin || g.xAxisRange()[1] != $scope.chartDateTime.end)) {\n                    if ($scope.refershTimer) {\n                        if ($scope.currentView == 1 && $scope.currentVisibility_.length == 0 && !$scope.childrenInit) {\n                            g[\"hideLines\"] = true;\n                            $scope.currentVisibility_ = [].concat($scope.currentChart.getOption(\"visibility\"));\n                        }\n                        $timeout.cancel($scope.refershTimer);\n                    }\n\n                    if ($scope.currentChart) {\n                        var currentLabels = $scope.currentChart.getLabels();\n                        if (currentLabels.length >= 2 && currentLabels[1] != \"Device0\") {\n                            $scope.childrenInit = false;\n                        }\n                    }\n                    $scope.refershTimer = $timeout(function () {\n                        $scope.refershTimer = null;\n                        g[\"hideLines\"] = false;\n                        $scope.chartDateTime = {\n                            begin: g.xAxisRange()[0],\n                            end: g.xAxisRange()[1]\n                        };\n                    }, 300);\n                }\n            };\n\n        }\n\n    }\n\n\n    static\n    buildFactory($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams, $compile, $q) {\n        fgpWidgetGraph.instance = new fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams, $compile, $q);\n        return fgpWidgetGraph.instance;\n    }\n\n}\n\nfgpWidgetGraph\n    .$inject = ['$timeout', 'dataService', '$rootScope', '$interval', '$filter', '$location', '$stateParams', '$compile', '$q'];\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nclass fgpWidgetPageTitle {\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(element, attrs) {\n        var element_id = attrs.id;\n        //drag-channel  item means this widget accepts items\n        var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n            '<div class=\"{{css.width}}\" style=\"-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\">' +\n            '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n            '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"\">' +\n            '<h1>{{css.title.text}}</h1>' +\n            '<h3>{{css.subtitle.text}}</h3>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>';\n        return dom_show;\n    }\n\n\n    controller($scope, $element) {\n        var metadata = null;\n        var element_id = $element.attr(\"id\");\n        var widgetData = null;\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        if (widgetData.data && widgetData.from == \"show\") {\n            metadata = widgetData.data.metadata;\n            $scope.css = {};\n            $scope.css[\"color\"] = metadata.css.color;\n            $scope.css[\"width\"] = metadata.css.width;\n            $scope.css[\"minHeight\"] = metadata.css.minHeight;\n            $scope.css[\"border\"] = {};\n            $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n            $scope.css[\"background\"] = {};\n            $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n            $scope.css[\"title\"] = metadata.css.title;\n            $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n            $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n            $scope.css[\"subtitle\"] = metadata.css.subtitle;\n            $scope.css[\"subtitle\"][\"color\"] = metadata.css.subtitle.color;\n            $scope.css[\"subtitle\"][\"show\"] = metadata.css.subtitle.show;\n\n            $scope.data_from = \"application\";\n            $scope.parent_container = widgetData.data.parent;\n\n            $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                // if the parent container sends a device to here, ignore global device.\n                if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                    return;\n                } else if (deviceData.from != \"application\") {\n                    if ($scope.parent_container != \"edit\" + deviceData.from) {\n                        return;\n                    } else {\n                        $scope.data_from = deviceData.from;\n                    }\n                }\n                var f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"title\"].text + \"}\");\n                $scope.css[\"title\"].text = f(deviceData.device);\n                f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"subtitle\"].text + \"}\");\n                $scope.css[\"subtitle\"].text = f(deviceData.device);\n            });\n        }\n\n\n\n\n    }\n\n    static buildFactory() {\n        fgpWidgetPageTitle.instance = new fgpWidgetPageTitle();\n        return fgpWidgetPageTitle.instance;\n    }\n}\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nclass fgpWidgetMap {\n\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(element, attrs) {\n        var dom_show = '<div class = \"{{css.width}}\" style=\"padding:0px;height:{{css.height}}px;\" map-lazy-load=\"https://maps.google.com/maps/api/js\">' +\n            '<ng-map style=\"height: 100%;width: 100%;\" center=\"{{center}}\" zoom=\"15\">' +\n            '<marker on-click=\"map.showInfoWindow(\\'info_' + attrs.id + '\\')\" id=\"marker_' + attrs.id + '\" ng-repeat=\"item in markers\" icon=\"{{item.image}}\" position=\"{{item.latitude}},{{item.longitude}}\" title=\"{{item.name}}\" animation=\"Animation.DROP\" ></marker>' +\n            '</ng-map>' +\n            '</div>' +\n            '';\n        return dom_show;\n    }\n\n\n    controller($scope, $element) {\n        var metadata = null;\n        var element_id = $element.attr(\"id\");\n        var widgetData = null;\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        /**\n         * get device information\n         */\n        if (widgetData.data && widgetData.from == \"show\") {\n            $scope.data_from = \"application\";\n            $scope.parent_container = widgetData.data.parent;\n\n            $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                // if the parent container sends a device to here, ignore global device.\n                if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                    return;\n                } else if (deviceData.from != \"application\") {\n                    if ($scope.parent_container != \"edit\" + deviceData.from) {\n                        return;\n                    } else {\n                        $scope.data_from = deviceData.from;\n                    }\n                }\n                metadata = widgetData.data.metadata;\n\n                $scope.showdata = widgetData.data;\n\n                $scope.css = {\n                    width: \"col-md-12\",\n                    height: \"400\"\n                };\n                if ($scope.showdata.metadata.css) {\n                    $scope.css = $scope.showdata.metadata.css;\n                }\n\n                var location = {};\n                $scope.markers = [];\n                $scope.details = $scope.$parent.device;\n\n\n                // show one point.\n                var f = null;\n                angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                    try {\n                        f = new Function(\"device\", \"with(device) { return \" + item.value + \";}\");\n                        var result = f(deviceData.device);\n                        if (result) {\n                            location[item.label] = result;\n                        } else {\n                            location[item.label] = \"\";\n                        }\n                    } catch (error) {\n                        // show image\n                        if (\"image\" == item.label) {\n                            location[item.label] = item.value;\n                        } else {\n                            location[item.label] = \"\";\n                        }\n\n                    }\n                });\n\n\n                //do not show\n                if (location.latitude == \"\" || location.longitude == \"\") {\n                    //hard code. the location is Melbourne\n                    location.latitude = \"-37.810000\";\n                    location.longitude = \"144.950000\";\n                    $scope.center = [location.latitude, location.longitude];\n                    // $scope.markers.push(location);\n                } else {\n                    $scope.center = [location.latitude, location.longitude];\n                    $scope.markers.push(location);\n                }\n\n            });\n        }\n\n    }\n\n    static buildFactory() {\n        fgpWidgetMap.instance = new fgpWidgetMap();\n        return fgpWidgetMap.instance;\n    }\n\n\n}\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nclass fgpWidgetDeviceDetail {\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(element, attrs) {\n        return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n            '<div class=\"row\" ng-repeat=\"item in data\">' +\n            '<div class=\"col-xs-4 col-md-4\" style=\"text-align: right; font-weight: bold;line-height: 30px;\">{{item.label}}</div><div class=\"col-xs-8 col-md-8\" style=\"text-align: left;line-height: 30px;\">{{item.value}}</div>' +\n            '</div>' +\n            '</div>' +\n            '<div id=\"detail_status_' + attrs.id + '\" class=\"row\" style=\"min-height: 50px;\">' +\n            '</div>' +\n            '</div>';\n    }\n\n\n    controller($scope, $element) {\n        var metadata = null;\n        var element_id = $element.attr(\"id\");\n        var widgetData = null;\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n\n        /**\n         * get device information\n         */\n        if (widgetData.data && widgetData.from == \"show\") {\n\n            $scope.data_from = \"application\";\n            $scope.parent_container = widgetData.data.parent;\n\n            $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                // if the parent container sends a device to here, ignore global device.\n                if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                    return;\n                } else if (deviceData.from != \"application\") {\n                    if ($scope.parent_container != \"edit\" + deviceData.from) {\n                        return;\n                    } else {\n                        $scope.data_from = deviceData.from;\n                    }\n                }\n                metadata = widgetData.data.metadata;\n\n                $scope.showdata = widgetData.data;\n\n                $scope.css = {\n                    width: \"col-md-12\",\n                    height: \"400\"\n                };\n                if ($scope.showdata.metadata.css) {\n                    $scope.css = $scope.showdata.metadata.css;\n                }\n\n\n                $scope.data = [];\n                //get all columns\n                var f = null;\n                angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                    try {\n                        f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                        item.value = f(deviceData.device);\n                        $scope.data.push(item);\n                    } catch (error) {\n                        item.value = \"\";\n                        $scope.data.push(item);\n                    }\n                });\n\n\n            });\n\n        }\n\n    }\n\n\n    static buildFactory() {\n        fgpWidgetDeviceDetail.instance = new fgpWidgetDeviceDetail();\n        return fgpWidgetDeviceDetail.instance;\n    }\n}\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nclass fgpWidgetSpan {\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(scope, element) {\n        return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n            '</div>';\n    }\n\n    controller($scope, $element) {\n\n        var element_id = $element.attr(\"id\");\n        var widgetData = null;\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        $scope.showdata = widgetData.data;\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if ($scope.showdata.metadata.css) {\n            $scope.css = $scope.showdata.metadata.css;\n        }\n    }\n\n    static buildFactory() {\n        fgpWidgetSpan.instance = new fgpWidgetSpan();\n        return fgpWidgetSpan.instance;\n    }\n\n}\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nclass fgpWidgetPie {\n\n    constructor($timeout) {\n        this.restrict = 'E';\n        this.scope = {};\n        this.$timeout = $timeout;\n    }\n\n\n    template(element, attrs) {\n        return '<div class = \"{{css.width}}\" ><div style=\"height: {{css.height}}px;\">' +\n            '<canvas class=\"fgpPieChart\"></canvas>' +\n            '</div>' +\n            '</div>';\n    }\n\n    link(scope, element) {\n\n        this.$timeout(function () {\n            var ctx = element.find(\"canvas\")[0];\n            scope.chart = new Chart(ctx, {\n                type: 'pie',\n                data: {\n                    labels: ['1'],\n                    datasets: [\n                        {\n                            data: [1],\n                            backgroundColor: []\n                        }]\n                },\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    animation: false,\n                    legend: {display: true}\n                }\n            });\n        });\n    }\n\n\n    controller($scope, $element, $timeout) {\n\n        var id = $element.attr(\"id\");\n        var metadata = null;\n        var widgetData = null;\n\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        if (widgetData.from == \"show\" && widgetData.data) {\n            $scope.data_from = \"application\";\n            $scope.parent_container = widgetData.data.parent;\n\n            $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                // if the parent container sends a device to here, ignore global device.\n                if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                    return;\n                } else if (deviceData.from != \"application\") {\n                    if ($scope.parent_container != \"edit\" + deviceData.from) {\n                        return;\n                    } else {\n                        $scope.data_from = deviceData.from;\n                    }\n                }\n                metadata = widgetData.data.metadata;\n                $scope.showdata = widgetData.data;\n                $scope.css = {\n                    width: \"col-md-12\",\n                    height: \"400\"\n                };\n                if ($scope.showdata.metadata.css) {\n                    $scope.css = $scope.showdata.metadata.css;\n                }\n                $scope.data = [];\n                var colors = [];\n                //get all columns\n                var f = null;\n                angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                    try {\n                        f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                        item.value = f(deviceData.device);\n                        $scope.data.push(item);\n                    } catch (error) {\n                        item.value = item.value;\n                        $scope.data.push(item);\n                    }\n                    if (item.color) {\n                        colors.push(item.color);\n                    } else {\n                        colors.push('#' + (function co(lor) {\n                                return (lor +=\n                                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                                && (lor.length == 6) ? lor : co(lor);\n                            })(''));\n                    }\n                });\n                // timeout\n                $scope.pieData = {labels: [], value: []};\n                $timeout(function () {\n                    // create data\n                    angular$1.forEach($scope.data, function (item) {\n                        $scope.pieData.labels.push(item.label);\n                        $scope.pieData.value.push(item.value);\n                    });\n\n                    $scope.chart.data.labels = $scope.pieData.labels;\n                    $scope.chart.data.datasets[0].data = $scope.pieData.value;\n                    $scope.chart.data.datasets[0].backgroundColor = colors;\n                    // update chart\n                    $scope.chart.update();\n                });\n\n            });\n\n\n        }\n\n\n    }\n\n    static buildFactory($timeout) {\n        fgpWidgetPie.instance = new fgpWidgetPie($timeout);\n        return fgpWidgetPie.instance;\n    }\n\n}\nfgpWidgetPie.$inject = ['$timeout'];\n\n/**\n * Created by eric on 22/11/16.\n */\n\nclass fgpDockerButton {\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n\n    template(element, attrs) {\n        var show_dom = '<div class=\"col-xs-12 btn-group\" role=\"group\" style=\"padding: 2px;\" aria-label=\"...\">' +\n            '<div style=\"float: right;\">' +\n            '<button type=\"button\" class=\"btn btn-{{button.color}} btn-xs\" ' +\n            ' ng-click=\"action(button)\" ng-repeat=\"button in buttons\" ng-show=\"checkShow(button)\"><i class=\"fa {{button.icon}}\"' +\n            ' aria-hidden=\"true\"></i>' +\n            '</button>' +\n            '</div>' +\n            '</div>';\n        return show_dom;\n    }\n\n\n    controller($scope, $element, $http, $timeout) {\n\n        $scope.stats = \"\";\n\n        // get configuration\n        var id = $element.attr(\"id\");\n        var configuration = null;\n        var confData = null;\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: id, callback: function (data) {\n                if (data) {\n                    configuration = data.data.metadata.data;\n                    confData = data.data;\n                }\n            }\n        });\n\n        var repeateId = [];\n\n        var pageDevice = null;\n        $scope.$on('deviceInfoEvent', function (event, data) {\n            pageDevice = data.device;\n        });\n\n        $scope.$on('containerStatusEvent', function (event, data) {\n            if (data.application === repeateId[2] && data.container === repeateId[0] && data.host === repeateId[1]) {\n                $scope.stats = data.stats;\n            }\n        });\n\n        $scope.checkShow = function (button) {\n\n\n            if (button.hasOwnProperty(\"shown\") && button.shown) {\n                return true;\n            }\n\n\n            if (button.type === \"stop\") {\n                if ($scope.stats === \"running\") {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else if (button.type === \"start\") {\n                if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else if (button.type === \"delete\") {\n                if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        };\n\n        // how many buttons?\n        $scope.buttons = [];\n\n        if ($scope.$parent.repeat) {\n            repeateId = $scope.$parent.repeat.split(\",\");\n        }\n\n        angular.forEach(configuration, function (item) {\n            if (item.label == \"buttons\") {\n                $scope.buttons = item.value;\n            }\n        });\n\n        $scope.healthinfo = \"\";\n\n\n        // submit \"action\" to rest api\n        $scope.action = function (button) {\n            if (button.hasOwnProperty(\"shown\") && button.shown) {\n                // send request through $http\n                $http({\n                    method: 'POST',\n                    url: '/api/docker/exec',\n                    data: {\n                        func: button.func,\n                        script: button.script,\n                        deviceName: pageDevice.name,\n                        deviceKey: pageDevice.key.id,\n                        relationship: 'node_application'\n                    }\n                }).then(function successCallback(response) {\n                    console.info(response.data);\n                }, function errorCallback(response) {\n                    console.error(response.data);\n                });\n            } else {\n                // send request through $http\n                $http({\n                    method: 'POST',\n                    url: '/api/docker/hosts/action',\n                    data: {\n                        func: button.func,\n                        script: button.script,\n                        container: repeateId[0],\n                        host: repeateId[1],\n                        application: repeateId[2]\n                    }\n                }).then(function successCallback(response) {\n                    console.info(response.data);\n                }, function errorCallback(response) {\n                    console.error(response.data);\n                });\n            }\n\n        };\n    }\n\n\n    static buildFactory() {\n        fgpDockerButton.instance = new fgpDockerButton();\n        return fgpDockerButton.instance;\n    }\n\n}\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nclass fgpWidgetRepeatContainer {\n\n    constructor($http) {\n        this.restrict = 'E';\n        this.scope = {};\n        this._$http = $http;\n    }\n\n    template(element, attrs) {\n        var flag = attrs.hasOwnProperty(\"shown\");\n        var showTitle = attrs.hasOwnProperty(\"showtitle\");\n        var element_id = attrs.id;\n        var dom_show = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{item.device.key.id}}\" ng-repeat=\"item in items\" emit-last-repeater-element style=\"padding-left: 2px; padding-right: 2px;\">' +\n            '<div class=\"{{css.width}}\" style=\"padding-left: 1px; padding-right: 1px;\">' +\n            '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n            '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}};\"><i class=\"fa fa-desktop\" aria-hidden=\"true\" style=\"margin-right: 5px;\"></i>{{item.device.name}}</div>' +\n            '<div class=\"panel-body\"  style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\'}};\">' +\n            '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n            '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n            '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n            '</div>' +\n            '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div></div>';\n        var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" ng-repeat=\"item in items\" repeat-id=\"{{item.device.key.id}}\">' +\n            '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;padding-left: 2px; padding-right: 2px;\">' +\n            '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n            '<div style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n            '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n            '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n            '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n            '</div>' +\n            '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n            '</div>' +\n            '</div>' +\n            '</div></div>';\n\n        // show or design\n        if (flag) {\n            if (showTitle) {\n                return dom_show;\n            } else {\n                // without title\n                return dom_show_notitle;\n            }\n        }\n    }\n\n    controller($scope, $element, dataService, $rootScope, $timeout, $http, $location, $stateParams, $websocket) {\n        // only show\n        var element_id = $element.attr(\"id\");\n\n        var widgetData = null;\n\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n        // all items\n        $scope.items = [];\n\n        $scope.labelstyle = [\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"];\n\n\n        var metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n        $scope.css[\"title\"] = metadata.css.title;\n        $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n        $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n        $scope.data = {};\n\n        $scope.listStyle = \"list\";\n\n        $scope.labels = [];\n\n        var deviceType = $stateParams.type;\n        var deviceName = $stateParams.device;\n\n        if (metadata.data) {\n\n\n            $scope.labels = [];\n\n\n            if (metadata.data.datasource.labels) {\n                $scope.labels = metadata.data.datasource.labels.split(\" \");\n            }\n\n            if (metadata.data.datasource.style) {\n                $scope.listStyle = metadata.data.datasource.style;\n            }\n\n            // show different type\n            var relation = metadata.data.datasource.type;\n            $scope.items = [];\n            $http({\n                method: 'GET',\n                url: 'api/docker/repeat/' + deviceType + '/' + deviceName + '/' + relation\n            }).then(function (data) {\n                $scope.items = data.data;\n            }, function (error) {\n                console.error(error);\n            });\n\n            // I'm ready. please give all my children to me~\n            // call stage\n            $scope.$on('LastRepeaterElement', function () {\n                $timeout(function () {\n                    $scope.$emit('bindChildRepeatEvent', {\n                        id: element_id\n                    });\n                });\n            });\n\n\n        }\n        //establish a connection with websocket\n        var dataStream = $websocket('ws://' + $location.host() + \":\" + $location.port() + '/ws/hosts');\n        dataStream.onMessage(function (message) {\n            try {\n                var backData = JSON.parse(message.data);\n                if (backData.hasOwnProperty(\"container\")) {\n                    // tell children\n                    $scope.$parent.$broadcast('containerStatusEvent', backData);\n                    // update health-check status\n                    angular.forEach($scope.items, function (item) {\n                        if (backData.application == item.device.key.id) {\n                            if (backData.config.State.Health) {\n                                item[\"health\"] = backData.config.State.Health.Status;\n                            } else {\n                                item[\"health\"] = null;\n                            }\n\n                            if (backData.stats == \"exited\") {\n                                item[\"health\"] = null;\n                            }\n                        }\n                    });\n                }\n            } catch (e) {\n            }\n        });\n\n        $scope.healthcheck = function (item) {\n            // call server and get the exception.\n            dataService.healthcheck(item.name, item.device.key.id);\n        };\n\n\n    }\n\n\n    static buildFactory($http) {\n        fgpWidgetRepeatContainer.instance = new fgpWidgetRepeatContainer($http);\n        return fgpWidgetRepeatContainer.instance;\n    }\n\n}\n\nfgpWidgetRepeatContainer.$inject = ['$http'];\n\n/**\n * Created by eric on 25/11/16.\n */\nclass fgpImage {\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(scope, element) {\n        return '' +\n            '<img src=\"{{url}}\" style=\"width:{{css.width}}px;height:{{css.height}}px;\">' +\n            '';\n    }\n\n    controller($scope, $element) {\n\n        var element_id = $element.attr(\"id\");\n        var widgetData = null;\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        $scope.showdata = widgetData.data;\n        $scope.css = {\n            width: \"0\",\n            height: \"0\"\n        };\n\n        $scope.url = \"\";\n        if ($scope.showdata.metadata.css) {\n            $scope.css = $scope.showdata.metadata.css;\n        }\n        if($scope.showdata.metadata.data){\n            $scope.url = $scope.showdata.metadata.data.url;\n        }\n    }\n\n    static buildFactory() {\n        fgpImage.instance = new fgpImage();\n        return fgpImage.instance;\n    }\n\n}\n\n/**\n * Created by eric on 28/11/16.\n */\nclass fgpIcon {\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(element, attrs) {\n        var show_dom = '<div class=\"{{css.width}}\" style=\"margin-top: 10px;background-color: {{css.background.color}};border-color:{{css.border.color || \\'#fff\\'}};\">' +\n            '<div class=\"col-xs-4 col-md-4\" style=\"padding: 5px;\">' +\n            '<i class=\"fa fa-{{icon}}\" style=\"font-size: 60px;\"></i>' +\n            '</div>' +\n            '<div class=\"col-xs-8 col-md-8\">' +\n            '<div style=\"text-align: right;font-size: large;\"><label>{{title}}</label></div>' +\n            '<div style=\"text-align: right;font-size: small;\"><label>{{desc}}</label></div>' +\n            '</div>' +\n            '</div>' +\n            '';\n        return show_dom;\n    }\n\n    controller($scope, $element) {\n        // get configuration\n        var id = $element.attr(\"id\");\n        var configuration = null;\n        var widgetData = null;\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: id, callback: function (data) {\n                if (data) {\n                    configuration = data.data.metadata.data;\n                    widgetData = data;\n                }\n            }\n        });\n\n\n        var metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n        $scope.icon = configuration.content.icon;\n\n        $scope.desc = configuration.content.desc;\n\n        $scope.title = \"\";\n\n        if (widgetData.from == \"show\" && widgetData.data) {\n            $scope.data_from = \"application\";\n            $scope.parent_container = widgetData.data.parent;\n            $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                // if the parent container sends a device to here, ignore global device.\n                if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                    return;\n                } else if (deviceData.from != \"application\") {\n                    if ($scope.parent_container != \"edit\" + deviceData.from) {\n                        return;\n                    } else {\n                        $scope.data_from = deviceData.from;\n                    }\n                }\n                var f = new Function(\"device\", \"with(device) { return \" + configuration.content.f + \"}\");\n                $scope.title = f(deviceData.device);\n            });\n\n        }\n\n    }\n\n\n    static buildFactory() {\n        fgpIcon.instance = new fgpIcon();\n        return fgpIcon.instance;\n    }\n\n}\n\n/**\n * Created by eric on 29/11/16.\n */\nclass fgpWidgetAppContainer {\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(element, attrs) {\n        var element_id = attrs.id;\n        //<div class=\"alert alert-info\" role=\"alert\">...</div>\n        return '' +\n            '<div ng-show=\"showstyle == \\'list\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-12 col-xs-12  alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n            '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px; text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n            '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n            '</div>' +\n            '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n            '</div>' +\n            '</div>' +\n\n            '<div ng-show=\"showstyle == \\'grid\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-6 col-xs-6 alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n            '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px;text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n            '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n            '</div>' +\n            '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n            '</div>' +\n            '</div>' +\n            '';\n    }\n\n    controller($scope, $element, dataService, $rootScope, $timeout) {\n        // only show\n        var element_id = $element.attr(\"id\");\n\n        var widgetData = null;\n\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n        var metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n        $scope.containers = [];\n        $scope.containerswithTimeout = [];\n        var metadata = widgetData.data.metadata;\n        // should be a host id\n        var repeat = $scope.$parent.repeat;\n\n        $scope.showstyle = \"list\";\n\n        $scope.host = repeat;\n\n\n        // I'm ready. please give all my children to me~\n        // call stage\n        $scope.$on('LastRepeaterElement', function () {\n            $timeout(function () {\n                $scope.$emit('bindChildRepeatEvent', {\n                    id: element_id\n                });\n            });\n        });\n\n        $timeout(function () {\n            var pp = $scope.$emit('listStyleEvent', {\n                id: widgetData.data.parent,\n                callback: function (style) {\n                    $scope.showstyle = style;\n                }\n            });\n\n        });\n\n        $scope.gotoContainer = function (container) {\n            // \"device type and device name\" display by a dynamic page!\n            console.info(container);\n            return false;\n        };\n\n\n        $scope.$on('containerStatusEvent', function (event, data) {\n\n            if (data.host == repeat) {\n                //f\n                var labels = [];\n\n                if (metadata.data.datasource.labels) {\n                    labels = metadata.data.datasource.labels.split(\" \");\n                }\n                var showLabel = \"\";\n                angular.forEach(labels, function (label) {\n                    showLabel += data.config[label] + \" \";\n                });\n\n                var app = {\n                    id: data.container,\n                    label: showLabel,\n                    application: data.application,\n                    name: data.deviceName,\n                    type: data.deviceType\n                };\n                var flag = false;\n                angular.forEach($scope.containers, function (container) {\n                    if (container.id == app.id) {\n                        // update timer\n                        var timer_index = -1;\n                        var timer = $scope.containerswithTimeout.filter(function (item, index) {\n                            if(item.app.id == app.id){\n                                timer_index = index;\n                                return true;\n                            }else{\n                                false;\n                            }\n                        });\n                        $timeout.cancel(timer[0].t);\n                        if (data.stats != \"removed\") {\n                            var newTimer = $timeout(function () {\n                                var index = $scope.containers.indexOf(app);\n                                $scope.containers.splice(index, 1);\n                                $scope.containerswithTimeout.splice(timer_index, 1);\n                                $timeout(function () {\n                                    $scope.$emit('bindChildRepeatEvent', {\n                                        id: element_id\n                                    });\n                                });\n                            }, 30000);\n                            timer[0].t = newTimer;\n                            flag = true;\n                        } else {\n                            var index = -1;\n                            angular.forEach($scope.containers, function (item, itemIndex) {\n                                if (item.id === app.id) {\n                                    index = itemIndex;\n                                }\n                            });\n                            if (index != -1 && timer_index != -1) {\n                                $scope.containers.splice(index, 1);\n                                $scope.containerswithTimeout.splice(timer_index, 1);\n                                flag = true;\n                                $timeout(function () {\n                                    $scope.$emit('bindChildRepeatEvent', {\n                                        id: element_id\n                                    });\n                                });\n                            }\n                        }\n                    }\n                });\n\n                if (!flag) {\n                    // add to\n                    $scope.containers.push(app);\n                    // delete it after 30 seconds!\n                    var t = $timeout(function () {\n                        var index = $scope.containers.indexOf(app);\n                        $scope.containers.splice(index, 1);\n                    }, 30000);\n                    $scope.containerswithTimeout.push({t: t, app: app});\n                }\n            }\n\n        });\n\n    }\n\n    static buildFactory() {\n        fgpWidgetAppContainer.instance = new fgpWidgetAppContainer();\n        return fgpWidgetAppContainer.instance;\n    }\n\n}\n\nfgpWidgetAppContainer.$inject = [];\n\n/**\n * Created by ericwang on 21/06/2016.\n */\nclass fgpWidgetChartTable {\n\n\n    constructor() {\n        this.restrict = 'E';\n        this.scope = {};\n    }\n\n    template(element, attrs) {\n        return '<div style=\"padding:0px;height: {{css.height}}px;position: relative; overflow-y : auto;\">' +\n            '<table st-table=\"rowCollection\" class=\"col-md-12 table table-striped\">' +\n            '<thead>' +\n            '<tr>' +\n            '<th ng-repeat=\"column in sampledata.columns\">{{column.label}}</th>' +\n            '</tr>' +\n            '</thead>' +\n            '<tbody>' +\n            '<tr ng-repeat=\"value in sampledata.values\">' +\n            '<td ng-repeat=\"col in sampledata.columns\">{{value[col.label] | tableformatter: value : col.label : col.formatter}}</td>' +\n            '</tr>' +\n            '</tbody>' +\n            '</table>' +\n            '</div>';\n    }\n\n    controller($scope, $element) {\n\n        var element_id = $element.attr(\"id\");\n        var widgetData = null;\n\n        $scope.$emit('fetchWidgetMetadataEvent', {\n            id: element_id, callback: function (data) {\n                if (data) {\n                    widgetData = data;\n                }\n            }\n        });\n\n        //show\n        $scope.showdata = widgetData.data;\n\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if ($scope.showdata.metadata.css) {\n            $scope.css = $scope.showdata.metadata.css;\n        }\n\n\n        $scope.$on('chartDataChangeEvent', function (event, chartData) {\n            var chartId = chartData.id;\n            if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"device\") {\n                $scope.sampledata = {};\n                // make data\n                var collectionName = chartData.data.collection;\n                var groupName = chartData.group;\n                var columns = [];\n                //get group and collection configuration\n                angular$1.forEach($scope.showdata.metadata.data.groups, function (group) {\n                    if (group.name == groupName) {\n                        angular$1.forEach(group.collections, function (collection) {\n                            if (collection.name === collectionName) {\n                                columns = collection.rows;\n                            }\n                        });\n                    }\n                });\n\n\n                $scope.sampledata.columns = [];\n\n                angular$1.forEach(columns, function (column) {\n                    $scope.sampledata.columns.push({label: column.label, formatter: column.formatter});\n                });\n                $scope.sampledata.values = [];\n                angular$1.forEach(columns, function (column) {\n                    var f = new Function(\"data\", \"with(data) { if(\" + column.value + \") return \" + column.value + \";return '';}\");\n                    angular$1.forEach(chartData.data.data, function (record, index) {\n                        if ($scope.sampledata.values.length < chartData.data.data.length) {\n                            //add new one\n                            var item = {};\n                            item[column.label] = f(record);\n                            $scope.sampledata.values.push(item);\n                        } else {\n                            $scope.sampledata.values[index][column.label] = f(record);\n                        }\n                    });\n                });\n\n                var cleanData = [];\n                angular$1.forEach($scope.sampledata.values, function (value, index) {\n                    var flag = false;\n                    angular$1.forEach(columns, function (column) {\n                        if (value[column.label] && value[column.label] != \"\") {\n                            flag = true;\n                        }\n                    });\n\n                    if (flag) {\n                        cleanData.push(value);\n                    }\n                });\n                $scope.sampledata.values = cleanData;\n\n            } else if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"relation\") {\n                //\n\n\n            }\n\n        });\n\n\n    }\n\n    static buildFactory() {\n        fgpWidgetChartTable.instance = new fgpWidgetChartTable();\n        return fgpWidgetChartTable.instance;\n    }\n\n\n}\n\n/**\n * Created by ericwang on 10/06/2016.\n */\n// angular module\nangular$1.module('fgp-kit', ['ngMap', 'ui.router', 'angular-cache'])\n.service('dataService', dataAccessApi.buildFactory)\n.service('validator', validator.buildFactory)\n    .filter('removeSlash', function () {\n        return function (input) {\n            if (input.startsWith(\"/\")) {\n                return input.substring(1, input.length);\n            }\n            return input;\n        }\n    }).filter('df', function () {\n        return function (date, format, tz) {\n            if (!moment) {\n                console.log('Error: momentJS is not loaded as a global');\n                return '!momentJS';\n            }\n            if (!format) {\n                if(!tz){\n                    return moment(date).tz(moment.tz.guess()).format();\n                }else{\n                    return moment(date).tz(tz).format();\n                }\n                \n            } else {\n                if(!tz){\n                    return moment(date).tz(moment.tz.guess()).format(format); //in absence of format parameter, return the relative time from the given date\n                }else{\n                    return moment(date).tz(tz).format(format);\n                }\n            }\n        }\n    })\n    .factory('$graphstorage', ['$window', function ($window) {\n        return {\n            setTree: function (key, value) {\n                $window.localStorage[key] = JSON.stringify(value);\n            },\n            getTree: function (key) {\n                return JSON.parse($window.localStorage[key]) || false;\n            },\n            addTree: function (key, value) {\n                if ($window.localStorage[key]) {\n                    var trees = JSON.parse($window.localStorage[key]);\n                    trees.push(value);\n                    this.setTree(key, trees);\n                } else {\n                    this.setTree(key, [value]);\n                }\n            },\n            clear: function () {\n                $window.localStorage.clear();\n            }\n        }\n    }])\n    .directive('fgpContainer', fgpStage.buildFactory)\n    .directive('widgetContainer', fgpWidgetContainer.buildFactory)\n    .directive('widgetGraph', fgpWidgetGraph.buildFactory)\n    .directive('widgetPageTitle', fgpWidgetPageTitle.buildFactory)\n    .directive('widgetMap', fgpWidgetMap.buildFactory)\n    .directive('widgetStatus', fgpStage.buildFactory)\n    .directive('widgetDeviceDetail', fgpWidgetDeviceDetail.buildFactory)\n    .directive('widgetDeviceSpan', fgpWidgetSpan.buildFactory)\n    .directive('widgetPie', fgpWidgetPie.buildFactory)\n    .directive('widgetDockerButton', fgpDockerButton.buildFactory)\n    .directive('widgetRepeatContainer', fgpWidgetRepeatContainer.buildFactory)\n    .directive('widgetImage', fgpImage.buildFactory)\n    .directive('widgetIcon', fgpIcon.buildFactory)\n    .directive('widgetAppContainer', fgpWidgetAppContainer.buildFactory)\n    .directive('widgetChartTable', fgpWidgetChartTable.buildFactory)\n    .directive('emitLastRepeaterElement', [function () {\n        return function (scope) {\n            if (scope.$last) {\n                scope.$emit('LastRepeaterElement');\n            }\n        };\n    }]).config(function (CacheFactoryProvider) {\n        angular$1.extend(CacheFactoryProvider.defaults, {\n            maxAge: 30 * 60 * 1000, // half an hour\n            deleteOnExpire: 'aggressive',\n        });\n    }).service('graphDataService', function (CacheFactory) {\n        var graphCache = null;\n        if (!CacheFactory.get('graphCache')) {\n            graphCache = CacheFactory('graphCache', {\n                maxAge: 30 * 60 * 1000, // half an hour\n                deleteOnExpire: 'aggressive'\n            });\n        }\n        return {\n            get: function (name) {\n                return graphCache.get('/graph/' + name);\n            },\n            put: function (name, data) {\n                return graphCache.put('/graph/' + name, data);\n            }\n        };\n    })\n    .filter('tableformatter', ['$filter', function ($filter) {\n        return function (input, obj, field, formatter) {\n            if (formatter) {\n                if (obj[field]) {\n                    if (\"date\" == formatter) {\n                        return $filter('date')(new Date(obj[field]), 'd/M/yy h:mm a');\n                    } else {\n                        return input;\n                    }\n                }\n            } else {\n                return input;\n            }\n        };\n    }]);\nvar index = 'fgp-kit';\n\nreturn index;\n\n})));\n"]}
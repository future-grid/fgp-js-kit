{"version":3,"sources":["index.js"],"names":["this"],"mappings":"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","file":"fgp.kit.bundle.js","sourcesContent":["/**\n * fgp-kit\n * @version 1.0 - Homepage <http://www.future-grid.com.au>\n * @copyright (c) 2013-2016 Eric.Wang <flexdeviser@gmail.com>\n * @license Apache. \n * @overview fgp.kit.js is a useful toolkit for future-grid's clients.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular'), require('jquery'), require('dygraphs'), require('ngmap'), require('chart.js')) :\n    typeof define === 'function' && define.amd ? define(['angular', 'jquery', 'dygraphs', 'ngmap', 'chart.js'], factory) :\n    (global.fgp_kit = factory(global.angular,global.$,global.Dygraph,global.ngmap,global.chartJS));\n}(this, function (angular,$,Dygraph,ngmap,chart_js) { 'use strict';\n\n    angular = 'default' in angular ? angular['default'] : angular;\n    $ = 'default' in $ ? $['default'] : $;\n    Dygraph = 'default' in Dygraph ? Dygraph['default'] : Dygraph;\n\n    class fgpStage {\n\n        constructor() {\n            this.scope = {\n                applicationName: \"=\",\n                deviceName: \"=\",\n                server: \"=\",\n                configuration: '='\n            };\n            this.replace = true;\n            this.restrict = 'A';\n        }\n\n        template() {\n            return '<div id=\"pageStage\" class=\"wrapper col-md-12 col-xl-12\" style=\"background-color: #fff;height:100%;\">' +\n                '</div>';\n        }\n\n        controller($scope, $element, $timeout, $rootScope, $compile, dataService) {\n            $scope.showdata = {};\n\n            $rootScope['applicationName'] = $scope.applicationName;\n            $rootScope['host'] = $scope.server;\n            $rootScope['device'] = $scope.deviceName;\n\n\n            var graphBindingArray = [];\n\n            $scope.$on('bindChildChartEvent', function (evt, msg) {\n                graphBindingArray.push(msg);\n            });\n\n\n            $scope.$on('fetchWidgetMetadataEvent', function (evt, msg) {\n                angular.forEach($scope.showdata, function (metadata, key) {\n                    if (key == msg.id) {\n                        msg.callback({data: metadata, from: 'show'});\n                        return;\n                    }\n                });\n            });\n\n            function findChild(parentId, parentHtmlObj, arrayItems) {\n\n                for (var i = 0; i < arrayItems.length; i++) {\n                    if ('edit' + parentId === arrayItems[i].parent) {\n                        var currentItem = angular.element(arrayItems[i].html_render);\n                        var id = arrayItems[i].id;\n                        $scope.showdata[id] = arrayItems[i];\n                        parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                        findChild(arrayItems[i].id, currentItem, arrayItems);\n                    } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                        var currentItem = angular.element(arrayItems[i].html_render);\n                        var id = arrayItems[i].id;\n                        $scope.showdata[id] = arrayItems[i];\n                        parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                        findChild(arrayItems[i].id, currentItem, arrayItems);\n                    }\n                }\n            }\n\n            angular.forEach($scope.configuration, function (item) {\n                if ('workingArea' === item.parent) {\n                    var currentItem = angular.element(item.html_render);\n                    $scope.showdata[item.id] = item;\n                    $element.append($compile(currentItem)($scope));\n                    findChild(item.id, currentItem, $scope.configuration);\n                }\n            });\n\n            /**\n             * get device information\n             */\n            if ($scope.deviceName && $scope.deviceName != \"\" && \"undefined\" != $scope.deviceName) {\n                dataService.deviceInfo($scope.server, $scope.deviceName, null, $scope.applicationName).then(function (data) {\n                    // send device info to all widget\n                    $timeout(function () {\n                        $scope.$broadcast('deviceInfoEvent', {device: data, from: 'application'});\n                    });\n                });\n            }\n\n\n            // all item created;\n            $timeout(function () {\n                angular.forEach(graphBindingArray, function (graph) {\n                    $scope.$broadcast('bindFatherGraphEvent', {parent: graph.graphs, children: graph.children});\n                });\n            });\n        }\n\n\n        static buildFactory() {\n            fgpStage.instance = new fgpStage();\n            return fgpStage.instance;\n        }\n    }\n\n    /**\n     * Created by ericwang on 15/06/2016.\n     */\n    class dataAccessApi {\n\n        /**\n         * init dataApi\n         * @param $http\n         * @param $q\n         */\n        constructor($http, $q, $cacheFactory) {\n            this._$http = $http;\n            this._$q = $q;\n            // get cache\n            this.indexCache = $cacheFactory('indexCache');\n            this.deviceStores = $cacheFactory('deviceStores');\n        }\n\n\n        /**\n         * sync using JQuery\n         * @param deviceName\n         * @param deviceKey\n         * @param applicationName\n         * @returns {*}\n         */\n        deviceInfo(host, deviceName, deviceKey, applicationName) {\n            var deferred = this._$q.defer();\n            var url = host + \"/api/\";\n\n            if (applicationName) {\n                url += \"app/\" + applicationName;\n            }\n\n            if (deviceName) {\n                url += '/devices/parameter/jsonp?name=' + deviceName\n            } else if (deviceKey) {\n                url += 'devices/parameter/jsonp?key=' + deviceKey\n            }\n\n            $.ajaxSettings.async = false;\n            $.ajax({\n                type: 'GET',\n                url: url,\n                jsonpCallback: 'jsonCallback',\n                contentType: \"application/json\",\n                dataType: 'jsonp',\n                success: function (data) {\n                    var url = host + \"/api/\";\n                    if (applicationName) {\n                        url += \"app/\" + applicationName + \"/devices/extension-types/jsonp?device_type=\";\n                    } else {\n                        url += \"devices/extension-types/jsonp?device_type=\";\n                    }\n                    $.ajaxSettings.async = false;\n                    $.ajax({\n                        type: 'GET',\n                        url: url + data.type,\n                        jsonpCallback: 'jsonCallback',\n                        contentType: \"application/json\",\n                        dataType: 'jsonp',\n                        success: function (types) {\n                            angular.forEach(types, function (type) {\n                                Object.defineProperty(data, type.name, {\n                                    get: function () {\n                                        var result = null;\n                                        var url = host + \"/api/\";\n                                        if (applicationName) {\n                                            url += \"app/\" + applicationName + \"/devices/extensions/jsonp?device_name=\";\n                                        } else {\n                                            url += \"devices/extensions/jsonp?device_name=\";\n                                        }\n                                        $.ajaxSettings.async = false;\n                                        $.ajax({\n                                            type: 'GET',\n                                            url: url + this.name + '&extension_type=' + type.name,\n                                            jsonpCallback: 'jsonCallback',\n                                            contentType: \"application/json\",\n                                            dataType: 'jsonp',\n                                            success: function (field) {\n                                                result = field;\n                                            },\n                                            error: function (e) {\n                                                deferred.reject(e);\n                                            }\n                                        });\n                                        return result;\n                                    }\n                                });\n                            });\n                        },\n                        error: function (e) {\n                            console.log(e.message);\n                        }\n                    });\n\n                    deferred.resolve(data);\n                },\n                error: function (e) {\n                    deferred.reject(e);\n                }\n            });\n            return deferred.promise;\n        }\n\n        /**\n         *\n         * @param application\n         * @param deviceKey\n         * @param storeSchema\n         * @returns {Promise}\n         */\n        deviceInitInfo(host, application, deviceKey, storeSchema, rangeLevel, otherLevels) {\n            var deferred = this._$q.defer();\n            this._$http.jsonp(host + '/api/app/' + application + '/store/index/jsonp/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n                params: {'otherLevels': otherLevels, 'callback': 'JSON_CALLBACK'}, cache: this.deviceStores\n            }).then(\n                function (response) {\n                    deferred.resolve(response.data);\n                },\n                function (response) {\n                    deferred.reject(response.data);\n                }\n            );\n            return deferred.promise;\n        }\n\n\n        /**\n         *\n         * @param application\n         * @param deviceKey\n         * @param storeSchema\n         * @returns {Promise}\n         */\n        childrenDeviceInitInfo(host, application, deviceKey, storeSchema, relationType, relationDeviceType, rangeLevel, otherLevels) {\n            var deferred = this._$q.defer();\n            this._$http.jsonp(host + '/api/app/' + application + '/store/index/jsonp/children/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n                params: {\n                    relationType: relationType,\n                    relationDeviceType: relationDeviceType,\n                    otherLevels: otherLevels,\n                    'callback': 'JSON_CALLBACK'\n                },\n                cache: this.deviceStores\n            }).then(\n                function (response) {\n                    deferred.resolve(response.data);\n                },\n                function (response) {\n                    deferred.reject(response.data);\n                }\n            );\n            return deferred.promise;\n        }\n\n\n        fillChildrenTree(buckets, tree, showData) {\n\n            if (tree.children[0] != null) {\n                fillChildrenTree(buckets, tree.children[0], showData);\n            }\n\n            if (tree.children[1] != null) {\n                fillChildrenTree(buckets, tree.children[1], showData);\n            }\n\n            if (tree.children[0] == null && tree.children[1] == null) {\n\n                angular.forEach(buckets, function (value, key) {\n                    if (key == tree.id && value != null) {\n                        tree.data = value.array;\n                        tree['size'] = value.size;\n\n                        var flag = false;\n                        angular.forEach(showData, function (data) {\n                            if (data.id == tree.id) {\n                                data.data = tree.data;\n                                tree['size'] = value.size;\n                                flag = true;\n                            }\n                        });\n\n                        if (!flag) {\n                            console.info(\"error:\" + key);\n                        }\n                    }\n                });\n            }\n        }\n\n\n        fillTree(buckets, tree, showData) {\n            if (tree.children[0] != null) {\n                fillTree(buckets, tree.children[0], showData);\n            }\n\n            if (tree.children[1] != null) {\n                fillTree(buckets, tree.children[1], showData);\n            }\n\n            if (tree.children[0] == null && tree.children[1] == null) {\n                angular.forEach(buckets, function (value, key) {\n                    if (key == tree.id) {\n                        tree.data = value.array;\n                        tree['size'] = value.size;\n\n                        var flag = false;\n                        angular.forEach(showData, function (data) {\n                            if (data.id == tree.id) {\n                                data.data = tree.data;\n                                tree['size'] = value.size;\n                                flag = true;\n                            }\n                        });\n\n                        if (!flag) {\n                            console.info(\"error:\" + key);\n                        }\n                    }\n                });\n            }\n\n        }\n\n        calTree(buckets, tree, start, end) {\n            if (tree.children[0] != null) {\n                calTree(buckets, tree.children[0], start, end);\n            }\n\n            if (tree.children[1] != null) {\n                calTree(buckets, tree.children[1], start, end);\n            }\n\n            if (tree.children[0] == null && tree.children[1] == null) {\n                if (tree.start >= start && tree.end <= end) {\n                    if (buckets.filter(function (elem) {\n                            return elem.id == tree.id\n                        }).length == 0) {\n                        buckets.push(tree);\n                    }\n                }\n\n                // start inclued in a bucket\n                if (start > tree.start && start < tree.end) {\n                    if (buckets.filter(function (elem) {\n                            return elem.id == tree.id\n                        }).length == 0) {\n                        buckets.push(tree);\n                    }\n                }\n\n                // end inclued in a bucket\n                if (end > tree.start && end < tree.end) {\n                    if (buckets.filter(function (elem) {\n                            return elem.id == tree.id\n                        }).length == 0) {\n                        buckets.push(tree);\n                    }\n                }\n\n\n            }\n        }\n\n\n        /**\n         *\n         * @param application\n         * @param deviceInfo deviceKey and tree\n         * @param storeSchema\n         * @param store\n         * @param start\n         * @param end\n         */\n        devicesStoreData(host, application, deviceInfo, storeSchema, store, start, end) {\n\n            var bucketsData = [];\n            var devicesNullBucket = [];\n            var calTree = this.calTree;\n            var fillChildrenTree = this.fillChildrenTree;\n            angular.forEach(deviceInfo, function (device, index) {\n                var bucketKeys = [];\n                calTree(bucketKeys, device.tree, start, end);\n                var nullBucket = [];\n                // get null buckets\n                angular.forEach(bucketKeys, function (bucket) {\n                    if (bucket.data == null) {\n                        nullBucket.push(bucket.id);\n                    }\n                });\n                if (nullBucket.length != 0) {\n                    devicesNullBucket.push({device: device.name, nullBucket: nullBucket});\n                }\n                bucketsData.push({device: device.name, data: bucketKeys});\n            });\n\n            if (devicesNullBucket.length == 0) {\n                // get data from rest service\n                var deferred = this._$q.defer();\n                deferred.resolve(bucketsData);\n                return deferred.promise;\n            } else {\n                // get data from rest service\n                var deferred = this._$q.defer();\n                this._$http.jsonp(host + '/api/app/' + application + '/store/index/devices/store/data/jsonp/' + storeSchema + '/' + store, {\n                    params: {\n                        deviceBucketKeys: JSON.stringify(devicesNullBucket),\n                        callback: 'JSON_CALLBACK'\n                    }\n                }).then(\n                    function (response) {\n                        // response.data\n                        angular.forEach(response.data, function (deviceData) {\n\n                            var currentBucketShowData = null;\n                            angular.forEach(bucketsData, function (showData) {\n                                if (showData.device == deviceData.device) {\n                                    currentBucketShowData = showData.data; //  bucketKeys\n                                    angular.forEach(deviceInfo, function (device, index) {\n                                        if (deviceData.device == device.name) {\n                                            fillChildrenTree(deviceData.data, device.tree, currentBucketShowData);\n                                        }\n                                    });\n                                }\n                            });\n\n                        });\n                        // fill bucketKeys\n                        deferred.resolve(bucketsData);\n                    },\n                    function (response) {\n                        deferred.reject(response.data);\n                    }\n                );\n                return deferred.promise;\n            }\n\n\n        }\n\n\n        deviceStoreData(host, application, deviceKey, storeSchema, store, tree, start, end) {\n            var fillTree = this.fillTree;\n            var calTree = this.calTree;\n            var bucketKeys = [];\n            calTree(bucketKeys, tree, start, end);\n            var nullBucket = [];\n            // get null buckets\n            angular.forEach(bucketKeys, function (bucket) {\n                if (bucket.data == null) {\n                    nullBucket.push(bucket.id);\n                }\n            });\n\n            if (nullBucket.length == 0) {\n                // send rest request\n                var deferred = this._$q.defer();\n                deferred.resolve(bucketKeys);\n                return deferred.promise;\n            } else {\n                // send rest request\n                var deferred = this._$q.defer();\n                this._$http.jsonp(host + '/api/app/' + application + '/store/index/store/data/jsonp/' + deviceKey + '/' + storeSchema + '/' + store, {\n                    params: {\n                        bucketKeys: nullBucket,\n                        callback: 'JSON_CALLBACK'\n                    }\n                }).then(\n                    function (response) {\n                        fillTree(response.data, tree, bucketKeys);\n                        // fill bucketKeys\n                        deferred.resolve(bucketKeys);\n                    },\n                    function (response) {\n                        deferred.reject(response.data);\n                    }\n                );\n                return deferred.promise;\n            }\n\n\n        }\n\n        defaultColors() {\n            if (!this.colors) {\n                this['colors'] = [];\n                for (var i = 0; i < 300; i++) {\n                    this.colors.push('#' + (function co(lor) {\n                            return (lor +=\n                                [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                            && (lor.length == 6) ? lor : co(lor);\n                        })(''));\n                }\n            }\n            return this.colors;\n\n        }\n\n\n        static buildFactory($http, $q, $cacheFactory) {\n            dataAccessApi.instance = new dataAccessApi($http, $q, $cacheFactory);\n            return dataAccessApi.instance;\n        }\n\n    }\n\n    dataAccessApi.$inject = ['$http', '$q', '$cacheFactory'];\n\n    class fgpWidgetContainer {\n\n        constructor() {\n            this.restrict = 'E';\n            this.scope = {};\n        }\n\n        template(element, attrs) {\n            var flag = attrs.hasOwnProperty(\"shown\");\n            var showTitle = attrs.hasOwnProperty(\"showtitle\");\n            var element_id = attrs.id;\n            var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n                '<div class=\"{{css.width}}\">' +\n                '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n                '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}}\">{{css.title.text}}</div>' +\n                '<div class=\"panel-body\" id=\"edit' + element_id + '\" style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n                '</div>' +\n                '</div></div>';\n            var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '\">' +\n                '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;\">' +\n                '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n                '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n                '</div>' +\n                '</div></div>';\n\n            // show or design\n            if (flag) {\n                if (showTitle) {\n                    return dom_show;\n                } else {\n                    // without title\n                    return dom_show_notitle;\n                }\n            }\n\n        }\n\n        controller($scope, $element, dataService, $rootScope, $timeout) {\n            // only show\n            var element_id = $element.attr(\"id\");\n\n\n            var widgetData = null;\n\n            $scope.$emit('fetchWidgetMetadataEvent', {\n                id: element_id, callback: function (data) {\n                    if (data) {\n                        widgetData = data;\n                    }\n                }\n            });\n\n\n            var metadata = widgetData.data.metadata;\n            $scope.css = {};\n            $scope.css[\"color\"] = metadata.css.color;\n            $scope.css[\"width\"] = metadata.css.width;\n            $scope.css[\"border\"] = {};\n            $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n            $scope.css[\"background\"] = {};\n            $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n            $scope.css[\"title\"] = metadata.css.title;\n            $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n            $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n            $scope.data = {};\n            if (metadata.data) {\n                $scope.data[\"source\"] = metadata.data.source;\n                if ($scope.data && $scope.data.source.device && $scope.data.source.device != -1) {\n\n                    if ($scope.data.source.device) {\n                        /**\n                         * get device information\n                         */\n                        dataService.deviceInfo($rootScope.host, JSON.parse($scope.data.source.device).name, null, $rootScope.applicationName).then(function (data) {\n                            // send device info to all widget\n                            $timeout(function () {\n                                $rootScope.$broadcast('deviceInfoEvent', {device: data, from: element_id});\n                            });\n                        });\n                    }\n\n                }\n            }\n\n        }\n\n\n        static buildFactory() {\n            fgpWidgetContainer.instance = new fgpWidgetContainer();\n            return fgpWidgetContainer.instance;\n        }\n\n    }\n\n    fgpWidgetContainer.$inject = [];\n\n    class fgpWidgetGraph {\n\n        constructor($timeout, dataService, $rootScope, $interval, $filter, $location) {\n            this.restrict = 'E';\n            this.scope = {};\n            this.$timeout = $timeout;\n            this._dataService = dataService;\n        }\n\n        template(element, attrs) {\n            var flag = attrs.hasOwnProperty(\"shown\");\n            if (flag) {\n                var dom_loading = '<div ng-show=\"loadingShow\" id=\"loading_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\">' +\n                    '<div class=\"rect1\"></div>' +\n                    '<div class=\"rect2\"></div>' +\n                    '<div class=\"rect3\"></div>' +\n                    '<div class=\"rect4\"></div>' +\n                    '<div class=\"rect5\"></div>' +\n                    '</div></div>';\n\n\n                var dom_empty_data = '<div ng-show=\"emptyDataShow\" id=\"emptydata_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\" style=\"width: 100%;\">' +\n                    '<h1>Empty Data!</h1>' +\n                    '</div></div>';\n\n                return '<div class=\"{{css.width}}\"><div class=\"col-md-12\" style=\"padding:0px;height:{{css.height}}px;-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\"><div class=\"row\"><div class=\"col-md-12\"><a class=\"tooltips\" href=\"javascript:;\" style=\"float: right;margin-right: 10px;\" ng-click=\"currentView = -currentView\"><div class=\"relationBtn\">R</div><span>Scatter View</span></a><div ng-hide=\"true\" class=\"checkbox\" style=\"float: right;margin-right: 10px; margin-bottom: 5px; margin-top: 0;\" ng-model=\"fixInterval\" ng-click=\"fixInterval=!fixInterval\"><label><input type=\"checkbox\" ng-model=\"fixInterval\" ng-clicked=\"fixInterval\" ng-change=\"fixGraphWithGap_click()\">fixed interval</label></div><div style=\"float: right; margin-right: 10px;\"><label class=\"label-inline\" ng-repeat=\"item in intevals.device\"><span class=\"badge\" style=\"background-color: {{ item.name == currentIntervalName ? \\'#009900;\\' : \\'\\'}}\">{{item.name}}</span></label></div></div></div><div class=\"line-chart-graph\" style=\"width: 100%;height: 100%;\"></div></div>' + dom_loading + dom_empty_data + '<div class=\"row\"><div class=\"col-md-12\" style=\"min-height: 30px;\"></div><div class=\"col-md-6\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[0] | date : \\'h:mm a MMMM d, y\\'}}</div><div class=\"col-md-6\" style=\"text-align: right;\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[1] | date : \\'h:mm a MMMM d, y\\'}}</div><div class=\"col-md-12\" style=\"min-height: 40px;\"><div class=\"range-selector-bar\" style=\"height: 0px;margin-top: 30px;\"></div></div></div></div></div>';\n            }\n        }\n\n        link(scope, element, attrs) {\n            scope['defaultColors'] = this._dataService.defaultColors();\n            scope.status = true;\n            var timeOut = this.$timeout;\n            this.$timeout(function () {\n                    var getData = function (numSeries, numRows, name) {\n                        var result = {labels: null, data: null};\n                        var data = [];\n                        var labels = [];\n                        //init date\n                        var initDate = new Date(\"2014/01/01 00:00:00\");\n                        for (var j = 0; j < numRows; ++j) {\n                            data[j] = [new Date(initDate.getTime() + 900000)];\n                            initDate = new Date(initDate.getTime() + 900000);\n                        }\n                        for (var i = 0; i < numSeries; ++i) {\n                            labels.push(name + i);\n                            var val = 0;\n                            for (var j = 0; j < numRows; ++j) {\n                                val += Math.random() - 0.5;\n                                data[j][i + 1] = val;\n                            }\n                        }\n                        result.labels = labels;\n                        result.data = data;\n                        return result;\n                    };\n\n\n                    var sampleData = getData(1, 10, 'Device');\n\n                    function movePan(event, g, context, side) {\n\n                        context.dragEndX = Dygraph.dragGetX_(event, context);\n                        context.dragEndY = Dygraph.dragGetY_(event, context);\n\n\n                        // y-axis scaling is automatic unless this is a full 2D pan.\n                        if (context.is2DPan) {\n\n                            var pixelsDragged = context.dragEndY - context.dragStartY;\n                            // Adjust each axis appropriately.\n                            if (side == \"r\") {\n                                var axis = g.axes_[0];\n                                var axis_data = context.axes[0];\n                                var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                                var boundedValue = context.boundedValues ? context.boundedValues[0] : null;\n\n                                // In log scale, maxValue and minValue are the logs of those values.\n                                var maxValue = axis_data.initialTopValue + unitsDragged;\n                                if (boundedValue) {\n                                    maxValue = Math.min(maxValue, boundedValue[1]);\n                                }\n                                var minValue = maxValue - axis_data.dragValueRange;\n                                if (boundedValue) {\n                                    if (minValue < boundedValue[0]) {\n                                        // Adjust maxValue, and recompute minValue.\n                                        maxValue = maxValue - (minValue - boundedValue[0]);\n                                        minValue = maxValue - axis_data.dragValueRange;\n                                    }\n                                }\n                                if (g.attributes_.getForAxis(\"logscale\", 0)) {\n                                    axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                                        Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                                    axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                                        Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                                } else {\n                                    axis.valueWindow = [minValue, maxValue];\n                                    axis.valueRange = [minValue, maxValue];\n                                }\n                            } else if (side == 'l') {\n                                var axis = g.axes_[1];\n                                var axis_data = context.axes[1];\n                                var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                                var boundedValue = context.boundedValues ? context.boundedValues[1] : null;\n\n                                // In log scale, maxValue and minValue are the logs of those values.\n                                var maxValue = axis_data.initialTopValue + unitsDragged;\n                                if (boundedValue) {\n                                    maxValue = Math.min(maxValue, boundedValue[1]);\n                                }\n                                var minValue = maxValue - axis_data.dragValueRange;\n                                if (boundedValue) {\n                                    if (minValue < boundedValue[0]) {\n                                        // Adjust maxValue, and recompute minValue.\n                                        maxValue = maxValue - (minValue - boundedValue[0]);\n                                        minValue = maxValue - axis_data.dragValueRange;\n                                    }\n                                }\n                                if (g.attributes_.getForAxis(\"logscale\", 1)) {\n                                    axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                                        Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                                    axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                                        Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                                } else {\n                                    axis.valueWindow = [minValue, maxValue];\n                                    axis.valueRange = [minValue, maxValue];\n                                }\n                            } else {\n                                var minDate = context.initialLeftmostDate -\n                                    (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n                                if (context.boundedDates) {\n                                    minDate = Math.max(minDate, context.boundedDates[0]);\n                                }\n                                var maxDate = minDate + context.dateRange;\n                                if (context.boundedDates) {\n                                    if (maxDate > context.boundedDates[1]) {\n                                        // Adjust minDate, and recompute maxDate.\n                                        minDate = minDate - (maxDate - context.boundedDates[1]);\n                                        maxDate = minDate + context.dateRange;\n                                    }\n                                }\n                                var zoomRange = g.xAxisZoomRange;\n                                if (g.xAxisZoomRange[0] instanceof Date) {\n                                    zoomRange[0] = g.xAxisZoomRange[0].getTime();\n                                }\n                                if (g.xAxisZoomRange[1] instanceof Date) {\n                                    zoomRange[1] = g.xAxisZoomRange[1].getTime();\n                                }\n\n                                if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                                    return;\n                                }\n\n                                if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                                    g.dateWindow_ = [Math.pow(Dygraph.LOG_SCALE, minDate),\n                                        Math.pow(Dygraph.LOG_SCALE, maxDate)];\n                                } else {\n                                    g.dateWindow_ = [minDate, maxDate];\n                                }\n                            }\n                        }\n                        g.drawGraph_(false);\n                    }\n\n\n                    function offsetToPercentage(g, offsetX, offsetY) {\n                        // This is calculating the pixel offset of the leftmost date.\n                        var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n                        var yar0 = g.yAxisRange(0);\n\n                        // This is calculating the pixel of the higest value. (Top pixel)\n                        var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n                        // x y w and h are relative to the corner of the drawing area,\n                        // so that the upper corner of the drawing area is (0, 0).\n                        var x = offsetX - xOffset;\n                        var y = offsetY - yOffset;\n\n                        // This is computing the rightmost pixel, effectively defining the\n                        // width.\n                        var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n                        // This is computing the lowest pixel, effectively defining the height.\n                        var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n                        // Percentage from the left.\n                        var xPct = w == 0 ? 0 : (x / w);\n                        // Percentage from the top.\n                        var yPct = h == 0 ? 0 : (y / h);\n\n                        // The (1-) part below changes it from \"% distance down from the top\"\n                        // to \"% distance up from the bottom\".\n                        return [xPct, (1 - yPct)];\n                    }\n\n\n                    function zoom(g, zoomInPercentage, xBias, yBias, direction, side) {\n                        if (scope.basicInfo && !scope.basicInfo.zoom) {\n                            return;\n                        }\n\n                        function adjustAxis(axis, zoomInPercentage, bias) {\n                            var delta = axis[1] - axis[0];\n                            var increment = delta * zoomInPercentage;\n                            var foo = [increment * bias, increment * (1 - bias)];\n                            return [axis[0] + foo[0], axis[1] - foo[1]];\n                        }\n\n                        xBias = xBias || 0.5;\n                        yBias = yBias || 0.5;\n                        var yAxes = g.axes_;\n                        var newYAxes = [];\n                        for (var i = 0; i < g.numAxes(); i++) {\n                            newYAxes[i] = adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n                        }\n                        if ('v' == direction) {\n                            if ('l' == side) {\n                                yAxes[0]['valueRange'] = newYAxes[0];\n                                yAxes[0]['valueWindow'] = newYAxes[0];\n                            } else if ('r' == side && g.numAxes() == 2) {\n                                yAxes[1]['valueRange'] = newYAxes[1];\n                                yAxes[1]['valueWindow'] = newYAxes[1];\n                            }\n                            g.drawGraph_(false);\n                        } else {\n\n                            var ranges = [];\n                            angular.forEach(g.xAxisRange(), function (range) {\n                                if (range instanceof Date) {\n                                    ranges.push(range.getTime());\n                                } else {\n                                    ranges.push(range);\n                                }\n                            });\n\n                            var newZoomRange = adjustAxis(ranges, zoomInPercentage, xBias);\n                            // do not bigger than range data\n                            var zoomRange = [];\n                            if (g.hasOwnProperty(\"xAxisZoomRange\") && g.xAxisZoomRange) {\n                                zoomRange[0] = g.xAxisZoomRange[0];\n                                zoomRange[1] = g.xAxisZoomRange[1];\n                            } else {\n                                zoomRange[0] = g.xAxisExtremes()[0];\n                                zoomRange[1] = g.xAxisExtremes()[1];\n                            }\n                            if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                                return;\n                            } else if (newZoomRange[0] >= newZoomRange[1]) {\n                                return;\n                            } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                                g.updateOptions({\n                                    dateWindow: [zoomRange[0], newZoomRange[1]]\n                                });\n                            } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                                g.updateOptions({\n                                    dateWindow: [newZoomRange[0], zoomRange[1]]\n                                });\n                            } else {\n                                g.updateOptions({\n                                    dateWindow: newZoomRange\n                                });\n                            }\n                        }\n                    }\n\n                    var zoomTimer = null;\n                    var scroll = function (e, g, context) {\n\n                        if (scope.basicInfo && !scope.basicInfo.zoom) {\n                            return;\n                        }\n\n                        if (zoomTimer) {\n                            timeOut.cancel(zoomTimer);\n                        }\n                        var normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n                        // For me the normalized value shows 0.075 for one click. If I took\n                        // that verbatim, it would be a 7.5%.\n                        var percentage = normal / 50;\n\n                        if (!(e.offsetX && e.offsetY)) {\n                            e.offsetX = e.layerX - e.target.offsetLeft;\n                            e.offsetY = e.layerY - e.target.offsetTop;\n                        }\n                        var percentages = offsetToPercentage(g, e.offsetX, e.offsetY);\n                        var xPct = percentages[0];\n                        var yPct = percentages[1];\n                        //\n                        if (e.offsetX <= (g.plotter_.area.x)) {\n                            // console.info(\"v\", \"l\")\n                            // left zoom\n                            zoom(g, percentage, xPct, yPct, 'v', 'l');\n                        } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                            // right zoom\n                            // console.info(\"v\", \"r\")\n                            zoom(g, percentage, xPct, yPct, 'v', 'r');\n                        } else {\n                            // middle zoom\n                            // console.info(\"h\")\n                            zoom(g, percentage, xPct, yPct, 'h', null);\n                        }\n\n                        Dygraph.cancelEvent(e);\n                        timeOut(function () {\n                            scope.chartDateWindow = g.xAxisRange();\n                        });\n\n                    };\n\n                    var firstPoint = null;\n                    var mousedownHandler = function (e, g, context) {\n                        if (scope.basicInfo && !scope.basicInfo.zoom) {\n                            return;\n                        }\n                        context.initializeMouseDown(e, g, context);\n                        firstPoint = e.clientX;\n                        Dygraph.startPan(e, g, context);\n                    };\n                    var mousemoveHandler = function (e, g, context) {\n                        if (context.isPanning) {\n                            if (event.offsetX <= (g.plotter_.area.x)) {\n                                movePan(event, g, context, 'r');\n                            } else if (event.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                                movePan(event, g, context, 'l');\n                            } else {\n                                movePan(event, g, context, 'h');\n                            }\n                            timeOut(function () {\n                                scope.chartDateWindow = scope.currentChart.xAxisRange();\n                            });\n                        }\n                    };\n\n                    var mouseupHandler = function (e, g, context) {\n                        if (context.isPanning) {\n                            Dygraph.endPan(e, g, context);\n                        }\n                    };\n\n                    var interactionModel = {\n                        'mousewheel': scroll,\n                        'DOMMouseScroll': scroll,\n                        'mousedown': mousedownHandler,\n                        'mousemove': mousemoveHandler,\n                        'mouseup': mouseupHandler\n                    };\n\n\n                    //init configuration\n                    var configuration = {\n                        drawGapEdgePoints: true,\n                        'pointSize': 3,\n                        labelsKMB: true,\n                        // data formate\n                        labels: ['x'].concat(sampleData.labels),\n                        highlightCircleSize: 2,\n                        strokeWidth: 1,\n                        highlightSeriesOpts: {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        drawPoints: false,\n                        drawAxesAtZero: false,\n                        labelsDivStyles: {\n                            'text-align': 'right',\n                            'position': 'relative',\n                            'display': 'inline-block'\n                        },\n                        yRangePad: 10,\n                        // x label y label\n                        ylabel: 'Value',\n                        xlabel: 'Date',\n                        colors: scope.defaultColors,\n                        // multiple Y axis\n                        series: {\n                            'Device0': {\n                                axis: 'y2'\n                            },\n                            'Device4': {\n                                axis: 'y2'\n                            }\n                        },\n                        // showRangeSelector: true,\n                        axes: {\n                            y: {\n                                valueRange: [0, 1]\n                            },\n                            y2: {\n                                // set axis-related properties here\n                                'labelsKMB': true,\n                                valueRange: [0, 1]\n                            },\n                            x: {\n                                // datetime format\n                                valueFormatter: function (y) {\n                                    return moment(y).format('LLLL'); //Hide legend label\n                                }\n                            }\n                        },\n                        pointClickCallback: function (e, p) {\n                            if (scope.currentView != -1) {\n                                scope.showOne(p.name);\n                            }\n                        },\n                        drawCallback: function (g, isInit) {\n                            timeOut(function () {\n                                if (scope.refersh) { // make sure \"scope.refersh\" doesn't call when the graph create first time.\n                                    scope.refersh(g);\n                                }\n                            });\n                        },\n                        'interactionModel': interactionModel\n                    };\n\n                    scope.currentChart = new Dygraph(element.find(\"div[class='line-chart-graph']\")[0], sampleData.data, configuration);\n                    element.find(\"canvas\").css(\"zIndex\", 99);\n\n\n                    if (attrs.hasOwnProperty(\"shown\")) {\n\n\n                        var basicInfo = scope.basicInfo;\n                        if (basicInfo && basicInfo.range_show) {\n                            scope.rangeSelectorBar = new Dygraph(element.find(\"div[class='range-selector-bar']\")[0], sampleData.data, {\n                                    xAxisHeight: 0,\n                                    axes: {\n                                        x: {\n                                            drawAxis: false\n                                        }\n                                    },\n                                    showRangeSelector: true,\n                                    rangeSelectorHeight: 30\n                                }\n                            );\n                            scope.chartDateWindow = scope.rangeSelectorBar.xAxisRange();\n                        }\n\n\n                        var status = false;\n                        // add mouse up event to range select\n                        element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mouseup', function (event) {\n                            status = false;\n                            timeOut(function () {\n                                var finalDateRagne = scope.currentChart.xAxisRange();\n                                scope.chartDateTime = {begin: finalDateRagne[0], end: finalDateRagne[1]};\n                            });\n                        });\n\n                        scope.$on('mouseUpMessage', function ($scope, e) {\n                            if (\"mouseup\" === e.type && status) {\n                                status = false;\n                                timeOut(function () {\n                                    var finalDateRange = scope.currentChart.xAxisRange();\n                                    scope.chartDateTime = {begin: finalDateRange[0], end: finalDateRange[1]};\n                                });\n                            }\n                        });\n\n                        scope.$on('bindFatherGraphEvent', function (event, data) {\n                            angular.forEach(data.children, function (child) {\n                                if (child == attrs.id) {\n                                    Dygraph.synchronize([scope.currentChart].concat(data.parent), {\n                                        zoom: true,\n                                        selection: false,\n                                        range: false\n                                    });\n                                    scope.currentChart.updateOptions({\n                                        drawCallback: function (g, isInit) {\n                                            timeOut(function () {\n                                                scope.refersh(g);\n                                            });\n                                        }\n                                    });\n                                }\n                            });\n\n\n                        });\n\n\n                        element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousemove', function (event) {\n                            if (status) {\n                                timeOut(function () {\n                                    scope.chartDateWindow = scope.currentChart.xAxisRange();\n                                });\n                            }\n                        });\n\n                        element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousedown', function (event) {\n                            status = true;\n                        });\n\n                        //bind chart\n                        if (basicInfo && basicInfo.childrenChart.length > 0) {\n                            var param = {'graphs': [scope.currentChart], children: basicInfo.childrenChart};\n                            if (scope.rangeSelectorBar) {\n                                param.graphs.push(scope.rangeSelectorBar);\n                            }\n                            scope.$emit('bindChildChartEvent', param);\n                        }\n                    }\n                }, 0\n            );\n        }\n\n        //controller: ['$scope', '$element', '$window', '$interval', '$timeout', '$filter', '$location', function ($scope, $element, $window, $interval, $timeout, $filter, $location) {\n        controller($scope, $element, $window, $interval, $timeout, $filter, $location, dataService, $rootScope) {\n            var element_id = $element.attr(\"id\");\n            $scope.elementId = element_id;\n\n            $scope['defaultColors'] = dataService.defaultColors();\n            var metadata = null;\n            var widgetData = null;\n            $scope.emptyDataShow = false;\n            // attributes----------------------\n\n            $scope.$emit('fetchWidgetMetadataEvent', {\n                id: element_id, callback: function (data) {\n                    if (data) {\n                        widgetData = data;\n                    }\n                }\n            });\n\n            if (widgetData.data && widgetData.from == \"show\") {\n                $scope.loadingShow = false;\n\n                $scope.intevals = {device: []};\n\n\n                // update chart\n                $scope.css = {\n                    width: \"col-md-12\",\n                    height: \"400\"\n                };\n                if (widgetData.data.metadata.css) {\n                    $scope.css = widgetData.data.metadata.css;\n                }\n\n                //fix interval\n                $scope.fixInterval = false;\n                var noneFixed = [];\n                $scope.fixGraphWithGap = function () {\n                    if ($scope.currentChart && $scope.fixInterval) {\n                        var currentInterval = -1;\n                        angular.forEach($scope.intevals.device, function (item) {\n                            if (item.name === $scope.currentIntervalName) {\n                                currentInterval = item.interval;\n                            }\n                        });\n                        if (noneFixed && noneFixed.length > 0) {\n                            //fix\n                            //get first one\n                            var fixed = [noneFixed[0]];\n                            var tempDate = fixed[0][0].getTime() + currentInterval;\n                            while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                                var flag = false;\n                                // add new\n                                for (var i = 0; i < noneFixed.length; i++) {\n                                    if (noneFixed[i][0].getTime() == tempDate) {\n                                        flag = true;\n                                        fixed.push(noneFixed[i]);\n                                        break;\n                                    }\n                                }\n\n                                if (!flag) {\n                                    var obj = [new Date(tempDate)];\n                                    // add NaN\n                                    for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                        obj.push(NaN);\n                                    }\n                                    fixed.push(obj);\n                                }\n                                tempDate += currentInterval;\n                            }\n                            $scope.currentChart.updateOptions({file: fixed});\n                        }\n                    } else if ($scope.currentChart && !$scope.fixInterval) {\n                        noneFixed = [];\n                        angular.copy($scope.currentChart.file_, noneFixed);\n                        $scope.currentChart.updateOptions({file: noneFixed});\n                    }\n\n                };\n                $scope.fixGraphWithGap_click = function () {\n                    if ($scope.currentChart && !$scope.fixInterval) {\n                        noneFixed = [];\n                        angular.copy($scope.currentChart.file_, noneFixed);\n                        var currentInterval = -1;\n                        angular.forEach($scope.intevals.device, function (item) {\n                            if (item.name === $scope.currentIntervalName) {\n                                currentInterval = item.interval;\n                            }\n                        });\n                        if (noneFixed && noneFixed.length > 0) {\n                            //fix\n                            //get first one\n                            var fixed = [noneFixed[0]];\n                            var tempDate = fixed[0][0].getTime() + currentInterval;\n                            while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                                var flag = false;\n                                // add new\n                                for (var i = 0; i < noneFixed.length; i++) {\n                                    if (noneFixed[i][0].getTime() == tempDate) {\n                                        flag = true;\n                                        fixed.push(noneFixed[i]);\n                                        break;\n                                    }\n                                }\n\n                                if (!flag) {\n                                    var obj = [new Date(tempDate)];\n                                    // add NaN\n                                    for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                        obj.push(NaN);\n                                    }\n                                    fixed.push(obj);\n                                }\n                                tempDate += currentInterval;\n                            }\n                            $scope.currentChart.updateOptions({file: fixed});\n                        }\n                    } else if ($scope.currentChart && $scope.fixInterval) {\n                        $scope.currentChart.updateOptions({file: noneFixed});\n                    }\n\n                };\n\n\n                metadata = widgetData.data.metadata;\n                $scope.basicInfo = metadata.data.basic;\n                $scope.currentView = -1; // -1 is device view and 1 is scatter view\n\n                $scope.parent_container = widgetData.data.parent;\n\n                $scope.data_from = \"application\";\n\n                $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                    // if the parent container sends a device to here, ignore global device.\n                    if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                        return;\n                    } else if (deviceData.from != \"application\") {\n                        if ($scope.parent_container != \"edit\" + deviceData.from) {\n                            return;\n                        } else {\n                            $scope.data_from = deviceData.from;\n                        }\n                    }\n\n\n                    $scope.$watch('currentView', function (nObj, oObj) {\n                        // change\n                        if (nObj != oObj) {\n                            if (nObj == -1) {\n                                var rangeLevel = null;\n                                var otherLevels = [];\n                                angular.forEach(metadata.data.groups[1].collections, function (level) {\n                                    if (level.rows.length > 0) {\n                                        if (rangeLevel != null) {\n                                            otherLevels.push(rangeLevel);\n                                        }\n                                        rangeLevel = level.name;\n                                    }\n                                });\n                                if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                                    // show device view\n                                    dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels).then(function (data) {\n                                        initChart(data);\n                                    }, function (error) {\n                                        console.error(error)\n                                    });\n                                }\n\n                            } else {\n                                //get relation config\n                                if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                                    return;\n                                } else {\n                                    var rangeLevel = null;\n                                    var otherLevels = [];\n                                    angular.forEach(metadata.data.groups[2].collections, function (level) {\n                                        if (level.rows.length > 0) {\n                                            if (rangeLevel != null) {\n                                                otherLevels.push(rangeLevel);\n                                            }\n                                            rangeLevel = level.name;\n                                        }\n                                    });\n                                    if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                                        // show children view\n                                        dataService.childrenDeviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, metadata.data.source.relation, metadata.data.source.relation_group, rangeLevel, otherLevels).then(function (data) {\n                                            // get all device trees\n                                            if (data != null && data.length > 0) {\n                                                initChildrenChart(data);\n                                            } else {\n                                                return;\n                                            }\n\n                                        }, function (error) {\n                                            console.error(error)\n                                        });\n\n                                    }\n                                }\n                            }\n                        }\n                        $scope.fixInterval = false;\n\n                    });\n\n\n                    // first time of showing chart\n                    $scope.$watch('currentChart', function (newValue) {\n                        if (newValue) {\n                            //device first level\n                            var rangeLevel = null;\n                            var otherLevels = [];\n                            angular.forEach(metadata.data.groups[1].collections, function (level) {\n                                if (level.rows.length > 0) {\n                                    if (rangeLevel != null) {\n                                        otherLevels.push(rangeLevel);\n                                    }\n                                    rangeLevel = level.name;\n                                }\n                            });\n                            //send a rest request\n                            dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels).then(function (data) {\n                                initChart(data);\n                            }, function (error) {\n                                console.error(error)\n                            });\n                        }\n                    });\n\n\n                    $scope.$watch(\"chartDateTime\", function (newValue, oldValue) {\n                        if (newValue.begin != oldValue.begin || newValue.end != oldValue.end) {\n                            var expect_points = Math.floor($element.parent().width() / 2);\n                            // find a interval\n                            var expectedInterval = (newValue.end - newValue.begin) / expect_points;\n                            var conf = $scope.intevals.device;\n                            // device detail view\n                            var preOne = conf[0].interval;\n                            var lastOne = conf[conf.length - 1].interval;\n                            var cin = \"\";\n                            if (expectedInterval >= preOne) {\n                                expectedInterval = preOne;\n                            } else if (expectedInterval <= lastOne) {\n                                expectedInterval = lastOne;\n                            } else {\n                                for (var i = 1; i < conf.length; i++) {\n                                    if (expectedInterval <= preOne && expectedInterval > conf[i].interval) {\n                                        expectedInterval = preOne;\n                                    } else {\n                                        preOne = conf[i].interval;\n                                        cin = conf[i].name;\n                                    }\n                                }\n                            }\n                            $scope.currentIntervalName = \"\";\n\n                            angular.forEach(conf, function (config) {\n                                if (config.interval == expectedInterval) {\n                                    $scope.currentIntervalName = config.name;\n                                }\n                            });\n                            $scope.loadingShow = true;\n                            if ($scope.currentView == 1) {\n                                // scatter detail view\n                                if (expectedInterval == conf[0].interval) {\n                                    // set valueRange;\n                                    // re cal max and min\n                                    // $scope.childrenRangeConfig[\"dateWindow\"] = $scope.chartDateWindow;\n                                    $scope.currentChart.updateOptions({dateWindow: $scope.chartDateWindow});\n                                    // if ($scope.rangeSelectorBar) {\n                                    //     $scope.rangeSelectorBar.updateOptions({series: $scope.childRangeSeries});\n                                    // }\n                                    $scope.loadingShow = false;\n                                } else {\n                                    var deviceInfo = [];\n                                    var currentStore = \"\";\n                                    // has problem....\n                                    angular.forEach($scope.childTrees, function (device) {\n                                        angular.forEach(device.trees, function (tree, index) {\n                                            if (expectedInterval == tree.frequency && index != 0) {\n                                                currentStore = tree.store;\n                                                deviceInfo.push({name: device.name, tree: tree.tree});\n                                            }\n                                        });\n                                    });\n\n                                    dataService.devicesStoreData($rootScope.host, $rootScope.applicationName, deviceInfo, metadata.data.source.store, currentStore, newValue.begin, newValue.end).then(function (data) {\n                                        var showData = [];\n                                        angular.forEach(data, function (arr) {\n                                            var deviceData = [];\n                                            angular.forEach(arr.data, function (bucket) {\n                                                if (bucket.data != null) {\n                                                    Array.prototype.push.apply(deviceData, bucket.data.slice(0, bucket.size));\n                                                }\n                                            });\n                                            showData.push({device: arr.device, data: deviceData});\n                                        });\n                                        //get configuration\n                                        updateChildrenDetailChart(metadata, currentStore, $scope.rangeChildrenData, showData);\n\n                                    }, function (data) {\n                                        console.info(data);\n                                    });\n                                }\n                                $scope.fixGraphWithGap();\n                            } else {\n                                // if expected interval is the biggest, show range data\n                                if (expectedInterval == conf[0].interval) {\n                                    if (!($scope.chartDateWindow[0] instanceof Date)) {\n                                        $scope.chartDateWindow[0] = new Date($scope.chartDateWindow[0]);\n                                    }\n\n                                    if (!($scope.chartDateWindow[1] instanceof Date)) {\n                                        $scope.chartDateWindow[1] = new Date($scope.chartDateWindow[1]);\n                                    }\n                                    $scope.rangeConfig[\"dateWindow\"] = $scope.chartDateWindow;\n                                    // set valueRange\n                                    $scope.currentChart.updateOptions($scope.rangeConfig);\n                                    if ($scope.rangeSelectorBar && $scope.rangeSeries) {\n                                        $scope.rangeSelectorBar.updateOptions({series: $scope.rangeSeries});\n                                    }\n                                    // tell some other widgets, the graph is changed.\n                                    $timeout(function () {\n                                        $rootScope.$broadcast('chartDataChangeEvent', {\n                                            'id': element_id,\n                                            'group': 'device',\n                                            'data': {\n                                                'collection': conf[0].name,\n                                                'group': 'device',\n                                                'data': $scope.ordinalRangeData.filter(function (obj) {\n                                                    return obj.timestamp >= $scope.rangeConfig[\"dateWindow\"][0].getTime() && obj.timestamp <= $scope.rangeConfig[\"dateWindow\"][1].getTime();\n                                                })\n                                            }\n                                        });\n                                    });\n\n                                    $scope.loadingShow = false;\n                                } else {\n                                    // cal tree\n                                    angular.forEach($scope.trees, function (tree, index) {\n                                        if (expectedInterval == tree.frequency && index != 0) {\n                                            // send request\n                                            dataService.deviceStoreData($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, newValue.begin, newValue.end).then(function (data) {\n                                                // udpate chart\n                                                var showData = [];\n                                                angular.forEach(data, function (arr) {\n                                                    Array.prototype.push.apply(showData, arr.data.slice(0, arr.size));\n                                                });\n                                                showData = showData.filter(function (obj) {\n                                                    return obj != null;\n                                                });\n                                                showData.sort(function (a, b) {\n                                                    return a.timestamp > b.timestamp ? 1 : -1;\n                                                });\n                                                //get configuration\n                                                updateDetailChart(metadata, tree.store, $scope.rangeData, showData);\n\n                                                // tell some other widgets, the graph is changed.\n                                                $timeout(function () {\n                                                    $rootScope.$broadcast('chartDataChangeEvent', {\n                                                        'id': element_id,\n                                                        'group': 'device',\n                                                        'data': {\n                                                            'collection': tree.store,\n                                                            'group': 'device',\n                                                            'data': showData\n                                                        }\n                                                    });\n                                                });\n\n                                            }, function (data) {\n                                                console.info(data);\n                                            });\n                                        }\n                                    });\n                                }\n                                $scope.fixGraphWithGap();\n                            }\n                            $scope.status = false;\n                        }\n                    });\n\n\n                });\n\n\n                var fetchData = function (values, node) {\n                    if (node.children[0] != null) {\n                        fetchData(values, node.children[0]);\n                    }\n\n                    if (node.children[1] != null) {\n                        fetchData(values, node.children[1]);\n                    }\n\n                    if (node.children[0] == null && node.children[1] == null) {\n                        Array.prototype.push.apply(values, node.data.array.slice(0, node.data.size));\n                    }\n\n                };\n\n\n                $scope.trees = [];\n\n                $scope.rangeData = [];\n\n                $scope.ordinalRangeData = [];\n\n                var initChart = function (data) {\n                    $scope.intevalforshow = [];\n                    //\n                    $scope.intevals.device = [];\n                    var trees = data.trees;\n                    $scope.trees = trees;\n                    var rangeTree = null;\n                    angular.forEach(trees, function (tree) {\n                        if (tree.range) {\n                            rangeTree = tree;\n                        }\n                        $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n                    });\n\n\n                    // init chart with range data\n                    var store = rangeTree.store;\n\n                    // get all data\n                    var allData = [];\n                    fetchData(allData, rangeTree.tree);\n                    allData = allData.filter(function (obj) {\n                        return obj != null;\n                    });\n                    allData.sort(function (a, b) {\n                        return a.timestamp > b.timestamp ? 1 : -1;\n                    });\n\n\n                    if ($scope.trees.length == 0 || allData.length == 0) {\n                        $scope.emptyDataShow = true;\n                        return;\n                    }\n\n                    // if the data only has one point. change the data range to bigger\n                    if (allData.length == 1) { //  means only one point.\n                        var newData = [];\n                        // add 1 points into both side\n                        var thePoint = allData[0];\n                        var timestamp = thePoint.timestamp;\n                        var currentInterval = $scope.intevals.device[0].interval;\n                        newData.push({timestamp: timestamp - currentInterval});\n                        Array.prototype.push.apply(newData, allData);\n                        newData.push({timestamp: timestamp + currentInterval});\n                        allData = newData;\n                    }\n                    $scope.ordinalRangeData = allData;\n                    // get configuration and make real data\n                    updateChart(metadata, store, allData);\n                };\n\n                var initChildrenChart = function (deviceDatas) {\n                    var devicesInfo = {};\n                    $scope.intevals.device = [];\n                    //range data with all device\n                    $scope.childTrees = [];\n                    angular.forEach(deviceDatas, function (deviceData) {\n                        var device = deviceData.device;\n                        var trees = deviceData.trees;\n                        $scope.childTrees.push({name: device.name, trees: trees});\n                        var rangeTree = null;\n                        angular.forEach(trees, function (tree) {\n                            if (tree.range) {\n                                rangeTree = tree;\n                            }\n\n                            var flag = false;\n                            angular.forEach($scope.intevals.device, function (interval) {\n                                if (interval.name == tree.store && interval.interval == tree.frequency) {\n                                    // has same one\n                                    flag = true;\n                                }\n                            });\n                            if (!flag) {\n                                $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n                            }\n\n                        });\n\n                        if (rangeTree != null) {\n                            var deviceObj = devicesInfo[device.name] = {};\n                            // get all data\n                            var allData = [];\n                            fetchData(allData, rangeTree.tree);\n                            allData = allData.filter(function (obj) {\n                                return obj != null;\n                            });\n                            allData.sort(function (a, b) {\n                                return a.timestamp > b.timestamp ? 1 : -1;\n                            });\n                            //\n                            deviceObj[\"range\"] = rangeTree;\n                            deviceObj[\"data\"] = allData;\n                        } else {\n                            console.info(device.name + \" has none data.\");\n                        }\n\n                    });\n\n                    updateChildrenChart(metadata, devicesInfo);\n                };\n\n\n                var updateChildrenChart = function (metadata, devicesInfo) {\n                    //relation\n                    var relationConfig = metadata.data.groups[2];\n                    // scatter view shows only one collection\n                    var collections = relationConfig.collections;\n                    var labels = [];\n                    var series = {};\n                    var colors = [];\n                    var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n                    var allLines = [];\n                    var allXLabels = [];\n                    angular.forEach(devicesInfo, function (device, key) {\n                        angular.forEach(device.data, function (item) {\n                            var flag = false;\n                            angular.forEach(allXLabels, function (label) {\n                                if (label.getTime() == item.timestamp) {\n                                    flag = true;\n                                }\n                            });\n                            if (!flag) {\n                                allXLabels.push(new Date(item.timestamp));\n                            }\n\n\n                        });\n                    });\n                    // order\n                    allXLabels.sort(function (a, b) {\n                        return a > b ? 1 : -1;\n                    });\n\n                    // make all line\n                    angular.forEach(allXLabels, function (label) {\n                        allLines.push([label]);\n                    });\n\n\n                    var yRange = {min: null, max: null};\n                    var showY2axis = false;\n                    var counter = 0;\n                    angular.forEach(devicesInfo, function (device, key) {\n                        colors.push($scope.defaultColors[counter]);\n                        counter++;\n\n                        angular.forEach(collections, function (collection) {\n                            if (collection.name == device.range.store) {\n                                $scope.currentIntervalName = device.range.store;\n                                var originalData = device.data;\n\n                                // always same for each device\n                                if (collection.rows[0].yaxis == 0) {\n                                    series[collection.rows[0].label] = {'axis': 'y1'};\n                                } else {\n                                    series[collection.rows[0].label] = {'axis': 'y2'};\n                                    showY2axis = true;\n                                }\n                                labels.push(key);\n                                // make a line\n                                var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                                // add value\n                                angular.forEach(allLines, function (realLine, index) {\n\n                                    var flag = false;\n                                    angular.forEach(originalData, function (odata) {\n                                        if (realLine[0].getTime() == odata.timestamp) {\n                                            try {\n                                                var value = f(odata);\n                                                realLine.push(value);\n                                                if (yRange.min == null) {\n                                                    yRange.min = value;\n                                                }\n\n                                                if (yRange.max == null) {\n                                                    yRange.max = value;\n                                                }\n\n                                                if (yRange.min > value) {\n                                                    yRange.min = value;\n                                                }\n\n                                                if (yRange.max < value) {\n                                                    yRange.max = value;\n                                                }\n                                            } catch (ex) {\n                                                realLine.push(null);\n                                            }\n                                            flag = true;\n                                        }\n                                    });\n\n                                    if (!flag) {\n                                        realLine.push(null);\n                                    }\n                                });\n\n\n                            }\n                        });\n                    });\n\n                    if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                        yRange.min = yRange.min - (yRange.min) * 0.10;\n                        yRange.max = yRange.max + (yRange.max) * 0.10;\n                    }\n                    //update chart\n\n                    if ($scope.currentChart) {\n                        $scope.rangeChildrenData = allLines;\n\n                        if (showY2axis) {\n                            $scope.childrenRangeConfig = {\n                                'labelsKMB': true,\n                                'file': allLines,\n                                'labels': ['x'].concat(labels),\n                                'ylabel': leftAndRight.left,\n                                'y2label': leftAndRight.right,\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRange.min, yRange.max]},\n                                    'y2': {}\n                                }\n                                // showRangeSelector: true\n                            };\n                        } else {\n                            var newLines = [];\n                            angular.copy(allLines, newLines);\n                            angular.forEach(newLines, function (line) {\n                                line.push(NaN);\n                            });\n                            series[\"span_y2\"] = {'axis': 'y2'};\n                            $scope.childrenRangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'labelsKMB': true,\n                                'file': newLines,\n                                'labels': ['x'].concat(labels).concat(['span_y2']),\n                                'ylabel': leftAndRight.left,\n                                'y2label': \"\",\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRange.min, yRange.max]},\n                                    'y2': {\n                                        axisLabelFormatter: function (d) {\n                                            return '';\n                                        }\n                                    }\n                                }\n                                // showRangeSelector: true\n                            };\n                        }\n                        $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n                        $scope.loadingShow = false;\n                    }\n\n\n                };\n\n\n                var updateChildrenDetailChart = function (metadata, store, rangeData, allData) {\n                    //relation\n                    var relationConfig = metadata.data.groups[2];\n                    // scatter view shows only one collection\n                    var collections = relationConfig.collections;\n                    var newLines = [];\n                    var newTime = [];\n                    var series = {};\n                    var labels = [];\n                    var colors = [];\n                    var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n                    var yRange = {min: null, max: null};\n                    var counter = 0;\n                    var showY2axis = null;\n                    angular.forEach(allData, function (device) {\n                        colors.push($scope.defaultColors[counter]);\n                        counter++;\n\n                        if (device.data.length > 0) {\n                            labels.push(device.device);\n                            angular.forEach(collections, function (collection) {\n                                if (collection.name == store) {\n                                    $scope.currentIntervalName = store;\n                                    if (collection.rows[0].yaxis == 0) {\n                                        series[collection.rows[0].label] = {'axis': 'y1'};\n                                    } else {\n                                        series[collection.rows[0].label] = {'axis': 'y2'};\n                                        showY2axis = true;\n                                    }\n                                    var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \")return \" + collection.rows[0].value + \";return null;}\");\n                                    var tempData = [];\n                                    var tempTime = [];\n                                    // make data\n                                    angular.forEach(device.data, function (data) {\n                                        var dateTime = new Date(data.timestamp);\n                                        try {\n                                            var value = f(data);\n                                            tempData.push({timestamp: dateTime, value: value});\n\n                                            if (yRange.min == null) {\n                                                yRange.min = value;\n                                            }\n\n                                            if (yRange.max == null) {\n                                                yRange.max = value;\n                                            }\n\n                                            if (yRange.min > value) {\n                                                yRange.min = value;\n                                            }\n\n                                            if (yRange.max < value) {\n                                                yRange.max = value;\n                                            }\n\n                                        } catch (e) {\n                                            tempData.push({timestamp: dateTime, value: null});\n                                        }\n                                        tempTime.push(dateTime.getTime());\n                                    });\n                                    newTime = newTime.concat(tempTime.filter(function (item) {\n                                        return newTime.indexOf(item) < 0;\n                                    }));\n                                    newLines.push({device: device.device, data: tempData});\n                                }\n                            });\n                        }\n                    });\n\n                    var chartData = [];\n\n                    angular.forEach(newTime, function (nt) {\n                        chartData.push([new Date(nt)]);\n                    });\n\n\n                    angular.forEach(newLines, function (line) {\n                        angular.forEach(chartData, function (timeTicket) {\n                            // line data\n                            var flag = false;\n                            var lineData = line.data;\n                            for (var i = 0; i < lineData.length; i++) {\n                                if (lineData[i].timestamp.getTime() == timeTicket[0].getTime()) {\n                                    timeTicket.push(lineData[i].value);\n                                    flag = true;\n                                    break;\n                                }\n                            }\n                            if (flag != true) {\n                                timeTicket.push(null);\n                            }\n                        });\n                    });\n\n\n                    if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                        yRange.min = yRange.min - (yRange.min) * 0.10;\n                        yRange.max = yRange.max + (yRange.max) * 0.10;\n                    }\n\n\n                    if (chartData.length == 0) {\n                        $scope.currentChart.updateOptions({\n                            'file': []\n                        });\n                        $scope.loadingShow = false;\n                    } else {\n                        if ($scope.currentChart) {\n\n                            if (showY2axis) {\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'labelsKMB': true,\n                                    'file': chartData,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'colors': colors,\n                                    'axes': {\n                                        'y': {valueRange: [yRange.min, yRange.max]}\n                                    }\n                                    // showRangeSelector: true\n                                });\n                            } else {\n                                var newLines = [];\n                                angular.copy(chartData, newLines);\n                                angular.forEach(newLines, function (line) {\n                                    line.push(NaN);\n                                });\n                                series[\"span_y2\"] = {axis: 'y2'};\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'colors': colors,\n                                    'axes': {\n                                        'y': {valueRange: [yRange.min, yRange.max]},\n                                        \"y2\": {\n                                            axisLabelFormatter: function (d) {\n                                                return '';\n                                            }\n                                        }\n                                    }\n                                    // showRangeSelector: true\n                                });\n                            }\n                            $scope.loadingShow = false;\n                        }\n                    }\n\n\n                };\n\n\n                /**\n                 * update detail chart\n                 * @param metadata\n                 * @param store\n                 * @param rangeData\n                 * @param allData\n                 */\n                var updateDetailChart = function (metadata, store, rangeData, allData) {\n                    var deviceConfig = metadata.data.groups[1];\n                    var collections = deviceConfig.collections;\n                    var labels = [];\n                    var series = {};\n                    var colors = [];\n                    var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n                    var allLines = [];\n                    //0 for y  1 for y2\n                    var yRanges = [{min: null, max: null}, {min: null, max: null}];\n                    angular.forEach(collections, function (collection) {\n                        if (collection.name == store) {\n                            angular.forEach(allData, function (line) {\n                                allLines.push([new Date(line.timestamp)]);\n                            });\n\n                            // var yRange = {'min': null, 'max': null};\n                            var showY2axis = false;\n                            angular.forEach(collection.rows, function (row) {\n                                labels.push(row.label);\n                                colors.push(row.color);\n\n                                if (row.yaxis == 0) {\n                                    series[row.label] = {'axis': 'y1'};\n                                } else {\n                                    series[row.label] = {'axis': 'y2'};\n                                    showY2axis = true;\n                                }\n                                var f = new Function(\"data\", \"with(data) { if(\" + row.value + \")return \" + row.value + \";return null;}\");\n                                // add value\n                                var counter = 0;\n                                angular.forEach(allLines, function (realLine) {\n                                    try {\n                                        var value = f(allData[counter]);\n                                        realLine.push(value);\n                                        if (row.yaxis == 0) {\n                                            if (yRanges[0].min == null) {\n                                                yRanges[0].min = value;\n                                            }\n\n                                            if (yRanges[0].max == null) {\n                                                yRanges[0].max = value;\n                                            }\n\n                                            if (yRanges[0].min > value) {\n                                                yRanges[0].min = value;\n                                            }\n\n                                            if (yRanges[0].max < value) {\n                                                yRanges[0].max = value;\n                                            }\n                                        } else {\n                                            if (yRanges[1].min == null) {\n                                                yRanges[1].min = value;\n                                            }\n\n                                            if (yRanges[1].max == null) {\n                                                yRanges[1].max = value;\n                                            }\n\n                                            if (yRanges[1].min > value) {\n                                                yRanges[1].min = value;\n                                            }\n\n                                            if (yRanges[1].max < value) {\n                                                yRanges[1].max = value;\n                                            }\n                                        }\n                                    } catch (ex) {\n                                        realLine.push(null);\n                                    }\n                                    counter++;\n                                });\n\n                            });\n\n                            angular.forEach(yRanges, function (yrange) {\n                                if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                    yrange.min = yrange.min - (yrange.min) * 0.10;\n                                    yrange.max = yrange.max + (yrange.max) * 0.10;\n                                }\n                            });\n\n\n                            if (allLines.length == 0) {\n                                $scope.currentChart.updateOptions({\n                                    'file': []\n                                });\n                                if ($scope.rangeSelectorBar) {\n                                    $scope.currentChart[\"xAxisZoomRange\"] = $scope.rangeSelectorBar.xAxisExtremes();\n                                }\n                                $scope.loadingShow = false;\n                            } else {\n                                if ($scope.currentChart) {\n\n                                    if (showY2axis) {\n                                        $scope.currentChart.updateOptions({\n                                            'drawGapEdgePoints': true,\n                                            'pointSize': 3,\n                                            'labelsKMB': true,\n                                            'file': allLines,\n                                            'labels': ['x'].concat(labels),\n                                            'ylabel': leftAndRight.left,\n                                            'y2label': leftAndRight.right,\n                                            'series': series,\n                                            'axes': {\n                                                'y': {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                                'y2': {'labelsKMB': true, valueRange: [yRanges[1].min, yRanges[1].max]}\n                                            },\n                                            'colors': colors\n                                            // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                        });\n                                    } else {\n\n                                        var newLines = [];\n                                        angular.copy(allLines, newLines);\n                                        angular.forEach(newLines, function (line) {\n                                            line.push(NaN);\n                                        });\n\n                                        series[\"span-Y2\"] = {axis: 'y2'};\n                                        $scope.currentChart.updateOptions({\n                                            'drawGapEdgePoints': true,\n                                            'pointSize': 3,\n                                            'labelsKMB': true,\n                                            'file': newLines,\n                                            'labels': ['x'].concat(labels).concat(['span_y2']),\n                                            'ylabel': leftAndRight.left,\n                                            'y2label': \"\",\n                                            'series': series,\n                                            'axes': {\n                                                'y': {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                                'y2': {\n                                                    axisLabelFormatter: function (d) {\n                                                        return '';\n                                                    }\n                                                }\n                                            },\n                                            'colors': colors\n                                            // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                        });\n\n                                    }\n\n                                    $scope.loadingShow = false;\n                                }\n                            }\n\n\n                        }\n                    });\n\n\n                };\n\n                /**\n                 * update range chart\n                 * @param metadata\n                 * @param store\n                 * @param allData\n                 */\n                var updateChart = function (metadata, store, allData) {\n                    var deviceConfig = metadata.data.groups[1];\n                    var collections = deviceConfig.collections;\n                    var labels = [];\n                    var series = {};\n                    var colors = [];\n                    var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n                    var allLines = [];\n                    //0 for y  1 for y2\n                    var yRanges = [{min: null, max: null}, {min: null, max: null}];\n                    angular.forEach(collections, function (collection) {\n                        if (collection.name == store) {\n                            $scope.currentIntervalName = store;\n                            angular.forEach(allData, function (line) {\n                                allLines.push([new Date(line.timestamp)]);\n                            });\n\n                            $scope.rangeSeriesNumber = collection.rows.length;\n                            var showY2axis = false;\n                            angular.forEach(collection.rows, function (row) {\n                                labels.push(row.label);\n                                colors.push(row.color);\n\n                                if (row.yaxis == 0) {\n                                    series[row.label] = {'axis': 'y1'};\n                                } else {\n                                    series[row.label] = {'axis': 'y2'};\n                                    showY2axis = true;\n                                }\n\n                                var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                                // add value\n                                var counter = 0;\n                                angular.forEach(allLines, function (realLine) {\n                                    try {\n                                        var value = f(allData[counter]);\n                                        realLine.push(value);\n                                        if (row.yaxis == 0) {\n                                            if (yRanges[0].min == null) {\n                                                yRanges[0].min = value;\n                                            }\n\n                                            if (yRanges[0].max == null) {\n                                                yRanges[0].max = value;\n                                            }\n\n                                            if (yRanges[0].min > value) {\n                                                yRanges[0].min = value;\n                                            }\n\n                                            if (yRanges[0].max < value) {\n                                                yRanges[0].max = value;\n                                            }\n                                        } else {\n                                            if (yRanges[1].min == null) {\n                                                yRanges[1].min = value;\n                                            }\n\n                                            if (yRanges[1].max == null) {\n                                                yRanges[1].max = value;\n                                            }\n\n                                            if (yRanges[1].min > value) {\n                                                yRanges[1].min = value;\n                                            }\n\n                                            if (yRanges[1].max < value) {\n                                                yRanges[1].max = value;\n                                            }\n                                        }\n\n                                    } catch (ex) {\n                                        realLine.push(null);\n                                    }\n                                    counter++;\n                                });\n\n                            });\n\n                            if ($scope.currentChart) {\n                                $scope.rangeData = allLines;\n                                var basicInfo = $scope.basicInfo;\n                                if (basicInfo && basicInfo.range_show) {\n                                    var rangeBarLabels = [];\n                                    for (var i = 0; i < labels.length; i++) {\n                                        rangeBarLabels.push(\"l\" + i);\n                                    }\n                                    var series_range = {'l0': {axis: 'y1'}};\n                                    if (showY2axis) {\n                                        //noinspection JSDuplicatedDeclaration\n                                        series_range = {\n                                            'l0': {axis: 'y1'},\n                                            'l0': {axis: 'y2'}\n                                        };\n                                        $scope.rangeSeries = series_range;\n\n                                        $scope.rangeSelectorBar.updateOptions({\n                                            'file': allLines,\n                                            'labels': ['x'].concat(rangeBarLabels),\n                                            'series': series_range\n                                        });\n                                    } else {\n                                        series_range[\"span_y2\"] = {axis: 'y2'};\n                                        $scope.rangeSeries = series_range;\n                                        var newLines = [];\n                                        angular.copy(allLines, newLines);\n                                        angular.forEach(newLines, function (line) {\n                                            line.push(NaN);\n                                        });\n                                        $scope.rangeSelectorBar.updateOptions({\n                                            'file': newLines,\n                                            'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                            'series': series_range\n                                        });\n                                    }\n\n\n                                }\n\n                                angular.forEach(yRanges, function (yrange) {\n                                    if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                        yrange.min = yrange.min - (yrange.min) * 0.10;\n                                        yrange.max = yrange.max + (yrange.max) * 0.10;\n                                    }\n                                });\n\n\n                                // if graph has 2 yAxis or a yAxis\n\n\n                                if (showY2axis) {\n                                    $scope.rangeConfig = {\n                                        'drawGapEdgePoints': true,\n                                        'pointSize': 3,\n                                        'labelsKMB': true,\n                                        'file': allLines,\n                                        'labels': ['x'].concat(labels),\n                                        'ylabel': leftAndRight.left,\n                                        'y2label': leftAndRight.right,\n                                        'series': series,\n                                        'colors': colors,\n                                        'axes': {\n                                            'y': {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                            'y2': {'labelsKMB': true, valueRange: [yRanges[1].min, yRanges[1].max]}\n                                        },\n                                        'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                        // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                        // showRangeSelector: true\n                                    };\n                                } else {\n                                    series['span_y2'] = {axis: 'y2'};\n                                    var newLines = [];\n                                    angular.copy(allLines, newLines);\n                                    angular.forEach(newLines, function (line) {\n                                        line.push(NaN);\n                                    });\n                                    $scope.rangeConfig = {\n                                        'drawGapEdgePoints': true,\n                                        'pointSize': 3,\n                                        'labelsKMB': true,\n                                        'file': newLines,\n                                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                                        'ylabel': leftAndRight.left,\n                                        'y2label': \"\",\n                                        'series': series,\n                                        'colors': colors,\n                                        'axes': {\n                                            'y': {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                            'y2': {\n                                                axisLabelFormatter: function (d) {\n                                                    return '';\n                                                }\n                                            }\n                                        },\n                                        'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                        // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                        // showRangeSelector: true\n                                    };\n                                }\n\n\n                                if (basicInfo && basicInfo.range_show) {\n                                    Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                        zoom: true,\n                                        selection: false,\n                                        range: false\n                                    });\n                                }\n                                $scope.currentChart.updateOptions($scope.rangeConfig);\n                                $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                $scope.chartDateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                //bind\n                                $scope.loadingShow = false;\n                            }\n\n                        }\n                    });\n                };\n\n\n                $scope.chartDateTime = {begin: null, end: null};\n\n                // function for show one\n                $scope.showOne = function (deviceName) {\n                    // device type is\n                    if ($location.url().indexOf('/app/page/param/') != -1) {\n                        //open window\n                        $window.open(\"/#/app/page/param/\" + $rootScope.applicationName + \"/\" + metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1]));\n                    } else {\n                        //open window\n                        $window.open(\"/#\" + $location.url().replace(\"show\", \"param\").replace($location.url().substr($location.url().lastIndexOf('/', $location.url().lastIndexOf('/') - 1) + 1), metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1])));\n                    }\n\n                };\n\n                var timer = null;\n                $scope.refersh = function (g) {\n                    if (timer) {\n                        $timeout.cancel(timer);\n                    }\n                    timer = $timeout(function () {\n                        $scope.chartDateTime = {begin: g.xAxisRange()[0], end: g.xAxisRange()[1]};\n                        $scope.chartDateWindow = g.xAxisRange();\n                    }, 600);\n                };\n\n\n            }\n\n        }\n\n\n        static buildFactory($timeout, dataService, $rootScope, $interval, $filter, $location) {\n            fgpWidgetGraph.instance = new fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location);\n            return fgpWidgetGraph.instance;\n        }\n\n    }\n\n    fgpWidgetGraph.$inject = ['$timeout', 'dataService', '$rootScope', '$interval', '$filter', '$location'];\n\n    class fgpWidgetPageTitle {\n        constructor() {\n            this.restrict = 'E';\n            this.scope = {};\n        }\n\n        template(element, attrs) {\n            var element_id = attrs.id;\n            //drag-channel  item means this widget accepts items\n            var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n                '<div class=\"{{css.width}}\" style=\"-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\">' +\n                '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n                '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"\">' +\n                '<h1>{{css.title.text}}</h1>' +\n                '<h3>{{css.subtitle.text}}</h3>' +\n                '</div>' +\n                '</div>' +\n                '</div>' +\n                '</div>';\n            return dom_show;\n        }\n\n\n        controller($scope, $element) {\n            var metadata = null;\n            var element_id = $element.attr(\"id\");\n            var widgetData = null;\n            $scope.$emit('fetchWidgetMetadataEvent', {\n                id: element_id, callback: function (data) {\n                    if (data) {\n                        widgetData = data;\n                    }\n                }\n            });\n\n            if (widgetData.data && widgetData.from == \"show\") {\n                metadata = widgetData.data.metadata;\n                $scope.css = {};\n                $scope.css[\"color\"] = metadata.css.color;\n                $scope.css[\"width\"] = metadata.css.width;\n                $scope.css[\"minHeight\"] = metadata.css.minHeight;\n                $scope.css[\"border\"] = {};\n                $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n                $scope.css[\"background\"] = {};\n                $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n                $scope.css[\"title\"] = metadata.css.title;\n                $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n                $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n                $scope.css[\"subtitle\"] = metadata.css.subtitle;\n                $scope.css[\"subtitle\"][\"color\"] = metadata.css.subtitle.color;\n                $scope.css[\"subtitle\"][\"show\"] = metadata.css.subtitle.show;\n\n                $scope.data_from = \"application\";\n                $scope.parent_container = widgetData.data.parent;\n\n                $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                    // if the parent container sends a device to here, ignore global device.\n                    if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                        return;\n                    } else if (deviceData.from != \"application\") {\n                        if ($scope.parent_container != \"edit\" + deviceData.from) {\n                            return;\n                        } else {\n                            $scope.data_from = deviceData.from;\n                        }\n                    }\n                    var f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"title\"].text + \"}\");\n                    $scope.css[\"title\"].text = f(deviceData.device);\n                    f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"subtitle\"].text + \"}\");\n                    $scope.css[\"subtitle\"].text = f(deviceData.device);\n                });\n            }\n\n\n\n\n        }\n\n        static buildFactory() {\n            fgpWidgetPageTitle.instance = new fgpWidgetPageTitle();\n            return fgpWidgetPageTitle.instance;\n        }\n    }\n\n    class fgpWidgetMap {\n\n\n        constructor() {\n            this.restrict = 'E';\n            this.scope = {};\n        }\n\n        template(element, attrs) {\n            var dom_show = '<div class = \"{{css.width}}\" style=\"padding:0px;height:{{css.height}}px;\" map-lazy-load=\"https://maps.google.com/maps/api/js\">' +\n                '<ng-map style=\"height: 100%;width: 100%;\" center=\"{{center}}\" zoom=\"15\">' +\n                '<marker on-click=\"map.showInfoWindow(\\'info_' + attrs.id + '\\')\" id=\"marker_' + attrs.id + '\" ng-repeat=\"item in markers\" icon=\"{{item.image}}\" position=\"{{item.latitude}},{{item.longitude}}\" title=\"{{item.name}}\" animation=\"Animation.DROP\" ></marker>' +\n                '</ng-map>' +\n                '</div>' +\n                '';\n            return dom_show;\n        }\n\n\n        controller($scope, $element) {\n            var metadata = null;\n            var element_id = $element.attr(\"id\");\n            var widgetData = null;\n            $scope.$emit('fetchWidgetMetadataEvent', {\n                id: element_id, callback: function (data) {\n                    if (data) {\n                        widgetData = data;\n                    }\n                }\n            });\n\n            /**\n             * get device information\n             */\n            if (widgetData.data && widgetData.from == \"show\") {\n                $scope.data_from = \"application\";\n                $scope.parent_container = widgetData.data.parent;\n\n                $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                    // if the parent container sends a device to here, ignore global device.\n                    if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                        return;\n                    } else if (deviceData.from != \"application\") {\n                        if ($scope.parent_container != \"edit\" + deviceData.from) {\n                            return;\n                        } else {\n                            $scope.data_from = deviceData.from;\n                        }\n                    }\n                    metadata = widgetData.data.metadata;\n\n                    $scope.showdata = widgetData.data;\n\n                    $scope.css = {\n                        width: \"col-md-12\",\n                        height: \"400\"\n                    };\n                    if ($scope.showdata.metadata.css) {\n                        $scope.css = $scope.showdata.metadata.css;\n                    }\n\n                    var location = {};\n                    $scope.markers = [];\n                    $scope.details = $scope.$parent.device;\n\n\n                    // show one point.\n                    var f = null;\n                    angular.forEach($scope.showdata.metadata.data, function (item) {\n                        try {\n                            f = new Function(\"device\", \"with(device) { return \" + item.value + \";}\");\n                            var result = f(deviceData.device);\n                            if (result) {\n                                location[item.label] = result;\n                            } else {\n                                location[item.label] = \"\";\n                            }\n                        } catch (error) {\n                            // show image\n                            if (\"image\" == item.label) {\n                                location[item.label] = item.value;\n                            } else {\n                                location[item.label] = \"\";\n                            }\n\n                        }\n                    });\n\n\n                    //do not show\n                    if (location.latitude == \"\" || location.longitude == \"\") {\n                        //hard code. the location is Melbourne\n                        location.latitude = \"-37.810000\";\n                        location.longitude = \"144.950000\";\n                        $scope.center = [location.latitude, location.longitude];\n                        // $scope.markers.push(location);\n                    } else {\n                        $scope.center = [location.latitude, location.longitude];\n                        $scope.markers.push(location);\n                    }\n\n                });\n            }\n\n        }\n\n        static buildFactory() {\n            fgpWidgetMap.instance = new fgpWidgetMap();\n            return fgpWidgetMap.instance;\n        }\n\n\n    }\n\n    class fgpWidgetDeviceDetail {\n\n        constructor() {\n            this.restrict = 'E';\n            this.scope = {};\n        }\n\n        template(element, attrs) {\n            return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n                '<div class=\"row\" ng-repeat=\"item in data\">' +\n                '<div class=\"col-xs-4 col-md-4\" style=\"text-align: right; font-weight: bold;line-height: 30px;\">{{item.label}}</div><div class=\"col-xs-8 col-md-8\" style=\"text-align: left;line-height: 30px;\">{{item.value}}</div>' +\n                '</div>' +\n                '</div>' +\n                '<div id=\"detail_status_' + attrs.id + '\" class=\"row\" style=\"min-height: 50px;\">' +\n                '</div>' +\n                '</div>';\n        }\n\n\n        controller($scope, $element) {\n            var metadata = null;\n            var element_id = $element.attr(\"id\");\n            var widgetData = null;\n            $scope.$emit('fetchWidgetMetadataEvent', {\n                id: element_id, callback: function (data) {\n                    if (data) {\n                        widgetData = data;\n                    }\n                }\n            });\n\n\n            /**\n             * get device information\n             */\n            if (widgetData.data && widgetData.from == \"show\") {\n\n                $scope.data_from = \"application\";\n                $scope.parent_container = widgetData.data.parent;\n\n                $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                    // if the parent container sends a device to here, ignore global device.\n                    if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                        return;\n                    } else if (deviceData.from != \"application\") {\n                        if ($scope.parent_container != \"edit\" + deviceData.from) {\n                            return;\n                        } else {\n                            $scope.data_from = deviceData.from;\n                        }\n                    }\n                    metadata = widgetData.data.metadata;\n\n                    $scope.showdata = widgetData.data;\n\n                    $scope.css = {\n                        width: \"col-md-12\",\n                        height: \"400\"\n                    };\n                    if ($scope.showdata.metadata.css) {\n                        $scope.css = $scope.showdata.metadata.css;\n                    }\n\n\n                    $scope.data = [];\n                    //get all columns\n                    var f = null;\n                    angular.forEach($scope.showdata.metadata.data, function (item) {\n                        try {\n                            f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                            item.value = f(deviceData.device);\n                            $scope.data.push(item);\n                        } catch (error) {\n                            item.value = \"\";\n                            $scope.data.push(item);\n                        }\n                    });\n\n\n                });\n\n            }\n\n        }\n\n\n        static buildFactory() {\n            fgpWidgetDeviceDetail.instance = new fgpWidgetDeviceDetail();\n            return fgpWidgetDeviceDetail.instance;\n        }\n    }\n\n    /**\n     * Created by ericwang on 20/06/2016.\n     */\n    class fgpWidgetSpan {\n\n        constructor() {\n            this.restrict = 'E';\n            this.scope = {};\n        }\n\n        template(scope, element) {\n            return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n                '</div>';\n        }\n\n        controller($scope, $element) {\n\n            var element_id = $element.attr(\"id\");\n            var widgetData = null;\n            $scope.$emit('fetchWidgetMetadataEvent', {\n                id: element_id, callback: function (data) {\n                    if (data) {\n                        widgetData = data;\n                    }\n                }\n            });\n\n            $scope.showdata = widgetData.data;\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n        }\n\n        static buildFactory() {\n            fgpWidgetSpan.instance = new fgpWidgetSpan();\n            return fgpWidgetSpan.instance;\n        }\n\n    }\n\n    class fgpWidgetPie {\n\n        constructor($timeout) {\n            this.restrict = 'E';\n            this.scope = {};\n            this.$timeout = $timeout;\n        }\n\n\n        template(element, attrs) {\n            return '<div class = \"{{css.width}}\" ><div style=\"height: {{css.height}}px;\">' +\n                '<canvas class=\"fgpPieChart\"></canvas>' +\n                '</div>' +\n                '</div>';\n        }\n\n        link(scope, element) {\n\n            this.$timeout(function () {\n                var ctx = element.find(\"canvas\")[0];\n                scope.chart = new Chart(ctx, {\n                    type: 'pie',\n                    data: {\n                        labels: ['1'],\n                        datasets: [\n                            {\n                                data: [1],\n                                backgroundColor: []\n                            }]\n                    },\n                    options: {\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        animation: false,\n                        legend: {display: true}\n                    }\n                });\n            });\n        }\n\n\n        controller($scope, $element, $timeout) {\n\n            var id = $element.attr(\"id\");\n            var metadata = null;\n            var widgetData = null;\n\n            $scope.$emit('fetchWidgetMetadataEvent', {\n                id: id, callback: function (data) {\n                    if (data) {\n                        widgetData = data;\n                    }\n                }\n            });\n\n            if (widgetData.from == \"show\" && widgetData.data) {\n                $scope.data_from = \"application\";\n                $scope.parent_container = widgetData.data.parent;\n\n                $scope.$on('deviceInfoEvent', function (event, deviceData) {\n                    // if the parent container sends a device to here, ignore global device.\n                    if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                        return;\n                    } else if (deviceData.from != \"application\") {\n                        if ($scope.parent_container != \"edit\" + deviceData.from) {\n                            return;\n                        } else {\n                            $scope.data_from = deviceData.from;\n                        }\n                    }\n                    metadata = widgetData.data.metadata;\n                    $scope.showdata = widgetData.data;\n                    $scope.css = {\n                        width: \"col-md-12\",\n                        height: \"400\"\n                    };\n                    if ($scope.showdata.metadata.css) {\n                        $scope.css = $scope.showdata.metadata.css;\n                    }\n                    $scope.data = [];\n                    var colors = [];\n                    //get all columns\n                    var f = null;\n                    angular.forEach($scope.showdata.metadata.data, function (item) {\n                        try {\n                            f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                            item.value = f(deviceData.device);\n                            $scope.data.push(item);\n                        } catch (error) {\n                            item.value = item.value;\n                            $scope.data.push(item);\n                        }\n                        if (item.color) {\n                            colors.push(item.color);\n                        } else {\n                            colors.push('#' + (function co(lor) {\n                                    return (lor +=\n                                        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                                    && (lor.length == 6) ? lor : co(lor);\n                                })(''));\n                        }\n                    });\n                    // timeout\n                    $scope.pieData = {labels: [], value: []};\n                    $timeout(function () {\n                        // create data\n                        angular.forEach($scope.data, function (item) {\n                            $scope.pieData.labels.push(item.label);\n                            $scope.pieData.value.push(item.value);\n                        });\n\n                        $scope.chart.data.labels = $scope.pieData.labels;\n                        $scope.chart.data.datasets[0].data = $scope.pieData.value;\n                        $scope.chart.data.datasets[0].backgroundColor = colors;\n                        // update chart\n                        $scope.chart.update();\n                    });\n\n                });\n\n\n            }\n\n\n        }\n\n        static buildFactory($timeout) {\n            fgpWidgetPie.instance = new fgpWidgetPie($timeout);\n            return fgpWidgetPie.instance;\n        }\n\n    }\n    fgpWidgetPie.$inject = ['$timeout'];\n\n    class fgpWidgetChartTable {\n\n\n        constructor() {\n            this.restrict = 'E';\n            this.scope = {};\n        }\n\n        template(element, attrs) {\n            return '<div style=\"padding:0px;height: {{css.height}}px;position: relative; overflow-y : auto;\">' +\n                '<table st-table=\"rowCollection\" class=\"col-md-12 table table-striped\">' +\n                '<thead>' +\n                '<tr>' +\n                '<th ng-repeat=\"column in sampledata.columns\">{{column.label}}</th>' +\n                '</tr>' +\n                '</thead>' +\n                '<tbody>' +\n                '<tr ng-repeat=\"value in sampledata.values\">' +\n                '<td ng-repeat=\"col in sampledata.columns\">{{value[col.label] | tableformatter: value : col.label : col.formatter}}</td>' +\n                '</tr>' +\n                '</tbody>' +\n                '</table>' +\n                '</div>';\n        }\n\n        controller($scope, $element) {\n\n            var element_id = $element.attr(\"id\");\n            var widgetData = null;\n\n            $scope.$emit('fetchWidgetMetadataEvent', {\n                id: element_id, callback: function (data) {\n                    if (data) {\n                        widgetData = data;\n                    }\n                }\n            });\n\n            //show\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n\n            $scope.$on('chartDataChangeEvent', function (event, chartData) {\n                var chartId = chartData.id;\n                if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"device\") {\n                    $scope.sampledata = {};\n                    // make data\n                    var collectionName = chartData.data.collection;\n                    var groupName = chartData.group;\n                    var columns = [];\n                    //get group and collection configuration\n                    angular.forEach($scope.showdata.metadata.data.groups, function (group) {\n                        if (group.name == groupName) {\n                            angular.forEach(group.collections, function (collection) {\n                                if (collection.name === collectionName) {\n                                    columns = collection.rows;\n                                }\n                            });\n                        }\n                    });\n\n\n                    $scope.sampledata.columns = [];\n\n                    angular.forEach(columns, function (column) {\n                        $scope.sampledata.columns.push({label: column.label, formatter: column.formatter});\n                    });\n                    $scope.sampledata.values = [];\n                    angular.forEach(columns, function (column) {\n                        var f = new Function(\"data\", \"with(data) { if(\" + column.value + \") return \" + column.value + \";return '';}\");\n                        angular.forEach(chartData.data.data, function (record, index) {\n                            if ($scope.sampledata.values.length < chartData.data.data.length) {\n                                //add new one\n                                var item = {};\n                                item[column.label] = f(record);\n                                $scope.sampledata.values.push(item);\n                            } else {\n                                $scope.sampledata.values[index][column.label] = f(record);\n                            }\n                        });\n                    });\n\n                    var cleanData = [];\n                    angular.forEach($scope.sampledata.values, function (value, index) {\n                        var flag = false;\n                        angular.forEach(columns, function (column) {\n                            if (value[column.label] && value[column.label] != \"\") {\n                                flag = true;\n                            }\n                        });\n\n                        if (flag) {\n                            cleanData.push(value);\n                        }\n                    });\n                    $scope.sampledata.values = cleanData;\n\n                } else if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"relation\") {\n                    //\n\n\n                }\n\n            });\n\n\n        }\n\n        static buildFactory() {\n            fgpWidgetChartTable.instance = new fgpWidgetChartTable();\n            return fgpWidgetChartTable.instance;\n        }\n\n\n    }\n\n    // angular module\n    angular.module('fgp-kit', ['ngMap']).service('dataService', dataAccessApi.buildFactory).directive('fgpContainer', fgpStage.buildFactory)\n        .directive('widgetContainer', fgpWidgetContainer.buildFactory)\n        .directive('widgetGraph', fgpWidgetGraph.buildFactory)\n        .directive('widgetPageTitle', fgpWidgetPageTitle.buildFactory)\n        .directive('widgetMap', fgpWidgetMap.buildFactory)\n        .directive('widgetStatus', fgpStage.buildFactory)\n        .directive('widgetDeviceDetail', fgpWidgetDeviceDetail.buildFactory)\n        .directive('widgetDeviceSpan', fgpWidgetSpan.buildFactory)\n        .directive('widgetPie', fgpWidgetPie.buildFactory)\n        .directive('widgetChartTable', fgpWidgetChartTable.buildFactory).filter('tableformatter', ['$filter', function ($filter) {\n        return function (input, obj, field, formatter) {\n            if (formatter) {\n                if (obj[field]) {\n                    if (\"date\" == formatter) {\n                        return $filter('date')(new Date(obj[field]), 'd/M/yy h:mm a');\n                    } else {\n                        return input;\n                    }\n                }\n            } else {\n                return input;\n            }\n        };\n    }]);\n    var index = 'fgp-kit';\n\n    return index;\n\n}));"],"sourceRoot":"/source/"}
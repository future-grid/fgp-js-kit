{"version":3,"sources":["fgp.kit.bundle.js"],"names":["global","factory","exports","module","require","define","amd","fgp_kit","angular","$","Dygraph","ngmap","chartJS","this","angular$1","chart_js","fgpStage","scope","applicationName","deviceName","server","configuration","scatterColors","standalone","replace","restrict","prototype","template","controller","$scope","$element","$timeout","$rootScope","$compile","dataService","$interval","showdata","length","setColors","graphBindingArray","$on","evt","msg","push","forEach","item","id","items","element","find","children","item_new","currentElement","attr","groupItems","dulpItem","findChild4Repeat","param","config","callback","metadata","data","datasource","style","key","from","parentId","parentHtmlObj","arrayItems","newId","i","parent","currentItem","html_render","repeat","append","findChild","sendDeviceData","deviceInfo","then","$broadcast","device","event","obj","view","graph","graphs","buildFactory","instance","dataAccessApi","$http","$q","$cacheFactory","graphDataService","_$http","_$q","indexCache","deviceStores","_$interval","_$graphDataService","host","deviceKey","deferred","defer","url","ajaxSettings","async","ajax","type","contentType","success","types","Object","defineProperty","name","get","result","field","error","e","reject","console","log","message","resolve","promise","deviceInitInfo","application","storeSchema","rangeLevel","otherLevels","fields","params","concat","cache","response","childrenDeviceInitInfo","relationType","relationDeviceType","isSame","fillChildrenTree","buckets","tree","showData","value","flag","info","fillTree","size","calTree","start","end","filter","elem","devicesStoreData","store","interval","start_point","Date","getTime","devices","index","$graphDataService","method","JSON","stringify","deviceGraphData","newComeResult","end_point","deviceStoreData","needLoad","timestamp","sort","a","b","put","defaultColors","this$1","colors","co","lor","Math","floor","random","healthcheck","autoUpdateGraph","schema","count","fetcher","last","trees","frequency","timeKey","graphData","$inject","fgpWidgetContainer","attrs","hasOwnProperty","showTitle","element_id","dom_show","dom_show_notitle","widgetData","$emit","css","color","width","border","background","title","show","source","parse","fgpWidgetGraph","$filter","$location","$stateParams","_dataService","dom_loading","dom_legend","dom_empty_data","dom_alert_info","dom_datetime_interval","dom_series_list","dom_real_time_grap","html","link","status","timeOut","completionPercent","graphId","getData","numSeries","numRows","labels","initDate","j","val","sampleData","movePan","g","context","side","dragEndX","dragGetX_","dragEndY","dragGetY_","is2DPan","pixelsDragged","dragStartY","axis","axes_","axis_data","axes","unitsDragged","unitsPerPixel","boundedValue","boundedValues","maxValue","initialTopValue","min","minValue","dragValueRange","attributes_","getForAxis","valueWindow","pow","LOG_SCALE","valueRange","minDate","initialLeftmostDate","dragStartX","xUnitsPerPixel","boundedDates","max","maxDate","dateRange","zoomRange","xAxisZoomRange","getOptionForAxis","dateWindow_","drawGraph_","offsetToPercentage","offsetX","offsetY","xOffset","toDomCoords","xAxisRange","yar0","yAxisRange","yOffset","x","y","w","h","xPct","yPct","zoom","zoomInPercentage","xBias","yBias","direction","basicInfo","adjustAxis","bias","delta","increment","foo","yAxes","newYAxes","numAxes","ranges","range","newZoomRange","xAxisExtremes","updateOptions","dateWindow","canScroll","timer","mouseOverHandler","cancel","mouseEnterHandler","mouseOutHandler","scroll","normal","WheelEvent","detail","deltaY","wheelDelta","percentage","layerX","target","offsetLeft","layerY","offsetTop","percentages","plotter_","area","cancelEvent","chartDateWindow","firstPoint","mousedownHandler","initializeMouseDown","clientX","startPan","mousemoveHandler","isPanning","currentChart","mouseupHandler","endPan","interactionModel","mousewheel","DOMMouseScroll","wheel","mousedown","mousemove","mouseenter","mouseup","mouseout","drawGapEdgePoints","pointSize","legend","labelsKMB","labelsSeparateLines","drawPoints","drawAxesAtZero","labelsDivStyles","text-align","position","display","yRangePad","ylabel","xlabel","series","Device0","Device4","axisLabelWidth","y2","valueFormatter","moment","format","pointClickCallback","p","currentView","showOne","drawCallback","isInit","refersh","timer_auto","process_bar_timer","on","tempConifg","realTimeGraph","currentChartOptions","file","auto_device_name","auto_schema","auto_store","auto_fields","graph_data","worker","deviceConfig","auto_metadata","groups","collections","allLines","yRanges","collection","line","showY2axis","rows","row","label","yaxis","f","Function","counter","realLine","ex","yrange","newLines","copy","NaN","perInterval","showRealTimeGraph","modal","range_show","rangeSelectorBar","xAxisHeight","drawAxis","showRangeSelector","rangeSelectorHeight","finalDateRagne","chartDateTime","begin","finalDateRange","child","synchronize","selection","childrenChart","$window","elementId","emptyDataShow","alertMessage","showY2Btns","legendText","legendText_device","legendText_datetime","legendText_column","legendText_value","legendColor","autoupdate","defaultTimeIntervals","scales","dateTimeIntervals","locked_interval","lock","currentIntervalName","currentIntervalChoosed","_item","changeInterval","basic","checked","rangeConfig","loadingShow","intevals","height","begin_path","end_path","init_flag","fixInterval","noneFixed","fixGraphWithGap","currentInterval","fixed","tempDate","labels_","file_","showOrHideDevice","childrenDevices","setVisibility","fixGraphWithGap_click","parent_container","data_from","checkY2Btns","deviceData","$watch","nObj","oObj","level","patt","RegExp","lines","columns","match","column","startsWith","initChart","relation","relation_group","initChildrenChart","newValue","oldValue","expect_points","expectedInterval","conf","preOne","lastOne","cin","series_range","l0","rangeBarLabels","objNeed2Add","dataLength","tempObj","rangeSeries","currentStore","childTrees","arr","updateChildrenDetailChart","rangeChildrenData","updateDetailChart","rangeData","group","fetchData","values","node","array","Array","apply","slice","ordinalRangeData","intevalforshow","rangeTree","allData","first","newData","thePoint","endOf","toDate","updateChart","deviceDatas","devicesInfo","deviceObj","updateChildrenChart","relationConfig","leftAndRight","left","leftYAxis","right","rightYAxis","allXLabels","yRange","toString","substr","originalData","odata","childrenRangeConfig","highlightSeriesOpts","strokeWidth","strokeBorderWidth","highlightCircleSize","y2label","highlightCallback","pts","seriesName","sn","point_show","xval","yval","point","canvasy","canvasx","legendbox","$apply","legendTop","legendLeft","unhighlightCallback","axisLabelFormatter","d","newTime","tempData","tempTime","dateTime","indexOf","chartData","nt","timeTicket","lineData","autoUpdateChart","rangeSeriesNumber","Number","open","lastIndexOf","btntimer","btnZoomInVLeft","btnZoomOutVLeft","btnZoomInVRight","btnZoomOutVRight","btnPanVULeft","btnPanVDLeft","btnPanVURight","btnPanVDRight","btnpanleft","panRange","pan_delta","startDate","endDate","btnpanright","btnzoomin","rangeStart","rangeEnd","btnzoomout","init","fgpWidgetPageTitle","minHeight","subtitle","text","fgpWidgetMap","location","markers","details","$parent","latitude","longitude","center","fgpWidgetDeviceDetail","fgpWidgetSpan","fgpWidgetPie","ctx","chart","Chart","datasets","backgroundColor","options","responsive","maintainAspectRatio","animation","pieData","update","fgpDockerButton","show_dom","stats","confData","repeateId","pageDevice","container","checkShow","button","shown","buttons","split","healthinfo","action","func","script","relationship","successCallback","errorCallback","fgpWidgetRepeatContainer","$websocket","labelstyle","listStyle","deviceType","dataStream","port","onMessage","backData","State","Health","Status","fgpImage","fgpIcon","icon","content","desc","fgpWidgetAppContainer","containers","containerswithTimeout","showstyle","pp","gotoContainer","showLabel","app","timer_index","t","newTimer","splice","itemIndex","fgpWidgetChartTable","chartId","sampledata","collectionName","groupName","formatter","record","cleanData","service","input","substring","setTree","localStorage","getTree","addTree","clear","directive","$last","CacheFactoryProvider","extend","defaults","maxAge","deleteOnExpire","CacheFactory","graphCache"],"mappings":"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","file":"fgp.kit.bundle.min.js","sourcesContent":["/**\n * fgp-kit\n * @version 1.0 - Homepage <http://www.future-grid.com.au>\n * @copyright (c) 2013-2016 Eric.Wang <flexdeviser@gmail.com>\n * @license Apache2. \n * @overview fgp.kit.js is a useful toolkit for future-grid's clients.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular'), require('jquery'), require('dygraphs'), require('ngmap'), require('chart.js')) :\n    typeof define === 'function' && define.amd ? define(['angular', 'jquery', 'dygraphs', 'ngmap', 'chart.js'], factory) :\n    (global.fgp_kit = factory(global.angular,global.$,global.Dygraph,global.ngmap,global.chartJS));\n}(this, (function (angular$1,$,Dygraph,ngmap,chart_js) {\n\nangular$1 = 'default' in angular$1 ? angular$1['default'] : angular$1;\n$ = 'default' in $ ? $['default'] : $;\nDygraph = 'default' in Dygraph ? Dygraph['default'] : Dygraph;\n\n/**\n * Created by ericwang on 10/06/2016.\n */\nvar fgpStage = function fgpStage() {\n    this.scope = {\n        applicationName: \"=\",\n        deviceName: \"=\",\n        server: \"=\",\n        configuration: '=',\n        scatterColors: \"=\",\n        standalone: \"=\"\n    };\n    this.replace = true;\n    this.restrict = 'A';\n};\n\nfgpStage.prototype.template = function template () {\n    return '<div id=\"pageStage\" class=\"wrapper col-md-12 col-xl-12\" style=\"background-color: #fff;height:100%;padding: 0px;\">' +\n        '</div>';\n};\n\nfgpStage.prototype.controller = function controller ($scope, $element, $timeout, $rootScope, $compile, dataService, $interval) {\n    $scope.showdata = {};\n\n    if ($scope.scatterColors && $scope.scatterColors.length > 0) {\n        dataService.setColors($scope.scatterColors);\n    }\n\n\n    $rootScope['applicationName'] = $scope.applicationName;\n    $rootScope['host'] = $scope.server;\n    $rootScope['device'] = $scope.deviceName;\n    $rootScope['standalone'] = $scope.standalone;\n\n\n    var graphBindingArray = [];\n\n    $scope.$on('bindChildChartEvent', function (evt, msg) {\n        graphBindingArray.push(msg);\n    });\n\n    $scope.$on('bindChildRepeatEvent', function (evt, msg) {\n        angular$1.forEach($scope.configuration, function (item) {\n            if (item.id == msg.id) {\n                var items = angular$1.element(\"body\").find(\"#\" + item.id).children();\n                angular$1.forEach(items, function (item_new) {\n                    $scope.showdata[item_new.id] = item;\n                    var currentElement = angular$1.element(item_new);\n                    if (currentElement.attr(\"dulp\")) {\n                        var groupItems = angular$1.element(\"body\").find(\"div[dulp='\" + item.id + \"']\");\n                        angular$1.forEach(groupItems, function (dulpItem) {\n                            findChild4Repeat(item.id, angular$1.element(dulpItem), $scope.configuration, item_new.id);\n                        });\n                    }else{\n                        findChild4Repeat(item.id, currentElement, $scope.configuration, item_new.id);\n                    }\n                });\n            }\n        });\n    });\n\n    $scope.$on('listStyleEvent', function (evt, param) {\n        var config = $scope.showdata[param.id.replace(\"edit\", \"\")];\n        param.callback(config.metadata.data.datasource.style);\n    });\n\n\n    $scope.$on('fetchWidgetMetadataEvent', function (evt, msg) {\n        angular$1.forEach($scope.showdata, function (metadata, key) {\n            if (key == msg.id) {\n                msg.callback({data: metadata, from: 'show'});\n                return;\n            }\n        });\n    });\n\n\n    function findChild4Repeat(parentId, parentHtmlObj, arrayItems, newId) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n\n                $scope.showdata[id] = arrayItems[i];\n                if (parentHtmlObj.attr(\"repeat-id\")) {\n                    $scope.repeat = parentHtmlObj.attr(\"repeat-id\");\n                }\n                if (parentHtmlObj.find('#edit' + parentId).find(\"#\" + id).length == 0) {\n                    parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                }\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems);\n            }\n            else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems);\n            }\n        }\n    }\n\n    function findChild(parentId, parentHtmlObj, arrayItems) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                findChild(arrayItems[i].id, currentItem, arrayItems);\n            } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                findChild(arrayItems[i].id, currentItem, arrayItems);\n            }\n        }\n    }\n\n    angular$1\n        .forEach($scope\n\n                .configuration\n            ,\n            function (item) {\n                if ('workingArea' === item.parent) {\n                    var currentItem = angular$1.element(item.html_render);\n                    $scope.showdata[item.id] = item;\n                    $element.append($compile(currentItem)($scope));\n                    findChild(item.id, currentItem, $scope.configuration);\n                }\n            }\n        )\n    ;\n\n    var\n        sendDeviceData = function () {\n            dataService.deviceInfo($scope.server, $scope.deviceName, null, $scope.applicationName).then(function (data) {\n                // send device info to all widget\n                $timeout(function () {\n                    $scope.$broadcast('deviceInfoEvent', {device: data, from: 'application'});\n                });\n            });\n        };\n\n    /**\n     * get device information\n     */\n    if ($scope.deviceName && $scope.deviceName != \"\" && \"undefined\" != $scope.deviceName) {\n        // first time\n        sendDeviceData();\n        // after every 30 seconds\n        // $interval(function () {\n        // sendDeviceData();\n        // }, 30000);\n    }\n\n\n    $scope.$on('graphScatterViewChangeEvent', function(event, obj){\n        //tell all the children graphs the scatter view changed\n        $scope.$broadcast('parentScatterViewChangedEvent', {children: obj.children, view:obj.view});\n    });\n\n    // all item created;\n    $timeout(function () {\n        angular$1.forEach(graphBindingArray, function (graph) {\n            $scope.$broadcast('bindFatherGraphEvent', {parent: graph.graphs, children: graph.children});\n        });\n    });\n};\n\n\nfgpStage.buildFactory = function buildFactory () {\n    fgpStage.instance = new fgpStage();\n    return fgpStage.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar dataAccessApi = function dataAccessApi($http, $q, $cacheFactory, $interval, graphDataService) {\n    this._$http = $http;\n    this._$q = $q;\n    // get cache\n    this.indexCache = $cacheFactory('indexCache');\n    this.deviceStores = $cacheFactory('deviceStores');\n    this._$interval = $interval;\n    this._$graphDataService = graphDataService;\n};\n\n\n/**\n * sync using JQuery\n * @param deviceName\n * @param deviceKey\n * @param applicationName\n * @returns {*}\n */\ndataAccessApi.prototype.deviceInfo = function deviceInfo (host, deviceName, deviceKey, applicationName) {\n    var deferred = this._$q.defer();\n    var url = host + \"/rest/api/\";\n\n    if (applicationName) {\n        url += \"app/\" + applicationName;\n    }\n\n    if (deviceName) {\n        url += '/devices/' + deviceName;\n    } else if (deviceKey) {\n        url += 'devices?key=' + deviceKey;\n    }\n\n    $.ajaxSettings.async = false;\n    $.ajax({\n        type: 'GET',\n        url: url,\n        contentType: \"application/json\",\n        success: function(data) {\n            var url = host + \"/rest/api/\";\n            if (applicationName) {\n                url += \"app/\" + applicationName + \"/devices/extension-types?device_type=\";\n            } else {\n                url += \"devices/extension-types?device_type=\";\n            }\n            $.ajaxSettings.async = false;\n            $.ajax({\n                type: 'GET',\n                url: url + data.type,\n                contentType: \"application/json\",\n                success: function(types) {\n                    angular$1.forEach(types, function(type) {\n                        Object.defineProperty(data, type.name, {\n                            get: function() {\n                                var result = null;\n                                var url = host + \"/rest/api/\";\n                                if (applicationName) {\n                                    url += \"app/\" + applicationName + \"/devices/extensions?device_name=\";\n                                } else {\n                                    url += \"devices/extensions?device_name=\";\n                                }\n                                $.ajaxSettings.async = false;\n                                $.ajax({\n                                    type: 'GET',\n                                    url: url + this.name + '&extension_type=' + type.name,\n                                    contentType: \"application/json\",\n                                    success: function(field) {\n                                        result = field;\n                                    },\n                                    error: function(e) {\n                                        deferred.reject(e);\n                                    }\n                                });\n                                return result;\n                            }\n                        });\n                    });\n                },\n                error: function(e) {\n                    console.log(e.message);\n                }\n            });\n\n            deferred.resolve(data);\n        },\n        error: function(e) {\n            deferred.reject(e);\n        }\n    });\n    return deferred.promise;\n};\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.deviceInitInfo = function deviceInitInfo (host, application, deviceKey, storeSchema, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            'otherLevels': otherLevels,\n            'fields': [].concat(fields)\n        },\n        cache: this.deviceStores\n    }).then(\n        function(response) {\n            deferred.resolve(response.data);\n        },\n        function(response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.childrenDeviceInitInfo = function childrenDeviceInitInfo (host, application, deviceKey, storeSchema, relationType, relationDeviceType, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/children/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            relationType: relationType,\n            relationDeviceType: relationDeviceType,\n            otherLevels: otherLevels,\n            fields: [].concat(fields),\n            isSame: true\n        },\n        cache: this.deviceStores\n    }).then(\n        function(response) {\n            deferred.resolve(response.data);\n        },\n        function(response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\ndataAccessApi.prototype.fillChildrenTree = function fillChildrenTree (buckets, tree, showData) {\n\n    if (tree.children[0] != null) {\n        fillChildrenTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillChildrenTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n\n        angular$1.forEach(buckets, function(value, key) {\n            if (key == tree.id && value != null) {\n                tree.data = value;\n                tree['size'] = value.length;\n\n                var flag = false;\n                angular$1.forEach(showData, function(data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        tree['size'] = value.length;\n                        flag = true;\n                    }\n                });\n\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n};\n\n\ndataAccessApi.prototype.fillTree = function fillTree (buckets, tree, showData) {\n    if (tree.children[0] != null) {\n        fillTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        angular$1.forEach(buckets, function(value, key) {\n            if (key == tree.id) {\n                tree.data = value;\n                tree['size'] = value.size;\n                var flag = false;\n                angular$1.forEach(showData, function(data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        data['size'] = tree.size;\n                        flag = true;\n                    }\n                });\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n\n};\n\ndataAccessApi.prototype.calTree = function calTree (buckets, tree, start, end) {\n    if (tree.children[0] != null) {\n        calTree(buckets, tree.children[0], start, end);\n    }\n\n    if (tree.children[1] != null) {\n        calTree(buckets, tree.children[1], start, end);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        // is overlap?\n        if (((start >= tree.start) && start < tree.end) ||\n            ((start > tree.start) && start <= tree.end) ||\n            ((tree.start >= start) && tree.start < end) ||\n            ((tree.start > start) && tree.start <= end)) {\n            if (buckets.filter(function(elem) {\n                    return elem.id == tree.id\n                }).length == 0) {\n                buckets.push(tree);\n            }\n        }\n    }\n};\n\n\n/**\n *\n * @param application\n * @param deviceInfo deviceKey and tree\n * @param storeSchema\n * @param store\n * @param start\n * @param end\n */\ndataAccessApi.prototype.devicesStoreData = function devicesStoreData (id, host, application, deviceInfo, storeSchema, store, start, end, fields, interval) {\n    var start_point = new Date().getTime();\n    if (!deviceInfo || deviceInfo.length == 0) {\n        return false;\n    }\n\n    var devices = \"[\";\n\n    deviceInfo.forEach(function(device, index) {\n        if (index < deviceInfo.length - 1) {\n            devices += \"\\\"\" + device.name + \"\\\",\";\n        } else {\n            devices += \"\\\"\" + device.name + \"\\\"]\";\n        }\n    });\n    //\n    var $graphDataService = this._$graphDataService;\n    // new way to get the data without tree index.\n    var deferred = this._$q.defer();\n    if (start instanceof Date) {\n        start = start.getTime();\n    }\n    if (end instanceof Date) {\n        end = end.getTime();\n    }\n    // send request to back-end // TODO: change it to post\n    this._$http({\n        method: 'POST',\n        url: host + '/rest/api/app/' + application + '/store/devices/store/data/' + storeSchema + '/' + store,\n        data: {\n            \"devices\": devices,\n            \"fields\": JSON.stringify(fields),\n            \"start\": start,\n            \"end\": end\n        }\n    }).then(\n        function(response) {\n            var result = {};\n            var data = response.data;\n            for (key in data) {\n                var deviceGraphData = $graphDataService.get(key + \"/\" + store + \"/\" + id) ? $graphDataService.get(key + \"/\" + store + \"/\" + id) : [];\n                var newComeResult = data[key].data;\n                // TODO: make all the lines in same x-axis timeseries\n                result[key] = newComeResult;\n            }\n            var end_point = new Date().getTime();\n            console.info((end_point - start_point) / 1000 + \"s\");\n            deferred.resolve(result);\n        },\n        function(response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\ndataAccessApi.prototype.deviceStoreData = function deviceStoreData (id, host, application, deviceKey, storeSchema, store, tree, start, end, fields, interval) {\n    //\n    var $graphDataService = this._$graphDataService;\n    // new way to get the data without tree index.\n    var deferred = this._$q.defer();\n    if (start instanceof Date) {\n        start = start.getTime();\n    }\n    if (end instanceof Date) {\n        end = end.getTime();\n    }\n    var needLoad = true;\n    // if ($graphDataService.get(deviceKey + \"/\" + store + \"/\" + id)) {\n    // //check data\n    // var data = $graphDataService.get(deviceKey + \"/\" + store + \"/\" + id);\n    // if (data) {\n    //     //\n    //     var temp_start = null;\n    //     var temp_end = null;\n    //     data.forEach(function(_item){\n    //         if(_item.timestamp >= end && temp_end == null){\n    //             temp_end = _item.timestamp;\n    //         }\n    //         if(_item.timestamp <= start){\n    //             temp_start =  _item.timestamp;\n    //         }\n    //\n    //     });\n    //     var checkLoad = false;\n    //     while (temp_start < temp_end) {\n    //         var _flag = false;\n    //         data.forEach(function(item) {\n    //             if (item.timestamp == temp_start) {\n    //                 _flag = true;\n    //             }\n    //         });\n    //         if (!_flag) {\n    //             // doesn`t exist\n    //             checkLoad = true;\n    //             break;\n    //         }\n    //         temp_start += interval;\n    //         console.info(temp_start);\n    //     }\n    //     if (!checkLoad) {\n    //         needLoad = false;\n    //     }\n    // }\n    // // }\n\n    if (!needLoad) {\n        // return data\n        deferred.resolve($graphDataService.get(deviceKey + \"/\" + store + \"/\" + id));\n    } else {\n        // send request to back-end\n        this._$http({\n            method: 'GET',\n            url: host + '/rest/api/app/' + application + '/store/devices/store/data/' + storeSchema + '/' + store + '?devices=[\"' + deviceKey + '\"]&fields=' + JSON.stringify(fields) + '&start=' + start + '&end=' + end\n        }).then(\n            function(response) {\n                // only return 1 device data\n                var deviceGraphData = $graphDataService.get(deviceKey + \"/\" + store + \"/\" + id) ? $graphDataService.get(deviceKey + \"/\" + store + \"/\" + id) : [];\n                var newComeResult = response.data[deviceKey].data;\n                newComeResult.forEach(function(item) {\n                    var flag = false;\n                    for (var i = 0; i < deviceGraphData.length; i++) {\n                        if (deviceGraphData[i].timestamp == item.timestamp) {\n                            deviceGraphData[i] = item;\n                            flag = true;\n                        }\n                    }\n                    if (!flag) {\n                        // add\n                        deviceGraphData.push(item);\n                    }\n                });\n                // order by timestamp\n                deviceGraphData.sort(function(a, b) {\n                    if (a.timestamp > b.timestamp) {\n                        return 1;\n                    } else if (a.timestamp < b.timestamp) {\n                        return -1;\n                    }\n                    return 0;\n                });\n                $graphDataService.put(deviceKey + \"/\" + store + \"/\" + id, deviceGraphData);\n                deferred.resolve(deviceGraphData);\n            },\n            function(response) {\n                deferred.reject(response.data);\n            }\n        );\n    }\n\n    return deferred.promise;\n};\n\ndataAccessApi.prototype.defaultColors = function defaultColors () {\n        var this$1 = this;\n\n    if (!this.colors) {\n        this['colors'] = [];\n        for (var i = 0; i < 300; i++) {\n            this$1.colors.push('#' + (function co(lor) {\n                return (lor += [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)]) &&\n                    (lor.length == 6) ? lor : co(lor);\n            })(''));\n        }\n    }\n    return this.colors;\n};\n\ndataAccessApi.prototype.setColors = function setColors (colors) {\n    this.colors = colors;\n};\n\n\n/**\n * device id\n * @param id\n */\ndataAccessApi.prototype.healthcheck = function healthcheck (application, id) {\n\n    if (id = null || id == \"\") {\n        return;\n    }\n    this._$http.get('/rest/api/app/' + application + '/docker/healthcheck/reports?id=' + id)\n        .success(function(response) {\n            console.info(response);\n            return response;\n        });\n\n\n};\n\n\ndataAccessApi.prototype.autoUpdateGraph = function autoUpdateGraph (application, device, schema, store, fields, count, callback) {\n    var _$interval = this._$interval;\n    var _$http = this._$http;\n    var fetcher = null;\n    this._$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n        .success(function(response) {\n            var last = -1;\n            var interval = -1;\n            if (response.trees && response.trees.length === 1) {\n                interval = response.trees[0].frequency;\n                last = response.trees[0].last.timeKey;\n            }\n            if (interval != -1) {\n                var start = last - (count * interval);\n                var end = last;\n                // first time\n                _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                    params: {\n                        \"devices\": JSON.stringify([device]),\n                        \"fields\": JSON.stringify(fields),\n                        \"start\": start,\n                        \"end\": end\n                    }\n                }).success(function(graphData) {\n\n                    // start task\n                    fetcher = _$interval(function() {\n                        _$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n                            .success(function(response) {\n                                if (response.trees && response.trees.length === 1) {\n                                    last = response.trees[0].last.timeKey;\n                                    start = last - (count * interval);\n                                    end = last;\n                                    _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                                        params: {\n                                            \"devices\": JSON.stringify([device]),\n                                            \"fields\": JSON.stringify(fields),\n                                            \"start\": start,\n                                            \"end\": end\n                                        }\n                                    }).success(function(graphData) {\n                                        // put the data back\n                                        callback(graphData[device], null, interval);\n                                    });\n                                }\n                            });\n                    }, interval);\n\n                    // put the data back\n                    callback(graphData[device], fetcher, interval);\n                });\n            }\n        });\n\n};\n\n\ndataAccessApi.buildFactory = function buildFactory ($http, $q, $cacheFactory, $interval, graphDataService) {\n    dataAccessApi.instance = new dataAccessApi($http, $q, $cacheFactory, $interval, graphDataService);\n    return dataAccessApi.instance;\n};\n\ndataAccessApi.$inject = ['$http', '$q', '$cacheFactory', '$interval', 'graphDataService'];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetContainer = function fgpWidgetContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"padding: 0px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}}\">{{css.title.text}}</div>' +\n        '<div class=\"panel-body\" id=\"edit' + element_id + '\" style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n\n};\n\nfgpWidgetContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n    if (metadata.data) {\n        $scope.data[\"source\"] = metadata.data.source;\n        if ($scope.data && $scope.data.source.device && $scope.data.source.device != -1) {\n\n            if ($scope.data.source.device) {\n                /**\n                 * get device information\n                 */\n                dataService.deviceInfo($rootScope.host, JSON.parse($scope.data.source.device).name, null, $rootScope.applicationName).then(function (data) {\n                    // send device info to all widget\n                    $timeout(function () {\n                        $rootScope.$broadcast('deviceInfoEvent', {device: data, from: element_id});\n                    });\n                });\n            }\n\n        }\n    }\n\n};\n\n\nfgpWidgetContainer.buildFactory = function buildFactory () {\n    fgpWidgetContainer.instance = new fgpWidgetContainer();\n    return fgpWidgetContainer.instance;\n};\n\nfgpWidgetContainer.$inject = [];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetGraph = function fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n    this._dataService = dataService;\n    this._$interval = $interval;\n};\n\nfgpWidgetGraph.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    if (flag) {\n        var dom_loading = '<div ng-show=\"loadingShow\" id=\"loading_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\">' +\n            '<div class=\"rect1\"></div>' +\n            '<div class=\"rect2\"></div>' +\n            '<div class=\"rect3\"></div>' +\n            '<div class=\"rect4\"></div>' +\n            '<div class=\"rect5\"></div>' +\n            '</div></div>';\n\n\n        var dom_legend = '<li>{{legendText_device}}</li><li>{{legendText_datetime}}</li><li><label style=\"color: {{legendColor}}\">{{legendText_column}}</label>:{{legendText_value}}</li>';\n\n        var dom_empty_data = '<div ng-show=\"emptyDataShow\" id=\"emptydata_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\" style=\"width: 100%;\">' +\n            '<h1>Empty Data!</h1>' +\n            '</div></div>';\n\n        var dom_alert_info = '<span class=\"label label-warning\" ng-show=\"alertMessage\" style=\"color: #000;\">{{alertMessage}}</span>';\n\n        var dom_datetime_interval = '<div ng-show=\"rangeSelectorBar\" class=\"dropdown\"> <button class=\"btn btn-info dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">{{currentIntervalChoosed.name}}<span class=\"caret\"></span></button> <ul class=\"dropdown-menu\" style=\"font-size:12px;\"><li ng-repeat=\"interval in dateTimeIntervals\"><a href=\"javascript:;\" ng-click=\"changeInterval(interval)\">{{interval.name}}</a></li></ul> </div>';\n\n\n        var dom_series_list = '<div ng-show=\"currentView === 1\" class=\"dropdown\"> <button class=\"btn btn-warning dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">Devices<span class=\"caret\"></span></button> <ul class=\"dropdown-menu\" style=\"font-size:12px;\"><li ng-repeat=\"device in childrenDevices\"><input type=\"checkbox\" ng-click=\"showOrHideDevice(device)\" ng-checked=\"device.show\"/>{{device.name}}</li></ul> </div>';\n\n\n        var dom_real_time_grap = '<div class=\"modal fade \" id=\"real_time_graph_' + attrs.id + '\" role=\"dialog\">' +\n            '<div class=\"modal-dialog modal-lg\">' +\n            '<div class=\"modal-content\">' +\n            '<div class=\"col-md-12\"  style=\"padding-top:3px;height: 1px;background-color: #0e90d2;\" ng-style=\"{ \\'width\\': completionPercent + \\'%\\' }\"></div>' +\n            '<div class=\"modal-body\" style=\"width: 100%;height: 300px;\">' +\n            '<div class=\"real-time-graph\" style=\"width: 100%;height: 100%\"></div>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>';\n\n        var html = '<div id=\"legendbox' + attrs.id + '\" ng-show=\"legendText\" ng-style=\"{top:legendTop,left:legendLeft}\" style=\"border-radius:10px;background-color:#ffffff;position: absolute;border: 1px solid {{legendColor}};-moz-box-shadow: 5px 5px 5px #888888;box-shadow: 5px 5px 5px #888888;z-index: 99999999;margin-right: 5px;\"><ul style=\"list-style: none;list-style-position: inside;text-align: right;\">' + dom_legend + '</ul></div><div class=\"{{css.width}}\"><div class=\"col-md-12\" style=\"padding:0px;height:{{css.height}}px;-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\"><div class=\"row\"><div class=\"col-md-12\"><a class=\"tooltips btn btn-xs btn-info badge\" href=\"javascript:;\"  style=\"float: right;margin-right: 10px;\" ng-click=\"currentView = -currentView\"><i class=\"glyphicon glyphicon-transfer\"></i><span>Scatter View</span></a><a ng-show=\"autoupdate\" class=\"tooltips btn btn-xs btn-info badge\" style=\"float: right;margin-right: 10px;\" ng-click=\"showRealTimeGraph()\" data-toggle=\"modal\"><span>Auto Update</span><i class=\"glyphicon glyphicon-random\"></i></a><div style=\"float: right; margin-right: 10px;\">' + dom_series_list + '</div><div style=\"float: right; margin-right: 10px;\">' + dom_datetime_interval + '</div><div ng-hide=\"true\" class=\"checkbox\" style=\"float: right;margin-right: 10px; margin-bottom: 5px; margin-top: 0;\" ng-model=\"fixInterval\" ng-click=\"fixInterval=!fixInterval\"><label><input type=\"checkbox\" ng-model=\"fixInterval\" ng-clicked=\"fixInterval\" ng-change=\"fixGraphWithGap_click()\"/>fixed interval</label></div><div style=\"float: right; margin-right: 10px;\"><label class=\"label-inline\" ng-repeat=\"item in intevals.device\"><span class=\"badge\" style=\"background-color: {{ item.name == currentIntervalName ? (locked_interval.name == item.name ? \\'#e57432;\\':\\'#009900;\\') : (locked_interval.name == item.name ? \\'#e57432;\\':\\'\\') }}\" ng-click=\"lock(item)\">{{item.name}}</span></label></div><div style=\"float: right; margin-right: 10px;\">' + dom_alert_info + '</div></div></div><div style=\"position: relative;width: 100%;height:100%;\"><div style=\"position: absolute;left:25px;z-index: 999;\" ng-show=\"basicInfo.zoom\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVULeft()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDLeft()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVLeft()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVLeft()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div><div class=\"line-chart-graph\" style=\"width: 100%;height:100%;\"></div><div style=\"position: absolute;right:-15px;top:0px;z-index: 999;\" ng-show=\"checkY2Btns()\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVURight()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDRight()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVRight()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVRight()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div>' + dom_loading + dom_empty_data + '<div class=\"row\"><div class=\"col-md-12\" style=\"min-height: 30px;\"></div><div class=\"col-md-6\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[0] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-6\" style=\"text-align: right;\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[1] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-12\" style=\"min-height: 40px;position: relative\"><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;left: 20px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanleft()\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanright()\"><i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></div><div class=\"range-selector-bar\" style=\"height: 0px;margin-top: 30px;width: 100%;position: absolute;\"></div><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;right: -5px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomin()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomout()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div></div></div>' + dom_real_time_grap;\n\n        return html;\n    }\n};\n\nfgpWidgetGraph.prototype.link = function link (scope, element, attrs) {\n    scope['defaultColors'] = this._dataService.defaultColors();\n    var dataService = this._dataService;\n    var _$interval = this._$interval;\n    scope.status = true;\n    var timeOut = this.$timeout;\n    scope.completionPercent = 0;\n    scope.graphId = attrs.id;\n    this.$timeout(function() {\n        var getData = function(numSeries, numRows, name) {\n            var result = {\n                labels: null,\n                data: null\n            };\n            var data = [];\n            var labels = [];\n            //init date\n            var initDate = new Date(\"2014/01/01 00:00:00\");\n            for (var j = 0; j < numRows; ++j) {\n                data[j] = [new Date(initDate.getTime() + 900000)];\n                initDate = new Date(initDate.getTime() + 900000);\n            }\n            for (var i = 0; i < numSeries; ++i) {\n                labels.push(name + i);\n                var val = 0;\n                for (var j = 0; j < numRows; ++j) {\n                    val += Math.random() - 0.5;\n                    data[j][i + 1] = val;\n                }\n            }\n            result.labels = labels;\n            result.data = data;\n            return result;\n        };\n\n\n        var sampleData = getData(1, 10, 'Device');\n\n        function movePan(event, g, context, side) {\n\n            context.dragEndX = Dygraph.dragGetX_(event, context);\n            context.dragEndY = Dygraph.dragGetY_(event, context);\n\n\n            // y-axis scaling is automatic unless this is a full 2D pan.\n            if (context.is2DPan) {\n\n                var pixelsDragged = context.dragEndY - context.dragStartY;\n                // Adjust each axis appropriately.\n                if (side == \"r\") {\n                    var axis = g.axes_[0];\n                    var axis_data = context.axes[0];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[0] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 0)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else if (side == 'l') {\n                    var axis = g.axes_[1];\n                    var axis_data = context.axes[1];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[1] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 1)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else {\n                    var minDate = context.initialLeftmostDate -\n                        (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n                    if (context.boundedDates) {\n                        minDate = Math.max(minDate, context.boundedDates[0]);\n                    }\n                    var maxDate = minDate + context.dateRange;\n                    if (context.boundedDates) {\n                        if (maxDate > context.boundedDates[1]) {\n                            // Adjust minDate, and recompute maxDate.\n                            minDate = minDate - (maxDate - context.boundedDates[1]);\n                            maxDate = minDate + context.dateRange;\n                        }\n                    }\n                    var zoomRange = g.xAxisZoomRange;\n                    if (g.xAxisZoomRange[0] instanceof Date) {\n                        zoomRange[0] = g.xAxisZoomRange[0].getTime();\n                    }\n                    if (g.xAxisZoomRange[1] instanceof Date) {\n                        zoomRange[1] = g.xAxisZoomRange[1].getTime();\n                    }\n\n                    if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                        return;\n                    }\n\n                    if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                        g.dateWindow_ = [Math.pow(Dygraph.LOG_SCALE, minDate),\n                            Math.pow(Dygraph.LOG_SCALE, maxDate)\n                        ];\n                    } else {\n                        g.dateWindow_ = [minDate, maxDate];\n                    }\n                }\n            }\n            g.drawGraph_(false);\n        }\n\n\n        function offsetToPercentage(g, offsetX, offsetY) {\n            // This is calculating the pixel offset of the leftmost date.\n            var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n            var yar0 = g.yAxisRange(0);\n\n            // This is calculating the pixel of the higest value. (Top pixel)\n            var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n            // x y w and h are relative to the corner of the drawing area,\n            // so that the upper corner of the drawing area is (0, 0).\n            var x = offsetX - xOffset;\n            var y = offsetY - yOffset;\n\n            // This is computing the rightmost pixel, effectively defining the\n            // width.\n            var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n            // This is computing the lowest pixel, effectively defining the height.\n            var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n            // Percentage from the left.\n            var xPct = w == 0 ? 0 : (x / w);\n            // Percentage from the top.\n            var yPct = h == 0 ? 0 : (y / h);\n\n            // The (1-) part below changes it from \"% distance down from the top\"\n            // to \"% distance up from the bottom\".\n            return [xPct, (1 - yPct)];\n        }\n\n\n        function zoom(g, zoomInPercentage, xBias, yBias, direction, side) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n\n            function adjustAxis(axis, zoomInPercentage, bias) {\n                var delta = axis[1] - axis[0];\n                var increment = delta * zoomInPercentage;\n                var foo = [increment * bias, increment * (1 - bias)];\n                return [axis[0] + foo[0], axis[1] - foo[1]];\n            }\n\n            xBias = xBias || 0.5;\n            yBias = yBias || 0.5;\n            var yAxes = g.axes_;\n            var newYAxes = [];\n            for (var i = 0; i < g.numAxes(); i++) {\n                newYAxes[i] = adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n            }\n            if ('v' == direction) {\n                if ('l' == side) {\n                    yAxes[0]['valueRange'] = newYAxes[0];\n                    yAxes[0]['valueWindow'] = newYAxes[0];\n                } else if ('r' == side && g.numAxes() == 2) {\n                    yAxes[1]['valueRange'] = newYAxes[1];\n                    yAxes[1]['valueWindow'] = newYAxes[1];\n                }\n                g.drawGraph_(false);\n            } else {\n\n                var ranges = [];\n                angular$1.forEach(g.xAxisRange(), function(range) {\n                    if (range instanceof Date) {\n                        ranges.push(range.getTime());\n                    } else {\n                        ranges.push(range);\n                    }\n                });\n\n                var newZoomRange = adjustAxis(ranges, zoomInPercentage, xBias);\n                // do not bigger than range data\n                var zoomRange = [];\n                if (g.hasOwnProperty(\"xAxisZoomRange\") && g.xAxisZoomRange) {\n                    zoomRange[0] = g.xAxisZoomRange[0];\n                    zoomRange[1] = g.xAxisZoomRange[1];\n                } else {\n                    zoomRange[0] = g.xAxisExtremes()[0];\n                    zoomRange[1] = g.xAxisExtremes()[1];\n                }\n                if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] >= newZoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [zoomRange[0], newZoomRange[1]]\n                    });\n                } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [newZoomRange[0], zoomRange[1]]\n                    });\n                } else {\n                    g.updateOptions({\n                        dateWindow: newZoomRange\n                    });\n                }\n            }\n        }\n\n\n        var canScroll = false;\n\n        var timer = null;\n        var mouseOverHandler = function(e, g, context) {\n            //\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function() {\n                canScroll = true;\n            }, 1000);\n        };\n\n\n        var mouseEnterHandler = function(e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function() {\n                canScroll = true;\n            }, 1000);\n        };\n\n        var mouseOutHandler = function(e, g, context) {\n            // set flag to false\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            canScroll = false;\n        };\n\n        var scroll = function(e, g, context) {\n\n            if ((scope.basicInfo && !scope.basicInfo.zoom) || !canScroll) {\n                return;\n            }\n\n            var normal;\n\n            if (e instanceof WheelEvent) {\n                normal = e.detail ? e.detail * -1 : e.deltaY / 40;\n            } else {\n                normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n            }\n\n            // For me the normalized value shows 0.075 for one click. If I took\n            // that verbatim, it would be a 7.5%.\n            var percentage = normal / 50;\n\n            if (!(e.offsetX && e.offsetY)) {\n                e.offsetX = e.layerX - e.target.offsetLeft;\n                e.offsetY = e.layerY - e.target.offsetTop;\n            }\n            var percentages = offsetToPercentage(g, e.offsetX, e.offsetY);\n            var xPct = percentages[0];\n            var yPct = percentages[1];\n            //\n            if (e.offsetX <= (g.plotter_.area.x)) {\n                // console.info(\"v\", \"l\")\n                // left zoom\n                zoom(g, percentage, xPct, yPct, 'v', 'l');\n            } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                // right zoom\n                // console.info(\"v\", \"r\")\n                zoom(g, percentage, xPct, yPct, 'v', 'r');\n            } else {\n                // middle zoom\n                // console.info(\"h\")\n                zoom(g, percentage, xPct, yPct, 'h', null);\n            }\n            Dygraph.cancelEvent(e);\n            timeOut(function() {\n                scope.chartDateWindow = g.xAxisRange();\n            });\n        };\n\n        var firstPoint = null;\n        var mousedownHandler = function(e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            context.initializeMouseDown(e, g, context);\n            firstPoint = e.clientX;\n            Dygraph.startPan(e, g, context);\n        };\n        var mousemoveHandler = function(e, g, context) {\n            if (context.isPanning) {\n                if (e.offsetX <= (g.plotter_.area.x)) {\n                    movePan(e, g, context, 'r');\n                } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                    movePan(e, g, context, 'l');\n                } else {\n                    movePan(e, g, context, 'h');\n                }\n                timeOut(function() {\n                    scope.chartDateWindow = scope.currentChart.xAxisRange();\n                });\n            }\n        };\n\n        var mouseupHandler = function(e, g, context) {\n            if (context.isPanning) {\n                Dygraph.endPan(e, g, context);\n            }\n\n            canScroll = true;\n        };\n\n        var interactionModel = {\n            'mousewheel': scroll,\n            'DOMMouseScroll': scroll,\n            'wheel': scroll,\n            'mousedown': mousedownHandler,\n            'mousemove': mousemoveHandler,\n            'mouseenter': mouseEnterHandler,\n            'mouseup': mouseupHandler,\n            // 'mouseover': mouseOverHandler,\n            'mouseout': mouseOutHandler\n        };\n\n\n        //init configuration\n        var configuration = {\n            drawGapEdgePoints: true,\n            'pointSize': 3,\n            legend: 'follow',\n            labelsKMB: true,\n            labelsSeparateLines: true,\n            // data formate\n            labels: ['x'].concat(sampleData.labels),\n            // highlightSeriesOpts: {\n            // strokeWidth: 2,\n            // strokeBorderWidth: 1,\n            // highlightCircleSize: 2\n            // },\n            drawPoints: false,\n            drawAxesAtZero: false,\n            labelsDivStyles: {\n                'text-align': 'right',\n                'position': 'relative',\n                'display': 'inline-block'\n            },\n            yRangePad: 10,\n            // x label y label\n            ylabel: 'Value',\n            xlabel: 'Date',\n            colors: scope.defaultColors,\n            // multiple Y axis\n            series: {\n                'Device0': {\n                    axis: 'y2'\n                },\n                'Device4': {\n                    axis: 'y2'\n                }\n            },\n            // showRangeSelector: true,\n            axes: {\n                y: {\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                y2: {\n                    // set axis-related properties here\n                    'labelsKMB': true,\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                x: {\n                    // datetime format\n                    valueFormatter: function(y) {\n                        return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                    }\n                }\n            },\n            pointClickCallback: function(e, p) {\n                if (scope.currentView != -1) {\n                    scope.showOne(p.name);\n                }\n            },\n            drawCallback: function(g, isInit) {\n                if (scope.refersh) { // make sure \"scope.refersh\" doesn't call when the graph create first time.\n                    scope.refersh(g, isInit);\n                }\n            },\n            'interactionModel': interactionModel\n        };\n\n        scope.currentChart = new Dygraph(element.find(\"div[class='line-chart-graph']\")[0], sampleData.data, configuration);\n        element.find(\"canvas\").css(\"zIndex\", 99);\n\n        var timer_auto = null;\n        var process_bar_timer = null;\n        element.find(\"#real_time_graph_\" + attrs.id).on(\"hidden.bs.modal\", function() {\n            // put your default event here\n            _$interval.cancel(timer_auto);\n            _$interval.cancel(process_bar_timer);\n        });\n\n\n        //real-time-graph\n        element.find(\"#real_time_graph_\" + attrs.id).on('shown.bs.modal', function() {\n\n            var tempConifg = {\n                drawGapEdgePoints: true,\n                'pointSize': 3,\n                labelsKMB: true,\n                labelsSeparateLines: false,\n                drawPoints: false,\n                drawAxesAtZero: false,\n                labelsDivStyles: {\n                    'text-align': 'right',\n                    'position': 'relative',\n                    'display': 'inline-block'\n                },\n                // x label y label\n                ylabel: 'Value',\n                xlabel: 'Date',\n                colors: scope.defaultColors,\n                // multiple Y axis\n                series: {\n                    'Device0': {\n                        axis: 'y2'\n                    },\n                    'Device4': {\n                        axis: 'y2'\n                    }\n                },\n                // showRangeSelector: true,\n                axes: {\n                    y: {\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    y2: {\n                        // set axis-related properties here\n                        'labelsKMB': true,\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    x: {\n                        // datetime format\n                        valueFormatter: function(y) {\n                            return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                        }\n                    }\n                },\n                interactionModel: {}\n            };\n\n            scope.realTimeGraph = new Dygraph(element.find(\"div[class='real-time-graph']\")[0], sampleData.data, tempConifg);\n            scope.realTimeGraph.updateOptions(scope.currentChartOptions);\n            scope.realTimeGraph.updateOptions({\n                \"file\": []\n            });\n\n            timer_auto = dataService.autoUpdateGraph(scope.applicationName, scope.auto_device_name, scope.auto_schema, scope.auto_store, scope.auto_fields, element.find(\"div[class='real-time-graph']\").width() / 4, function(graph_data, worker, interval) {\n                // update graph\n                var deviceConfig = scope.auto_metadata.data.groups[1];\n                var collections = deviceConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var allLines = [];\n                //0 for y  1 for y2\n                var yRanges = [{\n                    min: null,\n                    max: null\n                }, {\n                    min: null,\n                    max: null\n                }];\n                angular$1.forEach(collections, function(collection) {\n                    if (collection.name == scope.auto_store) {\n                        angular$1.forEach(graph_data.data, function(line) {\n                            allLines.push([new Date(line.timestamp)]);\n                        });\n\n                        var showY2axis = false;\n                        angular$1.forEach(collection.rows, function(row) {\n                            labels.push(row.label);\n                            colors.push(row.color);\n\n                            if (row.yaxis == 0) {\n                                series[row.label] = {\n                                    'axis': 'y1'\n                                };\n                            } else {\n                                series[row.label] = {\n                                    'axis': 'y2'\n                                };\n                                showY2axis = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                            // add value\n                            var counter = 0;\n                            angular$1.forEach(allLines, function(realLine) {\n                                try {\n                                    var value = f(graph_data.data[counter]);\n                                    realLine.push(value);\n                                    if (row.yaxis == 0) {\n                                        if (yRanges[0].min == null) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max == null) {\n                                            yRanges[0].max = value;\n                                        }\n\n                                        if (yRanges[0].min > value) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max < value) {\n                                            yRanges[0].max = value;\n                                        }\n                                    } else {\n                                        if (yRanges[1].min == null) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max == null) {\n                                            yRanges[1].max = value;\n                                        }\n\n                                        if (yRanges[1].min > value) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max < value) {\n                                            yRanges[1].max = value;\n                                        }\n                                    }\n                                } catch (ex) {\n                                    realLine.push(null);\n                                }\n                                counter++;\n                            });\n\n                        });\n\n                        angular$1.forEach(yRanges, function(yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.min) * 0.10;\n                            } else {\n                                yrange.min = yrange.min - (yrange.max - yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max - yrange.min) * 0.10;\n                            }\n                        });\n\n                        var newLines = [];\n                        if (!showY2axis) {\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function(line) {\n                                line.push(NaN);\n                            });\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: newLines,\n                                axes: {\n                                    y: {\n                                        valueRange: [yRanges[0].min, yRanges[0].max]\n                                    },\n                                    y2: {\n                                        valueRange: [yRanges[1].min, yRanges[1].max]\n                                    }\n                                }\n                            });\n                        } else {\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: allLines,\n                                axes: {\n                                    y: {\n                                        valueRange: [yRanges[0].min, yRanges[0].max]\n                                    },\n                                    y2: {\n                                        valueRange: [yRanges[1].min, yRanges[1].max]\n                                    }\n                                }\n                            });\n                        }\n                    }\n                });\n                if (worker) {\n                    timer_auto = worker;\n                }\n\n\n                //\n                var perInterval = interval / 100;\n                var counter = 0;\n\n                if (process_bar_timer) {\n                    _$interval.cancel(process_bar_timer);\n                    counter = 0;\n                }\n\n                process_bar_timer = _$interval(function() {\n                    scope.completionPercent = counter;\n                    counter++;\n                }, perInterval, 100);\n\n\n            });\n        });\n\n\n        scope.currentChartOptions = {};\n\n        scope.showRealTimeGraph = function() {\n            element.find(\"#real_time_graph_\" + attrs.id).modal();\n        };\n\n\n        if (attrs.hasOwnProperty(\"shown\")) {\n\n\n            var basicInfo = scope.basicInfo;\n            if (basicInfo && basicInfo.range_show) {\n                scope.rangeSelectorBar = new Dygraph(element.find(\"div[class='range-selector-bar']\")[0], sampleData.data, {\n                    xAxisHeight: 0,\n                    axes: {\n                        x: {\n                            drawAxis: false\n                        }\n                    },\n                    showRangeSelector: true,\n                    rangeSelectorHeight: 30\n                });\n                scope.chartDateWindow = scope.rangeSelectorBar.xAxisRange();\n            }\n\n\n            var status = false;\n            // add mouse up event to range select\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mouseup', function(event) {\n                status = false;\n                timeOut(function() {\n                    var finalDateRagne = scope.currentChart.xAxisRange();\n                    scope.chartDateTime = {\n                        begin: finalDateRagne[0],\n                        end: finalDateRagne[1]\n                    };\n                });\n            });\n\n            scope.$on('mouseUpMessage', function($scope, e) {\n                if (\"mouseup\" === e.type && status) {\n                    status = false;\n                    timeOut(function() {\n                        var finalDateRange = scope.currentChart.xAxisRange();\n                        scope.chartDateTime = {\n                            begin: finalDateRange[0],\n                            end: finalDateRange[1]\n                        };\n                    });\n                }\n            });\n\n            scope.$on('parentScatterViewChangedEvent', function(event, params) {\n                angular$1.forEach(params.children, function(item) {\n                    if (item == attrs.id) {\n                        scope.currentView = params.view;\n                    }\n                });\n            });\n\n\n            scope.$on('bindFatherGraphEvent', function(event, data) {\n                angular$1.forEach(data.children, function(child) {\n                    if (child == attrs.id) {\n                        Dygraph.synchronize([scope.currentChart].concat(data.parent), {\n                            zoom: true,\n                            selection: false,\n                            range: false\n                        });\n                        scope.currentChart.updateOptions({\n                            drawCallback: function(g, isInit) {\n                                // console.info(\"refersh running!\" + \" is  Init?\"+ isInit);\n                                scope.refersh(g, isInit);\n                            }\n                        });\n\n                    }\n                });\n\n\n            });\n\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousemove', function(event) {\n                if (status) {\n                    timeOut(function() {\n                        scope.chartDateWindow = scope.currentChart.xAxisRange();\n                    });\n                }\n            });\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousedown', function(event) {\n                status = true;\n            });\n\n            //bind chart\n            if (basicInfo && basicInfo.childrenChart.length > 0) {\n                var param = {\n                    'graphs': [scope.currentChart],\n                    children: basicInfo.childrenChart\n                };\n                if (scope.rangeSelectorBar) {\n                    param.graphs.push(scope.rangeSelectorBar);\n                }\n                scope.$emit('bindChildChartEvent', param);\n            }\n        }\n    }, 0);\n};\n\n//controller: ['$scope', '$element', '$window', '$interval', '$timeout', '$filter', '$location', function ($scope, $element, $window, $interval, $timeout, $filter, $location) {\nfgpWidgetGraph.prototype.controller = function controller ($scope, $element, $window, $interval, $timeout, $filter, $location, dataService, $rootScope, $stateParams, graphDataService) {\n    var element_id = $element.attr(\"id\");\n    $scope.elementId = element_id;\n\n    $scope['defaultColors'] = dataService.defaultColors();\n    var metadata = null;\n    var widgetData = null;\n    $scope.emptyDataShow = false;\n    // attributes----------------------\n    $scope.applicationName = $rootScope.applicationName;\n\n    $scope.alertMessage;\n\n    $scope.showY2Btns = false;\n\n    $scope.legendText = null;\n    $scope.legendText_device = null;\n    $scope.legendText_datetime = null;\n    $scope.legendText_column = null;\n    $scope.legendText_value = null;\n    $scope.legendColor = null;\n    $scope.autoupdate = false;\n    $scope.auto_device_name = \"\";\n    $scope.auto_schema = \"\";\n    $scope.auto_store = \"\";\n    $scope.auto_fields = [];\n    // default data-time intervals\n\n    $scope.defaultTimeIntervals = [{\n            name: \"10 seconds\",\n            interval: 10000\n        },\n        {\n            name: \"30 seconds\",\n            interval: 30000,\n            scales: [10000]\n        },\n        {\n            name: \"1 minutes\",\n            interval: 60000,\n            scales: [10000, 30000]\n        },\n        {\n            name: \"5 minutes\",\n            interval: 300000,\n            scales: [30000, 60000]\n        },\n        {\n            name: \"30 minutes\",\n            interval: 1800000,\n            scales: [60000, 300000]\n        }, {\n            name: \"1 hour\",\n            interval: 3600000,\n            scales: [60000, 300000, 1800000]\n        }, {\n            name: \"1 day\",\n            interval: 86400000,\n            scales: [300000, 1800000, 3600000]\n        }, {\n            name: \"1 week\",\n            interval: 604800017,\n            scales: [3600000, 86400000]\n        }, {\n            name: \"1 month\",\n            interval: 2629800000,\n            scales: [86400000, 604800017]\n        }, {\n            name: \"1 year\",\n            interval: 31557600000,\n            scales: [2629800000]\n        }\n    ];\n\n    $scope.dateTimeIntervals = [].concat($scope.defaultTimeIntervals);\n\n    $scope.locked_interval = null;\n    // lock interval\n    $scope.lock = function(interval) {\n        $scope.dateTimeIntervals = [];\n        if ($scope.locked_interval) {\n            if ($scope.locked_interval == interval) {\n                $scope.locked_interval = null; // unlocked\n                $scope.dateTimeIntervals = [].concat($scope.defaultTimeIntervals);\n                // change default choosed interval\n                $scope.currentIntervalName = $scope.dateTimeIntervals[0].name;\n                $scope.currentIntervalChoosed = $scope.dateTimeIntervals[0];\n            } else {\n                $scope.locked_interval = interval; // locked\n                // change color\n                // change dropdown list\n                $scope.defaultTimeIntervals.forEach(function(item) {\n                    //\n                    if (item[\"scales\"] && item[\"scales\"].length > 0) {\n                        item[\"scales\"].forEach(function(_item) {\n                            if (_item == interval.interval) {\n                                //\n                                $scope.dateTimeIntervals.push(item);\n                            }\n                        });\n                    }\n\n                });\n\n                $scope.currentIntervalName = $scope.dateTimeIntervals[0].name;\n                $scope.currentIntervalChoosed = $scope.dateTimeIntervals[0];\n            }\n        } else {\n            $scope.locked_interval = interval;\n            // change color\n\n            // change dropdown list\n            $scope.defaultTimeIntervals.forEach(function(item) {\n                //\n                if (item[\"scales\"] && item[\"scales\"].length > 0) {\n                    item[\"scales\"].forEach(function(_item) {\n                        if (_item == interval.interval) {\n                            //\n                            $scope.dateTimeIntervals.push(item);\n                        }\n                    });\n                }\n\n            });\n            $scope.currentIntervalName = $scope.dateTimeIntervals[0].name;\n            $scope.currentIntervalChoosed = $scope.dateTimeIntervals[0];\n        }\n        // change\n        $scope.changeInterval($scope.currentIntervalChoosed);\n    };\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id,\n        callback: function(data) {\n            if (data) {\n                widgetData = data;\n                if (widgetData.data.metadata.data.basic.ranges) {\n                    if (widgetData.data.metadata.data.basic.hasOwnProperty(\"ranges\")) {\n                        $scope.dateTimeIntervals = widgetData.data.metadata.data.basic.ranges;\n                        angular$1.forEach($scope.dateTimeIntervals, function(range) {\n                            range[\"interval\"] = range.value;\n                            if (range.checked == true) {\n                                $scope.currentIntervalChoosed = range;\n                            }\n                        });\n                    }\n                } else {\n                    $scope.currentIntervalChoosed = $scope.dateTimeIntervals[1];\n                }\n            }\n        }\n    });\n\n\n    $scope.changeInterval = function(interval) {\n\n        var range = $scope.currentChart[\"xAxisZoomRange\"];\n\n        if (range[0] instanceof Date) {\n            range[0] = range[0].getTime();\n        }\n\n        if (range[1] instanceof Date) {\n            range[1] = range[1].getTime();\n        }\n\n        if (interval && ((range[1] - interval.interval) >= range[0])) {\n            $scope.rangeConfig.dateWindow = [new Date(range[1] - interval.interval), range[1]];\n            $scope.currentChart.updateOptions($scope.rangeConfig);\n            $scope.currentIntervalChoosed = interval;\n        }\n    };\n\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.loadingShow = false;\n\n        $scope.intevals = {\n            device: []\n        };\n\n\n        // update chart\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if (widgetData.data.metadata.css) {\n            $scope.css = widgetData.data.metadata.css;\n        }\n\n        // get start and end from url\n        var begin_path = $stateParams.begin;\n        var end_path = $stateParams.end;\n        var init_flag = false;\n\n\n        //fix interval\n        $scope.fixInterval = false;\n        var noneFixed = [];\n        $scope.fixGraphWithGap = function() {\n            if ($scope.currentChart && $scope.fixInterval) {\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function(item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({\n                        file: fixed\n                    });\n                }\n            } else if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                $scope.currentChart.updateOptions({\n                    file: noneFixed\n                });\n            }\n\n        };\n\n\n        $scope.showOrHideDevice = function(device) {\n            angular$1.forEach($scope.childrenDevices, function(item, index) {\n                if (item.name === device.name) {\n                    var graph = $scope.currentChart;\n\n                    if (device.show == true) {\n                        graph.setVisibility(index, false);\n                        device.show = false;\n                    } else {\n                        graph.setVisibility(index, true);\n                        device.show = true;\n                    }\n\n                }\n            });\n        };\n\n        $scope.fixGraphWithGap_click = function() {\n            if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function(item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({\n                        file: fixed\n                    });\n                }\n            } else if ($scope.currentChart && $scope.fixInterval) {\n                $scope.currentChart.updateOptions({\n                    file: noneFixed\n                });\n            }\n\n        };\n\n\n        metadata = widgetData.data.metadata;\n        $scope.basicInfo = metadata.data.basic;\n        $scope.currentView = -1; // -1 is device view and 1 is scatter view\n\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.data_from = \"application\";\n\n        $scope.checkY2Btns = function() {\n            return $scope.basicInfo.zoom === true && $scope.showY2Btns === true;\n        };\n\n        $scope.$on('deviceInfoEvent', function(event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            $scope.auto_schema = metadata.data.source.store;\n            $scope.auto_metadata = metadata;\n            $scope.auto_device_name = deviceData.device.name;\n\n            $scope.$watch('currentView', function(nObj, oObj) {\n                // change\n                if (nObj != oObj) {\n                    $scope.$emit('graphScatterViewChangeEvent', {\n                        children: $scope.basicInfo.childrenChart,\n                        view: nObj\n                    });\n                    if (nObj == -1) {\n                        $scope.autoupdate = true;\n                        var rangeLevel = null;\n                        var otherLevels = [];\n                        angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                            if (level.rows.length > 0) {\n                                if (rangeLevel != null) {\n                                    otherLevels.push(rangeLevel);\n                                }\n                                rangeLevel = level.name;\n                            }\n                        });\n                        if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                            // show device view\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                            angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                                if (level.rows.length > 0 && level.name === rangeLevel) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function(line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function(column) {\n                                                    if (column.startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n                            $scope.auto_fields = fields;\n                            dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function(data) {\n                                initChart(data, deviceData.device.name);\n                            }, function(error) {\n                                console.error(error);\n                            });\n                        }\n\n                    } else {\n                        $scope.autoupdate = false;\n                        //get relation config\n                        if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                            return;\n                        } else {\n                            var rangeLevel = null;\n                            var otherLevels = [];\n                            angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                                if (level.rows.length > 0) {\n                                    if (rangeLevel != null) {\n                                        otherLevels.push(rangeLevel);\n                                    }\n                                    rangeLevel = level.name;\n                                }\n                            });\n                            if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                                    if (level.rows.length > 0 && level.name === rangeLevel) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function(line) {\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function(column) {\n                                                        if (column.startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n                                                }\n                                            });\n                                        }\n                                    }\n                                });\n                                $scope.auto_fields = fields;\n                                // show children view\n                                dataService.childrenDeviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, metadata.data.source.relation, metadata.data.source.relation_group, rangeLevel, otherLevels, fields).then(function(data) {\n                                    // get all device trees\n                                    if (data != null && data.length > 0) {\n                                        initChildrenChart(data);\n                                    } else {\n                                        return;\n                                    }\n\n                                }, function(error) {\n                                    console.error(error);\n                                });\n\n                            }\n                        }\n                    }\n                }\n                $scope.fixInterval = false;\n\n            });\n            // first time of showing chart\n            $scope.$watch('currentChart', function(newValue) {\n                if (newValue) {\n                    //device first level\n                    var rangeLevel = null;\n                    var otherLevels = [];\n                    angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                        if (level.rows.length > 0) {\n                            if (rangeLevel != null) {\n                                otherLevels.push(rangeLevel);\n                            }\n                            rangeLevel = level.name;\n                        }\n                    });\n\n                    // fields of range level\n                    var fields = [];\n                    var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                    angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                        if (level.rows.length > 0 && level.name === rangeLevel) {\n                            var lines = level.rows;\n                            if (lines) {\n                                angular$1.forEach(lines, function(line) {\n                                    //\n                                    if (line.value) {\n                                        var columns = (line.value).match(patt);\n                                        angular$1.forEach(columns, function(column) {\n                                            if ((column).startsWith('data.')) {\n                                                fields.push(column.replace('data.', ''));\n                                            }\n                                        });\n                                    }\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.auto_fields = fields;\n                    //send a rest request\n                    dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function(data) {\n                        initChart(data, deviceData.device.name);\n                    }, function(error) {\n                        console.error(error);\n                    });\n                }\n            });\n            $scope.$watch(\"chartDateTime\", function(newValue, oldValue) {\n                if (newValue.begin != null && newValue.end != null) {\n                    var expect_points = Math.floor($element.parent().width());\n                    // find a interval\n                    var expectedInterval = (newValue.end - newValue.begin) / expect_points;\n                    if($scope.locked_interval){\n                        expectedInterval = $scope.locked_interval.interval;\n                    }\n                    var conf = $scope.intevals.device;\n                    // device detail view\n                    var preOne = conf[0].interval;\n                    var lastOne = conf[conf.length - 1].interval;\n                    var cin = \"\";\n                    if (expectedInterval >= preOne) {\n                        expectedInterval = preOne;\n                        $scope.autoupdate = false;\n                    } else if (expectedInterval <= lastOne) {\n                        expectedInterval = lastOne;\n\n\n                        if ($scope.currentView == -1) {\n                            $scope.autoupdate = true;\n                            $scope.auto_store = conf[conf.length - 1].name;\n                        }\n\n\n                    } else {\n                        for (var i = 1; i < conf.length; i++) {\n                            if (expectedInterval <= preOne && expectedInterval > conf[i].interval) {\n                                expectedInterval = preOne;\n                            } else {\n                                preOne = conf[i].interval;\n                                cin = conf[i].name;\n                            }\n                        }\n                        $scope.autoupdate = false;\n                    }\n\n                    $scope.currentIntervalName = \"\";\n\n                    angular$1.forEach(conf, function(config) {\n                        if (config.interval == expectedInterval) {\n                            $scope.currentIntervalName = config.name;\n                        }\n                    });\n\n                    // check the interval(data) no more than the number of expected points\n                    if (expectedInterval == lastOne) {\n                        //\n                        if (((newValue.end - newValue.begin) / expectedInterval) > expect_points) {\n                            // reset range bar\n                            $scope.rangeConfig.dateWindow = [new Date(newValue.end - (expect_points - 1) * expectedInterval), new Date(newValue.end)];\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n                            $scope.alertMessage = \"Limit the number of \\\"Zoom-Out\\\" points to \" + expect_points + \".\";\n                            $timeout(function() {\n                                $scope.alertMessage = null;\n                            }, 5000);\n                            return;\n                        }\n                    }\n\n                    // update range-bar\n                    if ($scope.rangeSelectorBar) {\n                        angular$1.forEach($scope.trees, function(tree) {\n                            if (tree.range == true) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                                    if (level.rows.length > 0 && level.name === tree.store) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function(line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function(column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n\n                                                }\n\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                dataService.deviceStoreData($scope.graphId, $rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, new Date(newValue.begin).getTime(), new Date(newValue.end).getTime(), fields, expectedInterval).then(function(data) {\n                                        // udpate chart\n                                        var showData = data;\n                                        showData = showData.filter(function(obj) {\n                                            return obj != null;\n                                        });\n\n                                        // update range bar\n                                        var basicInfo = $scope.basicInfo;\n                                        var allLines = [];\n                                        angular$1.forEach(showData, function(line) {\n                                            allLines.push([new Date(line.timestamp)]);\n                                        });\n                                        var series_range = {\n                                            'l0': {\n                                                axis: 'y1'\n                                            }\n                                        };\n\n                                        var rangeBarLabels = [];\n                                        for (var i = 0; i < fields.length; i++) {\n                                            rangeBarLabels.push(fields[i]);\n\n                                            var f = new Function(\"data\", \"with(data) { if(data.\" + fields[i] + \"!=null)return data.\" + fields[i] + \";return null;}\");\n                                            // add value\n                                            var counter = 0;\n                                            angular$1.forEach(allLines, function(realLine) {\n                                                try {\n                                                    var value = f(showData[counter]);\n                                                    realLine.push(value);\n                                                } catch (ex) {\n                                                    realLine.push(null);\n                                                }\n                                                counter++;\n                                            });\n                                        }\n                                        //\n\n                                        if ($scope.rangeConfig && $scope.rangeConfig.file && $scope.rangeConfig.file != null) {\n                                            var objNeed2Add = [];\n                                            angular$1.forEach($scope.rangeConfig.file, function(item) {\n                                                var flag = false;\n                                                var dataLength = -1;\n                                                angular$1.forEach(allLines, function(line) {\n                                                    dataLength = line.length;\n                                                    if (line.length > 0 && line[0].getTime() === item[0].getTime()) {\n                                                        flag = true;\n                                                    } else if (line.length === 0) {\n                                                        flag = true;\n                                                    } else {\n                                                        dataLength = line.length;\n                                                    }\n\n                                                });\n                                                if (!flag) {\n                                                    var tempObj = [];\n                                                    for (var i = 0; i < dataLength; i++) {\n                                                        tempObj[i] = item[i];\n                                                    }\n                                                    objNeed2Add.push(tempObj);\n                                                }\n                                            });\n                                        }\n                                        allLines = allLines.concat(objNeed2Add);\n                                        allLines.sort(function(a, b) {\n                                            return a[0] > b[0] ? 1 : -1;\n                                        });\n                                        if ($scope.showY2Btns) {\n                                            //noinspection JSDuplicatedDeclaration\n                                            if (!$scope.rangeConfig.axes.hasOwnProperty(\"y2\")) {\n                                                series_range = {\n                                                    'l0': {\n                                                        axis: 'y1'\n                                                    },\n                                                    'l0': {\n                                                        axis: 'y2'\n                                                    }\n                                                };\n                                                $scope.rangeSeries = series_range;\n                                                $scope.rangeConfig = {\n                                                    'file': allLines,\n                                                    'labels': ['x'].concat(rangeBarLabels),\n                                                    'series': series_range\n                                                };\n                                                if (basicInfo && basicInfo.range_show) {\n                                                    $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                                }\n                                            }\n\n                                        } else {\n                                            series_range[\"span_y2\"] = {\n                                                axis: 'y2'\n                                            };\n                                            $scope.rangeSeries = series_range;\n                                            var newLines = [];\n                                            angular$1.copy(allLines, newLines);\n                                            angular$1.forEach(newLines, function(line) {\n                                                line.push(NaN);\n                                            });\n                                            $scope.rangeConfig = {\n                                                'file': newLines,\n                                                'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                                'series': series_range\n                                            };\n                                            if (basicInfo && basicInfo.range_show) {\n                                                $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                            }\n                                        }\n                                    },\n                                    function(data) {\n                                        console.info(data);\n                                    }\n                                );\n                            }\n                        });\n                    }\n\n\n                    $scope.loadingShow = true;\n                    if ($scope.currentView == 1) {\n                        // scatter detail view\n                        if (expectedInterval == conf[0].interval) {\n                            $scope.currentChart.updateOptions({\n                                dateWindow: $scope.chartDateWindow\n                            });\n                            $scope.loadingShow = false;\n                        } else {\n                            $scope.legendText = null;\n                            var deviceInfo = [];\n                            var currentStore = \"\";\n\n                            $scope.childrenDevices = [];\n                            // has problem....\n                            angular$1.forEach($scope.childTrees, function(device) {\n                                angular$1.forEach(device.trees, function(tree, index) {\n                                    if (expectedInterval == tree.frequency && index != 0) {\n                                        currentStore = tree.store;\n                                        deviceInfo.push({\n                                            name: device.name,\n                                            tree: tree.tree\n                                        });\n                                        device[\"show\"] = true;\n                                        $scope.childrenDevices.push(device);\n                                    }\n                                });\n                            });\n\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                            angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                                if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function(line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function(column) {\n                                                    if (column && (column).startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n\n                            $scope.auto_fields = fields;\n                            dataService.devicesStoreData($scope.graphId, $rootScope.host, $rootScope.applicationName, deviceInfo, metadata.data.source.store, currentStore, new Date(newValue.begin).getTime(), new Date(newValue.end).getTime(), fields, expectedInterval).then(function(data) {\n                                var showData = [];\n                                angular$1.forEach(data, function(arr, key) {\n                                    var deviceData = [].concat(arr);\n                                    showData.push({\n                                        device: key,\n                                        data: deviceData\n                                    });\n                                });\n                                //get configuration\n                                updateChildrenDetailChart(metadata, currentStore, $scope.rangeChildrenData, showData);\n\n                            }, function(data) {\n                                console.info(data);\n                            });\n                        }\n                        $scope.fixGraphWithGap();\n                    } else {\n                        // cal tree\n                        angular$1.forEach($scope.trees, function(tree, index) {\n                            if (expectedInterval == tree.frequency) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                                    if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function(line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function(column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n\n                                                }\n\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                dataService.deviceStoreData($scope.graphId, $rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, new Date(newValue.begin).getTime(), new Date(newValue.end).getTime(), fields, tree.frequency).then(function(data) {\n                                    // udpate chart\n                                    var showData = data;\n                                    showData = showData.filter(function(obj) {\n                                        return obj != null;\n                                    });\n                                    showData.sort(function(a, b) {\n                                        return a.timestamp > b.timestamp ? 1 : -1;\n                                    });\n                                    //get configuration\n                                    updateDetailChart(metadata, tree.store, $scope.rangeData, showData);\n\n                                    // tell some other widgets, the graph is changed.\n                                    $timeout(function() {\n                                        $rootScope.$broadcast('chartDataChangeEvent', {\n                                            'id': element_id,\n                                            'group': 'device',\n                                            'data': {\n                                                'collection': tree.store,\n                                                'group': 'device',\n                                                'data': showData\n                                            }\n                                        });\n                                    });\n\n                                }, function(data) {\n                                    console.info(data);\n                                });\n                            }\n                        });\n\n                        $scope.fixGraphWithGap();\n                    }\n                    $scope.status = false;\n                }\n            });\n\n        });\n\n\n        var fetchData = function(values, node) {\n            if (node.children[0] != null) {\n                fetchData(values, node.children[0]);\n            }\n\n            if (node.children[1] != null) {\n                fetchData(values, node.children[1]);\n            }\n\n            if (node.children[0] == null && node.children[1] == null) {\n                if (node.data != null && node.data.array) {\n                    Array.prototype.push.apply(values, node.data.array.slice(0, node.data.size));\n                } else if (node.data != null) {\n                    Array.prototype.push.apply(values, node.data.slice(0, node.data.length));\n                }\n\n            }\n\n        };\n\n\n        $scope.trees = [];\n        $scope.rangeData = [];\n\n        $scope.ordinalRangeData = [];\n\n        var initChart = function(data, deviceName) {\n            $scope.intevalforshow = [];\n            //\n            $scope.intevals.device = [];\n            var trees = data.trees;\n            $scope.trees = trees;\n            var rangeTree = null;\n            angular$1.forEach(trees, function(tree) {\n                if (tree.range) {\n                    rangeTree = tree;\n                }\n                $scope.intevals.device.push({\n                    name: tree.store,\n                    interval: tree.frequency\n                });\n            });\n\n\n            // init chart with range data\n            var store = rangeTree.store;\n\n            // get all data\n            var allData = [];\n            // fetchData(allData, rangeTree.tree);only get first and last\n            // fix the problem of never seen the current data.\n            rangeTree.last.timestamp = rangeTree.last.timestamp + (rangeTree.frequency - 1);\n            allData = allData.concat([rangeTree.first, rangeTree.last]);\n\n            allData = allData.filter(function(obj) {\n                return obj != null;\n            });\n\n            allData.sort(function(a, b) {\n                return a.timestamp > b.timestamp ? 1 : -1;\n            });\n\n\n            if ($scope.trees.length == 0 || allData.length == 0) {\n                $scope.emptyDataShow = true;\n                return;\n            }\n\n            // if the data only has one point. change the data range to bigger\n            if (allData.length == 1) { //  means only one point.\n                var newData = [];\n                // add 1 points into both side\n                var thePoint = allData[0];\n                var timestamp = thePoint.timestamp;\n                var currentInterval = $scope.intevals.device[0].interval;\n                newData.push({\n                    timestamp: timestamp - currentInterval\n                });\n                Array.prototype.push.apply(newData, allData);\n                newData.push({\n                    timestamp: timestamp + currentInterval\n                });\n                allData = newData;\n            }\n            $scope.ordinalRangeData = allData;\n            // put the data into range tree cache\n            if (rangeTree) {\n                //\n                graphDataService.put(deviceName + \"/\" + rangeTree.store + \"/\" + $scope.graphId, [rangeTree.first, {\n                    timestamp: moment().endOf('day').toDate().getTime()\n                }]);\n            }\n            // get configuration and make real data\n            updateChart(metadata, store, allData, rangeTree);\n        };\n\n        var initChildrenChart = function(deviceDatas) {\n            var devicesInfo = {};\n            $scope.intevals.device = [];\n            //range data with all device\n            $scope.childTrees = [];\n            $scope.childrenDevices = [];\n\n            angular$1.forEach(deviceDatas, function(deviceData) {\n                var device = deviceData.device;\n                device[\"show\"] = true;\n                $scope.childrenDevices.push(device);\n                var trees = deviceData.trees;\n                $scope.childTrees.push({\n                    name: device.name,\n                    trees: trees\n                });\n                var rangeTree = null;\n                angular$1.forEach(trees, function(tree) {\n                    if (tree.range) {\n                        rangeTree = tree;\n                    }\n\n                    var flag = false;\n                    angular$1.forEach($scope.intevals.device, function(interval) {\n                        if (interval.name == tree.store && interval.interval == tree.frequency) {\n                            // has same one\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        $scope.intevals.device.push({\n                            name: tree.store,\n                            interval: tree.frequency\n                        });\n                    }\n\n                });\n\n                if (rangeTree != null) {\n                    var deviceObj = devicesInfo[device.name] = {};\n                    // get all data\n                    var allData = [rangeTree.first, {\n                        timestamp: moment().endOf('day').toDate().getTime()\n                    }];\n                    allData = allData.filter(function(obj) {\n                        return obj != null;\n                    });\n                    allData.sort(function(a, b) {\n                        return a.timestamp > b.timestamp ? 1 : -1;\n                    });\n                    //\n                    deviceObj[\"range\"] = rangeTree;\n                    deviceObj[\"data\"] = allData;\n                } else {\n                    console.info(device.name + \" has none data.\");\n                }\n\n            });\n\n            updateChildrenChart(metadata, devicesInfo);\n        };\n\n\n        var updateChildrenChart = function(metadata, devicesInfo) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {\n                left: relationConfig.leftYAxis,\n                right: relationConfig.rightYAxis\n            };\n            var allLines = [];\n            var allXLabels = [];\n            angular$1.forEach(devicesInfo, function(device, key) {\n                angular$1.forEach(device.data, function(item) {\n                    var flag = false;\n                    angular$1.forEach(allXLabels, function(label) {\n                        if (label.getTime() == item.timestamp) {\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        allXLabels.push(new Date(item.timestamp));\n                    }\n\n\n                });\n            });\n            // order\n            allXLabels.sort(function(a, b) {\n                return a > b ? 1 : -1;\n            });\n\n            // make all line\n            angular$1.forEach(allXLabels, function(label) {\n                allLines.push([label]);\n            });\n\n\n            var yRange = {\n                min: null,\n                max: null\n            };\n            var showY2axis = false;\n            var counter = 0;\n            angular$1.forEach(devicesInfo, function(device, key) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                angular$1.forEach(collections, function(collection) {\n                    if (collection.name == device.range.store) {\n                        $scope.currentIntervalName = device.range.store;\n                        var originalData = device.data;\n\n                        // always same for each device\n                        if (collection.rows[0].yaxis == 0) {\n                            series[collection.rows[0].label] = {\n                                'axis': 'y1'\n                            };\n                        } else {\n                            series[collection.rows[0].label] = {\n                                'axis': 'y2'\n                            };\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        labels.push(key);\n                        // make a line\n                        var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                        // add value\n                        angular$1.forEach(allLines, function(realLine, index) {\n\n                            var flag = false;\n                            angular$1.forEach(originalData, function(odata) {\n                                if (realLine[0].getTime() == odata.timestamp) {\n                                    try {\n                                        var value = f(odata);\n                                        realLine.push(value);\n                                        if (yRange.min == null) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max == null) {\n                                            yRange.max = value;\n                                        }\n\n                                        if (yRange.min > value) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max < value) {\n                                            yRange.max = value;\n                                        }\n                                    } catch (ex) {\n                                        realLine.push(null);\n                                    }\n                                    flag = true;\n                                }\n                            });\n\n                            if (!flag) {\n                                realLine.push(null);\n                            }\n                        });\n\n\n                    }\n                });\n            });\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n            //update chart\n            if ($scope.currentChart) {\n                $scope.rangeChildrenData = allLines;\n\n                if (showY2axis) {\n                    $scope.childrenRangeConfig = {\n                        'labelsKMB': true,\n                        'file': allLines,\n                        legend: 'never',\n                        labelsKMB: true,\n                        labelsSeparateLines: false,\n                        // data formate\n                        labels: ['x'].concat(sampleData.labels),\n                        highlightSeriesOpts: {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        'labels': ['x'].concat(labels),\n                        'ylabel': leftAndRight.left,\n                        'y2label': leftAndRight.right,\n                        'series': series,\n                        'colors': colors,\n                        highlightCallback: function(e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            angular$1.forEach(series, function(value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {\n                                x: 0,\n                                y: 0\n                            };\n                            angular$1.forEach(pts, function(item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function(point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n                            var legendbox = angular$1.element(\"#legendbox\" + element_id);\n\n\n                            $scope.$apply(function() {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n\n                        },\n\n                        unhighlightCallback: function(e) {\n                            $scope.$apply(function() {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'axes': {\n                            'y': {\n                                valueRange: [yRange.min, yRange.max],\n                                axisLabelWidth: 80\n                            },\n                            'y2': {}\n                        }\n                        // showRangeSelector: true\n                    };\n                } else {\n                    $scope.showY2Btns = false;\n                    var newLines = [];\n                    angular$1.copy(allLines, newLines);\n                    angular$1.forEach(newLines, function(line) {\n                        line.push(NaN);\n                    });\n                    series[\"span_y2\"] = {\n                        'axis': 'y2'\n                    };\n                    $scope.childrenRangeConfig = {\n                        'drawGapEdgePoints': true,\n                        'pointSize': 3,\n                        'legend': 'never',\n                        'labelsKMB': true,\n                        'file': newLines,\n                        'labelsSeparateLines': false,\n                        'highlightSeriesOpts': {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        highlightCallback: function(e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            angular$1.forEach(series, function(value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {\n                                x: 0,\n                                y: 0\n                            };\n                            angular$1.forEach(pts, function(item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function(point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n                            var legendbox = angular$1.element(\"#legendbox\" + element_id);\n                            $scope.$apply(function() {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n                        },\n\n                        unhighlightCallback: function(e) {\n                            $scope.$apply(function() {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                        'ylabel': leftAndRight.left,\n                        'y2label': \"\",\n                        'series': series,\n                        'colors': colors,\n                        'axes': {\n                            'y': {\n                                valueRange: [yRange.min, yRange.max]\n                            },\n                            'y2': {\n                                axisLabelFormatter: function(d) {\n                                    return '';\n                                }\n                            }\n                        }\n                        // showRangeSelector: true\n                    };\n                }\n                //\n                $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n                //  keep the same time window and refersh\n                $scope.chartDateTime = {\n                    begin: $scope.chartDateTime.begin,\n                    end: $scope.chartDateTime.end\n                };\n                $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                $scope.loadingShow = false;\n            }\n\n\n        };\n\n\n        var updateChildrenDetailChart = function(metadata, store, rangeData, allData) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var newLines = [];\n            var newTime = [];\n            var series = {};\n            var labels = [];\n            var colors = [];\n            var leftAndRight = {\n                left: relationConfig.leftYAxis,\n                right: relationConfig.rightYAxis\n            };\n            var yRange = {\n                min: null,\n                max: null\n            };\n            var counter = 0;\n            var showY2axis = null;\n            angular$1.forEach(allData, function(device) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                if (device.data.length > 0) {\n                    labels.push(device.device);\n                    angular$1.forEach(collections, function(collection) {\n                        if (collection.name == store) {\n                            $scope.currentIntervalName = store;\n                            if (collection.rows[0].yaxis == 0) {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y1'\n                                };\n                            } else {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y2'\n                                };\n                                showY2axis = true;\n                                $scope.showY2Btns = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                            var tempData = [];\n                            var tempTime = [];\n                            // make data\n                            angular$1.forEach(device.data, function(data) {\n                                var dateTime = new Date(data.timestamp);\n                                try {\n                                    var value = f(data);\n                                    tempData.push({\n                                        timestamp: dateTime,\n                                        value: value\n                                    });\n\n                                    if (yRange.min == null) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max == null) {\n                                        yRange.max = value;\n                                    }\n\n                                    if (yRange.min > value) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max < value) {\n                                        yRange.max = value;\n                                    }\n\n                                } catch (e) {\n                                    tempData.push({\n                                        timestamp: dateTime,\n                                        value: null\n                                    });\n                                }\n                                tempTime.push(dateTime.getTime());\n                            });\n                            newTime = newTime.concat(tempTime.filter(function(item) {\n                                return newTime.indexOf(item) < 0;\n                            }));\n                            newLines.push({\n                                device: device.device,\n                                data: tempData\n                            });\n                        }\n                    });\n                }\n            });\n\n            var chartData = [];\n            // time needs sort!!!\n            newTime = newTime.sort();\n            angular$1.forEach(newTime, function(nt) {\n                chartData.push([new Date(nt)]);\n            });\n\n\n            angular$1.forEach(newLines, function(line) {\n                angular$1.forEach(chartData, function(timeTicket) {\n                    // line data\n                    var flag = false;\n                    var lineData = line.data;\n                    for (var i = 0; i < lineData.length; i++) {\n                        if (lineData[i].timestamp.getTime() == timeTicket[0].getTime()) {\n                            timeTicket.push(lineData[i].value);\n                            flag = true;\n                            break;\n                        }\n                    }\n                    if (flag != true) {\n                        // we should use \"NaN\"\n                        timeTicket.push(NaN);\n                    }\n                });\n            });\n\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n\n\n            if (chartData.length == 0) {\n                $scope.currentChart.updateOptions({\n                    'file': []\n                });\n                $scope.loadingShow = false;\n            } else {\n                if ($scope.currentChart) {\n\n                    if (showY2axis) {\n\n                        $scope.currentChartOptions = {\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                }\n                            }\n                        };\n\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function(e, x, pts, row, seriesName) {\n                                var sn = \"\";\n                                angular$1.forEach(series, function(value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {\n                                    x: 0,\n                                    y: 0\n                                };\n                                angular$1.forEach(pts, function(item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function(point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n                                var legendbox = angular$1.element(\"#legendbox\" + element_id);\n                                $scope.$apply(function() {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n                            },\n\n                            unhighlightCallback: function(e) {\n                                $scope.$apply(function() {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    } else {\n                        var newLines = [];\n                        $scope.showY2Btns = false;\n                        angular$1.copy(chartData, newLines);\n                        angular$1.forEach(newLines, function(line) {\n                            line.push(NaN);\n                        });\n                        series[\"span_y2\"] = {\n                            axis: 'y2'\n                        };\n                        $scope.currentChartOptions = {\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                },\n                                \"y2\": {\n                                    axisLabelFormatter: function(d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        };\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function(e, x, pts, row, seriesName) {\n\n                                var sn = \"\";\n                                angular$1.forEach(series, function(value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {\n                                    x: 0,\n                                    y: 0\n                                };\n                                angular$1.forEach(pts, function(item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function(point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n                                var legendbox = angular$1.element(\"#legendbox\" + element_id);\n\n                                $scope.$apply(function() {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n\n                            },\n\n                            unhighlightCallback: function(e) {\n                                $scope.$apply(function() {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                },\n                                \"y2\": {\n                                    axisLabelFormatter: function(d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    }\n                    $scope.loadingShow = false;\n                }\n            }\n\n\n        };\n\n\n        /**\n         * update detail chart\n         * @param metadata\n         * @param store\n         * @param rangeData\n         * @param allData\n         */\n        var updateDetailChart = function(metadata, store, rangeData, allData) {\n\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {\n                left: deviceConfig.leftYAxis,\n                right: deviceConfig.rightYAxis\n            };\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{\n                min: null,\n                max: null\n            }, {\n                min: null,\n                max: null\n            }];\n            angular$1.forEach(collections, function(collection) {\n                if (collection.name == store) {\n                    angular$1.forEach(allData, function(line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    // var yRange = {'min': null, 'max': null};\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function(row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {\n                                'axis': 'y1'\n                            };\n                        } else {\n                            series[row.label] = {\n                                'axis': 'y2'\n                            };\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function(realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    angular$1.forEach(yRanges, function(yrange) {\n                        if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                            yrange.min = yrange.min - (yrange.min) * 0.10;\n                            yrange.max = yrange.max + (yrange.max) * 0.10;\n                        }\n                    });\n\n\n                    if (allLines.length == 0) {\n\n                        $scope.currentChart.updateOptions({\n                            'file': []\n                        });\n                        if ($scope.rangeSelectorBar) {\n                            $scope.currentChart[\"xAxisZoomRange\"] = $scope.rangeSelectorBar.xAxisExtremes();\n                        }\n\n\n                        $scope.loadingShow = false;\n                    } else {\n                        if ($scope.currentChart) {\n\n                            if (showY2axis) {\n                                $scope.currentChartOptions = {\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n\n\n                            } else {\n\n                                var newLines = [];\n                                $scope.showY2Btns = false;\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function(line) {\n                                    line.push(NaN);\n                                });\n\n                                series[\"span-Y2\"] = {\n                                    axis: 'y2'\n                                };\n\n\n                                $scope.currentChartOptions = {\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            axisLabelFormatter: function(d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            axisLabelFormatter: function(d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n                            }\n                            $scope.loadingShow = false;\n                        }\n                    }\n\n\n                }\n            });\n\n\n        };\n\n        $scope.autoUpdateChart = updateDetailChart;\n\n        /**\n         * update range chart\n         * @param metadata\n         * @param store\n         * @param allData\n         */\n        var updateChart = function(metadata, store, allData, rangeTree) {\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {\n                left: deviceConfig.leftYAxis,\n                right: deviceConfig.rightYAxis\n            };\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{\n                min: null,\n                max: null\n            }, {\n                min: null,\n                max: null\n            }];\n            angular$1.forEach(collections, function(collection) {\n                if (collection.name == store) {\n                    $scope.currentIntervalName = store;\n                    angular$1.forEach(allData, function(line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    $scope.rangeSeriesNumber = collection.rows.length;\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function(row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {\n                                'axis': 'y1'\n                            };\n                        } else {\n                            series[row.label] = {\n                                'axis': 'y2'\n                            };\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function(realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    if ($scope.currentChart) {\n                        $scope.rangeData = allLines;\n                        var basicInfo = $scope.basicInfo;\n                        if (basicInfo && basicInfo.range_show) {\n                            var rangeBarLabels = [];\n                            for (var i = 0; i < labels.length; i++) {\n                                rangeBarLabels.push(\"l\" + i);\n                            }\n                            var series_range = {\n                                'l0': {\n                                    axis: 'y1'\n                                }\n                            };\n                            if (showY2axis) {\n                                //noinspection JSDuplicatedDeclaration\n                                series_range = {\n                                    'l0': {\n                                        axis: 'y1'\n                                    },\n                                    'l0': {\n                                        axis: 'y2'\n                                    }\n                                };\n                                $scope.rangeSeries = series_range;\n\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': allLines,\n                                    'labels': ['x'].concat(rangeBarLabels),\n                                    'series': series_range\n                                });\n                            } else {\n                                series_range[\"span_y2\"] = {\n                                    axis: 'y2'\n                                };\n                                $scope.showY2Btns = false;\n                                $scope.rangeSeries = series_range;\n                                var newLines = [];\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function(line) {\n                                    line.push(NaN);\n                                });\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': newLines,\n                                    'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                    'series': series_range\n                                });\n                                // save\n                            }\n\n\n                        }\n\n                        angular$1.forEach(yRanges, function(yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max) * 0.10;\n                            }\n                        });\n\n\n                        // if graph has 2 yAxis or a yAxis\n\n\n                        if (showY2axis) {\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: null,\n                                'labelsKMB': true,\n                                'file': allLines,\n                                'labels': ['x'].concat(labels),\n                                'ylabel': leftAndRight.left,\n                                'y2label': leftAndRight.right,\n\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {\n                                        valueRange: [yRanges[0].min, yRanges[0].max],\n                                        axisLabelWidth: 80\n                                    },\n                                    'y2': {\n                                        'labelsKMB': true,\n                                        valueRange: [yRanges[1].min, yRanges[1].max],\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        } else {\n                            series['span_y2'] = {\n                                axis: 'y2'\n                            };\n                            $scope.showY2Btns = false;\n                            var newLines = [];\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function(line) {\n                                line.push(NaN);\n                            });\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: null,\n                                'labelsKMB': true,\n                                'file': newLines,\n                                'labels': ['x'].concat(labels).concat(['span_y2']),\n                                'ylabel': leftAndRight.left,\n                                'y2label': \"\",\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {\n                                        valueRange: [yRanges[0].min, yRanges[0].max],\n                                        axisLabelWidth: 80\n                                    },\n                                    'y2': {\n                                        axisLabelFormatter: function(d) {\n                                            return '';\n                                        },\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        }\n\n\n                        if (basicInfo && basicInfo.range_show) {\n                            Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                zoom: true,\n                                selection: false,\n                                range: false\n                            });\n                        }\n\n\n                        if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                            // keep the current range bar refresh once.\n                            $scope.chartDateTime = {\n                                begin: $scope.chartDateTime.begin,\n                                end: $scope.chartDateTime.end\n                            };\n                            $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                        } else {\n\n                            $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            if (begin_path && end_path && !init_flag) {\n                                // $scope.chartDateTime = {\n                                // \"begin\": new Date(new Number(begin_path)),\n                                // \"end\": new Date(new Number(end_path))\n                                // };\n                                $scope.chartDateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                init_flag = true;\n                            } else {\n                                if ($scope.currentIntervalChoosed && ((allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= allLines[0][0].getTime())) {\n                                    $scope.rangeConfig.dateWindow = [new Date(allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval), allLines[allLines.length - 1][0]];\n                                } else {\n                                    $scope.chartDateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                    $scope.rangeConfig.dateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                }\n                            }\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n                        }\n                        //bind\n                        $scope.loadingShow = false;\n                    }\n\n                }\n            });\n        };\n\n        $scope.chartDateTime = {\n            begin: null,\n            end: null\n        };\n\n        // function for show one\n        $scope.showOne = function(deviceName) {\n\n            if ($rootScope['standalone'] && $rootScope['standalone'] == true) {\n                return false;\n            }\n\n\n            // device type is\n            if ($location.url().indexOf('/app/page/param/') != -1) {\n                //open window\n                $window.open(\"/#/app/page/param/\" + $rootScope.applicationName + \"/\" + metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1]));\n            } else {\n                //open window\n                $window.open(\"/#\" + $location.url().replace(\"show\", \"param\").replace($location.url().substr($location.url().lastIndexOf('/', $location.url().lastIndexOf('/') - 1) + 1), metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1])));\n            }\n\n        };\n\n\n        var btntimer = null;\n\n\n        $scope.btnZoomInVLeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVLeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomInVRight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVRight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVULeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVDLeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVURight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVDRight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        // functions for buttons\n        $scope.btnpanleft = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[0] - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0] - pan_delta;\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[1] - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1] - pan_delta;\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnpanright = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = $scope.chartDateWindow[0].getTime() + pan_delta;\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            } else {\n                if (($scope.chartDateWindow[0] + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = ($scope.chartDateWindow[0] + pan_delta);\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1].getTime() + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            } else {\n                if (($scope.chartDateWindow[1] + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1] + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        $scope.btnzoomin = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            startDate = rangeStart + (delta * 2);\n            endDate = rangeEnd - (delta * 2);\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            //\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnzoomout = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            if ((rangeStart - (delta * 2)) > panRange[0]) {\n                startDate = rangeStart - (delta * 2);\n            } else {\n                startDate = panRange[0];\n            }\n\n            if ((rangeEnd + (delta * 2)) < panRange[1]) {\n                endDate = rangeEnd + (delta * 2);\n            } else {\n                endDate = panRange[1];\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        var timer = null;\n        $scope.refersh = function(g, init) {\n            if (timer) {\n                $timeout.cancel(timer);\n            }\n            timer = $timeout(function() {\n                if (init || g.xAxisRange()[0] != $scope.chartDateTime.begin || g.xAxisRange()[1] != $scope.chartDateTime.end) {\n                    $scope.chartDateTime = {\n                        begin: g.xAxisRange()[0],\n                        end: g.xAxisRange()[1]\n                    };\n                    $scope.chartDateWindow = g.xAxisRange();\n                }\n            }, 600);\n        };\n    }\n\n};\n\n\nfgpWidgetGraph.buildFactory = function buildFactory ($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    fgpWidgetGraph.instance = new fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams);\n    return fgpWidgetGraph.instance;\n};\n\nfgpWidgetGraph\n    .$inject = ['$timeout', 'dataService', '$rootScope', '$interval', '$filter', '$location', '$stateParams'];\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPageTitle = function fgpWidgetPageTitle() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetPageTitle.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //drag-channel  item means this widget accepts items\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"\">' +\n        '<h1>{{css.title.text}}</h1>' +\n        '<h3>{{css.subtitle.text}}</h3>' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div>';\n    return dom_show;\n};\n\n\nfgpWidgetPageTitle.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"minHeight\"] = metadata.css.minHeight;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n        $scope.css[\"title\"] = metadata.css.title;\n        $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n        $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n        $scope.css[\"subtitle\"] = metadata.css.subtitle;\n        $scope.css[\"subtitle\"][\"color\"] = metadata.css.subtitle.color;\n        $scope.css[\"subtitle\"][\"show\"] = metadata.css.subtitle.show;\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"title\"].text + \"}\");\n            $scope.css[\"title\"].text = f(deviceData.device);\n            f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"subtitle\"].text + \"}\");\n            $scope.css[\"subtitle\"].text = f(deviceData.device);\n        });\n    }\n\n\n\n\n};\n\nfgpWidgetPageTitle.buildFactory = function buildFactory () {\n    fgpWidgetPageTitle.instance = new fgpWidgetPageTitle();\n    return fgpWidgetPageTitle.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetMap = function fgpWidgetMap() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetMap.prototype.template = function template (element, attrs) {\n    var dom_show = '<div class = \"{{css.width}}\" style=\"padding:0px;height:{{css.height}}px;\" map-lazy-load=\"https://maps.google.com/maps/api/js\">' +\n        '<ng-map style=\"height: 100%;width: 100%;\" center=\"{{center}}\" zoom=\"15\">' +\n        '<marker on-click=\"map.showInfoWindow(\\'info_' + attrs.id + '\\')\" id=\"marker_' + attrs.id + '\" ng-repeat=\"item in markers\" icon=\"{{item.image}}\" position=\"{{item.latitude}},{{item.longitude}}\" title=\"{{item.name}}\" animation=\"Animation.DROP\" ></marker>' +\n        '</ng-map>' +\n        '</div>' +\n        '';\n    return dom_show;\n};\n\n\nfgpWidgetMap.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n            var location = {};\n            $scope.markers = [];\n            $scope.details = $scope.$parent.device;\n\n\n            // show one point.\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { return \" + item.value + \";}\");\n                    var result = f(deviceData.device);\n                    if (result) {\n                        location[item.label] = result;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n                } catch (error) {\n                    // show image\n                    if (\"image\" == item.label) {\n                        location[item.label] = item.value;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n\n                }\n            });\n\n\n            //do not show\n            if (location.latitude == \"\" || location.longitude == \"\") {\n                //hard code. the location is Melbourne\n                location.latitude = \"-37.810000\";\n                location.longitude = \"144.950000\";\n                $scope.center = [location.latitude, location.longitude];\n                // $scope.markers.push(location);\n            } else {\n                $scope.center = [location.latitude, location.longitude];\n                $scope.markers.push(location);\n            }\n\n        });\n    }\n\n};\n\nfgpWidgetMap.buildFactory = function buildFactory () {\n    fgpWidgetMap.instance = new fgpWidgetMap();\n    return fgpWidgetMap.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetDeviceDetail = function fgpWidgetDeviceDetail() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetDeviceDetail.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '<div class=\"row\" ng-repeat=\"item in data\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"text-align: right; font-weight: bold;line-height: 30px;\">{{item.label}}</div><div class=\"col-xs-8 col-md-8\" style=\"text-align: left;line-height: 30px;\">{{item.value}}</div>' +\n        '</div>' +\n        '</div>' +\n        '<div id=\"detail_status_' + attrs.id + '\" class=\"row\" style=\"min-height: 50px;\">' +\n        '</div>' +\n        '</div>';\n};\n\n\nfgpWidgetDeviceDetail.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n\n            $scope.data = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = \"\";\n                    $scope.data.push(item);\n                }\n            });\n\n\n        });\n\n    }\n\n};\n\n\nfgpWidgetDeviceDetail.buildFactory = function buildFactory () {\n    fgpWidgetDeviceDetail.instance = new fgpWidgetDeviceDetail();\n    return fgpWidgetDeviceDetail.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetSpan = function fgpWidgetSpan() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetSpan.prototype.template = function template (scope, element) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '</div>';\n};\n\nfgpWidgetSpan.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n};\n\nfgpWidgetSpan.buildFactory = function buildFactory () {\n    fgpWidgetSpan.instance = new fgpWidgetSpan();\n    return fgpWidgetSpan.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPie = function fgpWidgetPie($timeout) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n};\n\n\nfgpWidgetPie.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" ><div style=\"height: {{css.height}}px;\">' +\n        '<canvas class=\"fgpPieChart\"></canvas>' +\n        '</div>' +\n        '</div>';\n};\n\nfgpWidgetPie.prototype.link = function link (scope, element) {\n\n    this.$timeout(function () {\n        var ctx = element.find(\"canvas\")[0];\n        scope.chart = new Chart(ctx, {\n            type: 'pie',\n            data: {\n                labels: ['1'],\n                datasets: [\n                    {\n                        data: [1],\n                        backgroundColor: []\n                    }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                animation: false,\n                legend: {display: true}\n            }\n        });\n    });\n};\n\n\nfgpWidgetPie.prototype.controller = function controller ($scope, $element, $timeout) {\n\n    var id = $element.attr(\"id\");\n    var metadata = null;\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n            $scope.showdata = widgetData.data;\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n            $scope.data = [];\n            var colors = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = item.value;\n                    $scope.data.push(item);\n                }\n                if (item.color) {\n                    colors.push(item.color);\n                } else {\n                    colors.push('#' + (function co(lor) {\n                            return (lor +=\n                                [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                            && (lor.length == 6) ? lor : co(lor);\n                        })(''));\n                }\n            });\n            // timeout\n            $scope.pieData = {labels: [], value: []};\n            $timeout(function () {\n                // create data\n                angular$1.forEach($scope.data, function (item) {\n                    $scope.pieData.labels.push(item.label);\n                    $scope.pieData.value.push(item.value);\n                });\n\n                $scope.chart.data.labels = $scope.pieData.labels;\n                $scope.chart.data.datasets[0].data = $scope.pieData.value;\n                $scope.chart.data.datasets[0].backgroundColor = colors;\n                // update chart\n                $scope.chart.update();\n            });\n\n        });\n\n\n    }\n\n\n};\n\nfgpWidgetPie.buildFactory = function buildFactory ($timeout) {\n    fgpWidgetPie.instance = new fgpWidgetPie($timeout);\n    return fgpWidgetPie.instance;\n};\nfgpWidgetPie.$inject = ['$timeout'];\n\n/**\n * Created by eric on 22/11/16.\n */\n\nvar fgpDockerButton = function fgpDockerButton() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\n\nfgpDockerButton.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"col-xs-12 btn-group\" role=\"group\" style=\"padding: 2px;\" aria-label=\"...\">' +\n        '<div style=\"float: right;\">' +\n        '<button type=\"button\" class=\"btn btn-{{button.color}} btn-xs\" ' +\n        ' ng-click=\"action(button)\" ng-repeat=\"button in buttons\" ng-show=\"checkShow(button)\"><i class=\"fa {{button.icon}}\"' +\n        ' aria-hidden=\"true\"></i>' +\n        '</button>' +\n        '</div>' +\n        '</div>';\n    return show_dom;\n};\n\n\nfgpDockerButton.prototype.controller = function controller ($scope, $element, $http, $timeout) {\n\n    $scope.stats = \"\";\n\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var confData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                confData = data.data;\n            }\n        }\n    });\n\n    var repeateId = [];\n\n    var pageDevice = null;\n    $scope.$on('deviceInfoEvent', function (event, data) {\n        pageDevice = data.device;\n    });\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n        if (data.application === repeateId[2] && data.container === repeateId[0] && data.host === repeateId[1]) {\n            $scope.stats = data.stats;\n        }\n    });\n\n    $scope.checkShow = function (button) {\n\n\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            return true;\n        }\n\n\n        if (button.type === \"stop\") {\n            if ($scope.stats === \"running\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"start\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"delete\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    // how many buttons?\n    $scope.buttons = [];\n\n    if ($scope.$parent.repeat) {\n        repeateId = $scope.$parent.repeat.split(\",\");\n    }\n\n    angular.forEach(configuration, function (item) {\n        if (item.label == \"buttons\") {\n            $scope.buttons = item.value;\n        }\n    });\n\n    $scope.healthinfo = \"\";\n\n\n    // submit \"action\" to rest api\n    $scope.action = function (button) {\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/exec',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    deviceName: pageDevice.name,\n                    deviceKey: pageDevice.key.id,\n                    relationship: 'node_application'\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        } else {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/hosts/action',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    container: repeateId[0],\n                    host: repeateId[1],\n                    application: repeateId[2]\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        }\n\n    };\n};\n\n\nfgpDockerButton.buildFactory = function buildFactory () {\n    fgpDockerButton.instance = new fgpDockerButton();\n    return fgpDockerButton.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetRepeatContainer = function fgpWidgetRepeatContainer($http) {\n    this.restrict = 'E';\n    this.scope = {};\n    this._$http = $http;\n};\n\nfgpWidgetRepeatContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{item.device.key.id}}\" ng-repeat=\"item in items\" emit-last-repeater-element style=\"padding-left: 2px; padding-right: 2px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding-left: 1px; padding-right: 1px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}};\"><i class=\"fa fa-desktop\" aria-hidden=\"true\" style=\"margin-right: 5px;\"></i>{{item.device.name}}</div>' +\n        '<div class=\"panel-body\"  style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\'}};\">' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" ng-repeat=\"item in items\" repeat-id=\"{{item.device.key.id}}\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;padding-left: 2px; padding-right: 2px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n};\n\nfgpWidgetRepeatContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout, $http, $location, $stateParams, $websocket) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    // all items\n    $scope.items = [];\n\n    $scope.labelstyle = [\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"];\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n\n    $scope.listStyle = \"list\";\n\n    $scope.labels = [];\n\n    var deviceType = $stateParams.type;\n    var deviceName = $stateParams.device;\n\n    if (metadata.data) {\n\n\n        $scope.labels = [];\n\n\n        if (metadata.data.datasource.labels) {\n            $scope.labels = metadata.data.datasource.labels.split(\" \");\n        }\n\n        if (metadata.data.datasource.style) {\n            $scope.listStyle = metadata.data.datasource.style;\n        }\n\n        // show different type\n        var relation = metadata.data.datasource.type;\n        $scope.items = [];\n        $http({\n            method: 'GET',\n            url: 'api/docker/repeat/' + deviceType + '/' + deviceName + '/' + relation\n        }).then(function (data) {\n            $scope.items = data.data;\n        }, function (error) {\n            console.error(error);\n        });\n\n        // I'm ready. please give all my children to me~\n        // call stage\n        $scope.$on('LastRepeaterElement', function () {\n            $timeout(function () {\n                $scope.$emit('bindChildRepeatEvent', {\n                    id: element_id\n                });\n            });\n        });\n\n\n    }\n    //establish a connection with websocket\n    var dataStream = $websocket('ws://' + $location.host() + \":\" + $location.port() + '/ws/hosts');\n    dataStream.onMessage(function (message) {\n        try {\n            var backData = JSON.parse(message.data);\n            if (backData.hasOwnProperty(\"container\")) {\n                // tell children\n                $scope.$parent.$broadcast('containerStatusEvent', backData);\n                // update health-check status\n                angular.forEach($scope.items, function (item) {\n                    if (backData.application == item.device.key.id) {\n                        if (backData.config.State.Health) {\n                            item[\"health\"] = backData.config.State.Health.Status;\n                        } else {\n                            item[\"health\"] = null;\n                        }\n\n                        if (backData.stats == \"exited\") {\n                            item[\"health\"] = null;\n                        }\n                    }\n                });\n            }\n        } catch (e) {\n        }\n    });\n\n    $scope.healthcheck = function (item) {\n        // call server and get the exception.\n        dataService.healthcheck(item.name, item.device.key.id);\n    };\n\n\n};\n\n\nfgpWidgetRepeatContainer.buildFactory = function buildFactory ($http) {\n    fgpWidgetRepeatContainer.instance = new fgpWidgetRepeatContainer($http);\n    return fgpWidgetRepeatContainer.instance;\n};\n\nfgpWidgetRepeatContainer.$inject = ['$http'];\n\n/**\n * Created by eric on 25/11/16.\n */\nvar fgpImage = function fgpImage() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpImage.prototype.template = function template (scope, element) {\n    return '' +\n        '<img src=\"{{url}}\" style=\"width:{{css.width}}px;height:{{css.height}}px;\">' +\n        '';\n};\n\nfgpImage.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"0\",\n        height: \"0\"\n    };\n\n    $scope.url = \"\";\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n    if($scope.showdata.metadata.data){\n        $scope.url = $scope.showdata.metadata.data.url;\n    }\n};\n\nfgpImage.buildFactory = function buildFactory () {\n    fgpImage.instance = new fgpImage();\n    return fgpImage.instance;\n};\n\n/**\n * Created by eric on 28/11/16.\n */\nvar fgpIcon = function fgpIcon() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpIcon.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"{{css.width}}\" style=\"margin-top: 10px;background-color: {{css.background.color}};border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"padding: 5px;\">' +\n        '<i class=\"fa fa-{{icon}}\" style=\"font-size: 60px;\"></i>' +\n        '</div>' +\n        '<div class=\"col-xs-8 col-md-8\">' +\n        '<div style=\"text-align: right;font-size: large;\"><label>{{title}}</label></div>' +\n        '<div style=\"text-align: right;font-size: small;\"><label>{{desc}}</label></div>' +\n        '</div>' +\n        '</div>' +\n        '';\n    return show_dom;\n};\n\nfgpIcon.prototype.controller = function controller ($scope, $element) {\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.icon = configuration.content.icon;\n\n    $scope.desc = configuration.content.desc;\n\n    $scope.title = \"\";\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + configuration.content.f + \"}\");\n            $scope.title = f(deviceData.device);\n        });\n\n    }\n\n};\n\n\nfgpIcon.buildFactory = function buildFactory () {\n    fgpIcon.instance = new fgpIcon();\n    return fgpIcon.instance;\n};\n\n/**\n * Created by eric on 29/11/16.\n */\nvar fgpWidgetAppContainer = function fgpWidgetAppContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetAppContainer.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //<div class=\"alert alert-info\" role=\"alert\">...</div>\n    return '' +\n        '<div ng-show=\"showstyle == \\'list\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-12 col-xs-12  alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px; text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n\n        '<div ng-show=\"showstyle == \\'grid\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-6 col-xs-6 alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px;text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n        '';\n};\n\nfgpWidgetAppContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.containers = [];\n    $scope.containerswithTimeout = [];\n    var metadata = widgetData.data.metadata;\n    // should be a host id\n    var repeat = $scope.$parent.repeat;\n\n    $scope.showstyle = \"list\";\n\n    $scope.host = repeat;\n\n\n    // I'm ready. please give all my children to me~\n    // call stage\n    $scope.$on('LastRepeaterElement', function () {\n        $timeout(function () {\n            $scope.$emit('bindChildRepeatEvent', {\n                id: element_id\n            });\n        });\n    });\n\n    $timeout(function () {\n        var pp = $scope.$emit('listStyleEvent', {\n            id: widgetData.data.parent,\n            callback: function (style) {\n                $scope.showstyle = style;\n            }\n        });\n\n    });\n\n    $scope.gotoContainer = function (container) {\n        // \"device type and device name\" display by a dynamic page!\n        console.info(container);\n        return false;\n    };\n\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n\n        if (data.host == repeat) {\n            //f\n            var labels = [];\n\n            if (metadata.data.datasource.labels) {\n                labels = metadata.data.datasource.labels.split(\" \");\n            }\n            var showLabel = \"\";\n            angular.forEach(labels, function (label) {\n                showLabel += data.config[label] + \" \";\n            });\n\n            var app = {\n                id: data.container,\n                label: showLabel,\n                application: data.application,\n                name: data.deviceName,\n                type: data.deviceType\n            };\n            var flag = false;\n            angular.forEach($scope.containers, function (container) {\n                if (container.id == app.id) {\n                    // update timer\n                    var timer_index = -1;\n                    var timer = $scope.containerswithTimeout.filter(function (item, index) {\n                        if(item.app.id == app.id){\n                            timer_index = index;\n                            return true;\n                        }else{\n                            false;\n                        }\n                    });\n                    $timeout.cancel(timer[0].t);\n                    if (data.stats != \"removed\") {\n                        var newTimer = $timeout(function () {\n                            var index = $scope.containers.indexOf(app);\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }, 30000);\n                        timer[0].t = newTimer;\n                        flag = true;\n                    } else {\n                        var index = -1;\n                        angular.forEach($scope.containers, function (item, itemIndex) {\n                            if (item.id === app.id) {\n                                index = itemIndex;\n                            }\n                        });\n                        if (index != -1 && timer_index != -1) {\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            flag = true;\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }\n                    }\n                }\n            });\n\n            if (!flag) {\n                // add to\n                $scope.containers.push(app);\n                // delete it after 30 seconds!\n                var t = $timeout(function () {\n                    var index = $scope.containers.indexOf(app);\n                    $scope.containers.splice(index, 1);\n                }, 30000);\n                $scope.containerswithTimeout.push({t: t, app: app});\n            }\n        }\n\n    });\n\n};\n\nfgpWidgetAppContainer.buildFactory = function buildFactory () {\n    fgpWidgetAppContainer.instance = new fgpWidgetAppContainer();\n    return fgpWidgetAppContainer.instance;\n};\n\nfgpWidgetAppContainer.$inject = [];\n\n/**\n * Created by ericwang on 21/06/2016.\n */\nvar fgpWidgetChartTable = function fgpWidgetChartTable() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetChartTable.prototype.template = function template (element, attrs) {\n    return '<div style=\"padding:0px;height: {{css.height}}px;position: relative; overflow-y : auto;\">' +\n        '<table st-table=\"rowCollection\" class=\"col-md-12 table table-striped\">' +\n        '<thead>' +\n        '<tr>' +\n        '<th ng-repeat=\"column in sampledata.columns\">{{column.label}}</th>' +\n        '</tr>' +\n        '</thead>' +\n        '<tbody>' +\n        '<tr ng-repeat=\"value in sampledata.values\">' +\n        '<td ng-repeat=\"col in sampledata.columns\">{{value[col.label] | tableformatter: value : col.label : col.formatter}}</td>' +\n        '</tr>' +\n        '</tbody>' +\n        '</table>' +\n        '</div>';\n};\n\nfgpWidgetChartTable.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    //show\n    $scope.showdata = widgetData.data;\n\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n\n\n    $scope.$on('chartDataChangeEvent', function (event, chartData) {\n        var chartId = chartData.id;\n        if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"device\") {\n            $scope.sampledata = {};\n            // make data\n            var collectionName = chartData.data.collection;\n            var groupName = chartData.group;\n            var columns = [];\n            //get group and collection configuration\n            angular$1.forEach($scope.showdata.metadata.data.groups, function (group) {\n                if (group.name == groupName) {\n                    angular$1.forEach(group.collections, function (collection) {\n                        if (collection.name === collectionName) {\n                            columns = collection.rows;\n                        }\n                    });\n                }\n            });\n\n\n            $scope.sampledata.columns = [];\n\n            angular$1.forEach(columns, function (column) {\n                $scope.sampledata.columns.push({label: column.label, formatter: column.formatter});\n            });\n            $scope.sampledata.values = [];\n            angular$1.forEach(columns, function (column) {\n                var f = new Function(\"data\", \"with(data) { if(\" + column.value + \") return \" + column.value + \";return '';}\");\n                angular$1.forEach(chartData.data.data, function (record, index) {\n                    if ($scope.sampledata.values.length < chartData.data.data.length) {\n                        //add new one\n                        var item = {};\n                        item[column.label] = f(record);\n                        $scope.sampledata.values.push(item);\n                    } else {\n                        $scope.sampledata.values[index][column.label] = f(record);\n                    }\n                });\n            });\n\n            var cleanData = [];\n            angular$1.forEach($scope.sampledata.values, function (value, index) {\n                var flag = false;\n                angular$1.forEach(columns, function (column) {\n                    if (value[column.label] && value[column.label] != \"\") {\n                        flag = true;\n                    }\n                });\n\n                if (flag) {\n                    cleanData.push(value);\n                }\n            });\n            $scope.sampledata.values = cleanData;\n\n        } else if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"relation\") {\n            //\n\n\n        }\n\n    });\n\n\n};\n\nfgpWidgetChartTable.buildFactory = function buildFactory () {\n    fgpWidgetChartTable.instance = new fgpWidgetChartTable();\n    return fgpWidgetChartTable.instance;\n};\n\n/**\n * Created by ericwang on 10/06/2016.\n */\n// angular module\nangular$1.module('fgp-kit', ['ngMap', 'ui.router', 'angular-cache']).service('dataService', dataAccessApi.buildFactory)\n    .filter('removeSlash', function() {\n        return function(input) {\n            if (input.startsWith(\"/\")) {\n                return input.substring(1, input.length);\n            }\n            return input;\n        }\n    })\n    .factory('$graphstorage', ['$window', function($window) {\n        return {\n            setTree: function(key, value) {\n                $window.localStorage[key] = JSON.stringify(value);\n            },\n            getTree: function(key) {\n                return JSON.parse($window.localStorage[key]) || false;\n            },\n            addTree: function(key, value) {\n                if ($window.localStorage[key]) {\n                    var trees = JSON.parse($window.localStorage[key]);\n                    trees.push(value);\n                    this.setTree(key, trees);\n                } else {\n                    this.setTree(key, [value]);\n                }\n            },\n            clear: function() {\n                $window.localStorage.clear();\n            }\n        }\n    }])\n    .directive('fgpContainer', fgpStage.buildFactory)\n    .directive('widgetContainer', fgpWidgetContainer.buildFactory)\n    .directive('widgetGraph', fgpWidgetGraph.buildFactory)\n    .directive('widgetPageTitle', fgpWidgetPageTitle.buildFactory)\n    .directive('widgetMap', fgpWidgetMap.buildFactory)\n    .directive('widgetStatus', fgpStage.buildFactory)\n    .directive('widgetDeviceDetail', fgpWidgetDeviceDetail.buildFactory)\n    .directive('widgetDeviceSpan', fgpWidgetSpan.buildFactory)\n    .directive('widgetPie', fgpWidgetPie.buildFactory)\n    .directive('widgetDockerButton', fgpDockerButton.buildFactory)\n    .directive('widgetRepeatContainer', fgpWidgetRepeatContainer.buildFactory)\n    .directive('widgetImage', fgpImage.buildFactory)\n    .directive('widgetIcon', fgpIcon.buildFactory)\n    .directive('widgetAppContainer', fgpWidgetAppContainer.buildFactory)\n    .directive('widgetChartTable', fgpWidgetChartTable.buildFactory)\n    .directive('emitLastRepeaterElement', [function() {\n        return function(scope) {\n            if (scope.$last) {\n                scope.$emit('LastRepeaterElement');\n            }\n        };\n    }]).config(function(CacheFactoryProvider) {\n        angular$1.extend(CacheFactoryProvider.defaults, {\n            maxAge: 30 * 60 * 1000, // half an hour\n            deleteOnExpire: 'aggressive',\n        });\n    }).service('graphDataService', function(CacheFactory) {\n        var graphCache = null;\n        if (!CacheFactory.get('graphCache')) {\n            graphCache = CacheFactory('graphCache',{\n                maxAge: 30 * 60 * 1000, // half an hour\n                deleteOnExpire: 'aggressive'\n            });\n        }\n        return {\n            get: function(name) {\n                return graphCache.get('/graph/'+name);\n            },\n            put: function(name, data) {\n                return graphCache.put('/graph/'+name, data);\n            }\n        };\n    })\n    .filter('tableformatter', ['$filter', function($filter) {\n        return function(input, obj, field, formatter) {\n            if (formatter) {\n                if (obj[field]) {\n                    if (\"date\" == formatter) {\n                        return $filter('date')(new Date(obj[field]), 'd/M/yy h:mm a');\n                    } else {\n                        return input;\n                    }\n                }\n            } else {\n                return input;\n            }\n        };\n    }]);\nvar index = 'fgp-kit';\n\nreturn index;\n\n})));\n\n//# sourceMappingURL=fgp.kit.bundle.js.map\n"],"sourceRoot":"/source/"}
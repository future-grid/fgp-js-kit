{"version":3,"sources":["fgp.kit.bundle.js"],"names":["global","factory","exports","module","require","define","amd","fgp_kit","angular","$","Dygraph","ngmap","chartJS","this","angular$1","chart_js","fgpStage","scope","applicationName","deviceName","server","configuration","scatterColors","standalone","interactions","replace","restrict","prototype","template","controller","$scope","$element","$timeout","$rootScope","$compile","dataService","$interval","showdata","length","setColors","graphBindingArray","findChild4Repeat","parentId","parentHtmlObj","arrayItems","newId","newScope","i","parent","currentItem","element","html_render","id","attr","repeat","find","append","findChild","$watch","newVal","oldVal","empty","$destroy","$new","$on","evt","msg","push","forEach","item","items","children","item_new","currentElement","groupItems","dulpItem","param","config","callback","metadata","data","datasource","style","key","from","sendDeviceData","graph","$broadcast","graphs","deviceInfo","then","device","buildFactory","instance","dataAccessApi","$http","$q","$cacheFactory","graphDataService","_$http","_$q","indexCache","deviceStores","_$interval","_$graphDataService","host","deviceKey","deferred","defer","url","ajaxSettings","async","ajax","type","contentType","success","types","Object","defineProperty","name","get","result","field","error","e","reject","console","log","message","resolve","promise","deviceInitInfo","application","storeSchema","rangeLevel","otherLevels","fields","params","concat","cache","response","childrenDeviceInitInfo","relationType","relationDeviceType","isSame","fillChildrenTree","buckets","tree","showData","value","flag","info","fillTree","size","calTree","start","end","filter","elem","devicesStoreData","store","interval","start_point","Date","getTime","devices","index","$graphDataService","method","JSON","stringify","deviceGraphData","newComeResult","end_point","deviceStoreData","needLoad","timestamp","sort","a","b","put","defaultColors","this$1","colors","co","lor","Math","floor","random","healthcheck","autoUpdateGraph","schema","count","fetcher","last","trees","frequency","timeKey","graphData","$inject","fgpWidgetContainer","attrs","hasOwnProperty","showTitle","element_id","dom_show","dom_show_notitle","widgetData","$emit","css","color","width","border","background","title","show","source","parse","fgpWidgetGraph","$filter","$location","$stateParams","_dataService","dom_loading","dom_legend","dom_empty_data","dom_alert_info","dom_datetime_interval","dom_series_list","dom_real_time_grap","html","link","status","timeOut","completionPercent","graphId","getData","numSeries","numRows","labels","initDate","j","val","sampleData","movePan","event","g","context","side","dragEndX","dragGetX_","dragEndY","dragGetY_","is2DPan","pixelsDragged","dragStartY","axis","axes_","axis_data","axes","unitsDragged","unitsPerPixel","boundedValue","boundedValues","maxValue","initialTopValue","min","minValue","dragValueRange","attributes_","getForAxis","valueWindow","pow","LOG_SCALE","valueRange","minDate","initialLeftmostDate","dragStartX","xUnitsPerPixel","boundedDates","max","maxDate","dateRange","zoomRange","xAxisZoomRange","getOptionForAxis","dateWindow_","drawGraph_","offsetToPercentage","offsetX","offsetY","xOffset","toDomCoords","xAxisRange","yar0","yAxisRange","yOffset","x","y","w","h","xPct","yPct","zoom","zoomInPercentage","xBias","yBias","direction","basicInfo","adjustAxis","bias","delta","increment","foo","yAxes","newYAxes","numAxes","ranges","range","newZoomRange","xAxisExtremes","updateOptions","dateWindow","canScroll","timer","mouseOverHandler","cancel","mouseEnterHandler","mouseOutHandler","scroll","normal","WheelEvent","detail","deltaY","wheelDelta","percentage","layerX","target","offsetLeft","layerY","offsetTop","percentages","plotter_","area","cancelEvent","chartDateWindow","firstPoint","mousedownHandler","initializeMouseDown","clientX","startPan","mousemoveHandler","isPanning","currentChart","mouseupHandler","endPan","interactionModel","mousewheel","DOMMouseScroll","wheel","mousedown","mousemove","mouseenter","mouseup","mouseout","drawGapEdgePoints","pointSize","legend","labelsKMB","labelsSeparateLines","drawPoints","drawAxesAtZero","labelsDivStyles","text-align","position","display","yRangePad","ylabel","xlabel","series","Device0","Device4","axisLabelWidth","y2","valueFormatter","moment","format","pointClickCallback","p","currentView","showOne","drawCallback","isInit","refersh","timer_auto","process_bar_timer","on","tempConifg","realTimeGraph","currentChartOptions","file","auto_device_name","auto_schema","auto_store","auto_fields","graph_data","worker","deviceConfig","auto_metadata","groups","collections","allLines","yRanges","collection","line","showY2axis","rows","row","label","yaxis","f","Function","counter","realLine","ex","yrange","newLines","copy","perInterval","showRealTimeGraph","modal","range_show","rangeSelectorBar","xAxisHeight","drawAxis","showRangeSelector","rangeSelectorHeight","finalDateRagne","chartDateTime","begin","finalDateRange","view","child","synchronize","selection","childrenChart","$window","elementId","emptyDataShow","alertMessage","showY2Btns","legendText","legendText_device","legendText_datetime","legendText_column","legendText_value","legendColor","autoupdate","defaultTimeIntervals","scales","dateTimeIntervals","locked_interval","lock","currentIntervalName","currentIntervalChoosed","_item","changeInterval","basic","checked","rangeConfig","loadingShow","intevals","height","begin_path","end_path","init_flag","fixInterval","noneFixed","fixGraphWithGap","currentInterval","fixed","tempDate","obj","labels_","file_","showOrHideDevice","childrenDevices","setVisibility","fixGraphWithGap_click","parent_container","data_from","checkY2Btns","deviceData","nObj","oObj","level","patt","RegExp","lines","columns","match","column","startsWith","initChart","relation","relation_group","initChildrenChart","newValue","scatter","oldValue","expect_points","expectedInterval","conf","preOne","lastOne","cin","limits","series_range","l0","rangeBarLabels","objNeed2Add","dataLength","tempObj","rangeSeries","points","connected","connectSeparatedPoints","currentStore","childTrees","arr","updateChildrenDetailChart","rangeChildrenData","updateDetailChart","rangeData","group","fetchData","values","node","array","Array","apply","slice","ordinalRangeData","intevalforshow","rangeTree","allData","first","newData","thePoint","endOf","toDate","updateChart","deviceDatas","devicesInfo","_index","deviceObj","updateChildrenChart","relationConfig","leftAndRight","left","leftYAxis","right","rightYAxis","allXLabels","yRange","toString","substr","originalData","odata","childrenRangeConfig","highlightSeriesOpts","strokeWidth","strokeBorderWidth","highlightCircleSize","y2label","highlightCallback","pts","seriesName","sn","point_show","xval","yval","point","canvasy","canvasx","legendbox","$apply","legendTop","legendLeft","unhighlightCallback","axisLabelFormatter","d","Number","newTime","tempData","tempTime","dateTime","indexOf","chartData","nt","timeTicket","lineData","autoUpdateChart","rangeSeriesNumber","open","lastIndexOf","btntimer","btnZoomInVLeft","btnZoomOutVLeft","btnZoomInVRight","btnZoomOutVRight","btnPanVULeft","btnPanVDLeft","btnPanVURight","btnPanVDRight","btnpanleft","panRange","pan_delta","startDate","endDate","btnpanright","btnzoomin","rangeStart","rangeEnd","btnzoomout","init","fgpWidgetPageTitle","minHeight","subtitle","text","fgpWidgetMap","location","markers","details","$parent","latitude","longitude","center","fgpWidgetDeviceDetail","fgpWidgetSpan","fgpWidgetPie","ctx","chart","Chart","datasets","backgroundColor","options","responsive","maintainAspectRatio","animation","pieData","update","fgpDockerButton","show_dom","stats","confData","repeateId","pageDevice","container","checkShow","button","shown","buttons","split","healthinfo","action","func","script","relationship","successCallback","errorCallback","fgpWidgetRepeatContainer","$websocket","labelstyle","listStyle","deviceType","dataStream","port","onMessage","backData","State","Health","Status","fgpImage","fgpIcon","icon","content","desc","fgpWidgetAppContainer","containers","containerswithTimeout","showstyle","pp","gotoContainer","showLabel","app","timer_index","t","newTimer","splice","itemIndex","fgpWidgetChartTable","chartId","sampledata","collectionName","groupName","formatter","record","cleanData","service","input","substring","setTree","localStorage","getTree","addTree","clear","directive","$last","CacheFactoryProvider","extend","defaults","maxAge","deleteOnExpire","CacheFactory","graphCache"],"mappings":"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","file":"fgp.kit.bundle.min.js","sourcesContent":["/**\n * fgp-kit\n * @version 1.0 - Homepage <http://www.future-grid.com.au>\n * @copyright (c) 2013-2016 Eric.Wang <flexdeviser@gmail.com>\n * @license Apache2. \n * @overview fgp.kit.js is a useful toolkit for future-grid's clients.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular'), require('jquery'), require('dygraphs'), require('ngmap'), require('chart.js')) :\n    typeof define === 'function' && define.amd ? define(['angular', 'jquery', 'dygraphs', 'ngmap', 'chart.js'], factory) :\n    (global.fgp_kit = factory(global.angular,global.$,global.Dygraph,global.ngmap,global.chartJS));\n}(this, (function (angular$1,$,Dygraph,ngmap,chart_js) {\n\nangular$1 = 'default' in angular$1 ? angular$1['default'] : angular$1;\n$ = 'default' in $ ? $['default'] : $;\nDygraph = 'default' in Dygraph ? Dygraph['default'] : Dygraph;\n\n/**\n * Created by ericwang on 10/06/2016.\n */\nvar fgpStage = function fgpStage() {\n    this.scope = {\n        applicationName: \"=\",\n        deviceName: \"=\",\n        server: \"=\",\n        configuration: '=',\n        scatterColors: \"=\",\n        standalone: \"=\",\n        interactions: \"=\"\n    };\n    this.replace = true;\n    this.restrict = 'A';\n};\n\nfgpStage.prototype.template = function template () {\n    return '<div id=\"pageStage\" class=\"wrapper col-md-12 col-xl-12\" style=\"background-color: #fff;height:100%;padding: 0px;\">' +\n        '</div>';\n};\n\nfgpStage.prototype.controller = function controller ($scope, $element, $timeout, $rootScope, $compile, dataService, $interval) {\n    $scope.showdata = {};\n\n    if ($scope.scatterColors && $scope.scatterColors.length > 0) {\n        dataService.setColors($scope.scatterColors);\n    }\n\n\n    $rootScope['applicationName'] = $scope.applicationName;\n    $rootScope['host'] = $scope.server;\n    $rootScope['device'] = $scope.deviceName;\n    $rootScope['standalone'] = $scope.standalone;\n\n\n    var graphBindingArray = [];\n\n\n    function findChild4Repeat(parentId, parentHtmlObj, arrayItems, newId,newScope) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n\n                newScope.showdata[id] = arrayItems[i];\n                if (parentHtmlObj.attr(\"repeat-id\")) {\n                    newScope.repeat = parentHtmlObj.attr(\"repeat-id\");\n                }\n                if (parentHtmlObj.find('#edit' + parentId).find(\"#\" + id).length == 0) {\n                    parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)(newScope));\n                }\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems,newScope);\n            }\n            else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                newScope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)(newScope));\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems,newScope);\n            }\n        }\n    }\n\n    function findChild(parentId, parentHtmlObj, arrayItems,newScope) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                newScope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)(newScope));\n                findChild(arrayItems[i].id, currentItem, arrayItems,newScope);\n            } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                newScope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)(newScope));\n                findChild(arrayItems[i].id, currentItem, arrayItems,newScope);\n            }\n        }\n    }\n\n    var newScope = null;\n    $scope.$watch('deviceName', function (newVal, oldVal) {\n        if(newVal){\n            $element.empty();\n            if(newScope){\n                newScope.$destroy();\n            }\n            newScope = $rootScope.$new(true);\n            newScope[\"showdata\"] = {};\n\n            newScope.$on('bindChildChartEvent', function (evt, msg) {\n                graphBindingArray.push(msg);\n            });\n\n            newScope[\"interactions\"] = $scope.interactions;\n\n            newScope.$on('bindChildRepeatEvent', function (evt, msg) {\n                angular$1.forEach($scope.configuration, function (item) {\n                    if (item.id == msg.id) {\n                        var items = angular$1.element(\"body\").find(\"#\" + item.id).children();\n                        angular$1.forEach(items, function (item_new) {\n                            newScope.showdata[item_new.id] = item;\n                            var currentElement = angular$1.element(item_new);\n                            if (currentElement.attr(\"dulp\")) {\n                                var groupItems = angular$1.element(\"body\").find(\"div[dulp='\" + item.id + \"']\");\n                                angular$1.forEach(groupItems, function (dulpItem) {\n                                    findChild4Repeat(item.id, angular$1.element(dulpItem), $scope.configuration, item_new.id,newScope);\n                                });\n                            }else{\n                                findChild4Repeat(item.id, currentElement, $scope.configuration, item_new.id,newScope);\n                            }\n                        });\n                    }\n                });\n            });\n\n            newScope.$on('listStyleEvent', function (evt, param) {\n                var config = newScope.showdata[param.id.replace(\"edit\", \"\")];\n                param.callback(config.metadata.data.datasource.style);\n            });\n\n\n            newScope.$on('fetchWidgetMetadataEvent', function (evt, msg) {\n                angular$1.forEach(newScope.showdata, function (metadata, key) {\n                    if (key == msg.id) {\n                        msg.callback({data: metadata, from: 'show'});\n                        return;\n                    }\n                });\n            });\n\n            // refersh\n            angular$1.forEach($scope.configuration, function (item) {\n                if ('workingArea' === item.parent) {\n                    var currentItem = angular$1.element(item.html_render);\n                    newScope.showdata[item.id] = item;\n                    $element.append($compile(currentItem)(newScope));\n                    findChild(item.id, currentItem, $scope.configuration,newScope);\n                }\n            });\n            /**\n             * get device information\n             */\n            if ($scope.deviceName && $scope.deviceName != \"\" && \"undefined\" != $scope.deviceName) {\n                // first time\n                sendDeviceData(newScope);\n            }\n            // all item created;\n            $timeout(function () {\n                angular$1.forEach(graphBindingArray, function (graph) {\n                    newScope.$broadcast('bindFatherGraphEvent', {parent: graph.graphs, children: graph.children});\n                });\n            });\n        }\n    });\n\n\n    var sendDeviceData = function (newScope) {\n            dataService.deviceInfo($scope.server, $scope.deviceName, null, $scope.applicationName).then(function (data) {\n                // send device info to all widget\n                $timeout(function () {\n                    newScope.$broadcast('deviceInfoEvent', {device: data, from: 'application'});\n                });\n            });\n    };\n};\nfgpStage.buildFactory = function buildFactory () {\n    fgpStage.instance = new fgpStage();\n    return fgpStage.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar dataAccessApi = function dataAccessApi($http, $q, $cacheFactory, $interval, graphDataService) {\n    this._$http = $http;\n    this._$q = $q;\n    // get cache\n    this.indexCache = $cacheFactory('indexCache');\n    this.deviceStores = $cacheFactory('deviceStores');\n    this._$interval = $interval;\n    this._$graphDataService = graphDataService;\n};\n\n\n/**\n * sync using JQuery\n * @param deviceName\n * @param deviceKey\n * @param applicationName\n * @returns {*}\n */\ndataAccessApi.prototype.deviceInfo = function deviceInfo (host, deviceName, deviceKey, applicationName) {\n    var deferred = this._$q.defer();\n    var url = host + \"/rest/api/\";\n\n    if (applicationName) {\n        url += \"app/\" + applicationName;\n    }\n\n    if (deviceName) {\n        url += '/devices/' + deviceName;\n    } else if (deviceKey) {\n        url += 'devices?key=' + deviceKey;\n    }\n\n    $.ajaxSettings.async = false;\n    $.ajax({\n        type: 'GET',\n        url: url,\n        contentType: \"application/json\",\n        success: function(data) {\n            var url = host + \"/rest/api/\";\n            if (applicationName) {\n                url += \"app/\" + applicationName + \"/devices/extension-types?device_type=\";\n            } else {\n                url += \"devices/extension-types?device_type=\";\n            }\n            $.ajaxSettings.async = false;\n            $.ajax({\n                type: 'GET',\n                url: url + data.type,\n                contentType: \"application/json\",\n                success: function(types) {\n                    angular$1.forEach(types, function(type) {\n                        Object.defineProperty(data, type.name, {\n                            get: function() {\n                                var result = null;\n                                var url = host + \"/rest/api/\";\n                                if (applicationName) {\n                                    url += \"app/\" + applicationName + \"/devices/extensions?device_name=\";\n                                } else {\n                                    url += \"devices/extensions?device_name=\";\n                                }\n                                $.ajaxSettings.async = false;\n                                $.ajax({\n                                    type: 'GET',\n                                    url: url + this.name + '&extension_type=' + type.name,\n                                    contentType: \"application/json\",\n                                    success: function(field) {\n                                        result = field;\n                                    },\n                                    error: function(e) {\n                                        deferred.reject(e);\n                                    }\n                                });\n                                return result;\n                            }\n                        });\n                    });\n                },\n                error: function(e) {\n                    console.log(e.message);\n                }\n            });\n\n            deferred.resolve(data);\n        },\n        error: function(e) {\n            deferred.reject(e);\n        }\n    });\n    return deferred.promise;\n};\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.deviceInitInfo = function deviceInitInfo (host, application, deviceKey, storeSchema, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            'otherLevels': otherLevels,\n            'fields': [].concat(fields)\n        },\n        cache: this.deviceStores\n    }).then(\n        function(response) {\n            deferred.resolve(response.data);\n        },\n        function(response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.childrenDeviceInitInfo = function childrenDeviceInitInfo (host, application, deviceKey, storeSchema, relationType, relationDeviceType, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/children/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            relationType: relationType,\n            relationDeviceType: relationDeviceType,\n            otherLevels: otherLevels,\n            fields: [].concat(fields),\n            isSame: true\n        },\n        cache: this.deviceStores\n    }).then(\n        function(response) {\n            deferred.resolve(response.data);\n        },\n        function(response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\ndataAccessApi.prototype.fillChildrenTree = function fillChildrenTree (buckets, tree, showData) {\n\n    if (tree.children[0] != null) {\n        fillChildrenTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillChildrenTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n\n        angular$1.forEach(buckets, function(value, key) {\n            if (key == tree.id && value != null) {\n                tree.data = value;\n                tree['size'] = value.length;\n\n                var flag = false;\n                angular$1.forEach(showData, function(data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        tree['size'] = value.length;\n                        flag = true;\n                    }\n                });\n\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n};\n\n\ndataAccessApi.prototype.fillTree = function fillTree (buckets, tree, showData) {\n    if (tree.children[0] != null) {\n        fillTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        angular$1.forEach(buckets, function(value, key) {\n            if (key == tree.id) {\n                tree.data = value;\n                tree['size'] = value.size;\n                var flag = false;\n                angular$1.forEach(showData, function(data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        data['size'] = tree.size;\n                        flag = true;\n                    }\n                });\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n\n};\n\ndataAccessApi.prototype.calTree = function calTree (buckets, tree, start, end) {\n    if (tree.children[0] != null) {\n        calTree(buckets, tree.children[0], start, end);\n    }\n\n    if (tree.children[1] != null) {\n        calTree(buckets, tree.children[1], start, end);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        // is overlap?\n        if (((start >= tree.start) && start < tree.end) ||\n            ((start > tree.start) && start <= tree.end) ||\n            ((tree.start >= start) && tree.start < end) ||\n            ((tree.start > start) && tree.start <= end)) {\n            if (buckets.filter(function(elem) {\n                    return elem.id == tree.id\n                }).length == 0) {\n                buckets.push(tree);\n            }\n        }\n    }\n};\n\n\n/**\n *\n * @param application\n * @param deviceInfo deviceKey and tree\n * @param storeSchema\n * @param store\n * @param start\n * @param end\n */\ndataAccessApi.prototype.devicesStoreData = function devicesStoreData (id, host, application, deviceInfo, storeSchema, store, start, end, fields, interval) {\n    var start_point = new Date().getTime();\n    if (!deviceInfo || deviceInfo.length == 0) {\n        return false;\n    }\n\n    var devices = \"[\";\n\n    deviceInfo.forEach(function(device, index) {\n        if (index < deviceInfo.length - 1) {\n            devices += \"\\\"\" + device.name + \"\\\",\";\n        } else {\n            devices += \"\\\"\" + device.name + \"\\\"]\";\n        }\n    });\n    //\n    var $graphDataService = this._$graphDataService;\n    // new way to get the data without tree index.\n    var deferred = this._$q.defer();\n    if (start instanceof Date) {\n        start = start.getTime();\n    }\n    if (end instanceof Date) {\n        end = end.getTime();\n    }\n    // send request to back-end // TODO: change it to post\n    this._$http({\n        method: 'POST',\n        url: host + '/rest/api/app/' + application + '/store/devices/store/data/' + storeSchema + '/' + store,\n        data: {\n            \"devices\": devices,\n            \"fields\": JSON.stringify(fields),\n            \"start\": start,\n            \"end\": end\n        }\n    }).then(\n        function(response) {\n            var result = {};\n            var data = response.data;\n            for (key in data) {\n                var deviceGraphData = $graphDataService.get(key + \"/\" + store + \"/\" + id) ? $graphDataService.get(key + \"/\" + store + \"/\" + id) : [];\n                var newComeResult = data[key].data;\n                // TODO: make all the lines in same x-axis timeseries\n                result[key] = newComeResult;\n            }\n            var end_point = new Date().getTime();\n            console.info((end_point - start_point) / 1000 + \"s\");\n            deferred.resolve(result);\n        },\n        function(response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\ndataAccessApi.prototype.deviceStoreData = function deviceStoreData (id, host, application, deviceKey, storeSchema, store, tree, start, end, fields, interval) {\n    //\n    var $graphDataService = this._$graphDataService;\n    // new way to get the data without tree index.\n    var deferred = this._$q.defer();\n    if (start instanceof Date) {\n        start = start.getTime();\n    }\n    if (end instanceof Date) {\n        end = end.getTime();\n    }\n    var needLoad = true;\n    // if ($graphDataService.get(deviceKey + \"/\" + store + \"/\" + id)) {\n    // //check data\n    // var data = $graphDataService.get(deviceKey + \"/\" + store + \"/\" + id);\n    // if (data) {\n    //     //\n    //     var temp_start = null;\n    //     var temp_end = null;\n    //     data.forEach(function(_item){\n    //         if(_item.timestamp >= end && temp_end == null){\n    //             temp_end = _item.timestamp;\n    //         }\n    //         if(_item.timestamp <= start){\n    //             temp_start =  _item.timestamp;\n    //         }\n    //\n    //     });\n    //     var checkLoad = false;\n    //     while (temp_start < temp_end) {\n    //         var _flag = false;\n    //         data.forEach(function(item) {\n    //             if (item.timestamp == temp_start) {\n    //                 _flag = true;\n    //             }\n    //         });\n    //         if (!_flag) {\n    //             // doesn`t exist\n    //             checkLoad = true;\n    //             break;\n    //         }\n    //         temp_start += interval;\n    //         console.info(temp_start);\n    //     }\n    //     if (!checkLoad) {\n    //         needLoad = false;\n    //     }\n    // }\n    // // }\n\n    if (!needLoad) {\n        // return data\n        deferred.resolve($graphDataService.get(deviceKey + \"/\" + store + \"/\" + id));\n    } else {\n        // send request to back-end\n        this._$http({\n            method: 'GET',\n            url: host + '/rest/api/app/' + application + '/store/devices/store/data/' + storeSchema + '/' + store + '?devices=[\"' + deviceKey + '\"]&fields=' + JSON.stringify(fields) + '&start=' + start + '&end=' + end\n        }).then(\n            function(response) {\n                // only return 1 device data\n                var deviceGraphData = $graphDataService.get(deviceKey + \"/\" + store + \"/\" + id) ? $graphDataService.get(deviceKey + \"/\" + store + \"/\" + id) : [];\n                var newComeResult = response.data[deviceKey].data;\n                newComeResult.forEach(function(item) {\n                    var flag = false;\n                    for (var i = 0; i < deviceGraphData.length; i++) {\n                        if (deviceGraphData[i].timestamp == item.timestamp) {\n                            deviceGraphData[i] = item;\n                            flag = true;\n                        }\n                    }\n                    if (!flag) {\n                        // add\n                        deviceGraphData.push(item);\n                    }\n                });\n                // order by timestamp\n                deviceGraphData.sort(function(a, b) {\n                    if (a.timestamp > b.timestamp) {\n                        return 1;\n                    } else if (a.timestamp < b.timestamp) {\n                        return -1;\n                    }\n                    return 0;\n                });\n                $graphDataService.put(deviceKey + \"/\" + store + \"/\" + id, deviceGraphData);\n                deferred.resolve(deviceGraphData);\n            },\n            function(response) {\n                deferred.reject(response.data);\n            }\n        );\n    }\n\n    return deferred.promise;\n};\n\ndataAccessApi.prototype.defaultColors = function defaultColors () {\n        var this$1 = this;\n\n    if (!this.colors) {\n        this['colors'] = [];\n        for (var i = 0; i < 300; i++) {\n            this$1.colors.push('#' + (function co(lor) {\n                return (lor += [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)]) &&\n                    (lor.length == 6) ? lor : co(lor);\n            })(''));\n        }\n    }\n    return this.colors;\n};\n\ndataAccessApi.prototype.setColors = function setColors (colors) {\n    this.colors = colors;\n};\n\n\n/**\n * device id\n * @param id\n */\ndataAccessApi.prototype.healthcheck = function healthcheck (application, id) {\n\n    if (id = null || id == \"\") {\n        return;\n    }\n    this._$http.get('/rest/api/app/' + application + '/docker/healthcheck/reports?id=' + id)\n        .success(function(response) {\n            console.info(response);\n            return response;\n        });\n\n\n};\n\n\ndataAccessApi.prototype.autoUpdateGraph = function autoUpdateGraph (application, device, schema, store, fields, count, callback) {\n    var _$interval = this._$interval;\n    var _$http = this._$http;\n    var fetcher = null;\n    this._$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n        .success(function(response) {\n            var last = -1;\n            var interval = -1;\n            if (response.trees && response.trees.length === 1) {\n                interval = response.trees[0].frequency;\n                last = response.trees[0].last.timeKey;\n            }\n            if (interval != -1) {\n                var start = last - (count * interval);\n                var end = last;\n                // first time\n                _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                    params: {\n                        \"devices\": JSON.stringify([device]),\n                        \"fields\": JSON.stringify(fields),\n                        \"start\": start,\n                        \"end\": end\n                    }\n                }).success(function(graphData) {\n\n                    // start task\n                    fetcher = _$interval(function() {\n                        _$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n                            .success(function(response) {\n                                if (response.trees && response.trees.length === 1) {\n                                    last = response.trees[0].last.timeKey;\n                                    start = last - (count * interval);\n                                    end = last;\n                                    _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                                        params: {\n                                            \"devices\": JSON.stringify([device]),\n                                            \"fields\": JSON.stringify(fields),\n                                            \"start\": start,\n                                            \"end\": end\n                                        }\n                                    }).success(function(graphData) {\n                                        // put the data back\n                                        callback(graphData[device], null, interval);\n                                    });\n                                }\n                            });\n                    }, interval);\n\n                    // put the data back\n                    callback(graphData[device], fetcher, interval);\n                });\n            }\n        });\n\n};\n\n\ndataAccessApi.buildFactory = function buildFactory ($http, $q, $cacheFactory, $interval, graphDataService) {\n    dataAccessApi.instance = new dataAccessApi($http, $q, $cacheFactory, $interval, graphDataService);\n    return dataAccessApi.instance;\n};\n\ndataAccessApi.$inject = ['$http', '$q', '$cacheFactory', '$interval', 'graphDataService'];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetContainer = function fgpWidgetContainer() {\n    this.restrict = 'E';\n    this.scope = {\n        interactions: \"=\"\n    };\n};\n\nfgpWidgetContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\" style=\"margin-top:10px;margin-bottom:10px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding: 0px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}}\">{{css.title.text}}</div>' +\n        '<div class=\"panel-body\" id=\"edit' + element_id + '\" style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '\" style=\"margin-top:2px;margin-bottom:2px;\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-top:10px;margin-bottom:10px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n\n};\n\nfgpWidgetContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n    if (metadata.data) {\n        $scope.data[\"source\"] = metadata.data.source;\n        if ($scope.data && $scope.data.source.device && $scope.data.source.device != -1) {\n\n            if ($scope.data.source.device) {\n                /**\n                 * get device information\n                 */\n                dataService.deviceInfo($rootScope.host, JSON.parse($scope.data.source.device).name, null, $rootScope.applicationName).then(function (data) {\n                    // send device info to all widget\n                    $timeout(function () {\n                        $rootScope.$broadcast('deviceInfoEvent', {device: data, from: element_id});\n                    });\n                });\n            }\n\n        }\n    }\n\n};\n\n\nfgpWidgetContainer.buildFactory = function buildFactory () {\n    fgpWidgetContainer.instance = new fgpWidgetContainer();\n    return fgpWidgetContainer.instance;\n};\n\nfgpWidgetContainer.$inject = [];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetGraph = function fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    this.restrict = 'E';\n    this.scope = {\n        interactions: \"=\"\n    };\n    this.$timeout = $timeout;\n    this._dataService = dataService;\n    this._$interval = $interval;\n};\n\nfgpWidgetGraph.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    if (flag) {\n        var dom_loading = '<div ng-show=\"loadingShow\" id=\"loading_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\">' +\n            '<div class=\"rect1\"></div>' +\n            '<div class=\"rect2\"></div>' +\n            '<div class=\"rect3\"></div>' +\n            '<div class=\"rect4\"></div>' +\n            '<div class=\"rect5\"></div>' +\n            '</div></div>';\n\n\n        var dom_legend = '<li>{{legendText_device}}</li><li>{{legendText_datetime}}</li><li><label style=\"color: {{legendColor}}\">{{legendText_column}}</label>:{{legendText_value}}</li>';\n\n        var dom_empty_data = '<div ng-show=\"emptyDataShow\" id=\"emptydata_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\" style=\"width: 100%;\">' +\n            '<h1>Empty Data!</h1>' +\n            '</div></div>';\n\n        var dom_alert_info = '<span class=\"label label-warning\" ng-show=\"alertMessage\" style=\"color: #000;\">{{alertMessage}}</span>';\n\n        var dom_datetime_interval = '<div ng-show=\"rangeSelectorBar\" class=\"dropdown\"> <button class=\"btn btn-info dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">{{currentIntervalChoosed.name}}<span class=\"caret\"></span></button> <ul class=\"dropdown-menu\" style=\"font-size:12px;\"><li ng-repeat=\"interval in dateTimeIntervals\"><a href=\"javascript:;\" ng-click=\"changeInterval(interval)\">{{interval.name}}</a></li></ul> </div>';\n\n\n        var dom_series_list = '<div ng-show=\"currentView === 1\" class=\"dropdown\"> <button class=\"btn btn-warning dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">Devices<span class=\"caret\"></span></button> <ul class=\"dropdown-menu\" style=\"font-size:12px;\"><li ng-repeat=\"device in childrenDevices\"><input type=\"checkbox\" ng-click=\"showOrHideDevice(device)\" ng-checked=\"device.show\"/>{{device.name}}</li></ul> </div>';\n\n\n        var dom_real_time_grap = '<div class=\"modal fade \" id=\"real_time_graph_' + attrs.id + '\" role=\"dialog\">' +\n            '<div class=\"modal-dialog modal-lg\">' +\n            '<div class=\"modal-content\">' +\n            '<div class=\"col-md-12\"  style=\"padding-top:3px;height: 1px;background-color: #0e90d2;\" ng-style=\"{ \\'width\\': completionPercent + \\'%\\' }\"></div>' +\n            '<div class=\"modal-body\" style=\"width: 100%;height: 300px;\">' +\n            '<div class=\"real-time-graph\" style=\"width: 100%;height: 100%\"></div>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>';\n\n        var html = '<div id=\"legendbox' + attrs.id + '\" ng-show=\"legendText\" ng-style=\"{top:legendTop,left:legendLeft}\" style=\"border-radius:10px;background-color:#ffffff;position: absolute;border: 1px solid {{legendColor}};-moz-box-shadow: 5px 5px 5px #888888;box-shadow: 5px 5px 5px #888888;z-index: 99999999;margin-right: 5px;\"><ul style=\"list-style: none;list-style-position: inside;text-align: right;\">' + dom_legend + '</ul></div><div class=\"{{css.width}}\"><div class=\"col-md-12\" style=\"padding:0px;height:{{css.height}}px;-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\"><div class=\"row\"><div class=\"col-md-12\"><a class=\"tooltips btn btn-xs btn-info badge\" href=\"javascript:;\" ng-hide=\"interactions.graphs.btns.scatter == \\'hide\\'\"  style=\"float: right;margin-right: 10px;\" ng-click=\"currentView = -currentView\"><i class=\"glyphicon glyphicon-transfer\"></i><span>Scatter View</span></a><a ng-show=\"autoupdate\" class=\"tooltips btn btn-xs btn-info badge\" style=\"float: right;margin-right: 10px;\" ng-click=\"showRealTimeGraph()\" data-toggle=\"modal\"><span>Auto Update</span><i class=\"glyphicon glyphicon-random\"></i></a><div style=\"float: right; margin-right: 10px;\">' + dom_series_list + '</div><div style=\"float: right; margin-right: 10px;\">' + dom_datetime_interval + '</div><div ng-hide=\"true\" class=\"checkbox\" style=\"float: right;margin-right: 10px; margin-bottom: 5px; margin-top: 0;\" ng-model=\"fixInterval\" ng-click=\"fixInterval=!fixInterval\"><label><input type=\"checkbox\" ng-model=\"fixInterval\" ng-clicked=\"fixInterval\" ng-change=\"fixGraphWithGap_click()\"/>fixed interval</label></div><div style=\"float: right; margin-right: 10px;\"><label class=\"label-inline\" ng-repeat=\"item in intevals.device\"><span class=\"badge\" style=\"background-color: {{ item.name == currentIntervalName ? (locked_interval.name == item.name ? \\'#e57432;\\':\\'#009900;\\') : (locked_interval.name == item.name ? \\'#e57432;\\':\\'\\') }}\" ng-click=\"lock(item)\">{{item.name}}</span></label></div><div style=\"float: right; margin-right: 10px;\">' + dom_alert_info + '</div></div></div><div style=\"position: relative;width: 100%;height:100%;\"><div style=\"position: absolute;left:25px;z-index: 999;\" ng-show=\"basicInfo.zoom\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVULeft()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDLeft()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVLeft()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVLeft()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div><div class=\"line-chart-graph\" style=\"width: 100%;height:100%;\"></div><div style=\"position: absolute;right:-15px;top:0px;z-index: 999;\" ng-show=\"checkY2Btns()\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVURight()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDRight()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVRight()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVRight()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div>' + dom_loading + dom_empty_data + '<div class=\"row\"><div class=\"col-md-12\" style=\"min-height: 30px;\"></div><div class=\"col-md-6\" style=\"text-align: left;\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[0] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-6\" style=\"text-align: right;\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[1] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-12\" style=\"min-height: 40px;position: relative\"><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;left: 20px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanleft()\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanright()\"><i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></div><div class=\"range-selector-bar\" style=\"height: 0px;margin-top: 30px;width: 100%;position: absolute;\"></div><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;right: -5px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomin()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomout()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div></div></div>' + dom_real_time_grap;\n\n        return html;\n    }\n};\n\nfgpWidgetGraph.prototype.link = function link (scope, element, attrs) {\n    scope['defaultColors'] = this._dataService.defaultColors();\n    var dataService = this._dataService;\n    var _$interval = this._$interval;\n    scope.status = true;\n    var timeOut = this.$timeout;\n    scope.completionPercent = 0;\n    scope.graphId = attrs.id;\n    this.$timeout(function() {\n        var getData = function(numSeries, numRows, name) {\n            var result = {\n                labels: null,\n                data: null\n            };\n            var data = [];\n            var labels = [];\n            //init date\n            var initDate = new Date(\"2014/01/01 00:00:00\");\n            for (var j = 0; j < numRows; ++j) {\n                data[j] = [new Date(initDate.getTime() + 900000)];\n                initDate = new Date(initDate.getTime() + 900000);\n            }\n            for (var i = 0; i < numSeries; ++i) {\n                labels.push(name + i);\n                var val = 0;\n                for (var j = 0; j < numRows; ++j) {\n                    val += Math.random() - 0.5;\n                    data[j][i + 1] = val;\n                }\n            }\n            result.labels = labels;\n            result.data = data;\n            return result;\n        };\n\n\n        var sampleData = getData(1, 10, 'Device');\n\n        function movePan(event, g, context, side) {\n\n            context.dragEndX = Dygraph.dragGetX_(event, context);\n            context.dragEndY = Dygraph.dragGetY_(event, context);\n\n\n            // y-axis scaling is automatic unless this is a full 2D pan.\n            if (context.is2DPan) {\n\n                var pixelsDragged = context.dragEndY - context.dragStartY;\n                // Adjust each axis appropriately.\n                if (side == \"r\") {\n                    var axis = g.axes_[0];\n                    var axis_data = context.axes[0];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[0] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 0)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else if (side == 'l') {\n                    var axis = g.axes_[1];\n                    var axis_data = context.axes[1];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[1] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 1)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else {\n                    var minDate = context.initialLeftmostDate -\n                        (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n                    if (context.boundedDates) {\n                        minDate = Math.max(minDate, context.boundedDates[0]);\n                    }\n                    var maxDate = minDate + context.dateRange;\n                    if (context.boundedDates) {\n                        if (maxDate > context.boundedDates[1]) {\n                            // Adjust minDate, and recompute maxDate.\n                            minDate = minDate - (maxDate - context.boundedDates[1]);\n                            maxDate = minDate + context.dateRange;\n                        }\n                    }\n                    var zoomRange = g.xAxisZoomRange;\n                    if (g.xAxisZoomRange[0] instanceof Date) {\n                        zoomRange[0] = g.xAxisZoomRange[0].getTime();\n                    }\n                    if (g.xAxisZoomRange[1] instanceof Date) {\n                        zoomRange[1] = g.xAxisZoomRange[1].getTime();\n                    }\n\n                    if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                        return;\n                    }\n\n                    if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                        g.dateWindow_ = [Math.pow(Dygraph.LOG_SCALE, minDate),\n                            Math.pow(Dygraph.LOG_SCALE, maxDate)\n                        ];\n                    } else {\n                        g.dateWindow_ = [minDate, maxDate];\n                    }\n                }\n            }\n            g.drawGraph_(false);\n        }\n\n\n        function offsetToPercentage(g, offsetX, offsetY) {\n            // This is calculating the pixel offset of the leftmost date.\n            var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n            var yar0 = g.yAxisRange(0);\n\n            // This is calculating the pixel of the higest value. (Top pixel)\n            var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n            // x y w and h are relative to the corner of the drawing area,\n            // so that the upper corner of the drawing area is (0, 0).\n            var x = offsetX - xOffset;\n            var y = offsetY - yOffset;\n\n            // This is computing the rightmost pixel, effectively defining the\n            // width.\n            var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n            // This is computing the lowest pixel, effectively defining the height.\n            var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n            // Percentage from the left.\n            var xPct = w == 0 ? 0 : (x / w);\n            // Percentage from the top.\n            var yPct = h == 0 ? 0 : (y / h);\n\n            // The (1-) part below changes it from \"% distance down from the top\"\n            // to \"% distance up from the bottom\".\n            return [xPct, (1 - yPct)];\n        }\n\n\n        function zoom(g, zoomInPercentage, xBias, yBias, direction, side) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n\n            function adjustAxis(axis, zoomInPercentage, bias) {\n                var delta = axis[1] - axis[0];\n                var increment = delta * zoomInPercentage;\n                var foo = [increment * bias, increment * (1 - bias)];\n                return [axis[0] + foo[0], axis[1] - foo[1]];\n            }\n\n            xBias = xBias || 0.5;\n            yBias = yBias || 0.5;\n            var yAxes = g.axes_;\n            var newYAxes = [];\n            for (var i = 0; i < g.numAxes(); i++) {\n                newYAxes[i] = adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n            }\n            if ('v' == direction) {\n                if ('l' == side) {\n                    yAxes[0]['valueRange'] = newYAxes[0];\n                    yAxes[0]['valueWindow'] = newYAxes[0];\n                } else if ('r' == side && g.numAxes() == 2) {\n                    yAxes[1]['valueRange'] = newYAxes[1];\n                    yAxes[1]['valueWindow'] = newYAxes[1];\n                }\n                g.drawGraph_(false);\n            } else {\n\n                var ranges = [];\n                angular$1.forEach(g.xAxisRange(), function(range) {\n                    if (range instanceof Date) {\n                        ranges.push(range.getTime());\n                    } else {\n                        ranges.push(range);\n                    }\n                });\n\n                var newZoomRange = adjustAxis(ranges, zoomInPercentage, xBias);\n                // do not bigger than range data\n                var zoomRange = [];\n                if (g.hasOwnProperty(\"xAxisZoomRange\") && g.xAxisZoomRange) {\n                    zoomRange[0] = g.xAxisZoomRange[0];\n                    zoomRange[1] = g.xAxisZoomRange[1];\n                } else {\n                    zoomRange[0] = g.xAxisExtremes()[0];\n                    zoomRange[1] = g.xAxisExtremes()[1];\n                }\n                if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] >= newZoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [zoomRange[0], newZoomRange[1]]\n                    });\n                } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [newZoomRange[0], zoomRange[1]]\n                    });\n                } else {\n                    g.updateOptions({\n                        dateWindow: newZoomRange\n                    });\n                }\n            }\n        }\n\n\n        var canScroll = false;\n\n        var timer = null;\n        var mouseOverHandler = function(e, g, context) {\n            //\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function() {\n                canScroll = true;\n            }, 1000);\n        };\n\n\n        var mouseEnterHandler = function(e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function() {\n                canScroll = true;\n            }, 1000);\n        };\n\n        var mouseOutHandler = function(e, g, context) {\n            // set flag to false\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            canScroll = false;\n        };\n\n        var scroll = function(e, g, context) {\n\n            if ((scope.basicInfo && !scope.basicInfo.zoom) || !canScroll) {\n                return;\n            }\n\n            var normal;\n\n            if (e instanceof WheelEvent) {\n                normal = e.detail ? e.detail * -1 : e.deltaY / 40;\n            } else {\n                normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n            }\n\n            // For me the normalized value shows 0.075 for one click. If I took\n            // that verbatim, it would be a 7.5%.\n            var percentage = normal / 50;\n\n            if (!(e.offsetX && e.offsetY)) {\n                e.offsetX = e.layerX - e.target.offsetLeft;\n                e.offsetY = e.layerY - e.target.offsetTop;\n            }\n            var percentages = offsetToPercentage(g, e.offsetX, e.offsetY);\n            var xPct = percentages[0];\n            var yPct = percentages[1];\n            //\n            if (e.offsetX <= (g.plotter_.area.x)) {\n                // console.info(\"v\", \"l\")\n                // left zoom\n                zoom(g, percentage, xPct, yPct, 'v', 'l');\n            } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                // right zoom\n                // console.info(\"v\", \"r\")\n                zoom(g, percentage, xPct, yPct, 'v', 'r');\n            } else {\n                // middle zoom\n                // console.info(\"h\")\n                zoom(g, percentage, xPct, yPct, 'h', null);\n            }\n            Dygraph.cancelEvent(e);\n            timeOut(function() {\n                scope.chartDateWindow = g.xAxisRange();\n            });\n        };\n\n        var firstPoint = null;\n        var mousedownHandler = function(e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            context.initializeMouseDown(e, g, context);\n            firstPoint = e.clientX;\n            Dygraph.startPan(e, g, context);\n        };\n        var mousemoveHandler = function(e, g, context) {\n            if (context.isPanning) {\n                if (e.offsetX <= (g.plotter_.area.x)) {\n                    movePan(e, g, context, 'r');\n                } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                    movePan(e, g, context, 'l');\n                } else {\n                    movePan(e, g, context, 'h');\n                }\n                timeOut(function() {\n                    scope.chartDateWindow = scope.currentChart.xAxisRange();\n                });\n            }\n        };\n\n        var mouseupHandler = function(e, g, context) {\n            if (context.isPanning) {\n                Dygraph.endPan(e, g, context);\n            }\n\n            canScroll = true;\n        };\n\n        var interactionModel = {\n            'mousewheel': scroll,\n            'DOMMouseScroll': scroll,\n            'wheel': scroll,\n            'mousedown': mousedownHandler,\n            'mousemove': mousemoveHandler,\n            'mouseenter': mouseEnterHandler,\n            'mouseup': mouseupHandler,\n            // 'mouseover': mouseOverHandler,\n            'mouseout': mouseOutHandler\n        };\n\n\n        //init configuration\n        var configuration = {\n            drawGapEdgePoints: true,\n            'pointSize': 3,\n            legend: 'follow',\n            labelsKMB: true,\n            labelsSeparateLines: true,\n            // data formate\n            labels: ['x'].concat(sampleData.labels),\n            // highlightSeriesOpts: {\n            // strokeWidth: 2,\n            // strokeBorderWidth: 1,\n            // highlightCircleSize: 2\n            // },\n            drawPoints: false,\n            drawAxesAtZero: false,\n            labelsDivStyles: {\n                'text-align': 'right',\n                'position': 'relative',\n                'display': 'inline-block'\n            },\n            yRangePad: 10,\n            // x label y label\n            ylabel: 'Value',\n            xlabel: 'Date',\n            colors: scope.defaultColors,\n            // multiple Y axis\n            series: {\n                'Device0': {\n                    axis: 'y2'\n                },\n                'Device4': {\n                    axis: 'y2'\n                }\n            },\n            // showRangeSelector: true,\n            axes: {\n                y: {\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                y2: {\n                    // set axis-related properties here\n                    'labelsKMB': true,\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                x: {\n                    // datetime format\n                    valueFormatter: function(y) {\n                        return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                    }\n                }\n            },\n            pointClickCallback: function(e, p) {\n                if (scope.currentView != -1) {\n                    scope.showOne(p.name);\n                }\n            },\n            drawCallback: function(g, isInit) {\n                if (scope.refersh) { // make sure \"scope.refersh\" doesn't call when the graph create first time.\n                    scope.refersh(g, isInit);\n                }\n            },\n            'interactionModel': interactionModel\n        };\n        scope.currentChart = new Dygraph(element.find(\"div[class='line-chart-graph']\")[0], sampleData.data, configuration);\n        element.find(\"canvas\").css(\"zIndex\", 99);\n\n        var timer_auto = null;\n        var process_bar_timer = null;\n        element.find(\"#real_time_graph_\" + attrs.id).on(\"hidden.bs.modal\", function() {\n            // put your default event here\n            _$interval.cancel(timer_auto);\n            _$interval.cancel(process_bar_timer);\n        });\n\n\n        //real-time-graph\n        element.find(\"#real_time_graph_\" + attrs.id).on('shown.bs.modal', function() {\n\n            var tempConifg = {\n                drawGapEdgePoints: true,\n                'pointSize': 3,\n                labelsKMB: true,\n                labelsSeparateLines: false,\n                drawPoints: false,\n                drawAxesAtZero: false,\n                labelsDivStyles: {\n                    'text-align': 'right',\n                    'position': 'relative',\n                    'display': 'inline-block'\n                },\n                // x label y label\n                ylabel: 'Value',\n                xlabel: 'Date',\n                colors: scope.defaultColors,\n                // multiple Y axis\n                series: {\n                    'Device0': {\n                        axis: 'y2'\n                    },\n                    'Device4': {\n                        axis: 'y2'\n                    }\n                },\n                // showRangeSelector: true,\n                axes: {\n                    y: {\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    y2: {\n                        // set axis-related properties here\n                        'labelsKMB': true,\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    x: {\n                        // datetime format\n                        valueFormatter: function(y) {\n                            return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                        }\n                    }\n                },\n                interactionModel: {}\n            };\n\n            scope.realTimeGraph = new Dygraph(element.find(\"div[class='real-time-graph']\")[0], sampleData.data, tempConifg);\n            scope.realTimeGraph.updateOptions(scope.currentChartOptions);\n            scope.realTimeGraph.updateOptions({\n                \"file\": []\n            });\n\n            timer_auto = dataService.autoUpdateGraph(scope.applicationName, scope.auto_device_name, scope.auto_schema, scope.auto_store, scope.auto_fields, element.find(\"div[class='real-time-graph']\").width() / 4, function(graph_data, worker, interval) {\n                // update graph\n                var deviceConfig = scope.auto_metadata.data.groups[1];\n                var collections = deviceConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var allLines = [];\n                //0 for y  1 for y2\n                var yRanges = [{\n                    min: null,\n                    max: null\n                }, {\n                    min: null,\n                    max: null\n                }];\n                angular$1.forEach(collections, function(collection) {\n                    if (collection.name == scope.auto_store) {\n                        angular$1.forEach(graph_data.data, function(line) {\n                            allLines.push([new Date(line.timestamp)]);\n                        });\n\n                        var showY2axis = false;\n                        angular$1.forEach(collection.rows, function(row) {\n                            labels.push(row.label);\n                            colors.push(row.color);\n\n                            if (row.yaxis == 0) {\n                                series[row.label] = {\n                                    'axis': 'y1'\n                                };\n                            } else {\n                                series[row.label] = {\n                                    'axis': 'y2'\n                                };\n                                showY2axis = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                            // add value\n                            var counter = 0;\n                            angular$1.forEach(allLines, function(realLine) {\n                                try {\n                                    var value = f(graph_data.data[counter]);\n                                    realLine.push(value);\n                                    if (row.yaxis == 0) {\n                                        if (yRanges[0].min == null) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max == null) {\n                                            yRanges[0].max = value;\n                                        }\n\n                                        if (yRanges[0].min > value) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max < value) {\n                                            yRanges[0].max = value;\n                                        }\n                                    } else {\n                                        if (yRanges[1].min == null) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max == null) {\n                                            yRanges[1].max = value;\n                                        }\n\n                                        if (yRanges[1].min > value) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max < value) {\n                                            yRanges[1].max = value;\n                                        }\n                                    }\n                                } catch (ex) {\n                                    realLine.push(null);\n                                }\n                                counter++;\n                            });\n\n                        });\n\n                        angular$1.forEach(yRanges, function(yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.min) * 0.10;\n                            } else {\n                                yrange.min = yrange.min - (yrange.max - yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max - yrange.min) * 0.10;\n                            }\n                        });\n\n                        var newLines = [];\n                        if (!showY2axis) {\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function(line) {\n                                line.push(null);\n                            });\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: newLines,\n                                axes: {\n                                    y: {\n                                        valueRange: [yRanges[0].min, yRanges[0].max]\n                                    },\n                                    y2: {\n                                        valueRange: [yRanges[1].min, yRanges[1].max]\n                                    }\n                                }\n                            });\n                        } else {\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: allLines,\n                                axes: {\n                                    y: {\n                                        valueRange: [yRanges[0].min, yRanges[0].max]\n                                    },\n                                    y2: {\n                                        valueRange: [yRanges[1].min, yRanges[1].max]\n                                    }\n                                }\n                            });\n                        }\n                    }\n                });\n                if (worker) {\n                    timer_auto = worker;\n                }\n\n\n                //\n                var perInterval = interval / 100;\n                var counter = 0;\n\n                if (process_bar_timer) {\n                    _$interval.cancel(process_bar_timer);\n                    counter = 0;\n                }\n\n                process_bar_timer = _$interval(function() {\n                    scope.completionPercent = counter;\n                    counter++;\n                }, perInterval, 100);\n\n\n            });\n        });\n\n\n        scope.currentChartOptions = {};\n\n        scope.showRealTimeGraph = function() {\n            element.find(\"#real_time_graph_\" + attrs.id).modal();\n        };\n\n\n        if (attrs.hasOwnProperty(\"shown\")) {\n\n\n            var basicInfo = scope.basicInfo;\n            if (basicInfo && basicInfo.range_show) {\n                scope.rangeSelectorBar = new Dygraph(element.find(\"div[class='range-selector-bar']\")[0], sampleData.data, {\n                    xAxisHeight: 0,\n                    axes: {\n                        x: {\n                            drawAxis: false\n                        }\n                    },\n                    showRangeSelector: true,\n                    rangeSelectorHeight: 30\n                });\n                scope.chartDateWindow = scope.rangeSelectorBar.xAxisRange();\n            }\n\n\n            var status = false;\n            // add mouse up event to range select\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mouseup', function(event) {\n                status = false;\n                timeOut(function() {\n                    var finalDateRagne = scope.currentChart.xAxisRange();\n                    scope.chartDateTime = {\n                        begin: finalDateRagne[0],\n                        end: finalDateRagne[1]\n                    };\n                });\n            });\n\n            scope.$on('mouseUpMessage', function($scope, e) {\n                if (\"mouseup\" === e.type && status) {\n                    status = false;\n                    timeOut(function() {\n                        var finalDateRange = scope.currentChart.xAxisRange();\n                        scope.chartDateTime = {\n                            begin: finalDateRange[0],\n                            end: finalDateRange[1]\n                        };\n                    });\n                }\n            });\n\n            scope.$on('parentScatterViewChangedEvent', function(event, params) {\n                angular$1.forEach(params.children, function(item) {\n                    if (item == attrs.id) {\n                        scope.currentView = params.view;\n                    }\n                });\n            });\n\n\n            scope.$on('bindFatherGraphEvent', function(event, data) {\n                angular$1.forEach(data.children, function(child) {\n                    if (child == attrs.id) {\n                        Dygraph.synchronize([scope.currentChart].concat(data.parent), {\n                            zoom: true,\n                            selection: false,\n                            range: false\n                        });\n                        scope.currentChart.updateOptions({\n                            drawCallback: function(g, isInit) {\n                                // console.info(\"refersh running!\" + \" is  Init?\"+ isInit);\n                                scope.refersh(g, isInit);\n                            }\n                        });\n\n                    }\n                });\n\n\n            });\n\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousemove', function(event) {\n                if (status) {\n                    timeOut(function() {\n                        scope.chartDateWindow = scope.currentChart.xAxisRange();\n                    });\n                }\n            });\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousedown', function(event) {\n                status = true;\n            });\n\n            //bind chart\n            if (basicInfo && basicInfo.childrenChart.length > 0) {\n                var param = {\n                    'graphs': [scope.currentChart],\n                    children: basicInfo.childrenChart\n                };\n                if (scope.rangeSelectorBar) {\n                    param.graphs.push(scope.rangeSelectorBar);\n                }\n                scope.$emit('bindChildChartEvent', param);\n            }\n        }\n    }, 0);\n};\n\n//controller: ['$scope', '$element', '$window', '$interval', '$timeout', '$filter', '$location', function ($scope, $element, $window, $interval, $timeout, $filter, $location) {\nfgpWidgetGraph.prototype.controller = function controller ($scope, $element, $window, $interval, $timeout, $filter, $location, dataService, $rootScope, $stateParams, graphDataService) {\n    var element_id = $element.attr(\"id\");\n    $scope.elementId = element_id;\n\n    $scope['defaultColors'] = dataService.defaultColors();\n    var metadata = null;\n    var widgetData = null;\n    $scope.emptyDataShow = false;\n    // attributes----------------------\n    $scope.applicationName = $rootScope.applicationName;\n\n    $scope.alertMessage;\n\n    $scope.showY2Btns = false;\n\n    $scope.legendText = null;\n    $scope.legendText_device = null;\n    $scope.legendText_datetime = null;\n    $scope.legendText_column = null;\n    $scope.legendText_value = null;\n    $scope.legendColor = null;\n    $scope.autoupdate = false;\n    $scope.auto_device_name = \"\";\n    $scope.auto_schema = \"\";\n    $scope.auto_store = \"\";\n    $scope.auto_fields = [];\n    // default data-time intervals\n\n    $scope.defaultTimeIntervals = [{\n            name: \"10 seconds\",\n            interval: 10000\n        },\n        {\n            name: \"30 seconds\",\n            interval: 30000,\n            scales: [10000]\n        },\n        {\n            name: \"1 minutes\",\n            interval: 60000,\n            scales: [10000, 30000]\n        },\n        {\n            name: \"5 minutes\",\n            interval: 300000,\n            scales: [30000, 60000]\n        },\n        {\n            name: \"30 minutes\",\n            interval: 1800000,\n            scales: [60000, 300000]\n        }, {\n            name: \"1 hour\",\n            interval: 3600000,\n            scales: [60000, 300000, 1800000]\n        }, {\n            name: \"1 day\",\n            interval: 86400000,\n            scales: [300000, 1800000, 3600000]\n        }, {\n            name: \"1 week\",\n            interval: 604800017,\n            scales: [3600000, 86400000]\n        }, {\n            name: \"1 month\",\n            interval: 2629800000,\n            scales: [86400000, 604800017]\n        }, {\n            name: \"1 year\",\n            interval: 31557600000,\n            scales: [2629800000]\n        }\n    ];\n\n    $scope.dateTimeIntervals = [].concat($scope.defaultTimeIntervals);\n\n    $scope.locked_interval = null;\n    // lock interval\n    $scope.lock = function(interval) {\n        if ($scope.locked_interval) {\n            if ($scope.locked_interval == interval) {\n                $scope.locked_interval = null; // unlocked\n                if(!$scope.dateTimeIntervals){\n                    $scope.dateTimeIntervals = [].concat($scope.defaultTimeIntervals);\n                }\n                // change default choosed interval\n                $scope.currentIntervalName = $scope.dateTimeIntervals[0].name;\n                $scope.currentIntervalChoosed = $scope.dateTimeIntervals[0];\n            } else {\n                $scope.locked_interval = interval; // locked\n                // change color\n                // change dropdown list\n                $scope.defaultTimeIntervals.forEach(function(item) {\n                    //\n                    if (item[\"scales\"] && item[\"scales\"].length > 0) {\n                        item[\"scales\"].forEach(function(_item) {\n                            if (_item == interval.interval) {\n                                //\n                                $scope.dateTimeIntervals.push(item);\n                            }\n                        });\n                    }\n\n                });\n\n                $scope.currentIntervalName = $scope.dateTimeIntervals[0].name;\n                $scope.currentIntervalChoosed = $scope.dateTimeIntervals[0];\n            }\n        } else {\n            $scope.locked_interval = interval;\n            // change color\n\n            // change dropdown list\n            // check the user default config first\n            if($scope.dateTimeIntervals){\n\n            }else{\n                $scope.defaultTimeIntervals.forEach(function(item) {\n                    //\n                    if (item[\"scales\"] && item[\"scales\"].length > 0) {\n                        item[\"scales\"].forEach(function(_item) {\n                            if (_item == interval.interval) {\n                                //\n                                $scope.dateTimeIntervals.push(item);\n                            }\n                        });\n                    }\n\n                });\n            }\n\n\n            $scope.currentIntervalName = $scope.dateTimeIntervals[0].name;\n            $scope.currentIntervalChoosed = $scope.dateTimeIntervals[0];\n        }\n        // change\n        $scope.changeInterval($scope.currentIntervalChoosed);\n    };\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id,\n        callback: function(data) {\n            if (data) {\n                widgetData = data;\n                if (widgetData.data.metadata.data.basic.ranges) {\n                    if (widgetData.data.metadata.data.basic.hasOwnProperty(\"ranges\")) {\n                        $scope.dateTimeIntervals = widgetData.data.metadata.data.basic.ranges;\n                        angular$1.forEach($scope.dateTimeIntervals, function(range) {\n                            range[\"interval\"] = range.value;\n                            if (range.checked == true) {\n                                $scope.currentIntervalChoosed = range;\n                            }\n                        });\n                    }\n                } else {\n                    $scope.currentIntervalChoosed = $scope.dateTimeIntervals[1];\n                }\n            }\n        }\n    });\n\n\n    $scope.changeInterval = function(interval) {\n\n        var range = $scope.currentChart[\"xAxisZoomRange\"];\n\n        if (range[0] instanceof Date) {\n            range[0] = range[0].getTime();\n        }\n\n        if (range[1] instanceof Date) {\n            range[1] = range[1].getTime();\n        }\n\n        if (interval && ((range[1] - interval.interval) >= range[0])) {\n            $scope.rangeConfig.dateWindow = [new Date(range[1] - interval.interval), range[1]];\n            $scope.currentChart.updateOptions($scope.rangeConfig);\n            $scope.currentIntervalChoosed = interval;\n        }\n    };\n\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.loadingShow = false;\n\n        $scope.intevals = {\n            device: []\n        };\n\n\n        // update chart\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if (widgetData.data.metadata.css) {\n            $scope.css = widgetData.data.metadata.css;\n        }\n\n        // get start and end from url\n        var begin_path = $stateParams.begin;\n        var end_path = $stateParams.end;\n        var init_flag = false;\n\n\n        //fix interval\n        $scope.fixInterval = false;\n        var noneFixed = [];\n        $scope.fixGraphWithGap = function() {\n            if ($scope.currentChart && $scope.fixInterval) {\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function(item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(null);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({\n                        file: fixed\n                    });\n                }\n            } else if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                $scope.currentChart.updateOptions({\n                    file: noneFixed\n                });\n            }\n\n        };\n\n\n        $scope.showOrHideDevice = function(device) {\n            angular$1.forEach($scope.childrenDevices, function(item, index) {\n                if (item.name === device.name) {\n                    var graph = $scope.currentChart;\n\n                    if (device.show == true) {\n                        graph.setVisibility(index, false);\n                        device.show = false;\n                    } else {\n                        graph.setVisibility(index, true);\n                        device.show = true;\n                    }\n\n                }\n            });\n        };\n\n        $scope.fixGraphWithGap_click = function() {\n            if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function(item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(null);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({\n                        file: fixed\n                    });\n                }\n            } else if ($scope.currentChart && $scope.fixInterval) {\n                $scope.currentChart.updateOptions({\n                    file: noneFixed\n                });\n            }\n\n        };\n\n\n        metadata = widgetData.data.metadata;\n        $scope.basicInfo = metadata.data.basic;\n        $scope.currentView = -1; // -1 is device view and 1 is scatter view\n\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.data_from = \"application\";\n\n        $scope.checkY2Btns = function() {\n            return $scope.basicInfo.zoom === true && $scope.showY2Btns === true;\n        };\n\n        $scope.$on('deviceInfoEvent', function(event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            $scope.auto_schema = metadata.data.source.store;\n            $scope.auto_metadata = metadata;\n            $scope.auto_device_name = deviceData.device.name;\n\n            $scope.$watch('currentView', function(nObj, oObj) {\n                // change\n                if (nObj != oObj) {\n                    $scope.$emit('graphScatterViewChangeEvent', {\n                        children: $scope.basicInfo.childrenChart,\n                        view: nObj\n                    });\n                    if (nObj == -1) {\n                        $scope.autoupdate = true;\n                        var rangeLevel = null;\n                        var otherLevels = [];\n                        angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                            if (level.rows.length > 0) {\n                                if (rangeLevel != null) {\n                                    otherLevels.push(rangeLevel);\n                                }\n                                rangeLevel = level.name;\n                            }\n                        });\n                        if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                            // show device view\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                            angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                                if (level.rows.length > 0 && level.name === rangeLevel) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function(line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function(column) {\n                                                    if (column.startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n                            $scope.auto_fields = fields;\n                            dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function(data) {\n                                initChart(data, deviceData.device.name);\n                            }, function(error) {\n                                console.error(error);\n                            });\n                        }\n\n                    } else {\n                        $scope.autoupdate = false;\n                        //get relation config\n                        if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                            return;\n                        } else {\n                            var rangeLevel = null;\n                            var otherLevels = [];\n                            angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                                if (level.rows.length > 0) {\n                                    if (rangeLevel != null) {\n                                        otherLevels.push(rangeLevel);\n                                    }\n                                    rangeLevel = level.name;\n                                }\n                            });\n                            if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                                    if (level.rows.length > 0 && level.name === rangeLevel) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function(line) {\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function(column) {\n                                                        if (column.startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n                                                }\n                                            });\n                                        }\n                                    }\n                                });\n                                $scope.auto_fields = fields;\n                                // show children view\n                                dataService.childrenDeviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, metadata.data.source.relation, metadata.data.source.relation_group, rangeLevel, otherLevels, fields).then(function(data) {\n                                    // get all device trees\n                                    if (data != null && data.length > 0) {\n                                        initChildrenChart(data);\n                                    } else {\n                                        return;\n                                    }\n\n                                }, function(error) {\n                                    console.error(error);\n                                });\n\n                            }\n                        }\n                    }\n                }\n                $scope.fixInterval = false;\n\n            });\n            // first time of showing chart\n            $scope.$watch('currentChart', function(newValue) {\n                if (newValue) {\n                    //device first level\n                    var rangeLevel = null;\n                    var otherLevels = [];\n                    angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                        if (level.rows.length > 0) {\n                            if (rangeLevel != null) {\n                                otherLevels.push(rangeLevel);\n                            }\n                            rangeLevel = level.name;\n                        }\n                    });\n\n                    // fields of range level\n                    var fields = [];\n                    var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                    angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                        if (level.rows.length > 0 && level.name === rangeLevel) {\n                            var lines = level.rows;\n                            if (lines) {\n                                angular$1.forEach(lines, function(line) {\n                                    //\n                                    if (line.value) {\n                                        var columns = (line.value).match(patt);\n                                        angular$1.forEach(columns, function(column) {\n                                            if ((column).startsWith('data.')) {\n                                                fields.push(column.replace('data.', ''));\n                                            }\n                                        });\n                                    }\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.auto_fields = fields;\n                    //send a rest request\n                    dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function(data) {\n                        if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.scatter) {\n                            //call scatter view init.\n                            $scope.currentView = 1;\n                        } else {\n                            $scope.currentView = -1;\n                            initChart(data, deviceData.device.name);\n                        }\n\n                    }, function(error) {\n                        console.error(error);\n                    });\n                }\n            });\n            $scope.$watch(\"chartDateTime\", function(newValue, oldValue) {\n                if (newValue.begin != null && newValue.end != null) {\n                    var expect_points = Math.floor($element.parent().width());\n                    // find a interval\n                    var expectedInterval = (newValue.end - newValue.begin) / expect_points;\n                    if ($scope.locked_interval) {\n                        expectedInterval = $scope.locked_interval.interval;\n                    }\n                    var conf = $scope.intevals.device;\n                    // device detail view\n                    var preOne = conf[0].interval;\n                    var lastOne = conf[conf.length - 1].interval;\n                    var cin = \"\";\n                    if (expectedInterval >= preOne) {\n                        expectedInterval = preOne;\n                        $scope.autoupdate = false;\n                    } else if (expectedInterval <= lastOne) {\n                        expectedInterval = lastOne;\n\n\n                        if ($scope.currentView == -1) {\n                            $scope.autoupdate = true;\n                            $scope.auto_store = conf[conf.length - 1].name;\n                        }\n\n\n                    } else {\n                        for (var i = 1; i < conf.length; i++) {\n                            if (expectedInterval <= preOne && expectedInterval > conf[i].interval) {\n                                expectedInterval = preOne;\n                            } else {\n                                preOne = conf[i].interval;\n                                cin = conf[i].name;\n                            }\n                        }\n                        $scope.autoupdate = false;\n                    }\n\n                    $scope.currentIntervalName = \"\";\n\n                    angular$1.forEach(conf, function(config) {\n                        if (config.interval == expectedInterval) {\n                            $scope.currentIntervalName = config.name;\n                        }\n                    });\n\n                    // check the interval(data) no more than the number of expected points\n                    if (expectedInterval == lastOne) {\n\n                        // check\n                        if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.limits) {\n                            expect_points = $scope['interactions'].graphs.limits;\n                        }\n                        //\n                        if (((newValue.end - newValue.begin) / expectedInterval) > expect_points) {\n                            // reset range bar\n                            $scope.rangeConfig.dateWindow = [new Date(newValue.end - (expect_points - 1) * expectedInterval), new Date(newValue.end)];\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n                            $scope.alertMessage = \"Limit the number of \\\"Zoom-Out\\\" points to \" + expect_points + \".\";\n                            $timeout(function() {\n                                $scope.alertMessage = null;\n                            }, 5000);\n                            return;\n                        }\n                    }\n\n                    // update range-bar\n                    if ($scope.rangeSelectorBar) {\n                        angular$1.forEach($scope.trees, function(tree) {\n                            if (tree.range == true) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                                    if (level.rows.length > 0 && level.name === tree.store) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function(line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function(column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n\n                                                }\n\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                dataService.deviceStoreData($scope.graphId, $rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, new Date(newValue.begin).getTime(), new Date(newValue.end).getTime(), fields, expectedInterval).then(function(data) {\n                                        // udpate chart\n                                        var showData = data;\n                                        showData = showData.filter(function(obj) {\n                                            return obj != null;\n                                        });\n\n                                        // update range bar\n                                        var basicInfo = $scope.basicInfo;\n                                        var allLines = [];\n                                        angular$1.forEach(showData, function(line) {\n                                            allLines.push([new Date(line.timestamp)]);\n                                        });\n                                        var series_range = {\n                                            'l0': {\n                                                axis: 'y1'\n                                            }\n                                        };\n\n                                        var rangeBarLabels = [];\n                                        for (var i = 0; i < fields.length; i++) {\n                                            rangeBarLabels.push(fields[i]);\n\n                                            var f = new Function(\"data\", \"with(data) { if(data.\" + fields[i] + \"!=null)return data.\" + fields[i] + \";return null;}\");\n                                            // add value\n                                            var counter = 0;\n                                            angular$1.forEach(allLines, function(realLine) {\n                                                try {\n                                                    var value = f(showData[counter]);\n                                                    realLine.push(value);\n                                                } catch (ex) {\n                                                    realLine.push(null);\n                                                }\n                                                counter++;\n                                            });\n                                        }\n                                        //\n\n                                        if ($scope.rangeConfig && $scope.rangeConfig.file && $scope.rangeConfig.file != null) {\n                                            var objNeed2Add = [];\n                                            angular$1.forEach($scope.rangeConfig.file, function(item) {\n                                                var flag = false;\n                                                var dataLength = -1;\n                                                angular$1.forEach(allLines, function(line) {\n                                                    dataLength = line.length;\n                                                    if (line.length > 0 && line[0].getTime() === item[0].getTime()) {\n                                                        flag = true;\n                                                    } else if (line.length === 0) {\n                                                        flag = true;\n                                                    } else {\n                                                        dataLength = line.length;\n                                                    }\n\n                                                });\n                                                if (!flag) {\n                                                    var tempObj = [];\n                                                    for (var i = 0; i < dataLength; i++) {\n                                                        tempObj[i] = item[i];\n                                                    }\n                                                    objNeed2Add.push(tempObj);\n                                                }\n                                            });\n                                        }\n                                        allLines = allLines.concat(objNeed2Add);\n                                        allLines.sort(function(a, b) {\n                                            return a[0] > b[0] ? 1 : -1;\n                                        });\n                                        if ($scope.showY2Btns) {\n                                            //noinspection JSDuplicatedDeclaration\n                                            if (!$scope.rangeConfig.axes.hasOwnProperty(\"y2\")) {\n                                                series_range = {\n                                                    'l0': {\n                                                        axis: 'y1'\n                                                    },\n                                                    'l0': {\n                                                        axis: 'y2'\n                                                    }\n                                                };\n                                                $scope.rangeSeries = series_range;\n                                                $scope.rangeConfig = {\n                                                    'file': allLines,\n                                                    'labels': ['x'].concat(rangeBarLabels),\n                                                    'series': series_range\n                                                };\n                                                if (basicInfo && basicInfo.range_show) {\n                                                    $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                                }\n                                            }else{\n                                                $scope.rangeSelectorBar.updateOptions({'file':allLines});\n                                            }\n\n                                        } else {\n                                            series_range[\"span_y2\"] = {\n                                                axis: 'y2'\n                                            };\n                                            $scope.rangeSeries = series_range;\n                                            var newLines = [];\n                                            angular$1.copy(allLines, newLines);\n                                            angular$1.forEach(newLines, function(line) {\n                                                line.push(null);\n                                            });\n                                            $scope.rangeConfig = {\n                                                'file': newLines,\n                                                'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                                'series': series_range\n                                            };\n                                            if (basicInfo && basicInfo.range_show) {\n                                                $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                            }\n                                        }\n                                    },\n                                    function(data) {\n                                        console.info(data);\n                                    }\n                                );\n                            }\n                        });\n                    }\n\n\n                    $scope.loadingShow = true;\n                    // check separated points config\n                    if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                        $scope.currentChart.updateOptions({\n                            connectSeparatedPoints: true\n                        });\n                    } else {\n                        $scope.currentChart.updateOptions({\n                            connectSeparatedPoints: false\n                        });\n                    }\n\n                    if ($scope.currentView == 1) {\n                        // scatter detail view\n                        if (expectedInterval == conf[0].interval && conf.length > 1) {\n                            $scope.currentChart.updateOptions({\n                                dateWindow: $scope.chartDateWindow\n                            });\n                            $scope.loadingShow = false;\n                        } else {\n                            $scope.legendText = null;\n                            var deviceInfo = [];\n                            var currentStore = \"\";\n\n                            $scope.childrenDevices = [];\n                            // has problem....\n                            angular$1.forEach($scope.childTrees, function(device) {\n                                angular$1.forEach(device.trees, function(tree, index) {\n                                    if (device.trees.length > 1) {\n                                        if (expectedInterval == tree.frequency && index != 0) {\n                                            currentStore = tree.store;\n                                            deviceInfo.push({\n                                                name: device.name,\n                                                tree: tree.tree\n                                            });\n                                            device[\"show\"] = true;\n                                            $scope.childrenDevices.push(device);\n                                        }\n                                    } else {\n                                        if (expectedInterval == tree.frequency) {\n                                            currentStore = tree.store;\n                                            deviceInfo.push({\n                                                name: device.name,\n                                                tree: tree.tree\n                                            });\n                                            device[\"show\"] = true;\n                                            $scope.childrenDevices.push(device);\n                                        }\n                                    }\n\n                                });\n                            });\n\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                            angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                                if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function(line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function(column) {\n                                                    if (column && (column).startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n\n                            $scope.auto_fields = fields;\n                            dataService.devicesStoreData($scope.graphId, $rootScope.host, $rootScope.applicationName, deviceInfo, metadata.data.source.store, currentStore, new Date(newValue.begin).getTime(), new Date(newValue.end).getTime(), fields, expectedInterval).then(function(data) {\n                                var showData = [];\n                                angular$1.forEach(data, function(arr, key) {\n                                    var deviceData = [].concat(arr);\n                                    showData.push({\n                                        device: key,\n                                        data: deviceData\n                                    });\n                                });\n                                //get configuration\n                                updateChildrenDetailChart(metadata, currentStore, $scope.rangeChildrenData, showData);\n\n                            }, function(data) {\n                                console.info(data);\n                            });\n                        }\n                        $scope.fixGraphWithGap();\n                    } else {\n                        // cal tree\n                        angular$1.forEach($scope.trees, function(tree, index) {\n                            if (expectedInterval == tree.frequency) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                                    if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function(line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function(column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n\n                                                }\n\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                dataService.deviceStoreData($scope.graphId, $rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, new Date(newValue.begin).getTime(), new Date(newValue.end).getTime(), fields, tree.frequency).then(function(data) {\n                                    // udpate chart\n                                    var showData = data;\n                                    showData = showData.filter(function(obj) {\n                                        return obj != null;\n                                    });\n                                    showData.sort(function(a, b) {\n                                        return a.timestamp > b.timestamp ? 1 : -1;\n                                    });\n                                    //get configuration\n                                    updateDetailChart(metadata, tree.store, $scope.rangeData, showData);\n\n                                    // tell some other widgets, the graph is changed.\n                                    $timeout(function() {\n                                        $rootScope.$broadcast('chartDataChangeEvent', {\n                                            'id': element_id,\n                                            'group': 'device',\n                                            'data': {\n                                                'collection': tree.store,\n                                                'group': 'device',\n                                                'data': showData\n                                            }\n                                        });\n                                    });\n\n                                }, function(data) {\n                                    console.info(data);\n                                });\n                            }\n                        });\n\n                        $scope.fixGraphWithGap();\n                    }\n                    $scope.status = false;\n                }\n            });\n\n        });\n\n\n        var fetchData = function(values, node) {\n            if (node.children[0] != null) {\n                fetchData(values, node.children[0]);\n            }\n\n            if (node.children[1] != null) {\n                fetchData(values, node.children[1]);\n            }\n\n            if (node.children[0] == null && node.children[1] == null) {\n                if (node.data != null && node.data.array) {\n                    Array.prototype.push.apply(values, node.data.array.slice(0, node.data.size));\n                } else if (node.data != null) {\n                    Array.prototype.push.apply(values, node.data.slice(0, node.data.length));\n                }\n\n            }\n\n        };\n\n\n        $scope.trees = [];\n        $scope.rangeData = [];\n\n        $scope.ordinalRangeData = [];\n\n        var initChart = function(data, deviceName) {\n            $scope.intevalforshow = [];\n            //\n            $scope.intevals.device = [];\n            var trees = data.trees;\n            $scope.trees = trees;\n            var rangeTree = null;\n            angular$1.forEach(trees, function(tree) {\n                if (tree.range) {\n                    rangeTree = tree;\n                }\n                $scope.intevals.device.push({\n                    name: tree.store,\n                    interval: tree.frequency\n                });\n            });\n\n\n            // init chart with range data\n            var store = rangeTree.store;\n\n            // get all data\n            var allData = [];\n            // fetchData(allData, rangeTree.tree);only get first and last\n            // fix the problem of never seen the current data.\n            rangeTree.last.timestamp = rangeTree.last.timestamp + (rangeTree.frequency - 1);\n            allData = allData.concat([rangeTree.first, rangeTree.last]);\n\n            allData = allData.filter(function(obj) {\n                return obj != null;\n            });\n\n            allData.sort(function(a, b) {\n                return a.timestamp > b.timestamp ? 1 : -1;\n            });\n\n\n            if ($scope.trees.length == 0 || allData.length == 0) {\n                $scope.emptyDataShow = true;\n                return;\n            }\n\n            // if the data only has one point. change the data range to bigger\n            if (allData.length == 1) { //  means only one point.\n                var newData = [];\n                // add 1 points into both side\n                var thePoint = allData[0];\n                var timestamp = thePoint.timestamp;\n                var currentInterval = $scope.intevals.device[0].interval;\n                newData.push({\n                    timestamp: timestamp - currentInterval\n                });\n                Array.prototype.push.apply(newData, allData);\n                newData.push({\n                    timestamp: timestamp + currentInterval\n                });\n                allData = newData;\n            }\n            $scope.ordinalRangeData = allData;\n            // put the data into range tree cache\n            if (rangeTree) {\n                //\n                graphDataService.put(deviceName + \"/\" + rangeTree.store + \"/\" + $scope.graphId, [rangeTree.first, {\n                    timestamp: moment().endOf('day').toDate().getTime()\n                }]);\n            }\n            // get configuration and make real data\n            updateChart(metadata, store, allData, rangeTree);\n        };\n\n        var initChildrenChart = function(deviceDatas) {\n            var devicesInfo = {};\n            $scope.intevals.device = [];\n            //range data with all device\n            $scope.childTrees = [];\n            $scope.childrenDevices = [];\n\n            angular$1.forEach(deviceDatas, function(deviceData, _index) {\n                var device = deviceData.device;\n                device[\"show\"] = true;\n                $scope.childrenDevices.push(device);\n                var trees = deviceData.trees;\n                $scope.childTrees.push({\n                    name: device.name,\n                    trees: trees\n                });\n                var rangeTree = null;\n                angular$1.forEach(trees, function(tree) {\n                    if (tree.range) {\n                        rangeTree = tree;\n                    }\n\n                    var flag = false;\n                    angular$1.forEach($scope.intevals.device, function(interval) {\n                        if (interval.name == tree.store && interval.interval == tree.frequency) {\n                            // has same one\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        $scope.intevals.device.push({\n                            name: tree.store,\n                            interval: tree.frequency\n                        });\n                    }\n\n                });\n\n                if (rangeTree != null) {\n                    var deviceObj = devicesInfo[device.name] = {};\n                    // get all data\n                    var allData = [rangeTree.first, {\n                        timestamp: moment().endOf('day').toDate().getTime()\n                    }];\n                    allData = allData.filter(function(obj) {\n                        return obj != null;\n                    });\n                    allData.sort(function(a, b) {\n                        return a.timestamp > b.timestamp ? 1 : -1;\n                    });\n                    //\n                    deviceObj[\"range\"] = rangeTree;\n                    deviceObj[\"data\"] = allData;\n                } else {\n                    console.info(device.name + \" has none data.\");\n                }\n\n            });\n\n\n\n\n\n            updateChildrenChart(metadata, devicesInfo);\n        };\n\n\n        var updateChildrenChart = function(metadata, devicesInfo) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {\n                left: relationConfig.leftYAxis,\n                right: relationConfig.rightYAxis\n            };\n            var allLines = [];\n            var allXLabels = [];\n            angular$1.forEach(devicesInfo, function(device, key, _index) {\n                angular$1.forEach(device.data, function(item) {\n                    var flag = false;\n                    angular$1.forEach(allXLabels, function(label) {\n                        if (label.getTime() == item.timestamp) {\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        allXLabels.push(new Date(item.timestamp));\n                    }\n                });\n            });\n            // order\n            allXLabels.sort(function(a, b) {\n                return a > b ? 1 : -1;\n            });\n\n            // make all line\n            angular$1.forEach(allXLabels, function(label) {\n                allLines.push([label]);\n            });\n\n            var yRange = {\n                min: null,\n                max: null\n            };\n            var showY2axis = false;\n            var counter = 0;\n            angular$1.forEach(devicesInfo, function(device, key) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                angular$1.forEach(collections, function(collection) {\n                    if (collection.name == device.range.store) {\n                        $scope.currentIntervalName = device.range.store;\n                        var originalData = device.data;\n\n                        // always same for each device\n                        if (collection.rows[0].yaxis == 0) {\n                            series[collection.rows[0].label] = {\n                                'axis': 'y1'\n                            };\n                        } else {\n                            series[collection.rows[0].label] = {\n                                'axis': 'y2'\n                            };\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        labels.push(key);\n                        // make a line\n                        var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                        // add value\n                        angular$1.forEach(allLines, function(realLine, index) {\n\n                            var flag = false;\n                            angular$1.forEach(originalData, function(odata) {\n                                if (realLine[0].getTime() == odata.timestamp) {\n                                    try {\n                                        var value = f(odata);\n                                        realLine.push(value);\n                                        if (yRange.min == null) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max == null) {\n                                            yRange.max = value;\n                                        }\n\n                                        if (yRange.min > value) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max < value) {\n                                            yRange.max = value;\n                                        }\n                                    } catch (ex) {\n                                        realLine.push(null);\n                                    }\n                                    flag = true;\n                                }\n                            });\n\n                            if (!flag) {\n                                realLine.push(null);\n                            }\n                        });\n\n\n                    }\n                });\n            });\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n            var connectSeparatedPoints = false;\n            if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                connectSeparatedPoints = true; //'connectSeparatedPoints': connectSeparatedPoints,\n            }\n\n            //update chart\n            if ($scope.currentChart) {\n                $scope.rangeChildrenData = allLines;\n\n                if (showY2axis) {\n                    $scope.childrenRangeConfig = {\n                        'connectSeparatedPoints': connectSeparatedPoints,\n                        'labelsKMB': true,\n                        'file': allLines,\n                        legend: 'never',\n                        labelsKMB: true,\n                        labelsSeparateLines: false,\n                        // data formate\n                        labels: ['x'].concat(sampleData.labels),\n                        highlightSeriesOpts: {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        'labels': ['x'].concat(labels),\n                        'ylabel': leftAndRight.left,\n                        'y2label': leftAndRight.right,\n                        'series': series,\n                        'colors': colors,\n                        highlightCallback: function(e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            angular$1.forEach(series, function(value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {\n                                x: 0,\n                                y: 0\n                            };\n                            angular$1.forEach(pts, function(item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function(point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n                            var legendbox = angular$1.element(\"#legendbox\" + element_id);\n\n\n                            $scope.$apply(function() {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n\n                        },\n\n                        unhighlightCallback: function(e) {\n                            $scope.$apply(function() {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'axes': {\n                            'y': {\n                                valueRange: [yRange.min, yRange.max],\n                                axisLabelWidth: 80\n                            },\n                            'y2': {}\n                        }\n                        // showRangeSelector: true\n                    };\n                } else {\n                    $scope.showY2Btns = false;\n                    var newLines = [];\n                    angular$1.copy(allLines, newLines);\n                    angular$1.forEach(newLines, function(line) {\n                        line.push(null);\n                    });\n                    series[\"span_y2\"] = {\n                        'axis': 'y2'\n                    };\n                    $scope.childrenRangeConfig = {\n                        'connectSeparatedPoints': connectSeparatedPoints,\n                        'drawGapEdgePoints': true,\n                        'pointSize': 3,\n                        'legend': 'never',\n                        'labelsKMB': true,\n                        'file': newLines,\n                        'labelsSeparateLines': false,\n                        'highlightSeriesOpts': {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        highlightCallback: function(e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            angular$1.forEach(series, function(value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {\n                                x: 0,\n                                y: 0\n                            };\n                            angular$1.forEach(pts, function(item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function(point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n                            var legendbox = angular$1.element(\"#legendbox\" + element_id);\n                            $scope.$apply(function() {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n                        },\n\n                        unhighlightCallback: function(e) {\n                            $scope.$apply(function() {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                        'ylabel': leftAndRight.left,\n                        'y2label': \"\",\n                        'series': series,\n                        'colors': colors,\n                        'axes': {\n                            'y': {\n                                valueRange: [yRange.min, yRange.max]\n                            },\n                            'y2': {\n                                axisLabelFormatter: function(d) {\n                                    return '';\n                                }\n                            }\n                        }\n                        // showRangeSelector: true\n                    };\n                }\n                //\n                $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n\n                // set the first one to range bar\n                // update range bar with the first channel data\n                if ($scope.basicInfo && $scope.basicInfo.range_show && $scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.scatter) {\n\n                    Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                        zoom: true,\n                        selection: false,\n                        range: false\n                    });\n                    if (showY2axis) {\n                        $scope.rangeConfig = {\n                            'file': newLines,\n                            'series': series,\n                            'labels': ['x'].concat(labels)\n                        };\n                    } else {\n                        $scope.rangeConfig = {\n                            'file': newLines,\n                            'series': series,\n                            'labels': ['x'].concat(labels).concat(['span_y2'])\n                        };\n                    }\n                    $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                    // reset the datetime for current chart\n\n                    if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= newLines[0][0] && $scope.chartDateWindow[1] <= newLines[newLines.length - 1][0])) {\n                        // keep the current range bar refresh once.\n                        $scope.chartDateTime = {\n                            begin: $scope.chartDateTime.begin,\n                            end: $scope.chartDateTime.end\n                        };\n                        $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                    } else {\n\n                        $scope.currentChart[\"xAxisZoomRange\"] = [newLines[0][0], newLines[newLines.length - 1][0]];\n                        if (begin_path && end_path && !init_flag) {\n                            // $scope.chartDateTime = {\n                            // \"begin\": new Date(new Number(begin_path)),\n                            // \"end\": new Date(new Number(end_path))\n                            // };\n                            $scope.chartDateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                            $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                            init_flag = true;\n                        } else {\n                            if ($scope.currentIntervalChoosed && ((newLines[newLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= newLines[0][0].getTime())) {\n                                $scope.rangeConfig.dateWindow = [new Date(newLines[newLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval), newLines[newLines.length - 1][0]];\n                            } else {\n                                $scope.chartDateWindow = [newLines[0][0], newLines[newLines.length - 1][0]];\n                                $scope.rangeConfig.dateWindow = [newLines[0][0], newLines[newLines.length - 1][0]];\n                            }\n                        }\n                        $scope.currentChart.updateOptions($scope.rangeConfig);\n                        $scope.currentChartOptions = $scope.rangeConfig;\n                    }\n                } else {\n                    //  keep the same time window and refersh\n                    $scope.chartDateTime = {\n                        begin: $scope.chartDateTime.begin,\n                        end: $scope.chartDateTime.end\n                    };\n                    $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                    $scope.loadingShow = false;\n                }\n\n            }\n\n\n        };\n\n\n        var updateChildrenDetailChart = function(metadata, store, rangeData, allData) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var newLines = [];\n            var newTime = [];\n            var series = {};\n            var labels = [];\n            var colors = [];\n            var leftAndRight = {\n                left: relationConfig.leftYAxis,\n                right: relationConfig.rightYAxis\n            };\n            var yRange = {\n                min: null,\n                max: null\n            };\n            var counter = 0;\n            var showY2axis = null;\n            angular$1.forEach(allData, function(device) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                if (device.data.length > 0) {\n                    labels.push(device.device);\n                    angular$1.forEach(collections, function(collection) {\n                        if (collection.name == store) {\n                            $scope.currentIntervalName = store;\n                            if (collection.rows[0].yaxis == 0) {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y1',\n                                };\n                            } else {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y2'\n                                };\n                                showY2axis = true;\n                                $scope.showY2Btns = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                            var tempData = [];\n                            var tempTime = [];\n                            // make data\n                            angular$1.forEach(device.data, function(data) {\n                                var dateTime = new Date(data.timestamp);\n                                try {\n                                    var value = f(data);\n                                    tempData.push({\n                                        timestamp: dateTime,\n                                        value: value\n                                    });\n\n                                    if (yRange.min == null) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max == null) {\n                                        yRange.max = value;\n                                    }\n\n                                    if (yRange.min > value) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max < value) {\n                                        yRange.max = value;\n                                    }\n\n                                } catch (e) {\n                                    tempData.push({\n                                        timestamp: dateTime,\n                                        value: null\n                                    });\n                                }\n                                tempTime.push(dateTime.getTime());\n                            });\n                            newTime = newTime.concat(tempTime.filter(function(item) {\n                                return newTime.indexOf(item) < 0;\n                            }));\n                            newLines.push({\n                                device: device.device,\n                                data: tempData\n                            });\n                        }\n                    });\n                }\n            });\n\n            var chartData = [];\n            // time needs sort!!!\n            newTime = newTime.sort();\n            angular$1.forEach(newTime, function(nt) {\n                chartData.push([new Date(nt)]);\n            });\n\n\n            angular$1.forEach(newLines, function(line) {\n                angular$1.forEach(chartData, function(timeTicket) {\n                    // line data\n                    var flag = false;\n                    var lineData = line.data;\n                    for (var i = 0; i < lineData.length; i++) {\n                        if (lineData[i].timestamp.getTime() == timeTicket[0].getTime()) {\n                            timeTicket.push(lineData[i].value);\n                            flag = true;\n                            break;\n                        }\n                    }\n                    if (flag != true) {\n                        // we should use \"NaN\"\n                        timeTicket.push(null);\n                    }\n                });\n            });\n\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n\n\n            if (chartData.length == 0) {\n                $scope.currentChart.updateOptions({\n                    'file': []\n                });\n                $scope.loadingShow = false;\n            } else {\n                if ($scope.currentChart) {\n                    var connectSeparatedPoints = false;\n                    if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                        connectSeparatedPoints = true; //'connectSeparatedPoints': connectSeparatedPoints,\n                    }\n                    if (showY2axis) {\n                        $scope.currentChartOptions = {\n                            'connectSeparatedPoints': connectSeparatedPoints,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                }\n                            }\n                        };\n\n                        $scope.currentChart.updateOptions({\n                            'connectSeparatedPoints': connectSeparatedPoints,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function(e, x, pts, row, seriesName) {\n                                var sn = \"\";\n                                angular$1.forEach(series, function(value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {\n                                    x: 0,\n                                    y: 0\n                                };\n                                angular$1.forEach(pts, function(item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function(point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n                                var legendbox = angular$1.element(\"#legendbox\" + element_id);\n                                $scope.$apply(function() {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n                            },\n\n                            unhighlightCallback: function(e) {\n                                $scope.$apply(function() {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    } else {\n                        var newLines = [];\n                        $scope.showY2Btns = false;\n                        angular$1.copy(chartData, newLines);\n                        angular$1.forEach(newLines, function(line) {\n                            line.push(null);\n                        });\n                        series[\"span_y2\"] = {\n                            axis: 'y2'\n                        };\n                        $scope.currentChartOptions = {\n                            'connectSeparatedPoints': connectSeparatedPoints,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                },\n                                \"y2\": {\n                                    axisLabelFormatter: function(d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        };\n                        $scope.currentChart.updateOptions({\n                            'connectSeparatedPoints': connectSeparatedPoints,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function(e, x, pts, row, seriesName) {\n\n                                var sn = \"\";\n                                angular$1.forEach(series, function(value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {\n                                    x: 0,\n                                    y: 0\n                                };\n                                angular$1.forEach(pts, function(item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function(point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n                                var legendbox = angular$1.element(\"#legendbox\" + element_id);\n\n                                $scope.$apply(function() {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n\n                            },\n\n                            unhighlightCallback: function(e) {\n                                $scope.$apply(function() {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                },\n                                \"y2\": {\n                                    axisLabelFormatter: function(d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    }\n                    $scope.loadingShow = false;\n                }\n            }\n\n\n        };\n\n\n        /**\n         * update detail chart\n         * @param metadata\n         * @param store\n         * @param rangeData\n         * @param allData\n         */\n        var updateDetailChart = function(metadata, store, rangeData, allData) {\n\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {\n                left: deviceConfig.leftYAxis,\n                right: deviceConfig.rightYAxis\n            };\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{\n                min: null,\n                max: null\n            }, {\n                min: null,\n                max: null\n            }];\n            angular$1.forEach(collections, function(collection) {\n                if (collection.name == store) {\n                    angular$1.forEach(allData, function(line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    // var yRange = {'min': null, 'max': null};\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function(row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {\n                                'axis': 'y1'\n                            };\n                        } else {\n                            series[row.label] = {\n                                'axis': 'y2'\n                            };\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function(realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    angular$1.forEach(yRanges, function(yrange) {\n                        if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                            yrange.min = yrange.min - (yrange.min) * 0.10;\n                            yrange.max = yrange.max + (yrange.max) * 0.10;\n                        }\n                    });\n\n\n                    if (allLines.length == 0) {\n\n                        $scope.currentChart.updateOptions({\n                            'file': []\n                        });\n                        if ($scope.rangeSelectorBar) {\n                            $scope.currentChart[\"xAxisZoomRange\"] = $scope.rangeSelectorBar.xAxisExtremes();\n                        }\n\n\n                        $scope.loadingShow = false;\n                    } else {\n                        if ($scope.currentChart) {\n                            var connectSeparatedPoints = false;\n                            if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                                connectSeparatedPoints = true; //'connectSeparatedPoints': connectSeparatedPoints,\n                            }\n                            if (showY2axis) {\n                                $scope.currentChartOptions = {\n                                    'connectSeparatedPoints': connectSeparatedPoints,\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n                                $scope.currentChart.updateOptions({\n                                    'connectSeparatedPoints': connectSeparatedPoints,\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n\n\n                            } else {\n\n                                var newLines = [];\n                                $scope.showY2Btns = false;\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function(line) {\n                                    line.push(null);\n                                });\n\n                                series[\"span-Y2\"] = {\n                                    axis: 'y2'\n                                };\n\n\n                                $scope.currentChartOptions = {\n                                    'connectSeparatedPoints': connectSeparatedPoints,\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            axisLabelFormatter: function(d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n                                $scope.currentChart.updateOptions({\n                                    'connectSeparatedPoints': connectSeparatedPoints,\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            axisLabelFormatter: function(d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n                            }\n                            $scope.loadingShow = false;\n                        }\n                    }\n\n\n                }\n            });\n\n\n        };\n\n        $scope.autoUpdateChart = updateDetailChart;\n\n        /**\n         * update range chart\n         * @param metadata\n         * @param store\n         * @param allData\n         */\n        var updateChart = function(metadata, store, allData, rangeTree) {\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {\n                left: deviceConfig.leftYAxis,\n                right: deviceConfig.rightYAxis\n            };\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{\n                min: null,\n                max: null\n            }, {\n                min: null,\n                max: null\n            }];\n            angular$1.forEach(collections, function(collection) {\n                if (collection.name == store) {\n                    $scope.currentIntervalName = store;\n                    angular$1.forEach(allData, function(line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    $scope.rangeSeriesNumber = collection.rows.length;\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function(row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {\n                                'axis': 'y1'\n                            };\n                        } else {\n                            series[row.label] = {\n                                'axis': 'y2'\n                            };\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function(realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    if ($scope.currentChart) {\n                        $scope.rangeData = allLines;\n                        var basicInfo = $scope.basicInfo;\n                        if (basicInfo && basicInfo.range_show) {\n                            var rangeBarLabels = [];\n                            for (var i = 0; i < labels.length; i++) {\n                                rangeBarLabels.push(\"l\" + i);\n                            }\n                            var series_range = {\n                                'l0': {\n                                    axis: 'y1'\n                                }\n                            };\n                            if (showY2axis) {\n                                //noinspection JSDuplicatedDeclaration\n                                series_range = {\n                                    'l0': {\n                                        axis: 'y1'\n                                    },\n                                    'l0': {\n                                        axis: 'y2'\n                                    }\n                                };\n                                $scope.rangeSeries = series_range;\n\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': allLines,\n                                    'labels': ['x'].concat(rangeBarLabels),\n                                    'series': series_range\n                                });\n                            } else {\n                                series_range[\"span_y2\"] = {\n                                    axis: 'y2'\n                                };\n                                $scope.showY2Btns = false;\n                                $scope.rangeSeries = series_range;\n                                var newLines = [];\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function(line) {\n                                    line.push(null);\n                                });\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': newLines,\n                                    'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                    'series': series_range\n                                });\n                                // save\n                            }\n\n\n                        }\n\n                        angular$1.forEach(yRanges, function(yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max) * 0.10;\n                            }\n                        });\n\n\n                        // if graph has 2 yAxis or a yAxis\n                        var connectSeparatedPoints = false;\n                        if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                            connectSeparatedPoints = true; //'connectSeparatedPoints': connectSeparatedPoints,\n                        }\n\n                        if (showY2axis) {\n                            $scope.rangeConfig = {\n                                'connectSeparatedPoints': connectSeparatedPoints,\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: null,\n                                'labelsKMB': true,\n                                'file': allLines,\n                                'labels': ['x'].concat(labels),\n                                'ylabel': leftAndRight.left,\n                                'y2label': leftAndRight.right,\n\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {\n                                        valueRange: [yRanges[0].min, yRanges[0].max],\n                                        axisLabelWidth: 80\n                                    },\n                                    'y2': {\n                                        'labelsKMB': true,\n                                        valueRange: [yRanges[1].min, yRanges[1].max],\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        } else {\n                            series['span_y2'] = {\n                                axis: 'y2'\n                            };\n                            $scope.showY2Btns = false;\n                            var newLines = [];\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function(line) {\n                                line.push(null);\n                            });\n                            $scope.rangeConfig = {\n                                'connectSeparatedPoints': connectSeparatedPoints,\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: null,\n                                'labelsKMB': true,\n                                'file': newLines,\n                                'labels': ['x'].concat(labels).concat(['span_y2']),\n                                'ylabel': leftAndRight.left,\n                                'y2label': \"\",\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {\n                                        valueRange: [yRanges[0].min, yRanges[0].max],\n                                        axisLabelWidth: 80\n                                    },\n                                    'y2': {\n                                        axisLabelFormatter: function(d) {\n                                            return '';\n                                        },\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        }\n\n\n                        if (basicInfo && basicInfo.range_show) {\n                            Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                zoom: true,\n                                selection: false,\n                                range: false\n                            });\n                        }\n\n\n                        if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                            // keep the current range bar refresh once.\n                            $scope.chartDateTime = {\n                                begin: $scope.chartDateTime.begin,\n                                end: $scope.chartDateTime.end\n                            };\n                            $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                        } else {\n\n                            $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            if (begin_path && end_path && !init_flag) {\n                                // $scope.chartDateTime = {\n                                // \"begin\": new Date(new Number(begin_path)),\n                                // \"end\": new Date(new Number(end_path))\n                                // };\n                                $scope.chartDateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                init_flag = true;\n                            } else {\n                                if ($scope.currentIntervalChoosed && ((allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= allLines[0][0].getTime())) {\n                                    $scope.rangeConfig.dateWindow = [new Date(allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval), allLines[allLines.length - 1][0]];\n                                } else {\n                                    $scope.chartDateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                    $scope.rangeConfig.dateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                }\n                            }\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n                        }\n                        //bind\n                        $scope.loadingShow = false;\n                    }\n\n                }\n            });\n        };\n\n        $scope.chartDateTime = {\n            begin: null,\n            end: null\n        };\n\n        // function for show one\n        $scope.showOne = function(deviceName) {\n\n            if ($rootScope['standalone'] && $rootScope['standalone'] == true) {\n                return false;\n            }\n\n            // device type is\n            if ($location.url().indexOf('/app/page/param/') != -1) {\n                //open window\n                $window.open(\"/admin/#/app/page/param/\" + $rootScope.applicationName + \"/\" + metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1]));\n            } else {\n                //open window\n                $window.open(\"/admin/#\" + $location.url().replace(\"show\", \"param\").replace($location.url().substr($location.url().lastIndexOf('/', $location.url().lastIndexOf('/') - 1) + 1), metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1])));\n            }\n\n        };\n\n\n        var btntimer = null;\n\n\n        $scope.btnZoomInVLeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVLeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomInVRight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVRight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVULeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVDLeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVURight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVDRight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        // functions for buttons\n        $scope.btnpanleft = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[0] - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0] - pan_delta;\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[1] - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1] - pan_delta;\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnpanright = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = $scope.chartDateWindow[0].getTime() + pan_delta;\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            } else {\n                if (($scope.chartDateWindow[0] + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = ($scope.chartDateWindow[0] + pan_delta);\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1].getTime() + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            } else {\n                if (($scope.chartDateWindow[1] + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1] + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        $scope.btnzoomin = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            startDate = rangeStart + (delta * 2);\n            endDate = rangeEnd - (delta * 2);\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            //\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnzoomout = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            if ((rangeStart - (delta * 2)) > panRange[0]) {\n                startDate = rangeStart - (delta * 2);\n            } else {\n                startDate = panRange[0];\n            }\n\n            if ((rangeEnd + (delta * 2)) < panRange[1]) {\n                endDate = rangeEnd + (delta * 2);\n            } else {\n                endDate = panRange[1];\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        var timer = null;\n        $scope.refersh = function(g, init) {\n            if (timer) {\n                $timeout.cancel(timer);\n            }\n            timer = $timeout(function() {\n                if (init || g.xAxisRange()[0] != $scope.chartDateTime.begin || g.xAxisRange()[1] != $scope.chartDateTime.end) {\n                    $scope.chartDateTime = {\n                        begin: g.xAxisRange()[0],\n                        end: g.xAxisRange()[1]\n                    };\n                    $scope.chartDateWindow = g.xAxisRange();\n                }\n            }, 600);\n        };\n    }\n\n};\n\n\nfgpWidgetGraph.buildFactory = function buildFactory ($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    fgpWidgetGraph.instance = new fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams);\n    return fgpWidgetGraph.instance;\n};\n\nfgpWidgetGraph\n    .$inject = ['$timeout', 'dataService', '$rootScope', '$interval', '$filter', '$location', '$stateParams'];\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPageTitle = function fgpWidgetPageTitle() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetPageTitle.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //drag-channel  item means this widget accepts items\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"\">' +\n        '<h1>{{css.title.text}}</h1>' +\n        '<h3>{{css.subtitle.text}}</h3>' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div>';\n    return dom_show;\n};\n\n\nfgpWidgetPageTitle.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"minHeight\"] = metadata.css.minHeight;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n        $scope.css[\"title\"] = metadata.css.title;\n        $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n        $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n        $scope.css[\"subtitle\"] = metadata.css.subtitle;\n        $scope.css[\"subtitle\"][\"color\"] = metadata.css.subtitle.color;\n        $scope.css[\"subtitle\"][\"show\"] = metadata.css.subtitle.show;\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"title\"].text + \"}\");\n            $scope.css[\"title\"].text = f(deviceData.device);\n            f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"subtitle\"].text + \"}\");\n            $scope.css[\"subtitle\"].text = f(deviceData.device);\n        });\n    }\n\n\n\n\n};\n\nfgpWidgetPageTitle.buildFactory = function buildFactory () {\n    fgpWidgetPageTitle.instance = new fgpWidgetPageTitle();\n    return fgpWidgetPageTitle.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetMap = function fgpWidgetMap() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetMap.prototype.template = function template (element, attrs) {\n    var dom_show = '<div class = \"{{css.width}}\" style=\"padding:0px;height:{{css.height}}px;\" map-lazy-load=\"https://maps.google.com/maps/api/js\">' +\n        '<ng-map style=\"height: 100%;width: 100%;\" center=\"{{center}}\" zoom=\"15\">' +\n        '<marker on-click=\"map.showInfoWindow(\\'info_' + attrs.id + '\\')\" id=\"marker_' + attrs.id + '\" ng-repeat=\"item in markers\" icon=\"{{item.image}}\" position=\"{{item.latitude}},{{item.longitude}}\" title=\"{{item.name}}\" animation=\"Animation.DROP\" ></marker>' +\n        '</ng-map>' +\n        '</div>' +\n        '';\n    return dom_show;\n};\n\n\nfgpWidgetMap.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n            var location = {};\n            $scope.markers = [];\n            $scope.details = $scope.$parent.device;\n\n\n            // show one point.\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { return \" + item.value + \";}\");\n                    var result = f(deviceData.device);\n                    if (result) {\n                        location[item.label] = result;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n                } catch (error) {\n                    // show image\n                    if (\"image\" == item.label) {\n                        location[item.label] = item.value;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n\n                }\n            });\n\n\n            //do not show\n            if (location.latitude == \"\" || location.longitude == \"\") {\n                //hard code. the location is Melbourne\n                location.latitude = \"-37.810000\";\n                location.longitude = \"144.950000\";\n                $scope.center = [location.latitude, location.longitude];\n                // $scope.markers.push(location);\n            } else {\n                $scope.center = [location.latitude, location.longitude];\n                $scope.markers.push(location);\n            }\n\n        });\n    }\n\n};\n\nfgpWidgetMap.buildFactory = function buildFactory () {\n    fgpWidgetMap.instance = new fgpWidgetMap();\n    return fgpWidgetMap.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetDeviceDetail = function fgpWidgetDeviceDetail() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetDeviceDetail.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '<div class=\"row\" ng-repeat=\"item in data\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"text-align: right; font-weight: bold;line-height: 30px;\">{{item.label}}</div><div class=\"col-xs-8 col-md-8\" style=\"text-align: left;line-height: 30px;\">{{item.value}}</div>' +\n        '</div>' +\n        '</div>' +\n        '<div id=\"detail_status_' + attrs.id + '\" class=\"row\" style=\"min-height: 50px;\">' +\n        '</div>' +\n        '</div>';\n};\n\n\nfgpWidgetDeviceDetail.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n\n            $scope.data = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = \"\";\n                    $scope.data.push(item);\n                }\n            });\n\n\n        });\n\n    }\n\n};\n\n\nfgpWidgetDeviceDetail.buildFactory = function buildFactory () {\n    fgpWidgetDeviceDetail.instance = new fgpWidgetDeviceDetail();\n    return fgpWidgetDeviceDetail.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetSpan = function fgpWidgetSpan() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetSpan.prototype.template = function template (scope, element) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '</div>';\n};\n\nfgpWidgetSpan.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n};\n\nfgpWidgetSpan.buildFactory = function buildFactory () {\n    fgpWidgetSpan.instance = new fgpWidgetSpan();\n    return fgpWidgetSpan.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPie = function fgpWidgetPie($timeout) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n};\n\n\nfgpWidgetPie.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" ><div style=\"height: {{css.height}}px;\">' +\n        '<canvas class=\"fgpPieChart\"></canvas>' +\n        '</div>' +\n        '</div>';\n};\n\nfgpWidgetPie.prototype.link = function link (scope, element) {\n\n    this.$timeout(function () {\n        var ctx = element.find(\"canvas\")[0];\n        scope.chart = new Chart(ctx, {\n            type: 'pie',\n            data: {\n                labels: ['1'],\n                datasets: [\n                    {\n                        data: [1],\n                        backgroundColor: []\n                    }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                animation: false,\n                legend: {display: true}\n            }\n        });\n    });\n};\n\n\nfgpWidgetPie.prototype.controller = function controller ($scope, $element, $timeout) {\n\n    var id = $element.attr(\"id\");\n    var metadata = null;\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n            $scope.showdata = widgetData.data;\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n            $scope.data = [];\n            var colors = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = item.value;\n                    $scope.data.push(item);\n                }\n                if (item.color) {\n                    colors.push(item.color);\n                } else {\n                    colors.push('#' + (function co(lor) {\n                            return (lor +=\n                                [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                            && (lor.length == 6) ? lor : co(lor);\n                        })(''));\n                }\n            });\n            // timeout\n            $scope.pieData = {labels: [], value: []};\n            $timeout(function () {\n                // create data\n                angular$1.forEach($scope.data, function (item) {\n                    $scope.pieData.labels.push(item.label);\n                    $scope.pieData.value.push(item.value);\n                });\n\n                $scope.chart.data.labels = $scope.pieData.labels;\n                $scope.chart.data.datasets[0].data = $scope.pieData.value;\n                $scope.chart.data.datasets[0].backgroundColor = colors;\n                // update chart\n                $scope.chart.update();\n            });\n\n        });\n\n\n    }\n\n\n};\n\nfgpWidgetPie.buildFactory = function buildFactory ($timeout) {\n    fgpWidgetPie.instance = new fgpWidgetPie($timeout);\n    return fgpWidgetPie.instance;\n};\nfgpWidgetPie.$inject = ['$timeout'];\n\n/**\n * Created by eric on 22/11/16.\n */\n\nvar fgpDockerButton = function fgpDockerButton() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\n\nfgpDockerButton.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"col-xs-12 btn-group\" role=\"group\" style=\"padding: 2px;\" aria-label=\"...\">' +\n        '<div style=\"float: right;\">' +\n        '<button type=\"button\" class=\"btn btn-{{button.color}} btn-xs\" ' +\n        ' ng-click=\"action(button)\" ng-repeat=\"button in buttons\" ng-show=\"checkShow(button)\"><i class=\"fa {{button.icon}}\"' +\n        ' aria-hidden=\"true\"></i>' +\n        '</button>' +\n        '</div>' +\n        '</div>';\n    return show_dom;\n};\n\n\nfgpDockerButton.prototype.controller = function controller ($scope, $element, $http, $timeout) {\n\n    $scope.stats = \"\";\n\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var confData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                confData = data.data;\n            }\n        }\n    });\n\n    var repeateId = [];\n\n    var pageDevice = null;\n    $scope.$on('deviceInfoEvent', function (event, data) {\n        pageDevice = data.device;\n    });\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n        if (data.application === repeateId[2] && data.container === repeateId[0] && data.host === repeateId[1]) {\n            $scope.stats = data.stats;\n        }\n    });\n\n    $scope.checkShow = function (button) {\n\n\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            return true;\n        }\n\n\n        if (button.type === \"stop\") {\n            if ($scope.stats === \"running\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"start\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"delete\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    // how many buttons?\n    $scope.buttons = [];\n\n    if ($scope.$parent.repeat) {\n        repeateId = $scope.$parent.repeat.split(\",\");\n    }\n\n    angular.forEach(configuration, function (item) {\n        if (item.label == \"buttons\") {\n            $scope.buttons = item.value;\n        }\n    });\n\n    $scope.healthinfo = \"\";\n\n\n    // submit \"action\" to rest api\n    $scope.action = function (button) {\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/exec',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    deviceName: pageDevice.name,\n                    deviceKey: pageDevice.key.id,\n                    relationship: 'node_application'\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        } else {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/hosts/action',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    container: repeateId[0],\n                    host: repeateId[1],\n                    application: repeateId[2]\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        }\n\n    };\n};\n\n\nfgpDockerButton.buildFactory = function buildFactory () {\n    fgpDockerButton.instance = new fgpDockerButton();\n    return fgpDockerButton.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetRepeatContainer = function fgpWidgetRepeatContainer($http) {\n    this.restrict = 'E';\n    this.scope = {};\n    this._$http = $http;\n};\n\nfgpWidgetRepeatContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{item.device.key.id}}\" ng-repeat=\"item in items\" emit-last-repeater-element style=\"padding-left: 2px; padding-right: 2px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding-left: 1px; padding-right: 1px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}};\"><i class=\"fa fa-desktop\" aria-hidden=\"true\" style=\"margin-right: 5px;\"></i>{{item.device.name}}</div>' +\n        '<div class=\"panel-body\"  style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\'}};\">' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" ng-repeat=\"item in items\" repeat-id=\"{{item.device.key.id}}\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;padding-left: 2px; padding-right: 2px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n};\n\nfgpWidgetRepeatContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout, $http, $location, $stateParams, $websocket) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    // all items\n    $scope.items = [];\n\n    $scope.labelstyle = [\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"];\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n\n    $scope.listStyle = \"list\";\n\n    $scope.labels = [];\n\n    var deviceType = $stateParams.type;\n    var deviceName = $stateParams.device;\n\n    if (metadata.data) {\n\n\n        $scope.labels = [];\n\n\n        if (metadata.data.datasource.labels) {\n            $scope.labels = metadata.data.datasource.labels.split(\" \");\n        }\n\n        if (metadata.data.datasource.style) {\n            $scope.listStyle = metadata.data.datasource.style;\n        }\n\n        // show different type\n        var relation = metadata.data.datasource.type;\n        $scope.items = [];\n        $http({\n            method: 'GET',\n            url: 'api/docker/repeat/' + deviceType + '/' + deviceName + '/' + relation\n        }).then(function (data) {\n            $scope.items = data.data;\n        }, function (error) {\n            console.error(error);\n        });\n\n        // I'm ready. please give all my children to me~\n        // call stage\n        $scope.$on('LastRepeaterElement', function () {\n            $timeout(function () {\n                $scope.$emit('bindChildRepeatEvent', {\n                    id: element_id\n                });\n            });\n        });\n\n\n    }\n    //establish a connection with websocket\n    var dataStream = $websocket('ws://' + $location.host() + \":\" + $location.port() + '/ws/hosts');\n    dataStream.onMessage(function (message) {\n        try {\n            var backData = JSON.parse(message.data);\n            if (backData.hasOwnProperty(\"container\")) {\n                // tell children\n                $scope.$parent.$broadcast('containerStatusEvent', backData);\n                // update health-check status\n                angular.forEach($scope.items, function (item) {\n                    if (backData.application == item.device.key.id) {\n                        if (backData.config.State.Health) {\n                            item[\"health\"] = backData.config.State.Health.Status;\n                        } else {\n                            item[\"health\"] = null;\n                        }\n\n                        if (backData.stats == \"exited\") {\n                            item[\"health\"] = null;\n                        }\n                    }\n                });\n            }\n        } catch (e) {\n        }\n    });\n\n    $scope.healthcheck = function (item) {\n        // call server and get the exception.\n        dataService.healthcheck(item.name, item.device.key.id);\n    };\n\n\n};\n\n\nfgpWidgetRepeatContainer.buildFactory = function buildFactory ($http) {\n    fgpWidgetRepeatContainer.instance = new fgpWidgetRepeatContainer($http);\n    return fgpWidgetRepeatContainer.instance;\n};\n\nfgpWidgetRepeatContainer.$inject = ['$http'];\n\n/**\n * Created by eric on 25/11/16.\n */\nvar fgpImage = function fgpImage() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpImage.prototype.template = function template (scope, element) {\n    return '' +\n        '<img src=\"{{url}}\" style=\"width:{{css.width}}px;height:{{css.height}}px;\">' +\n        '';\n};\n\nfgpImage.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"0\",\n        height: \"0\"\n    };\n\n    $scope.url = \"\";\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n    if($scope.showdata.metadata.data){\n        $scope.url = $scope.showdata.metadata.data.url;\n    }\n};\n\nfgpImage.buildFactory = function buildFactory () {\n    fgpImage.instance = new fgpImage();\n    return fgpImage.instance;\n};\n\n/**\n * Created by eric on 28/11/16.\n */\nvar fgpIcon = function fgpIcon() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpIcon.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"{{css.width}}\" style=\"margin-top: 10px;background-color: {{css.background.color}};border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"padding: 5px;\">' +\n        '<i class=\"fa fa-{{icon}}\" style=\"font-size: 60px;\"></i>' +\n        '</div>' +\n        '<div class=\"col-xs-8 col-md-8\">' +\n        '<div style=\"text-align: right;font-size: large;\"><label>{{title}}</label></div>' +\n        '<div style=\"text-align: right;font-size: small;\"><label>{{desc}}</label></div>' +\n        '</div>' +\n        '</div>' +\n        '';\n    return show_dom;\n};\n\nfgpIcon.prototype.controller = function controller ($scope, $element) {\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.icon = configuration.content.icon;\n\n    $scope.desc = configuration.content.desc;\n\n    $scope.title = \"\";\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + configuration.content.f + \"}\");\n            $scope.title = f(deviceData.device);\n        });\n\n    }\n\n};\n\n\nfgpIcon.buildFactory = function buildFactory () {\n    fgpIcon.instance = new fgpIcon();\n    return fgpIcon.instance;\n};\n\n/**\n * Created by eric on 29/11/16.\n */\nvar fgpWidgetAppContainer = function fgpWidgetAppContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetAppContainer.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //<div class=\"alert alert-info\" role=\"alert\">...</div>\n    return '' +\n        '<div ng-show=\"showstyle == \\'list\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-12 col-xs-12  alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px; text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n\n        '<div ng-show=\"showstyle == \\'grid\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-6 col-xs-6 alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px;text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n        '';\n};\n\nfgpWidgetAppContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.containers = [];\n    $scope.containerswithTimeout = [];\n    var metadata = widgetData.data.metadata;\n    // should be a host id\n    var repeat = $scope.$parent.repeat;\n\n    $scope.showstyle = \"list\";\n\n    $scope.host = repeat;\n\n\n    // I'm ready. please give all my children to me~\n    // call stage\n    $scope.$on('LastRepeaterElement', function () {\n        $timeout(function () {\n            $scope.$emit('bindChildRepeatEvent', {\n                id: element_id\n            });\n        });\n    });\n\n    $timeout(function () {\n        var pp = $scope.$emit('listStyleEvent', {\n            id: widgetData.data.parent,\n            callback: function (style) {\n                $scope.showstyle = style;\n            }\n        });\n\n    });\n\n    $scope.gotoContainer = function (container) {\n        // \"device type and device name\" display by a dynamic page!\n        console.info(container);\n        return false;\n    };\n\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n\n        if (data.host == repeat) {\n            //f\n            var labels = [];\n\n            if (metadata.data.datasource.labels) {\n                labels = metadata.data.datasource.labels.split(\" \");\n            }\n            var showLabel = \"\";\n            angular.forEach(labels, function (label) {\n                showLabel += data.config[label] + \" \";\n            });\n\n            var app = {\n                id: data.container,\n                label: showLabel,\n                application: data.application,\n                name: data.deviceName,\n                type: data.deviceType\n            };\n            var flag = false;\n            angular.forEach($scope.containers, function (container) {\n                if (container.id == app.id) {\n                    // update timer\n                    var timer_index = -1;\n                    var timer = $scope.containerswithTimeout.filter(function (item, index) {\n                        if(item.app.id == app.id){\n                            timer_index = index;\n                            return true;\n                        }else{\n                            false;\n                        }\n                    });\n                    $timeout.cancel(timer[0].t);\n                    if (data.stats != \"removed\") {\n                        var newTimer = $timeout(function () {\n                            var index = $scope.containers.indexOf(app);\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }, 30000);\n                        timer[0].t = newTimer;\n                        flag = true;\n                    } else {\n                        var index = -1;\n                        angular.forEach($scope.containers, function (item, itemIndex) {\n                            if (item.id === app.id) {\n                                index = itemIndex;\n                            }\n                        });\n                        if (index != -1 && timer_index != -1) {\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            flag = true;\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }\n                    }\n                }\n            });\n\n            if (!flag) {\n                // add to\n                $scope.containers.push(app);\n                // delete it after 30 seconds!\n                var t = $timeout(function () {\n                    var index = $scope.containers.indexOf(app);\n                    $scope.containers.splice(index, 1);\n                }, 30000);\n                $scope.containerswithTimeout.push({t: t, app: app});\n            }\n        }\n\n    });\n\n};\n\nfgpWidgetAppContainer.buildFactory = function buildFactory () {\n    fgpWidgetAppContainer.instance = new fgpWidgetAppContainer();\n    return fgpWidgetAppContainer.instance;\n};\n\nfgpWidgetAppContainer.$inject = [];\n\n/**\n * Created by ericwang on 21/06/2016.\n */\nvar fgpWidgetChartTable = function fgpWidgetChartTable() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetChartTable.prototype.template = function template (element, attrs) {\n    return '<div style=\"padding:0px;height: {{css.height}}px;position: relative; overflow-y : auto;\">' +\n        '<table st-table=\"rowCollection\" class=\"col-md-12 table table-striped\">' +\n        '<thead>' +\n        '<tr>' +\n        '<th ng-repeat=\"column in sampledata.columns\">{{column.label}}</th>' +\n        '</tr>' +\n        '</thead>' +\n        '<tbody>' +\n        '<tr ng-repeat=\"value in sampledata.values\">' +\n        '<td ng-repeat=\"col in sampledata.columns\">{{value[col.label] | tableformatter: value : col.label : col.formatter}}</td>' +\n        '</tr>' +\n        '</tbody>' +\n        '</table>' +\n        '</div>';\n};\n\nfgpWidgetChartTable.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    //show\n    $scope.showdata = widgetData.data;\n\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n\n\n    $scope.$on('chartDataChangeEvent', function (event, chartData) {\n        var chartId = chartData.id;\n        if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"device\") {\n            $scope.sampledata = {};\n            // make data\n            var collectionName = chartData.data.collection;\n            var groupName = chartData.group;\n            var columns = [];\n            //get group and collection configuration\n            angular$1.forEach($scope.showdata.metadata.data.groups, function (group) {\n                if (group.name == groupName) {\n                    angular$1.forEach(group.collections, function (collection) {\n                        if (collection.name === collectionName) {\n                            columns = collection.rows;\n                        }\n                    });\n                }\n            });\n\n\n            $scope.sampledata.columns = [];\n\n            angular$1.forEach(columns, function (column) {\n                $scope.sampledata.columns.push({label: column.label, formatter: column.formatter});\n            });\n            $scope.sampledata.values = [];\n            angular$1.forEach(columns, function (column) {\n                var f = new Function(\"data\", \"with(data) { if(\" + column.value + \") return \" + column.value + \";return '';}\");\n                angular$1.forEach(chartData.data.data, function (record, index) {\n                    if ($scope.sampledata.values.length < chartData.data.data.length) {\n                        //add new one\n                        var item = {};\n                        item[column.label] = f(record);\n                        $scope.sampledata.values.push(item);\n                    } else {\n                        $scope.sampledata.values[index][column.label] = f(record);\n                    }\n                });\n            });\n\n            var cleanData = [];\n            angular$1.forEach($scope.sampledata.values, function (value, index) {\n                var flag = false;\n                angular$1.forEach(columns, function (column) {\n                    if (value[column.label] && value[column.label] != \"\") {\n                        flag = true;\n                    }\n                });\n\n                if (flag) {\n                    cleanData.push(value);\n                }\n            });\n            $scope.sampledata.values = cleanData;\n\n        } else if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"relation\") {\n            //\n\n\n        }\n\n    });\n\n\n};\n\nfgpWidgetChartTable.buildFactory = function buildFactory () {\n    fgpWidgetChartTable.instance = new fgpWidgetChartTable();\n    return fgpWidgetChartTable.instance;\n};\n\n/**\n * Created by ericwang on 10/06/2016.\n */\n// angular module\nangular$1.module('fgp-kit', ['ngMap', 'ui.router', 'angular-cache']).service('dataService', dataAccessApi.buildFactory)\n    .filter('removeSlash', function() {\n        return function(input) {\n            if (input.startsWith(\"/\")) {\n                return input.substring(1, input.length);\n            }\n            return input;\n        }\n    })\n    .factory('$graphstorage', ['$window', function($window) {\n        return {\n            setTree: function(key, value) {\n                $window.localStorage[key] = JSON.stringify(value);\n            },\n            getTree: function(key) {\n                return JSON.parse($window.localStorage[key]) || false;\n            },\n            addTree: function(key, value) {\n                if ($window.localStorage[key]) {\n                    var trees = JSON.parse($window.localStorage[key]);\n                    trees.push(value);\n                    this.setTree(key, trees);\n                } else {\n                    this.setTree(key, [value]);\n                }\n            },\n            clear: function() {\n                $window.localStorage.clear();\n            }\n        }\n    }])\n    .directive('fgpContainer', fgpStage.buildFactory)\n    .directive('widgetContainer', fgpWidgetContainer.buildFactory)\n    .directive('widgetGraph', fgpWidgetGraph.buildFactory)\n    .directive('widgetPageTitle', fgpWidgetPageTitle.buildFactory)\n    .directive('widgetMap', fgpWidgetMap.buildFactory)\n    .directive('widgetStatus', fgpStage.buildFactory)\n    .directive('widgetDeviceDetail', fgpWidgetDeviceDetail.buildFactory)\n    .directive('widgetDeviceSpan', fgpWidgetSpan.buildFactory)\n    .directive('widgetPie', fgpWidgetPie.buildFactory)\n    .directive('widgetDockerButton', fgpDockerButton.buildFactory)\n    .directive('widgetRepeatContainer', fgpWidgetRepeatContainer.buildFactory)\n    .directive('widgetImage', fgpImage.buildFactory)\n    .directive('widgetIcon', fgpIcon.buildFactory)\n    .directive('widgetAppContainer', fgpWidgetAppContainer.buildFactory)\n    .directive('widgetChartTable', fgpWidgetChartTable.buildFactory)\n    .directive('emitLastRepeaterElement', [function() {\n        return function(scope) {\n            if (scope.$last) {\n                scope.$emit('LastRepeaterElement');\n            }\n        };\n    }]).config(function(CacheFactoryProvider) {\n        angular$1.extend(CacheFactoryProvider.defaults, {\n            maxAge: 30 * 60 * 1000, // half an hour\n            deleteOnExpire: 'aggressive',\n        });\n    }).service('graphDataService', function(CacheFactory) {\n        var graphCache = null;\n        if (!CacheFactory.get('graphCache')) {\n            graphCache = CacheFactory('graphCache',{\n                maxAge: 30 * 60 * 1000, // half an hour\n                deleteOnExpire: 'aggressive'\n            });\n        }\n        return {\n            get: function(name) {\n                return graphCache.get('/graph/'+name);\n            },\n            put: function(name, data) {\n                return graphCache.put('/graph/'+name, data);\n            }\n        };\n    })\n    .filter('tableformatter', ['$filter', function($filter) {\n        return function(input, obj, field, formatter) {\n            if (formatter) {\n                if (obj[field]) {\n                    if (\"date\" == formatter) {\n                        return $filter('date')(new Date(obj[field]), 'd/M/yy h:mm a');\n                    } else {\n                        return input;\n                    }\n                }\n            } else {\n                return input;\n            }\n        };\n    }]);\nvar index = 'fgp-kit';\n\nreturn index;\n\n})));\n\n//# sourceMappingURL=fgp.kit.bundle.js.map\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["fgp.kit.bundle.js","fgp.plugins.bundle.js"],"names":["global","factory","exports","module","require","define","amd","fgp_kit","angular","$","Dygraph","ngmap","chartJS","this","angular$1","jquery","chart_js","fgpStage","scope","applicationName","deviceName","server","configuration","scatterColors","standalone","interactions","drill","highlights","eventsHandler","replace","restrict","prototype","template","controller","$scope","$element","$timeout","$rootScope","$compile","dataService","$interval","showdata","length","setColors","graphBindingArray","findChild4Repeat","parentId","parentHtmlObj","arrayItems","newId","newScope","i","parent","currentItem","element","html_render","id","attr","repeat","find","append","findChild","$watch","newVal","oldVal","empty","$destroy","$new","$on","evt","msg","push","forEach","item","items","children","item_new","currentElement","groupItems","dulpItem","param","config","callback","metadata","data","datasource","style","key","from","sendDeviceData","graph","$broadcast","graphs","deviceInfo","then","device","buildFactory","instance","dataAccessApi","$http","$q","$cacheFactory","graphDataService","$location","_$http","_$q","_$location","indexCache","deviceStores","_$interval","_$graphDataService","host","deviceKey","ip","port","protocol","indexOf","deferred","defer","url","httpServices","qServices","method","headers","Content-Type","success","params","device_type","type","types","resolve","extensionRequests","device_name","extension_type","name","catch","info","console","warn","all","result","extensionItem","errors","reject","error","promise","deviceInitInfo","application","storeSchema","rangeLevel","otherLevels","fields","get","concat","response","childrenDeviceInitInfo","relationType","relationDeviceType","isSame","childrenExtensionInitInfo","extensionType","devicesExtensionInitInfo","devicesKey","promises","__http","fillChildrenTree","buckets","tree","showData","value","flag","fillTree","size","calTree","start","end","filter","elem","devicesStoreData","store","interval","start_point","Date","getTime","devices","index","$graphDataService","JSON","stringify","deviceGraphData","newComeResult","end_point","deviceStoreData","needLoad","timestamp","sort","a","b","put","defaultColors","this$1","colors","co","lor","Math","floor","random","healthcheck","autoUpdateGraph","schema","count","fetcher","last","trees","frequency","timeKey","graphData","$inject","fgpWidgetContainer","attrs","hasOwnProperty","showTitle","element_id","dom_show","dom_show_notitle","widgetData","$emit","css","color","width","border","background","title","show","source","parse","fgpWidgetGraph","$filter","$stateParams","_dataService","dom_loading","dom_legend","dom_empty_data","dom_alert_info","dom_datetime_interval","dom_rect","dom_series_list","dom_real_time_grap","html","link","status","timeOut","completionPercent","graphId","getData","numSeries","numRows","labels","initDate","j","val","sampleData","movePan","event","g","context","side","memoryVisibility","dragEndX","dragGetX_","dragEndY","dragGetY_","is2DPan","pixelsDragged","dragStartY","axis","axes_","axis_data","axes","unitsDragged","unitsPerPixel","boundedValue","boundedValues","maxValue","initialTopValue","min","minValue","dragValueRange","attributes_","getForAxis","valueWindow","pow","LOG_SCALE","valueRange","minDate","initialLeftmostDate","dragStartX","xUnitsPerPixel","boundedDates","max","maxDate","dateRange","zoomRange","xAxisZoomRange","getOptionForAxis","dateWindow_","drawGraph_","offsetToPercentage","offsetX","offsetY","xOffset","toDomCoords","xAxisRange","yar0","yAxisRange","yOffset","x","y","w","h","xPct","yPct","zoom","zoomInPercentage","xBias","yBias","direction","basicInfo","adjustAxis","bias","delta","increment","foo","yAxes","newYAxes","numAxes","currentInitScaleLevelLeftConf","range","currentInitScaleLevelRightConf","ranges","newZoomRange","xAxisExtremes","updateOptions","dateWindow","canScroll","timer","mouseOverHandler","e","cancel","mouseEnterHandler","mouseOutHandler","scroll","normal","WheelEvent","detail","deltaY","wheelDelta","percentage","layerX","target","offsetLeft","layerY","offsetTop","percentages","plotter_","area","range_show","cancelEvent","chartDateWindow","firstPoint","mousedownHandler","initializeMouseDown","clientX","startPan","mousemoveHandler","isPanning","currentChart","mouseupHandler","endPan","interactionModel","mousewheel","DOMMouseScroll","wheel","mousedown","mousemove","mouseenter","mouseup","mouseout","drawGapEdgePoints","pointSize","legend","labelsKMB","labelsSeparateLines","highlightSeriesOpts","strokeWidth","strokeBorderWidth","highlightCircleSize","drawPoints","drawAxesAtZero","labelsDivStyles","text-align","position","display","yRangePad","ylabel","xlabel","series","Device0","Device4","axisLabelWidth","y2","valueFormatter","moment","format","pointClickCallback","p","drawCallback","isInit","refersh","Plugins","RectSelection","selectControl","highlight","tempArray","onExternal","currentView","_item","substring","selectControlStatus","switchSelectFeature","disable","enable","timer_auto","process_bar_timer","on","tempConifg","realTimeGraph","currentChartOptions","file","auto_device_name","auto_schema","auto_store","auto_fields","graph_data","worker","deviceConfig","auto_metadata","groups","collections","allLines","yRanges","collection","line","showY2axis","rows","row","label","yaxis","f","Function","filterF","counter","realLine","falue","ex","yrange","newLines","copy","perInterval","showRealTimeGraph","modal","rangeSelectorBar","xAxisHeight","drawAxis","showRangeSelector","rangeSelectorHeight","finalDateRagne","chartDateTime","begin","finalDateRange","view","child","synchronize","selection","childrenChart","$window","elementId","emptyDataShow","alertMessage","showY2Btns","legendText","legendText_device","legendText_datetime","legendText_column","legendText_value","legendColor","autoupdate","defaultTimeIntervals","scales","dateTimeIntervals","locked_interval","changeVisibility","getOption","_visibility","vi","lock","currentIntervalName","currentIntervalChoosed","changeInterval","basic","checked","rangeConfig","loadingShow","intevals","height","begin_path","end_path","init_flag","fixInterval","noneFixed","fixGraphWithGap","currentInterval","fixed","tempDate","obj","labels_","file_","showOrHideDevice","childrenDevices","setVisibility","fixGraphWithGap_click","parent_container","data_from","checkY2Btns","selectedDevices","singleClickEventHandler","currentHighLightChildDevice","onGraph","highlight_timer_","$watchCollection","newValue","oldValue","highlightDeviceIndex","_child","_index","oldVisibility","visibility","deviceData","nObj","oObj","viewChangeListener","button_handlers","level","patt","RegExp","lines","columns","match","column","startsWith","initChart","relation","relationConfig","nameColumn","childrenDeviceNameColumn","relation_group","initChildrenChart","interactionHandler","devices_key","buttons","scatter","button","buttons_html","_func","toString","slice","$index","childrenColors","substr","field","dataFilter","v","highlighting","hideAllOthers","hideOther","timerInterval","setSelection","expect_points","expectedInterval","conf","preOne","lastOne","cin","limits","series_range","l0","rangeBarLabels","objNeed2Add","dataLength","tempObj","rangeSeries","points","connected","connectSeparatedPoints","currentStore","childTrees","_init","arr","devicesMatchData","splice","updateChildrenDetailChart","rangeChildrenData","_device","updateDetailChart","rangeData","group","fetchData","values","node","array","Array","apply","ordinalRangeData","intevalforshow","rangeTree","allData","first","newData","thePoint","endOf","toDate","updateChart","deviceDatas","devicesInfo","merge","extension","deviceObj","updateChildrenChart","leftAndRight","left","leftYAxis","right","rightYAxis","allXLabels","yRange","originalData","odata","childrenRangeConfig","y2label","axisLabelFormatter","d","Number","newTime","initScale","tempData","tempTime","dateTime","chartData","nt","timeTicket","lineData","_tempVisibility","currentVisibility_","highlightCallback","pts","seriesName","maxWidth","offsetWidth","sn","point_show","colorIndex","legendText_device_name","tz","guess","xval","yval","point","canvasy","canvasx","legendbox","$apply","legendTop","legendLeft","unhighlightCallback","axesRight","axesLeft","_levelConfig","autoUpdateChart","rangeSeriesNumber","drillDown","open","showOne","lastIndexOf","btntimer","btnZoomInVLeft","btnZoomOutVLeft","btnZoomInVRight","btnZoomOutVRight","btnPanVULeft","btnPanVDLeft","btnPanVURight","btnPanVDRight","btnpanleft","panRange","pan_delta","startDate","endDate","btnpanright","btnzoomin","rangeStart","rangeEnd","btnzoomout","currentGxAxisRange","refershTimer","init","childGraph","fgpWidgetPageTitle","minHeight","subtitle","text","fgpWidgetMap","location","markers","details","$parent","latitude","longitude","center","fgpWidgetDeviceDetail","fgpWidgetSpan","fgpWidgetPie","ctx","chart","Chart","datasets","backgroundColor","options","responsive","maintainAspectRatio","animation","pieData","update","fgpDockerButton","show_dom","stats","confData","repeateId","pageDevice","container","checkShow","shown","split","healthinfo","action","func","script","relationship","successCallback","errorCallback","fgpWidgetRepeatContainer","$websocket","labelstyle","listStyle","deviceType","dataStream","onMessage","message","backData","State","Health","Status","fgpImage","fgpIcon","icon","content","desc","fgpWidgetAppContainer","containers","containerswithTimeout","showstyle","pp","gotoContainer","showLabel","app","timer_index","t","newTimer","itemIndex","fgpWidgetChartTable","chartId","sampledata","collectionName","groupName","formatter","record","cleanData","service","input","setTree","localStorage","getTree","addTree","clear","directive","$last","CacheFactoryProvider","extend","defaults","maxAge","deleteOnExpire","CacheFactory","graphCache","HideLines","hideLines","opt_options","activate","rectSelection","canvas_","document","createElement","setAttribute","clearRect","graphDiv","clientWidth","clientHeight","opts","appendChild","canDraw_","mousePosition","startX","startY","getContext","addEventListener","cursor","width_","height_","strokeStyle","strokeRect","rect","endX","endY","toDataXCoord","maxY","toDataYCoord","minY","_graphData","_series","getLabels","choosedSeries","destroy","window","arguments$1","arguments","OPTIONS","dygraphs","prevCallbacks","parseOpts","Object","optName","readycount","ready","callBackTypes","k","getFunctionOption","attachZoomHandlers","attachSelectionHandlers","detach","gs","syncOpts","block","me","initial","idx","getRowForX","clearSelection","root","ng","jq","QueryBuilder","_fields","_singleRule","_template","_link","_controller","currentOperator","defaultConditions","rules","condition","operator","addNewRule","removeRule","rule","ridIndex","changeCondition","prop","changeField","generateCallback"],"mappings":"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","file":"fgp.kit.bundle.min.js","sourcesContent":["/**\n * fgp-kit\n * @version 1.0 - Homepage <http://www.future-grid.com.au>\n * @copyright (c) 2013-2016 Eric.Wang <flexdeviser@gmail.com>\n * @license Apache2. \n * @overview fgp.kit.js is a useful toolkit for future-grid's clients.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular'), require('jquery'), require('dygraphs'), require('ngmap'), require('chart.js')) :\n    typeof define === 'function' && define.amd ? define(['angular', 'jquery', 'dygraphs', 'ngmap', 'chart.js'], factory) :\n    (global.fgp_kit = factory(global.angular,global.$,global.Dygraph,global.ngmap,global.chartJS));\n}(this, (function (angular$1,jquery,Dygraph,ngmap,chart_js) {\n\nangular$1 = 'default' in angular$1 ? angular$1['default'] : angular$1;\nDygraph = 'default' in Dygraph ? Dygraph['default'] : Dygraph;\n\n/**\n * Created by ericwang on 10/06/2016.\n */\nvar fgpStage = function fgpStage() {\n    this.scope = {\n        applicationName: \"=\",\n        deviceName: \"=\",\n        server: \"=\",\n        configuration: '=',\n        scatterColors: \"=\",\n        standalone: \"=\",\n        interactions: \"=\",\n        drill: \"=\",\n        highlights: \"=\",\n        eventsHandler: \"=\"\n    };\n    this.replace = true;\n    this.restrict = 'A';\n};\n\nfgpStage.prototype.template = function template () {\n    return '<div id=\"pageStage\" class=\"wrapper col-md-12 col-xl-12\" style=\"background-color: #fff;height:100%;padding: 0px;\">' +\n        '</div>';\n};\n\nfgpStage.prototype.controller = function controller ($scope, $element, $timeout, $rootScope, $compile, dataService, $interval) {\n    $scope.showdata = {};\n\n    if ($scope.scatterColors && $scope.scatterColors.length > 0) {\n        dataService.setColors($scope.scatterColors);\n    }\n\n\n    $rootScope['applicationName'] = $scope.applicationName;\n    $rootScope['host'] = $scope.server;\n    $rootScope['device'] = $scope.deviceName;\n    $rootScope['standalone'] = $scope.standalone;\n\n\n    var graphBindingArray = [];\n\n\n    function findChild4Repeat(parentId, parentHtmlObj, arrayItems, newId, newScope) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n\n                newScope.showdata[id] = arrayItems[i];\n                if (parentHtmlObj.attr(\"repeat-id\")) {\n                    newScope.repeat = parentHtmlObj.attr(\"repeat-id\");\n                }\n                if (parentHtmlObj.find('#edit' + parentId).find(\"#\" + id).length == 0) {\n                    parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)(newScope));\n                }\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems, newScope);\n            } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                newScope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)(newScope));\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems, newScope);\n            }\n        }\n    }\n\n    function findChild(parentId, parentHtmlObj, arrayItems, newScope) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                newScope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)(newScope));\n                findChild(arrayItems[i].id, currentItem, arrayItems, newScope);\n            } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                newScope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)(newScope));\n                findChild(arrayItems[i].id, currentItem, arrayItems, newScope);\n            }\n        }\n    }\n\n    var newScope = null;\n    $scope.$watch('deviceName', function(newVal, oldVal) {\n        if (newVal) {\n            $element.empty();\n            if (newScope) {\n                newScope.$destroy();\n            }\n            newScope = $rootScope.$new(true);\n            newScope[\"showdata\"] = {};\n\n            newScope.$on('bindChildChartEvent', function(evt, msg) {\n                graphBindingArray.push(msg);\n            });\n\n            newScope[\"interactions\"] = $scope.interactions;\n            newScope[\"drill\"] = $scope.drill;\n            newScope[\"highlights\"] = $scope.highlights;\n            newScope[\"eventsHandler\"] = $scope.eventsHandler;\n\n            newScope.$on('bindChildRepeatEvent', function(evt, msg) {\n                angular$1.forEach($scope.configuration, function(item) {\n                    if (item.id == msg.id) {\n                        var items = angular$1.element(\"body\").find(\"#\" + item.id).children();\n                        angular$1.forEach(items, function(item_new) {\n                            newScope.showdata[item_new.id] = item;\n                            var currentElement = angular$1.element(item_new);\n                            if (currentElement.attr(\"dulp\")) {\n                                var groupItems = angular$1.element(\"body\").find(\"div[dulp='\" + item.id + \"']\");\n                                angular$1.forEach(groupItems, function(dulpItem) {\n                                    findChild4Repeat(item.id, angular$1.element(dulpItem), $scope.configuration, item_new.id, newScope);\n                                });\n                            } else {\n                                findChild4Repeat(item.id, currentElement, $scope.configuration, item_new.id, newScope);\n                            }\n                        });\n                    }\n                });\n            });\n\n            newScope.$on('listStyleEvent', function(evt, param) {\n                var config = newScope.showdata[param.id.replace(\"edit\", \"\")];\n                param.callback(config.metadata.data.datasource.style);\n            });\n\n\n            newScope.$on('fetchWidgetMetadataEvent', function(evt, msg) {\n                angular$1.forEach(newScope.showdata, function(metadata, key) {\n                    if (key == msg.id) {\n                        msg.callback({\n                            data: metadata,\n                            from: 'show'\n                        });\n                        return;\n                    }\n                });\n            });\n\n            // refersh\n            angular$1.forEach($scope.configuration, function(item) {\n                if ('workingArea' === item.parent) {\n                    var currentItem = angular$1.element(item.html_render);\n                    newScope.showdata[item.id] = item;\n                    $element.append($compile(currentItem)(newScope));\n                    findChild(item.id, currentItem, $scope.configuration, newScope);\n                }\n            });\n            /**\n             * get device information\n             */\n            if ($scope.deviceName && $scope.deviceName != \"\" && \"undefined\" != $scope.deviceName) {\n                // first time\n                sendDeviceData(newScope);\n            }\n            // all item created;\n            $timeout(function() {\n                angular$1.forEach(graphBindingArray, function(graph) {\n                    newScope.$broadcast('bindFatherGraphEvent', {\n                        parent: graph.graphs,\n                        children: graph.children\n                    });\n                });\n            });\n        }\n    });\n\n\n    var sendDeviceData = function(newScope) {\n        dataService.deviceInfo($scope.server, $scope.deviceName, null, $scope.applicationName).then(function(data) {\n            // send device info to all widget\n            $timeout(function() {\n                newScope.$broadcast('deviceInfoEvent', {\n                    device: data,\n                    from: 'application'\n                });\n            });\n        });\n    };\n};\nfgpStage.buildFactory = function buildFactory () {\n    fgpStage.instance = new fgpStage();\n    return fgpStage.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar dataAccessApi = function dataAccessApi($http, $q, $cacheFactory, $interval, graphDataService, $location) {\n    this._$http = $http;\n    this._$q = $q;\n    this._$location = $location;\n    // get cache\n    this.indexCache = $cacheFactory('indexCache');\n    this.deviceStores = $cacheFactory('deviceStores');\n    this._$interval = $interval;\n    this._$graphDataService = graphDataService;\n};\n\n\n/**\n * sync using JQuery\n * @param deviceName\n * @param deviceKey\n * @param applicationName\n * @returns {*}\n */\ndataAccessApi.prototype.deviceInfo = function deviceInfo (host, deviceName, deviceKey, applicationName) {\n    var ip = this._$location.host();\n    var port = this._$location.port();\n    var protocol = this._$location.protocol();\n    if (!host || host.indexOf(\"http://localhost:8081\") != -1 || host == \"\") {\n        // change it to real sever host + port\n        host = protocol + \"://\" + ip + \":\" + port;\n    }\n\n    var deferred = this._$q.defer();\n    var url = host + \"/rest/api/\";\n\n    if (applicationName) {\n        url += \"app/\" + applicationName;\n    }\n\n    if (deviceName) {\n        url += '/devices/' + deviceName;\n    } else if (deviceKey) {\n        url += 'devices?key=' + deviceKey;\n    }\n\n    var httpServices = this._$http;\n    var qServices = this._$q;\n\n    httpServices({\n        method: 'GET',\n        url: url,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }).success(function(data) {\n        var url = host + \"/rest/api/\";\n        if (applicationName) {\n            url += \"app/\" + applicationName + \"/devices/extension-types\";\n        } else {\n            url += \"devices/extension-types\";\n        }\n        //get all extension types\n        httpServices({\n            method: 'GET',\n            url: url,\n            params: {\n                'device_type': data.type\n            },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).success(function(types) {\n            if (!types || types.length == 0) {\n                deferred.resolve(data);\n            } else {\n                var extensionRequests = [];\n                var url = host + \"/rest/api/\";\n                if (applicationName) {\n                    url += \"app/\" + applicationName + \"/devices/extensions\";\n                } else {\n                    url += \"devices/extensions\";\n                }\n                angular$1.forEach(types, function(type) {\n                    // extension types\n                    extensionRequests.push(\n                        httpServices({\n                            method: 'GET',\n                            params: {\n                                'device_name': deviceName,\n                                'extension_type': type.name\n                            },\n                            url: url,\n                            headers: {\n                                'Content-Type': 'application/json'\n                            }\n                        }).catch(function(info) {\n                            console.warn(info);\n                        })\n                    );\n                });\n\n                qServices.all(extensionRequests).then(function(result) {\n                    result.forEach(function(extensionItem) {\n                        if (extensionItem && extensionItem.data) {\n                            data[extensionItem.data.type.name] = extensionItem.data;\n                        }\n                    });\n                    deferred.resolve(data);\n                }, function(errors) {\n                    deferred.reject(error);\n                });\n            }\n        }).error(function(error) {\n            deferred.reject(error);\n        });\n\n    }).error(function(error) {\n        deferred.reject(error);\n    });\n\n    return deferred.promise;\n};\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.deviceInitInfo = function deviceInitInfo (host, application, deviceKey, storeSchema, rangeLevel, otherLevels, fields) {\n    var ip = this._$location.host();\n    var port = this._$location.port();\n    var protocol = this._$location.protocol();\n    if (!host || host.indexOf(\"http://localhost:8081\") != -1 || host == \"\") {\n        // change it to real sever host + port\n        host = protocol + \"://\" + ip + \":\" + port;\n    }\n\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            'otherLevels': otherLevels,\n            'fields': [].concat(fields)\n        },\n        // cache: this.deviceStores\n    }).then(\n        function(response) {\n            deferred.resolve(response.data);\n        },\n        function(response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.childrenDeviceInitInfo = function childrenDeviceInitInfo (host, application, deviceKey, storeSchema, relationType, relationDeviceType, rangeLevel, otherLevels, fields) {\n    var ip = this._$location.host();\n    var port = this._$location.port();\n    var protocol = this._$location.protocol();\n    if (!host || host.indexOf(\"http://localhost:8081\") != -1 || host == \"\") {\n        // change it to real sever host + port\n        host = protocol + \"://\" + ip + \":\" + port;\n    }\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/children/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            relationType: relationType,\n            relationDeviceType: relationDeviceType,\n            otherLevels: otherLevels,\n            fields: [].concat(fields),\n            isSame: true\n        },\n        // cache: this.deviceStores\n    }).then(\n        function(response) {\n            deferred.resolve(response.data);\n        },\n        function(response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.childrenExtensionInitInfo = function childrenExtensionInitInfo (host, application, deviceKey, storeSchema, relationType, relationDeviceType, extensionType, rangeLevel, otherLevels, fields) {\n    var ip = this._$location.host();\n    var port = this._$location.port();\n    var protocol = this._$location.protocol();\n    if (!host || host.indexOf(\"http://localhost:8081\") != -1 || host == \"\") {\n        // change it to real sever host + port\n        host = protocol + \"://\" + ip + \":\" + port;\n    }\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/children/' + deviceKey + '/' + storeSchema + '/' + rangeLevel + '/' + extensionType, {\n        params: {\n            relationType: relationType,\n            relationDeviceType: relationDeviceType,\n            otherLevels: otherLevels,\n            fields: [].concat(fields),\n            isSame: true\n        },\n        // cache: this.deviceStores\n    }).then(\n        function(response) {\n            deferred.resolve(response.data);\n        },\n        function(response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.devicesExtensionInitInfo = function devicesExtensionInitInfo (host, application, devicesKey, storeSchema, extensionType, rangeLevel, otherLevels, fields) {\n    var ip = this._$location.host();\n    var port = this._$location.port();\n    var protocol = this._$location.protocol();\n    if (!host || host.indexOf(\"http://localhost:8081\") != -1 || host == \"\") {\n        // change it to real sever host + port\n        host = protocol + \"://\" + ip + \":\" + port;\n    }\n    var result = {};\n    var promises = [];\n    var __http = this._$http;\n    angular$1.forEach(devicesKey, function(deviceKey) {\n        if (deviceKey != null) {\n            var promise = __http.get(host + '/rest/api/app/' + application + '/store/index/' + deviceKey + '/' + storeSchema + '/' + rangeLevel + '/' + extensionType, {\n                params: {\n                    otherLevels: otherLevels,\n                    fields: [].concat(fields),\n                    isSame: true\n                },\n                // cache: this.deviceStores\n            }).then(\n                function(response) {\n                    return response.data;\n                },\n                function(response) {\n                    console.error(response.data);\n                }\n            );\n            promises.push(promise);\n        }\n    });\n    // call $q.all on the other side\n    return promises;\n};\n\n\n\ndataAccessApi.prototype.fillChildrenTree = function fillChildrenTree (buckets, tree, showData) {\n\n    if (tree.children[0] != null) {\n        fillChildrenTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillChildrenTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n\n        angular$1.forEach(buckets, function(value, key) {\n            if (key == tree.id && value != null) {\n                tree.data = value;\n                tree['size'] = value.length;\n\n                var flag = false;\n                angular$1.forEach(showData, function(data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        tree['size'] = value.length;\n                        flag = true;\n                    }\n                });\n\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n};\n\n\ndataAccessApi.prototype.fillTree = function fillTree (buckets, tree, showData) {\n    if (tree.children[0] != null) {\n        fillTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        angular$1.forEach(buckets, function(value, key) {\n            if (key == tree.id) {\n                tree.data = value;\n                tree['size'] = value.size;\n                var flag = false;\n                angular$1.forEach(showData, function(data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        data['size'] = tree.size;\n                        flag = true;\n                    }\n                });\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n\n};\n\ndataAccessApi.prototype.calTree = function calTree (buckets, tree, start, end) {\n    if (tree.children[0] != null) {\n        calTree(buckets, tree.children[0], start, end);\n    }\n\n    if (tree.children[1] != null) {\n        calTree(buckets, tree.children[1], start, end);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        // is overlap?\n        if (((start >= tree.start) && start < tree.end) ||\n            ((start > tree.start) && start <= tree.end) ||\n            ((tree.start >= start) && tree.start < end) ||\n            ((tree.start > start) && tree.start <= end)) {\n            if (buckets.filter(function(elem) {\n                    return elem.id == tree.id\n                }).length == 0) {\n                buckets.push(tree);\n            }\n        }\n    }\n};\n\n\n/**\n *\n * @param application\n * @param deviceInfo deviceKey and tree\n * @param storeSchema\n * @param store\n * @param start\n * @param end\n */\ndataAccessApi.prototype.devicesStoreData = function devicesStoreData (id, host, application, deviceInfo, storeSchema, store, start, end, fields, interval) {\n    var ip = this._$location.host();\n    var port = this._$location.port();\n    var protocol = this._$location.protocol();\n    if (!host || host.indexOf(\"http://localhost:8081\") != -1 || host == \"\") {\n        // change it to real sever host + port\n        host = protocol + \"://\" + ip + \":\" + port;\n    }\n\n    var start_point = new Date().getTime();\n    if (!deviceInfo || deviceInfo.length == 0) {\n        return false;\n    }\n\n    var devices = \"[\";\n\n    deviceInfo.forEach(function(device, index) {\n        if (index < deviceInfo.length - 1) {\n            devices += \"\\\"\" + device.name + \"\\\",\";\n        } else {\n            devices += \"\\\"\" + device.name + \"\\\"]\";\n        }\n    });\n    //\n    var $graphDataService = this._$graphDataService;\n    // new way to get the data without tree index.\n    var deferred = this._$q.defer();\n    if (start instanceof Date) {\n        start = start.getTime();\n    }\n    if (end instanceof Date) {\n        end = end.getTime();\n    }\n    // send request to back-end // TODO: change it to post\n    this._$http({\n        method: 'POST',\n        url: host + '/rest/api/app/' + application + '/store/devices/store/data/' + storeSchema + '/' + store,\n        data: {\n            \"devices\": devices,\n            \"fields\": JSON.stringify(fields),\n            \"start\": start,\n            \"end\": end\n        }\n    }).then(\n        function(response) {\n            var result = {};\n            var data = response.data;\n            for (key in data) {\n                var deviceGraphData = $graphDataService.get(key + \"/\" + store + \"/\" + id) ? $graphDataService.get(key + \"/\" + store + \"/\" + id) : [];\n                var newComeResult = data[key].data;\n                // TODO: make all the lines in same x-axis timeseries\n                result[key] = newComeResult;\n            }\n            var end_point = new Date().getTime();\n            console.info((end_point - start_point) / 1000 + \"s\");\n            deferred.resolve(result);\n        },\n        function(response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\ndataAccessApi.prototype.deviceStoreData = function deviceStoreData (id, host, application, deviceKey, storeSchema, store, tree, start, end, fields, interval) {\n\n    var ip = this._$location.host();\n    var port = this._$location.port();\n    var protocol = this._$location.protocol();\n    if (!host || host.indexOf(\"http://localhost:8081\") != -1 || host == \"\") {\n        // change it to real sever host + port\n        host = protocol + \"://\" + ip + \":\" + port;\n    }\n\n    var $graphDataService = this._$graphDataService;\n    // new way to get the data without tree index.\n    var deferred = this._$q.defer();\n    if (start instanceof Date) {\n        start = start.getTime();\n    }\n    if (end instanceof Date) {\n        end = end.getTime();\n    }\n    var needLoad = true;\n    if (!needLoad) {\n        // return data\n        deferred.resolve($graphDataService.get(deviceKey + \"/\" + store + \"/\" + id));\n    } else {\n        // send request to back-end\n        this._$http({\n            method: 'GET',\n            url: host + '/rest/api/app/' + application + '/store/devices/store/data/' + storeSchema + '/' + store + '?devices=[\"' + deviceKey + '\"]&fields=' + JSON.stringify(fields) + '&start=' + start + '&end=' + end\n        }).then(\n            function(response) {\n                // only return 1 device data\n                var deviceGraphData = $graphDataService.get(deviceKey + \"/\" + store + \"/\" + id) ? $graphDataService.get(deviceKey + \"/\" + store + \"/\" + id) : [];\n                var newComeResult = response.data[deviceKey].data;\n                newComeResult.forEach(function(item) {\n                    var flag = false;\n                    for (var i = 0; i < deviceGraphData.length; i++) {\n                        if (deviceGraphData[i].timestamp == item.timestamp) {\n                            deviceGraphData[i] = item;\n                            flag = true;\n                        }\n                    }\n                    if (!flag) {\n                        // add\n                        deviceGraphData.push(item);\n                    }\n                });\n                // order by timestamp\n                deviceGraphData.sort(function(a, b) {\n                    if (a.timestamp > b.timestamp) {\n                        return 1;\n                    } else if (a.timestamp < b.timestamp) {\n                        return -1;\n                    }\n                    return 0;\n                });\n                $graphDataService.put(deviceKey + \"/\" + store + \"/\" + id, deviceGraphData);\n                deferred.resolve(deviceGraphData);\n            },\n            function(response) {\n                deferred.reject(response.data);\n            }\n        );\n    }\n\n    return deferred.promise;\n};\n\ndataAccessApi.prototype.defaultColors = function defaultColors () {\n        var this$1 = this;\n\n    if (!this.colors) {\n        this['colors'] = [];\n        for (var i = 0; i < 300; i++) {\n            this$1.colors.push('#' + (function co(lor) {\n                return (lor += [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)]) &&\n                    (lor.length == 6) ? lor : co(lor);\n            })(''));\n        }\n    }\n    return this.colors;\n};\n\ndataAccessApi.prototype.setColors = function setColors (colors) {\n    this.colors = colors;\n};\n\n\n/**\n * device id\n * @param id\n */\ndataAccessApi.prototype.healthcheck = function healthcheck (application, id) {\n\n    if (id = null || id == \"\") {\n        return;\n    }\n    this._$http.get('/rest/api/app/' + application + '/docker/healthcheck/reports?id=' + id)\n        .success(function(response) {\n            console.info(response);\n            return response;\n        });\n\n\n};\n\n\ndataAccessApi.prototype.autoUpdateGraph = function autoUpdateGraph (application, device, schema, store, fields, count, callback) {\n    var _$interval = this._$interval;\n    var _$http = this._$http;\n    var fetcher = null;\n    this._$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n        .success(function(response) {\n            var last = -1;\n            var interval = -1;\n            if (response.trees && response.trees.length === 1) {\n                interval = response.trees[0].frequency;\n                last = response.trees[0].last.timeKey;\n            }\n            if (interval != -1) {\n                var start = last - (count * interval);\n                var end = last;\n                // first time\n                _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                    params: {\n                        \"devices\": JSON.stringify([device]),\n                        \"fields\": JSON.stringify(fields),\n                        \"start\": start,\n                        \"end\": end\n                    }\n                }).success(function(graphData) {\n\n                    // start task\n                    fetcher = _$interval(function() {\n                        _$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n                            .success(function(response) {\n                                if (response.trees && response.trees.length === 1) {\n                                    last = response.trees[0].last.timeKey;\n                                    start = last - (count * interval);\n                                    end = last;\n                                    _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                                        params: {\n                                            \"devices\": JSON.stringify([device]),\n                                            \"fields\": JSON.stringify(fields),\n                                            \"start\": start,\n                                            \"end\": end\n                                        }\n                                    }).success(function(graphData) {\n                                        // put the data back\n                                        callback(graphData[device], null, interval);\n                                    });\n                                }\n                            });\n                    }, interval);\n\n                    // put the data back\n                    callback(graphData[device], fetcher, interval);\n                });\n            }\n        });\n\n};\n\n\ndataAccessApi.buildFactory = function buildFactory ($http, $q, $cacheFactory, $interval, graphDataService, $location) {\n    dataAccessApi.instance = new dataAccessApi($http, $q, $cacheFactory, $interval, graphDataService, $location);\n    return dataAccessApi.instance;\n};\n\ndataAccessApi.$inject = ['$http', '$q', '$cacheFactory', '$interval', 'graphDataService', '$location'];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetContainer = function fgpWidgetContainer() {\n    this.restrict = 'E';\n    this.scope = {\n        interactions: \"=\",\n        drill: \"=\",\n        highlights: \"=\",\n        eventsHandler:\"=\"\n    };\n};\n\nfgpWidgetContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\" style=\"margin-top:10px;margin-bottom:10px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding: 0px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}}\">{{css.title.text}}</div>' +\n        '<div class=\"panel-body\" id=\"edit' + element_id + '\" style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '\" style=\"margin-top:2px;margin-bottom:2px;\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-top:10px;margin-bottom:10px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n\n};\n\nfgpWidgetContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n    if (metadata.data) {\n        $scope.data[\"source\"] = metadata.data.source;\n        if ($scope.data && $scope.data.source.device && $scope.data.source.device != -1) {\n\n            if ($scope.data.source.device) {\n                /**\n                 * get device information\n                 */\n                dataService.deviceInfo($rootScope.host, JSON.parse($scope.data.source.device).name, null, $rootScope.applicationName).then(function (data) {\n                    // send device info to all widget\n                    $timeout(function () {\n                        $rootScope.$broadcast('deviceInfoEvent', {device: data, from: element_id});\n                    });\n                });\n            }\n\n        }\n    }\n\n};\n\n\nfgpWidgetContainer.buildFactory = function buildFactory () {\n    fgpWidgetContainer.instance = new fgpWidgetContainer();\n    return fgpWidgetContainer.instance;\n};\n\nfgpWidgetContainer.$inject = [];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetGraph = function fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams, $compile, $q) {\n    this.restrict = 'E';\n    this.scope = {\n        interactions: \"=\",\n        drill: \"=\",\n        highlights: \"=\",\n        eventsHandler: \"=\"\n    };\n    this.$timeout = $timeout;\n    this._dataService = dataService;\n    this._$interval = $interval;\n    this._$q = $q;\n};\n\nfgpWidgetGraph.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    if (flag) {\n        var dom_loading = '<div ng-show=\"loadingShow\" id=\"loading_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\">' +\n            '<div class=\"rect1\"></div>' +\n            '<div class=\"rect2\"></div>' +\n            '<div class=\"rect3\"></div>' +\n            '<div class=\"rect4\"></div>' +\n            '<div class=\"rect5\"></div>' +\n            '</div></div>';\n\n\n        var dom_legend = '<li>{{legendText_device_name}}</li><li>{{legendText_datetime}}</li><li><label style=\"color: {{legendColor}}\">{{legendText_column}}</label>:{{legendText_value}}</li>';\n\n        var dom_empty_data = '<div ng-show=\"emptyDataShow\" id=\"emptydata_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\" style=\"width: 100%;\">' +\n            '<h1>Empty Data!</h1>' +\n            '</div></div>';\n\n        var dom_alert_info = '<span class=\"label label-warning\" ng-show=\"alertMessage\" style=\"color: #000;\">{{alertMessage}}</span>';\n\n        var dom_datetime_interval = '<div ng-show=\"rangeSelectorBar\" class=\"dropdown\"> <button class=\"btn btn-info dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">{{currentIntervalChoosed.name}}<span class=\"caret\"></span></button> <ul class=\"dropdown-menu\" style=\"font-size:12px;\"><li ng-repeat=\"interval in dateTimeIntervals\"><a href=\"javascript:;\" ng-click=\"changeInterval(interval)\">{{interval.name}}</a></li></ul> </div>';\n\n        //selectControl\n        var dom_rect = '<div>' +\n\n            '</div>';\n\n\n        var dom_series_list = '<div ng-show=\"currentView === 1\" class=\"dropdown\"> <button class=\"btn btn-warning dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">Devices<span class=\"caret\"></span></button> <ul class=\"dropdown-menu\" style=\"font-size:12px;height:auto;max-height:300px;overflow-x:hidden;\"><li ng-repeat=\"device in childrenDevices\"><input type=\"checkbox\" ng-click=\"showOrHideDevice(device)\" ng-checked=\"device.show\"/>{{device[childrenDeviceNameColumn]}}</li></ul> </div>';\n\n\n        var dom_real_time_grap = '<div class=\"modal fade \" id=\"real_time_graph_' + attrs.id + '\" role=\"dialog\">' +\n            '<div class=\"modal-dialog modal-lg\">' +\n            '<div class=\"modal-content\">' +\n            '<div class=\"col-md-12\"  style=\"padding-top:3px;height: 1px;background-color: #0e90d2;\" ng-style=\"{ \\'width\\': completionPercent + \\'%\\' }\"></div>' +\n            '<div class=\"modal-body\" style=\"width: 100%;height: 300px;\">' +\n            '<div class=\"real-time-graph\" style=\"width: 100%;height: 100%\"></div>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>';\n\n        var html = '<div id=\"legendbox' + attrs.id + '\" ng-show=\"legendText\" ng-style=\"{top:legendTop,left:legendLeft}\" style=\"border-radius:10px;background-color:#ffffff;position: absolute;border: 1px solid {{legendColor}};-moz-box-shadow: 5px 5px 5px #888888;box-shadow: 5px 5px 5px #888888;z-index: 99999999;margin-right: 5px;\"><ul style=\"list-style: none;list-style-position: inside;text-align: right;\">' + dom_legend + '</ul></div><div class=\"{{css.width}}\"><div class=\"col-md-12\" style=\"padding:0px;height:{{css.height}}px;-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\"><div class=\"row\"><div class=\"col-md-12\"><a class=\"tooltips btn btn-xs btn-info badge\" href=\"javascript:;\" ng-hide=\"interactions.graphs.btns.scatter == \\'hide\\'\" style=\"float: right;margin-right: 10px;\" ng-click=\"currentView = -currentView\"><i class=\"glyphicon glyphicon-transfer\"></i><span>Scatter View</span></a><div id=\"buttons_area\" style=\"\"></div><a ng-show=\"false\" class=\"tooltips btn btn-xs btn-info badge\" style=\"float: right;margin-right: 10px;\" ng-click=\"showRealTimeGraph()\" data-toggle=\"modal\"><span>Auto Update</span><i class=\"glyphicon glyphicon-random\"></i></a><a ng-show=\"selectControl\" class=\"tooltips btn btn-xs btn-info badge\" style=\"float: right;margin-right: 10px;\" ng-click=\"switchSelectFeature()\"><span>Select On Graph</span><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></a><div style=\"float: right; margin-right: 10px;\">' + dom_series_list + '</div><div style=\"float: right; margin-right: 10px;\">' + dom_datetime_interval + '</div><div ng-hide=\"true\" class=\"checkbox\" style=\"float: right;margin-right: 10px; margin-bottom: 5px; margin-top: 0;\" ng-model=\"fixInterval\" ng-click=\"fixInterval=!fixInterval\"><label><input type=\"checkbox\" ng-model=\"fixInterval\" ng-clicked=\"fixInterval\" ng-change=\"fixGraphWithGap_click()\"/>fixed interval</label></div><div style=\"float: right; margin-right: 10px;\"><label class=\"label-inline\" ng-repeat=\"item in intevals.device\"><span class=\"badge\" style=\"background-color: {{ item.name == currentIntervalName ? (locked_interval.name == item.name ? \\'#e57432;\\':\\'#009900;\\') : (locked_interval.name == item.name ? \\'#e57432;\\':\\'\\') }}\" ng-click=\"lock(item)\">{{item.name}}</span></label></div><div style=\"float: right; margin-right: 10px;\">' + dom_alert_info + '</div></div></div><div style=\"position: relative;width: 100%;height:100%;\"><div style=\"position: absolute;left:25px;z-index: 999;\" ng-show=\"basicInfo.zoom\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVULeft()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDLeft()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVLeft()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVLeft()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div><div class=\"line-chart-graph\" style=\"width: 100%;height:100%;\" ng-dblclick=\"drillDown()\" ng-click=\"singleClickEventHandler()\"></div><div style=\"position: absolute;right:-15px;top:0px;z-index: 999;\" ng-show=\"checkY2Btns()\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVURight()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDRight()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVRight()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVRight()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div>' + dom_loading + dom_empty_data + '<div class=\"row\"><div class=\"col-md-12\" style=\"min-height: 30px;\"></div><div class=\"col-md-6\" style=\"text-align: left;\" ng-show=\"rangeSelectorBar\">{{rangeSelectorBar.xAxisRange()[0] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-6\" style=\"text-align: right;\" ng-show=\"rangeSelectorBar\">{{rangeSelectorBar.xAxisRange()[1] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-12\" style=\"min-height: 40px;position: relative\"><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;left: 20px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanleft()\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanright()\"><i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></div><div class=\"range-selector-bar\" style=\"height: 0px;margin-top: 30px;width: 100%;position: absolute;\"></div><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;right: -5px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomin()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomout()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div></div></div>' + dom_real_time_grap;\n\n        return html;\n    }\n};\n\nfgpWidgetGraph.prototype.link = function link (scope, element, attrs) {\n    scope['defaultColors'] = this._dataService.defaultColors();\n    var dataService = this._dataService;\n    var _$interval = this._$interval;\n    scope.status = true;\n    var timeOut = this.$timeout;\n    scope.completionPercent = 0;\n    scope.graphId = attrs.id;\n    this.$timeout(function() {\n        var getData = function(numSeries, numRows, name) {\n            var result = {\n                labels: null,\n                data: null\n            };\n            var data = [];\n            var labels = [];\n            //init date\n            var initDate = new Date(\"2014/01/01 00:00:00\");\n            for (var j = 0; j < numRows; ++j) {\n                data[j] = [new Date(initDate.getTime() + 900000)];\n            }\n            for (var i = 0; i < numSeries; ++i) {\n                labels.push(name + i);\n                var val = 0;\n                for (var j = 0; j < numRows; ++j) {\n                    val += Math.random() - 0.5;\n                    data[j][i + 1] = val;\n                }\n            }\n            result.labels = labels;\n            result.data = data;\n            return result;\n        };\n\n\n        var sampleData = getData(1, 10, 'Device');\n\n        function movePan(event, g, context, side) {\n            if(scope.memoryVisibility && scope.memoryVisibility.length == 0){\n                // store current visiability\n                // scope.changeVisibility(g);\n            }\n\n            context.dragEndX = Dygraph.dragGetX_(event, context);\n            context.dragEndY = Dygraph.dragGetY_(event, context);\n            // y-axis scaling is automatic unless this is a full 2D pan.\n            if (context.is2DPan) {\n                var pixelsDragged = context.dragEndY - context.dragStartY;\n                // Adjust each axis appropriately.\n                if (side == \"l\") {\n                    var axis = g.axes_[0];\n                    var axis_data = context.axes[0];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n                    var boundedValue = context.boundedValues ? context.boundedValues[0] : null;\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 0)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else if (side == 'r') {\n                    var axis = g.axes_[1];\n                    var axis_data = context.axes[1];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[1] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 1)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else {\n                    var minDate = context.initialLeftmostDate -\n                        (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n                    if (context.boundedDates) {\n                        minDate = Math.max(minDate, context.boundedDates[0]);\n                    }\n                    var maxDate = minDate + context.dateRange;\n                    if (context.boundedDates) {\n                        if (maxDate > context.boundedDates[1]) {\n                            // Adjust minDate, and recompute maxDate.\n                            minDate = minDate - (maxDate - context.boundedDates[1]);\n                            maxDate = minDate + context.dateRange;\n                        }\n                    }\n                    var zoomRange = g.xAxisZoomRange;\n\n                    if (!zoomRange) {\n                        return false;\n                    }\n\n                    if (g.xAxisZoomRange[0] instanceof Date) {\n                        zoomRange[0] = g.xAxisZoomRange[0].getTime();\n                    }\n                    if (g.xAxisZoomRange[1] instanceof Date) {\n                        zoomRange[1] = g.xAxisZoomRange[1].getTime();\n                    }\n\n                    if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                        return;\n                    }\n\n                    if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                        g.dateWindow_ = [Math.pow(Dygraph.LOG_SCALE, minDate),\n                            Math.pow(Dygraph.LOG_SCALE, maxDate)\n                        ];\n                    } else {\n                        g.dateWindow_ = [minDate, maxDate];\n                    }\n                }\n            }\n            g.drawGraph_(true);\n        }\n\n\n        function offsetToPercentage(g, offsetX, offsetY) {\n            // This is calculating the pixel offset of the leftmost date.\n            var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n            var yar0 = g.yAxisRange(0);\n\n            // This is calculating the pixel of the higest value. (Top pixel)\n            var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n            // x y w and h are relative to the corner of the drawing area,\n            // so that the upper corner of the drawing area is (0, 0).\n            var x = offsetX - xOffset;\n            var y = offsetY - yOffset;\n\n            // This is computing the rightmost pixel, effectively defining the\n            // width.\n            var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n            // This is computing the lowest pixel, effectively defining the height.\n            var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n            // Percentage from the left.\n            var xPct = w == 0 ? 0 : (x / w);\n            // Percentage from the top.\n            var yPct = h == 0 ? 0 : (y / h);\n\n            // The (1-) part below changes it from \"% distance down from the top\"\n            // to \"% distance up from the bottom\".\n            return [xPct, (1 - yPct)];\n        }\n\n\n        function zoom(g, zoomInPercentage, xBias, yBias, direction, side) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n\n            function adjustAxis(axis, zoomInPercentage, bias) {\n                var delta = axis[1] - axis[0];\n                var increment = delta * zoomInPercentage;\n                var foo = [increment * bias, increment * (1 - bias)];\n                return [axis[0] + foo[0], axis[1] - foo[1]];\n            }\n\n            xBias = xBias || 0.5;\n            yBias = yBias || 0.5;\n            var yAxes = g.axes_;\n            var newYAxes = [];\n            for (var i = 0; i < g.numAxes(); i++) {\n                if (yAxes[i].valueWindow) {\n                    newYAxes[i] = adjustAxis(yAxes[i].valueWindow, zoomInPercentage, yBias);\n                } else {\n                    newYAxes[i] = adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n                }\n            }\n            if ('v' == direction) {\n                if ('l' == side) {\n                    yAxes[0]['valueRange'] = newYAxes[0];\n                    yAxes[0]['valueWindow'] = newYAxes[0];\n                    if (scope.currentInitScaleLevelLeftConf) {\n                        scope.currentInitScaleLevelLeftConf.range = newYAxes[0];\n                    }\n                } else if ('r' == side && g.numAxes() == 2) {\n                    yAxes[1]['valueRange'] = newYAxes[1];\n                    yAxes[1]['valueWindow'] = newYAxes[1];\n                    if (scope.currentInitScaleLevelRightConf) {\n                        scope.currentInitScaleLevelRightConf.range = newYAxes[1];\n                    }\n                }\n                g.drawGraph_(true);\n            } else {\n                var ranges = [];\n                angular$1.forEach(g.xAxisRange(), function(range) {\n                    if (range instanceof Date) {\n                        ranges.push(range.getTime());\n                    } else {\n                        ranges.push(range);\n                    }\n                });\n\n                var newZoomRange = adjustAxis(ranges, zoomInPercentage, xBias);\n                // do not bigger than range data\n                var zoomRange = [];\n                if (g.hasOwnProperty(\"xAxisZoomRange\") && g.xAxisZoomRange) {\n                    zoomRange[0] = g.xAxisZoomRange[0];\n                    zoomRange[1] = g.xAxisZoomRange[1];\n                } else {\n                    zoomRange[0] = g.xAxisExtremes()[0];\n                    zoomRange[1] = g.xAxisExtremes()[1];\n                }\n                if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] >= newZoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [zoomRange[0], newZoomRange[1]]\n                    },false);\n                } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [newZoomRange[0], zoomRange[1]]\n                    },false);\n                } else {\n                    g.updateOptions({\n                        dateWindow: newZoomRange\n                    },false);\n                }\n            }\n        }\n\n\n        var canScroll = false;\n\n        var timer = null;\n        var mouseOverHandler = function(e, g, context) {\n            //\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function() {\n                timer=null;\n                canScroll = true;\n            }, 1000);\n        };\n\n\n        var mouseEnterHandler = function(e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function() {\n                timer=null;\n                canScroll = true;\n            }, 1000);\n        };\n\n        var mouseOutHandler = function(e, g, context) {\n            // set flag to false\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            canScroll = false;\n        };\n\n        var scroll = function(e, g, context) {\n\n            if ((scope.basicInfo && !scope.basicInfo.zoom) || !canScroll) {\n                return;\n            }\n\n            var normal;\n\n            if (e instanceof WheelEvent) {\n                normal = e.detail ? e.detail * -1 : e.deltaY / 40;\n            } else {\n                normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n            }\n\n            // For me the normalized value shows 0.075 for one click. If I took\n            // that verbatim, it would be a 7.5%.\n            var percentage = normal / 50;\n\n            if (!(e.offsetX && e.offsetY)) {\n                e.offsetX = e.layerX - e.target.offsetLeft;\n                e.offsetY = e.layerY - e.target.offsetTop;\n            }\n            var percentages = offsetToPercentage(g, e.offsetX, e.offsetY);\n            var xPct = percentages[0];\n            var yPct = percentages[1];\n            //\n            if (e.offsetX <= (g.plotter_.area.x)) {\n                // console.info(\"v\", \"l\")\n                // left zoom\n                zoom(g, percentage, xPct, yPct, 'v', 'l');\n            } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                // right zoom\n                // console.info(\"v\", \"r\")\n                zoom(g, percentage, xPct, yPct, 'v', 'r');\n            } else {\n                // middle zoom\n                if (scope.basicInfo && scope.basicInfo.range_show) {\n                    //\n                    zoom(g, percentage, xPct, yPct, 'h', null);\n                }\n            }\n            Dygraph.cancelEvent(e);\n            timeOut(function() {\n                scope.chartDateWindow = g.xAxisRange();\n            });\n        };\n\n        var firstPoint = null;\n        var mousedownHandler = function(e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            context.initializeMouseDown(e, g, context);\n            firstPoint = e.clientX;\n            Dygraph.startPan(e, g, context);\n        };\n        var mousemoveHandler = function(e, g, context) {\n            if (context.isPanning) {\n                if (e.offsetX <= (g.plotter_.area.x)) {\n                    movePan(e, g, context, 'l');\n                } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                    movePan(e, g, context, 'r');\n                } else {\n                    movePan(e, g, context, 'h');\n                }\n                timeOut(function() {\n                    scope.chartDateWindow = scope.currentChart.xAxisRange();\n                });\n            }\n        };\n\n        var mouseupHandler = function(e, g, context) {\n            if (context.isPanning) {\n                Dygraph.endPan(e, g, context);\n            }\n\n            canScroll = true;\n        };\n\n        var interactionModel = {\n            'mousewheel': scroll,\n            'DOMMouseScroll': scroll,\n            'wheel': scroll,\n            'mousedown': mousedownHandler,\n            'mousemove': mousemoveHandler,\n            'mouseenter': mouseEnterHandler,\n            'mouseup': mouseupHandler,\n            // 'mouseover': mouseOverHandler,\n            'mouseout': mouseOutHandler\n        };\n\n\n        //init configuration\n        var configuration = {\n            drawGapEdgePoints: true,\n            'pointSize': 2,\n            legend: 'follow',\n            labelsKMB: true,\n            labelsSeparateLines: true,\n            // data formate\n            labels: ['x'].concat(sampleData.labels),\n            highlightSeriesOpts: {\n                strokeWidth: 1.5,\n                strokeBorderWidth: 1,\n                highlightCircleSize: 2\n            },\n            drawPoints: false,\n            drawAxesAtZero: false,\n            labelsDivStyles: {\n                'text-align': 'right',\n                'position': 'relative',\n                'display': 'inline-block'\n            },\n            yRangePad: 10,\n            // x label y label\n            ylabel: 'Value',\n            xlabel: 'Date',\n            colors: scope.defaultColors,\n            // multiple Y axis\n            series: {\n                'Device0': {\n                    axis: 'y2'\n                },\n                'Device4': {\n                    axis: 'y2'\n                }\n            },\n            // showRangeSelector: true,\n            axes: {\n                y: {\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                y2: {\n                    // set axis-related properties here\n                    'labelsKMB': true,\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                x: {\n                    // datetime format\n                    valueFormatter: function(y) {\n                        return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                    }\n                }\n            },\n            pointClickCallback: function(e, p) {\n                // if (scope.currentView != -1) {\n                // scope.showOne(p.name);\n                // }\n            },\n            drawCallback: function(g, isInit) {\n                if (scope.refersh) { // make sure \"scope.refersh\" doesn't call when the graph create first time.\n                    scope.refersh(g, isInit);\n                }\n            },\n            'interactionModel': interactionModel\n        };\n        configuration[\"plugins\"] = [];\n        if (Dygraph.Plugins.RectSelection) {\n            scope.selectControl = new Dygraph.Plugins.RectSelection({\n                highlight: function(series) {\n                    console.info(\"highlight:\" + series); // would be children devices in scatter view\n                    var tempArray = [];\n                    if (scope.highlights && scope.highlights.onExternal && scope.currentView == 1) {\n                        series.forEach(function(_item) {\n                            tempArray.push({\n                                'name': _item.substring(0, 16),\n                                'id': _item.substring(0, 16)\n                            });\n                        });\n                        scope.highlights.onExternal = [];\n                        scope.highlights.onExternal = tempArray;\n                    }\n                }\n            });\n            configuration[\"plugins\"].push(scope.selectControl);\n            scope.selectControlStatus = false;\n            scope.switchSelectFeature = function() {\n                if (scope.selectControlStatus) {\n                    scope.selectControl.disable();\n                    scope.selectControlStatus = false;\n                } else {\n                    scope.selectControl.enable();\n                    scope.selectControlStatus = true;\n                }\n            };\n        }\n\n\n        // if (Dygraph.Plugins.HideLines) {\n        // configuration[\"plugins\"].push(new Dygraph.Plugins.HideLines());\n        // }\n\n        scope.currentChart = new Dygraph(element.find(\"div[class='line-chart-graph']\")[0], sampleData.data, configuration);\n\n        element.find(\"canvas\").css(\"zIndex\", 99);\n        var timer_auto = null;\n        var process_bar_timer = null;\n        element.find(\"#real_time_graph_\" + attrs.id).on(\"hidden.bs.modal\", function() {\n            // put your default event here\n            _$interval.cancel(timer_auto);\n            _$interval.cancel(process_bar_timer);\n        });\n\n\n        //real-time-graph\n        element.find(\"#real_time_graph_\" + attrs.id).on('shown.bs.modal', function() {\n\n            var tempConifg = {\n                drawGapEdgePoints: true,\n                'pointSize': 3,\n                labelsKMB: true,\n                labelsSeparateLines: false,\n                drawPoints: false,\n                drawAxesAtZero: false,\n                labelsDivStyles: {\n                    'text-align': 'right',\n                    'position': 'relative',\n                    'display': 'inline-block'\n                },\n                // x label y label\n                ylabel: 'Value',\n                xlabel: 'Date',\n                colors: scope.defaultColors,\n                // multiple Y axis\n                series: {\n                    'Device0': {\n                        axis: 'y2'\n                    },\n                    'Device4': {\n                        axis: 'y2'\n                    }\n                },\n                // showRangeSelector: true,\n                axes: {\n                    y: {\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    y2: {\n                        // set axis-related properties here\n                        'labelsKMB': true,\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    x: {\n                        // datetime format\n                        valueFormatter: function(y) {\n                            return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                        }\n                    }\n                },\n                interactionModel: {}\n            };\n\n            scope.realTimeGraph = new Dygraph(element.find(\"div[class='real-time-graph']\")[0], sampleData.data, tempConifg);\n            scope.realTimeGraph.updateOptions(scope.currentChartOptions);\n            scope.realTimeGraph.updateOptions({\n                \"file\": [],\n                highlightSeriesOpts: {\n                    strokeWidth: 1.5,\n                    strokeBorderWidth: 1,\n                    highlightCircleSize: 2\n                }\n            });\n\n            timer_auto = dataService.autoUpdateGraph(scope.applicationName, scope.auto_device_name, scope.auto_schema, scope.auto_store, scope.auto_fields, element.find(\"div[class='real-time-graph']\").width() / 4, function(graph_data, worker, interval) {\n                // update graph\n                var deviceConfig = scope.auto_metadata.data.groups[1];\n                var collections = deviceConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var allLines = [];\n                //0 for y  1 for y2\n                var yRanges = [{\n                    min: null,\n                    max: null\n                }, {\n                    min: null,\n                    max: null\n                }];\n                angular$1.forEach(collections, function(collection) {\n                    if (collection.name == scope.auto_store) {\n                        angular$1.forEach(graph_data.data, function(line) {\n                            allLines.push([new Date(line.timestamp)]);\n                        });\n\n                        var showY2axis = false;\n                        angular$1.forEach(collection.rows, function(row) {\n                            labels.push(row.label);\n                            colors.push(row.color);\n\n\n                            if (row.yaxis == 0) {\n                                series[row.label] = {\n                                    'axis': 'y1'\n                                };\n                            } else {\n                                series[row.label] = {\n                                    'axis': 'y2'\n                                };\n                                showY2axis = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                            var filterF = null; // this is a function\n                            if (row.filter) {\n                                filterF = row.filter;\n                            }\n                            // add value\n                            var counter = 0;\n                            angular$1.forEach(allLines, function(realLine) {\n                                try {\n                                    var value = f(graph_data.data[counter]);\n                                    if ((filterF && filterF(falue)) || !filterF) {\n                                        realLine.push(value);\n                                        if (row.yaxis == 0) {\n                                            if (yRanges[0].min == null) {\n                                                yRanges[0].min = value;\n                                            }\n                                            if (yRanges[0].max == null) {\n                                                yRanges[0].max = value;\n                                            }\n                                            if (yRanges[0].min > value) {\n                                                yRanges[0].min = value;\n                                            }\n                                            if (yRanges[0].max < value) {\n                                                yRanges[0].max = value;\n                                            }\n                                        } else {\n                                            if (yRanges[1].min == null) {\n                                                yRanges[1].min = value;\n                                            }\n                                            if (yRanges[1].max == null) {\n                                                yRanges[1].max = value;\n                                            }\n                                            if (yRanges[1].min > value) {\n                                                yRanges[1].min = value;\n                                            }\n                                            if (yRanges[1].max < value) {\n                                                yRanges[1].max = value;\n                                            }\n                                        }\n                                    } else {\n                                        realLine.push(null);\n                                    }\n\n\n                                } catch (ex) {\n                                    realLine.push(null);\n                                }\n                                counter++;\n                            });\n                        });\n\n                        angular$1.forEach(yRanges, function(yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.min) * 0.10;\n                            } else {\n                                yrange.min = yrange.min - (yrange.max - yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max - yrange.min) * 0.10;\n                            }\n                        });\n\n                        var newLines = [];\n                        if (!showY2axis) {\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function(line) {\n                                line.push(null);\n                            });\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: newLines,\n                                axes: {\n                                    y: {\n                                        valueRange: [yRanges[0].min, yRanges[0].max]\n                                    },\n                                    y2: {\n                                        valueRange: [yRanges[1].min, yRanges[1].max]\n                                    }\n                                }\n                            });\n                        } else {\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: allLines,\n                                axes: {\n                                    y: {\n                                        valueRange: [yRanges[0].min, yRanges[0].max]\n                                    },\n                                    y2: {\n                                        valueRange: [yRanges[1].min, yRanges[1].max]\n                                    }\n                                }\n                            });\n                        }\n                    }\n                });\n                if (worker) {\n                    timer_auto = worker;\n                }\n                //\n                var perInterval = interval / 100;\n                var counter = 0;\n\n                if (process_bar_timer) {\n                    _$interval.cancel(process_bar_timer);\n                    counter = 0;\n                }\n                process_bar_timer = _$interval(function() {\n                    scope.completionPercent = counter;\n                    counter++;\n                }, perInterval, 100);\n            });\n        });\n        scope.currentChartOptions = {};\n        scope.showRealTimeGraph = function() {\n            element.find(\"#real_time_graph_\" + attrs.id).modal();\n        };\n        if (attrs.hasOwnProperty(\"shown\")) {\n            var basicInfo = scope.basicInfo;\n            if (basicInfo && basicInfo.range_show) {\n                scope.rangeSelectorBar = new Dygraph(element.find(\"div[class='range-selector-bar']\")[0], sampleData.data, {\n                    xAxisHeight: 0,\n                    axes: {\n                        x: {\n                            drawAxis: false\n                        }\n                    },\n                    showRangeSelector: true,\n                    rangeSelectorHeight: 30\n                });\n                scope.chartDateWindow = scope.rangeSelectorBar.xAxisRange();\n            }\n            var status = false;\n            // add mouse up event to range select\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mouseup', function(event) {\n                status = false;\n                timeOut(function() {\n                    var finalDateRagne = scope.currentChart.xAxisRange();\n                    scope.chartDateTime = {\n                        begin: finalDateRagne[0],\n                        end: finalDateRagne[1]\n                    };\n                });\n            });\n            scope.$on('mouseUpMessage', function($scope, e) {\n                if (\"mouseup\" === e.type && status) {\n                    status = false;\n                    timeOut(function() {\n                        var finalDateRange = scope.currentChart.xAxisRange();\n                        scope.chartDateTime = {\n                            begin: finalDateRange[0],\n                            end: finalDateRange[1]\n                        };\n                    });\n                }\n            });\n            scope.$on('parentScatterViewChangedEvent', function(event, params) {\n                angular$1.forEach(params.children, function(item) {\n                    if (item == attrs.id) {\n                        scope.currentView = params.view;\n                    }\n                });\n            });\n            scope.$on('bindFatherGraphEvent', function(event, data) {\n                angular$1.forEach(data.children, function(child) {\n                    if (child == attrs.id) {\n                        scope.currentChart[\"id\"] = attrs.id;\n                        Dygraph.synchronize([scope.currentChart].concat(data.parent), {\n                            zoom: true,\n                            selection: false,\n                            range: false\n                        });\n                        scope.currentChart.updateOptions({\n                            drawCallback: function(g, isInit) {\n                                // console.info(\"refersh running!\" + \" is  Init?\"+ isInit);\n                                scope.refersh(g, isInit, true);\n                            }\n                        });\n                    }\n                });\n            });\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousemove', function(event) {\n                if (status) {\n                    if(scope.memoryVisibility && scope.memoryVisibility.length == 0){\n                        // scope.changeVisibility(scope.currentChart);\n                    }\n                    timeOut(function() {\n                        scope.chartDateWindow = scope.currentChart.xAxisRange();\n                    });\n                }\n            });\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousedown', function(event) {\n                status = true;\n            });\n            //bind chart\n            if (basicInfo && basicInfo.childrenChart.length > 0) {\n                var param = {\n                    'graphs': [scope.currentChart],\n                    children: basicInfo.childrenChart\n                };\n                if (scope.rangeSelectorBar) {\n                    param.graphs.push(scope.rangeSelectorBar);\n                }\n                scope.$emit('bindChildChartEvent', param);\n            }\n        }\n    }, 0);\n};\n\n//controller: ['$scope', '$element', '$window', '$interval', '$timeout', '$filter', '$location', function ($scope, $element, $window, $interval, $timeout, $filter, $location) {\nfgpWidgetGraph.prototype.controller = function controller ($scope, $element, $window, $interval, $timeout, $filter, $location, dataService, $rootScope, $stateParams, graphDataService, $compile, $q) {\n    var element_id = $element.attr(\"id\");\n    $scope.elementId = element_id;\n\n    $scope['defaultColors'] = dataService.defaultColors();\n    var metadata = null;\n    var widgetData = null;\n    $scope.emptyDataShow = false;\n    // attributes----------------------\n    $scope.applicationName = $rootScope.applicationName;\n    $scope.alertMessage;\n    $scope.showY2Btns = false;\n    $scope.legendText = null;\n    $scope.legendText_device = null;\n    $scope.legendText_datetime = null;\n    $scope.legendText_column = null;\n    $scope.legendText_value = null;\n    $scope.legendColor = null;\n    $scope.autoupdate = false;\n    $scope.auto_device_name = \"\";\n    $scope.auto_schema = \"\";\n    $scope.auto_store = \"\";\n    $scope.auto_fields = [];\n\n    $scope.memoryVisibility = [];\n\n    // default data-time intervals\n    $scope.defaultTimeIntervals = [{\n            name: \"10 seconds\",\n            interval: 10000\n        },\n        {\n            name: \"30 seconds\",\n            interval: 30000,\n            scales: [10000]\n        },\n        {\n            name: \"1 minutes\",\n            interval: 60000,\n            scales: [10000, 30000]\n        },\n        {\n            name: \"5 minutes\",\n            interval: 300000,\n            scales: [30000, 60000]\n        },\n        {\n            name: \"30 minutes\",\n            interval: 1800000,\n            scales: [60000, 300000]\n        }, {\n            name: \"1 hour\",\n            interval: 3600000,\n            scales: [60000, 300000, 1800000]\n        }, {\n            name: \"1 day\",\n            interval: 86400000,\n            scales: [300000, 1800000, 3600000]\n        }, {\n            name: \"1 week\",\n            interval: 604800017,\n            scales: [3600000, 86400000]\n        }, {\n            name: \"1 month\",\n            interval: 2629800000,\n            scales: [86400000, 604800017]\n        }, {\n            name: \"1 year\",\n            interval: 31557600000,\n            scales: [2629800000]\n        }\n    ];\n    $scope.dateTimeIntervals = [].concat($scope.defaultTimeIntervals);\n    $scope.locked_interval = null;\n\n\n    $scope.changeVisibility = function(graph){\n            // store current visiability\n            $scope.memoryVisibility = graph.getOption('visibility');\n            // temp visibility\n            var _visibility = [];\n            $scope.memoryVisibility.forEach(function (vi){\n                _visibility.push(false);\n            });\n            // set visibility to false\n            // graph.updateOptions({\n            // 'visibility': _visibility\n            // },true);\n    };\n\n    $scope.chartDateWindow = [];\n    //\n    // $scope.$watchCollection('currentChart.dateWindow_', function(newVal, oldVal){\n    // //\n    // if(newVal && $scope.memoryVisibility && $scope.memoryVisibility.length == 0){\n    //     // $scope.changeVisibility($scope.currentChart);\n    //     console.info(\"!\");\n    // }else{\n    //     console.info(\"~\");\n    // }\n    // console.info(newVal);\n    // });\n\n    // lock interval\n    $scope.lock = function(interval) {\n        if ($scope.locked_interval) {\n            if ($scope.locked_interval == interval) {\n                $scope.locked_interval = null; // unlocked\n                if (!$scope.dateTimeIntervals) {\n                    $scope.dateTimeIntervals = [].concat($scope.defaultTimeIntervals);\n                }\n                // change default choosed interval\n                $scope.currentIntervalName = $scope.dateTimeIntervals[0].name;\n                $scope.currentIntervalChoosed = $scope.dateTimeIntervals[0];\n            } else {\n                $scope.locked_interval = interval; // locked\n                // change color\n                // change dropdown list\n                $scope.defaultTimeIntervals.forEach(function(item) {\n                    //\n                    if (item[\"scales\"] && item[\"scales\"].length > 0) {\n                        item[\"scales\"].forEach(function(_item) {\n                            if (_item == interval.interval) {\n                                //\n                                $scope.dateTimeIntervals.push(item);\n                            }\n                        });\n                    }\n                });\n                $scope.currentIntervalName = $scope.dateTimeIntervals[0].name;\n                $scope.currentIntervalChoosed = $scope.dateTimeIntervals[0];\n            }\n        } else {\n            $scope.locked_interval = interval;\n            // change color\n\n            // change dropdown list\n            // check the user default config first\n            if ($scope.dateTimeIntervals) {\n\n            } else {\n                $scope.defaultTimeIntervals.forEach(function(item) {\n                    //\n                    if (item[\"scales\"] && item[\"scales\"].length > 0) {\n                        item[\"scales\"].forEach(function(_item) {\n                            if (_item == interval.interval) {\n                                //\n                                $scope.dateTimeIntervals.push(item);\n                            }\n                        });\n                    }\n                });\n            }\n            $scope.currentIntervalName = $scope.dateTimeIntervals[0].name;\n            $scope.currentIntervalChoosed = $scope.dateTimeIntervals[0];\n        }\n        // change\n        $scope.changeInterval($scope.currentIntervalChoosed);\n    };\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id,\n        callback: function(data) {\n            if (data) {\n                widgetData = data;\n                if (widgetData.data.metadata.data.basic.ranges) {\n                    if (widgetData.data.metadata.data.basic.hasOwnProperty(\"ranges\")) {\n                        $scope.dateTimeIntervals = widgetData.data.metadata.data.basic.ranges;\n                        angular$1.forEach($scope.dateTimeIntervals, function(range) {\n                            range[\"interval\"] = range.value;\n                            if (range.checked == true) {\n                                $scope.currentIntervalChoosed = range;\n                            }\n                        });\n                    }\n                } else {\n                    $scope.currentIntervalChoosed = $scope.dateTimeIntervals[1];\n                }\n            }\n        }\n    });\n    $scope.changeInterval = function(interval) {\n        var range = $scope.currentChart[\"xAxisZoomRange\"];\n        if (range[0] instanceof Date) {\n            range[0] = range[0].getTime();\n        }\n        if (range[1] instanceof Date) {\n            range[1] = range[1].getTime();\n        }\n        if (interval && ((range[1] - interval.interval) >= range[0])) {\n            $scope.rangeConfig.dateWindow = [new Date(range[1] - interval.interval), range[1]];\n            $scope.currentChart.updateOptions($scope.rangeConfig);\n            $scope.currentIntervalChoosed = interval;\n        }\n    };\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.loadingShow = false;\n        $scope.intevals = {\n            device: []\n        };\n        // update chart\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if (widgetData.data.metadata.css) {\n            $scope.css = widgetData.data.metadata.css;\n        }\n        // get start and end from url\n        var begin_path = $stateParams.begin;\n        var end_path = $stateParams.end;\n        var init_flag = false;\n        //fix interval\n        $scope.fixInterval = false;\n        var noneFixed = [];\n        $scope.fixGraphWithGap = function() {\n            if ($scope.currentChart && $scope.fixInterval) {\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function(item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(null);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({\n                        file: fixed\n                    });\n                }\n            } else if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                $scope.currentChart.updateOptions({\n                    file: noneFixed\n                });\n            }\n        };\n        $scope.showOrHideDevice = function(device) {\n            angular$1.forEach($scope.childrenDevices, function(item, index) {\n                if (item.name === device.name) {\n                    var graph = $scope.currentChart;\n                    if (device.show == true) {\n                        graph.setVisibility(index, false);\n                        device.show = false;\n                    } else {\n                        graph.setVisibility(index, true);\n                        device.show = true;\n                    }\n\n                }\n            });\n        };\n        $scope.fixGraphWithGap_click = function() {\n            if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function(item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(null);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({\n                        file: fixed\n                    });\n                }\n            } else if ($scope.currentChart && $scope.fixInterval) {\n                $scope.currentChart.updateOptions({\n                    file: noneFixed\n                });\n            }\n        };\n        metadata = widgetData.data.metadata;\n        $scope.basicInfo = metadata.data.basic;\n        $scope.currentView = -1; // -1 is device view and 1 is scatter view\n        $scope.parent_container = widgetData.data.parent;\n        $scope.data_from = \"application\";\n        $scope.checkY2Btns = function() {\n            return $scope.basicInfo.zoom === true && $scope.showY2Btns === true;\n        };\n\n        $scope.selectedDevices = [];\n        $scope.singleClickEventHandler = function() {\n            if (!$scope.selectControlStatus) {\n                if ($scope.highlights && $scope.highlights.onExternal) {\n                    $scope.highlights.onExternal = [];\n                    // add only one point\n                    $scope.highlights.onExternal.push({\n                        name: $scope.currentHighLightChildDevice.substring(0, 16),\n                        id: $scope.currentHighLightChildDevice.substring(0, 16)\n                    });\n                }\n            }\n        };\n        //\n        if ($scope.highlights && $scope.highlights.onGraph) {\n            var highlight_timer_ = null;\n            $scope.$watchCollection(\"highlights.onGraph\", function(newValue, oldValue) {\n                if (newValue) {\n                    if (highlight_timer_) {\n                        $timeout.cancel(highlight_timer_);\n                    }\n                    highlight_timer_ = $timeout(function() {\n                        if ($scope.currentView == 1 && newValue && newValue.length > 0) {\n                            var highlightDeviceIndex = [];\n                            // uncheck\n                            $scope.childrenDevices.forEach(function (_child, _index) {\n                                _child.show = false;\n                            });\n                            angular$1.forEach(newValue, function(deviceName) {\n                                $scope.childrenDevices.forEach(function (_child, _index) {\n                                    if (_child.name == deviceName) {\n                                        highlightDeviceIndex.push(_index);\n                                        _child.show = true;\n                                    }\n                                });\n                            });\n                            // update graph\n                            var oldVisibility = $scope.currentChart.getOption('visibility');\n                            // reset by new Visibility\n                            oldVisibility.forEach(function(item, _index) {\n                                if (highlightDeviceIndex.indexOf(_index) != -1) {\n                                    oldVisibility[_index] = true;\n                                } else {\n                                    oldVisibility[_index] = false;\n                                }\n                            });\n                            $scope.currentChart.updateOptions({\n                                'visibility': oldVisibility\n                            });\n                        } else if ($scope.currentView == 1 && newValue && newValue.length == 0) {\n                            if ($scope.childrenDevices) {\n                                $scope.childrenDevices.forEach(function (_child, _index) {\n                                    _child.show = true;\n                                });\n                                //show all\n                                var oldVisibility = $scope.currentChart.getOption('visibility');\n                                // reset by new Visibility\n                                oldVisibility.forEach(function(item, _index) {\n                                    oldVisibility[_index] = true;\n                                });\n                                $scope.currentChart.updateOptions({\n                                    'visibility': oldVisibility\n                                });\n                            }\n                        }\n                    }, 1000);\n                }\n            });\n        }\n\n        $scope.$on('deviceInfoEvent', function(event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            $scope.auto_schema = metadata.data.source.store;\n            $scope.auto_metadata = metadata;\n            $scope.auto_device_name = deviceData.device.name;\n            $scope.$watch('currentView', function(nObj, oObj) {\n                // change\n                if (nObj != oObj) {\n                    if ($scope.eventsHandler && $scope.eventsHandler.viewChangeListener) {\n                        $scope.eventsHandler.viewChangeListener(nObj);\n                    }\n                    $scope.$emit('graphScatterViewChangeEvent', {\n                        children: $scope.basicInfo.childrenChart,\n                        view: nObj\n                    });\n                    $scope.button_handlers = {}; // clean handlers\n                    $element.find(\"#buttons_area\").empty();\n                    if (nObj == -1) {\n                        $scope.autoupdate = true;\n                        var rangeLevel = null;\n                        var otherLevels = [];\n                        angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                            if (level.rows.length > 0) {\n                                if (rangeLevel != null) {\n                                    otherLevels.push(rangeLevel);\n                                }\n                                rangeLevel = level.name;\n                            }\n                        });\n                        if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                            // show device view\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n                            angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                                if (level.rows.length > 0 && level.name === rangeLevel) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function(line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function(column) {\n                                                    if (column.startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n                            $scope.auto_fields = fields;\n                            dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function(data) {\n                                initChart(data, deviceData.device.name);\n                            }, function(error) {\n                                console.error(error);\n                            });\n                        }\n                    } else {\n                        $scope.autoupdate = false;\n                        //get relation config\n                        if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                            return;\n                        } else {\n                            var rangeLevel = null;\n                            var otherLevels = [];\n                            var relationConfig = metadata.data.groups[2];\n                            if (relationConfig.nameColumn) {\n                                $scope.childrenDeviceNameColumn = relationConfig.nameColumn;\n                            } else {\n                                $scope.childrenDeviceNameColumn = \"name\";\n                            }\n                            angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                                if (level.rows.length > 0) {\n                                    if (rangeLevel != null) {\n                                        otherLevels.push(rangeLevel);\n                                    }\n                                    rangeLevel = level.name;\n                                }\n                            });\n                            if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n                                angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                                    if (level.rows.length > 0 && level.name === rangeLevel) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function(line) {\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function(column) {\n                                                        if (column.startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n                                                }\n                                            });\n                                        }\n                                    }\n                                });\n                                $scope.auto_fields = fields;\n                                // show children view\n                                dataService.childrenExtensionInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, metadata.data.source.relation, metadata.data.source.relation_group, metadata.data.source.relation_group, rangeLevel, otherLevels, fields).then(function(data) {\n                                    if (data != null && data.length > 0) {\n                                        initChildrenChart(data);\n                                        interactionHandler();\n                                    } else if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.device && $scope.interactions.graphs.device.children) {\n                                        // no relationship in fgp platform just take it from interactions Configuration  extension_type\n                                        if ($scope.interactions.graphs.device.children.data) {\n                                            var devices_key = $scope.interactions.graphs.device.children.data().then(\n                                                function(data) {\n                                                    $q.all(dataService.devicesExtensionInitInfo($rootScope.host, $rootScope.applicationName, data, metadata.data.source.store, $scope.interactions.graphs.device.children.extension_type, rangeLevel, otherLevels, fields)).then(\n                                                        function(data) {\n                                                            initChildrenChart(data);\n                                                            interactionHandler();\n                                                        },\n                                                        function(error) {\n                                                            console.error(error);\n                                                        }\n                                                    );\n                                                },\n                                                function(error) {\n                                                    return;\n                                                }\n                                            );\n                                        } else {\n                                            return;\n                                        }\n                                    } else {\n                                        return;\n                                    }\n                                }, function(error) {\n                                    console.error(error);\n                                });\n\n                            }\n                        }\n                    }\n                }\n                $scope.fixInterval = false;\n            });\n            var interactionHandler = function() {\n                // interactions for scatter view\n                if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.buttons && $scope.interactions.graphs.buttons.scatter) {\n                    // 1. color\n                    if ($scope.interactions.graphs.buttons.scatter.color) {\n                        // change color by \"field\"\n                        var buttons = $scope.interactions.graphs.buttons.scatter.color;\n                        angular$1.forEach(buttons, function(button) {\n                            var buttons_html = '';\n                            // create an event handler\n                            var _func = '_' + (Math.random().toString(36).slice(2, 13));\n                            $scope.button_handlers[_func] = function() {\n                                var colors = [];\n                                // set button status\n                                if (button[\"active\"]) {\n                                    // make them oragin colors\n                                    angular$1.forEach($scope.childrenDevices, function(device, $index) {\n                                        if ($scope.childrenColors) {\n                                            $scope.childrenColors.forEach(function(_item) {\n                                                if (_item.name == device.name) {\n                                                    colors.push(_item.color);\n                                                }\n                                            });\n                                        } else {\n                                            // need to change\n                                            if ($scope.defaultColors[$index]) {\n                                                colors.push($scope.defaultColors[$index]);\n                                            } else {\n                                                colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                                            }\n                                        }\n                                    });\n                                    button[\"active\"] = false;\n                                } else {\n                                    // the custom func returns color.\n                                    var field = button.field;\n                                    var _func = button._func;\n                                    // devices\n                                    angular$1.forEach($scope.childrenDevices, function(device, $index) {\n                                        colors.push(_func(device[field]));\n                                    });\n                                    button[\"active\"] = true;\n                                }\n                                // update graph colors\n                                $scope.currentChart.updateOptions({\n                                    \"colors\": colors\n                                });\n                            };\n                            // create click event handler for this button and put it into $scope\n                            buttons_html += '<span class=\"btn btn-xs btn-info badge\" style=\"float:right;margin-right:10px;\" ng-click=\"button_handlers.' + _func + '();\">' + button.label + '</span>';\n                            // compile the html and add it into toolbar\n                            $element.find(\"#buttons_area\").append($compile(buttons_html)($scope));\n                        });\n                    }\n                    // 2. data filter\n                    if ($scope.interactions.graphs.buttons.scatter.dataFilter) {\n                        var buttons = $scope.interactions.graphs.buttons.scatter.dataFilter;\n\n                        angular$1.forEach(buttons, function(button) {\n                            var buttons_html = '';\n                            // create an event handler\n                            var _func = '_' + (Math.random().toString(36).slice(2, 13));\n                            $scope.button_handlers[_func] = function() {\n                                // set button status\n                                // the custom func returns color.\n                                var field = button.field;\n                                var _func = button._func;\n                                var v = [];\n                                // devices\n                                angular$1.forEach($scope.childrenDevices, function(device, $index) {\n                                    if (_func(device[field])) {\n                                        device.show = true;\n                                        // $scope.currentChart.setVisibility($index, true);\n                                        v[$index] = true;\n                                    } else {\n                                        device.show = false;\n                                        // $scope.currentChart.setVisibility($index, false);\n                                        v[$index] = false;\n                                    }\n                                });\n                                // update visibility once\n                                $timeout(function() {\n                                    var oldVisibility = $scope.currentChart.getOption('visibility');\n                                    // reset by new Visibility\n                                    v.forEach(function(item, _index) {\n                                        oldVisibility[_index] = item;\n                                    });\n                                    $scope.currentChart.updateOptions({\n                                        'visibility': oldVisibility\n                                    });\n                                });\n\n                            };\n                            // create click event handler for this button and put it into $scope\n                            buttons_html += '<span class=\"btn btn-xs btn-info badge\" style=\"float:right;margin-right:10px;\" ng-click=\"button_handlers.' + _func + '();\">' + button.label + '</span>';\n                            // compile the html and add it into toolbar\n                            $element.find(\"#buttons_area\").append($compile(buttons_html)($scope));\n                        });\n                    }\n                    // highlight   $scope.currentChart.setSelection(false, line);\n                    if ($scope.interactions && $scope.interactions.graphs && $scope.interactions.graphs.buttons && $scope.interactions.graphs.buttons.scatter && $scope.interactions.graphs.buttons.scatter.highlighting) {\n                        var buttons = $scope.interactions.graphs.buttons.scatter.highlighting;\n                        angular$1.forEach(buttons, function(button) {\n                            var buttons_html = '';\n                            // create an event handler\n                            var _func = '_' + (Math.random().toString(36).slice(2, 13));\n                            $scope.button_handlers[_func] = function() {\n                                // set button status\n                                // the custom func returns color.\n                                var field = button.field;\n                                var _func = button._func;\n                                var hideAllOthers = button.hideOther;\n                                // devices\n                                var timerInterval = 0;\n                                var v = [];\n                                angular$1.forEach($scope.childrenDevices, function(device, $index) {\n                                    if (_func(device[field])) {\n                                        $timeout(function() {\n                                            $scope.currentChart.setSelection(false, device[field]);\n                                        }, timerInterval);\n                                        timerInterval += 1000;\n                                        v[$index] = true;\n                                    } else {\n                                        if (hideAllOthers && hideAllOthers == true) {\n                                            device.show = false;\n                                            // $scope.currentChart.setVisibility($index, false);\n                                            v[$index] = false;\n                                        }\n                                    }\n                                });\n                                //\n                                // update visibility once\n                                $timeout(function() {\n                                    var oldVisibility = $scope.currentChart.getOption('visibility');\n                                    // reset by new Visibility\n                                    v.forEach(function(item, _index) {\n                                        oldVisibility[_index] = item;\n                                    });\n                                    $scope.currentChart.updateOptions({\n                                        'visibility': oldVisibility\n                                    });\n                                });\n                            };\n                            // create click event handler for this button and put it into $scope\n                            buttons_html += '<span class=\"btn btn-xs btn-info badge\" style=\"float:right;margin-right:10px;\" ng-click=\"button_handlers.' + _func + '();\">' + button.label + '</span>';\n                            // compile the html and add it into toolbar\n                            $element.find(\"#buttons_area\").append($compile(buttons_html)($scope));\n                        });\n                    }\n\n                }\n                // n. other.....\n            };\n            // first time of showing chart\n            $scope.$watch('currentChart', function(newValue) {\n                if (newValue) {\n                    //device first level\n                    var rangeLevel = null;\n                    var otherLevels = [];\n                    angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                        if (level.rows.length > 0) {\n                            if (rangeLevel != null) {\n                                otherLevels.push(rangeLevel);\n                            }\n                            rangeLevel = level.name;\n                        }\n                    });\n                    // fields of range level\n                    var fields = [];\n                    var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n                    angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                        if (level.rows.length > 0 && level.name === rangeLevel) {\n                            var lines = level.rows;\n                            if (lines) {\n                                angular$1.forEach(lines, function(line) {\n                                    //\n                                    if (line.value) {\n                                        var columns = (line.value).match(patt);\n                                        angular$1.forEach(columns, function(column) {\n                                            if ((column).startsWith('data.')) {\n                                                fields.push(column.replace('data.', ''));\n                                            }\n                                        });\n                                    }\n                                });\n                            }\n                        }\n                    });\n                    $scope.auto_fields = fields;\n                    //send a rest request\n                    dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function(data) {\n                        if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.scatter) {\n                            //call scatter view init.\n                            $scope.currentView = 1;\n                        } else {\n                            $scope.currentView = -1;\n                            initChart(data, deviceData.device.name);\n                        }\n                    }, function(error) {\n                        console.error(error);\n                    });\n                }\n            });\n\n            $scope.$watch(\"chartDateTime\", function(newValue, oldValue) {\n                if (newValue.begin != null && newValue.end != null) {\n                    var expect_points = Math.floor($element.parent().width());\n                    if(expect_points == 0){\n                        expect_points = 1000;\n                    }\n                    // find a interval\n                    var expectedInterval = (newValue.end - newValue.begin) / expect_points;\n                    if ($scope.locked_interval) {\n                        expectedInterval = $scope.locked_interval.interval;\n                    }\n                    var conf = $scope.intevals.device;\n                    if (conf == null || conf.length == 0) {\n                        return false;\n                    }\n                    // device detail view\n                    var preOne = conf[0].interval;\n                    var lastOne = conf[conf.length - 1].interval;\n                    var cin = \"\";\n                    if (expectedInterval >= preOne) {\n                        expectedInterval = preOne;\n                        $scope.autoupdate = false;\n                    } else if (expectedInterval <= lastOne) {\n                        expectedInterval = lastOne;\n                        if ($scope.currentView == -1) {\n                            $scope.autoupdate = true;\n                            $scope.auto_store = conf[conf.length - 1].name;\n                        }\n                    } else {\n                        for (var i = 1; i < conf.length; i++) {\n                            if (expectedInterval <= preOne && expectedInterval > conf[i].interval) {\n                                expectedInterval = preOne;\n                            } else {\n                                preOne = conf[i].interval;\n                                cin = conf[i].name;\n                            }\n                        }\n                        $scope.autoupdate = false;\n                    }\n                    $scope.currentIntervalName = \"\";\n                    angular$1.forEach(conf, function(config) {\n                        if (config.interval == expectedInterval) {\n                            $scope.currentIntervalName = config.name;\n                        }\n                    });\n                    // check the interval(data) no more than the number of expected points\n                    if (expectedInterval == lastOne) {\n                        // check\n                        if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.limits) {\n                            expect_points = $scope['interactions'].graphs.limits;\n                        }\n                        //\n                        if (((newValue.end - newValue.begin) / expectedInterval) > expect_points) {\n                            // reset range bar\n                            $scope.rangeConfig.dateWindow = [new Date(newValue.end - (expect_points - 1) * expectedInterval), new Date(newValue.end)];\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n                            $scope.alertMessage = \"Limit the number of \\\"Zoom-Out\\\" points to \" + expect_points + \".\";\n                            $timeout(function() {\n                                $scope.alertMessage = null;\n                            }, 5000);\n                            return;\n                        }\n                    }\n                    // update range-bar\n                    if ($scope.rangeSelectorBar) {\n                        angular$1.forEach($scope.trees, function(tree) {\n                            if (tree.range == true) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n                                angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                                    if (level.rows.length > 0 && level.name === tree.store) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function(line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function(column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n                                                }\n                                            });\n                                        }\n                                    }\n                                });\n                                $scope.auto_fields = fields;\n                                dataService.deviceStoreData($scope.graphId, $rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, new Date(newValue.begin).getTime(), new Date(newValue.end).getTime(), fields, expectedInterval).then(function(data) {\n                                        // udpate chart\n                                        var showData = data;\n                                        showData = showData.filter(function(obj) {\n                                            return obj != null;\n                                        });\n                                        // update range bar\n                                        var basicInfo = $scope.basicInfo;\n                                        var allLines = [];\n                                        angular$1.forEach(showData, function(line) {\n                                            allLines.push([new Date(line.timestamp)]);\n                                        });\n                                        var series_range = {\n                                            'l0': {\n                                                axis: 'y1'\n                                            }\n                                        };\n                                        var rangeBarLabels = [];\n                                        for (var i = 0; i < fields.length; i++) {\n                                            rangeBarLabels.push(fields[i]);\n                                            var f = new Function(\"data\", \"with(data) { if(data.\" + fields[i] + \"!=null)return data.\" + fields[i] + \";return null;}\");\n                                            // add value\n                                            var counter = 0;\n                                            angular$1.forEach(allLines, function(realLine) {\n                                                try {\n                                                    var value = f(showData[counter]);\n                                                    realLine.push(value);\n                                                } catch (ex) {\n                                                    realLine.push(null);\n                                                }\n                                                counter++;\n                                            });\n                                        }\n                                        //\n                                        if ($scope.rangeConfig && $scope.rangeConfig.file && $scope.rangeConfig.file != null) {\n                                            var objNeed2Add = [];\n                                            angular$1.forEach($scope.rangeConfig.file, function(item) {\n                                                var flag = false;\n                                                var dataLength = -1;\n                                                angular$1.forEach(allLines, function(line) {\n                                                    dataLength = line.length;\n                                                    if (line.length > 0 && line[0].getTime() === item[0].getTime()) {\n                                                        flag = true;\n                                                    } else if (line.length === 0) {\n                                                        flag = true;\n                                                    } else {\n                                                        dataLength = line.length;\n                                                    }\n\n                                                });\n                                                if (!flag) {\n                                                    var tempObj = [];\n                                                    for (var i = 0; i < dataLength; i++) {\n                                                        tempObj[i] = item[i];\n                                                    }\n                                                    objNeed2Add.push(tempObj);\n                                                }\n                                            });\n                                        }\n                                        allLines = allLines.concat(objNeed2Add);\n                                        allLines.sort(function(a, b) {\n                                            return a[0] > b[0] ? 1 : -1;\n                                        });\n                                        if ($scope.showY2Btns) {\n                                            //noinspection JSDuplicatedDeclaration\n                                            if (!$scope.rangeConfig.axes.hasOwnProperty(\"y2\")) {\n                                                series_range = {\n                                                    'l0': {\n                                                        axis: 'y1'\n                                                    },\n                                                    'l0': {\n                                                        axis: 'y2'\n                                                    }\n                                                };\n                                                $scope.rangeSeries = series_range;\n                                                $scope.rangeConfig = {\n                                                    'file': allLines,\n                                                    'labels': ['x'].concat(rangeBarLabels),\n                                                    'series': series_range,\n                                                    highlightSeriesOpts: {\n                                                        strokeWidth: 1.5,\n                                                        strokeBorderWidth: 1,\n                                                        highlightCircleSize: 2\n                                                    }\n                                                };\n                                                if (basicInfo && basicInfo.range_show) {\n                                                    $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                                }\n                                            } else {\n                                                $scope.rangeSelectorBar.updateOptions({\n                                                    'file': allLines,\n                                                    highlightSeriesOpts: {\n                                                        strokeWidth: 1.5,\n                                                        strokeBorderWidth: 1,\n                                                        highlightCircleSize: 2\n                                                    }\n                                                });\n                                            }\n\n                                        } else {\n                                            series_range[\"span_y2\"] = {\n                                                axis: 'y2'\n                                            };\n                                            $scope.rangeSeries = series_range;\n                                            var newLines = [];\n                                            angular$1.copy(allLines, newLines);\n                                            angular$1.forEach(newLines, function(line) {\n                                                line.push(null);\n                                            });\n                                            $scope.rangeConfig = {\n                                                'file': newLines,\n                                                'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                                'series': series_range,\n                                                highlightSeriesOpts: {\n                                                    strokeWidth: 1.5,\n                                                    strokeBorderWidth: 1,\n                                                    highlightCircleSize: 2\n                                                }\n                                            };\n                                            if (basicInfo && basicInfo.range_show) {\n                                                $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                            }\n                                        }\n                                    },\n                                    function(data) {\n                                        console.info(data);\n                                    }\n                                );\n                            }\n                        });\n                    }\n\n\n                    $scope.loadingShow = true;\n                    // check separated points config\n                    if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                        $scope.currentChart.updateOptions({\n                            connectSeparatedPoints: true\n                        });\n                    } else {\n                        $scope.currentChart.updateOptions({\n                            connectSeparatedPoints: false\n                        });\n                    }\n\n                    if ($scope.currentView == 1) {\n                        // scatter detail view\n                        $scope.legendText = null;\n                        var deviceInfo = [];\n                        var currentStore = \"\";\n                        $scope.childrenDevices = [];\n                        angular$1.forEach($scope.childTrees, function(device) {\n                            angular$1.forEach(device.trees, function(tree, index) {\n                                if (expectedInterval == tree.frequency) {\n                                    currentStore = tree.store;\n                                    deviceInfo.push({\n                                        name: device.name,\n                                        tree: tree.tree\n                                    });\n                                    device[\"show\"] = true;\n                                    $scope.childrenDevices.push(device);\n                                }\n                            });\n                        });\n                        var fields = [];\n                        var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n                        angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                            if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                var lines = level.rows;\n                                if (lines) {\n                                    angular$1.forEach(lines, function(line) {\n                                        if (line.value) {\n                                            var columns = (line.value).match(patt);\n                                            angular$1.forEach(columns, function(column) {\n                                                if (column && (column).startsWith('data.')) {\n                                                    fields.push(column.replace('data.', ''));\n                                                }\n                                            });\n                                        }\n                                    });\n                                }\n                            }\n                        });\n                        var _init = function(deviceInfo, currentStore, begin, end, fields, expectedInterval) {\n                            $scope.auto_fields = fields;\n                            dataService.devicesStoreData($scope.graphId, $rootScope.host, $rootScope.applicationName, deviceInfo, metadata.data.source.store, currentStore, new Date(begin).getTime(), new Date(end).getTime(), fields, expectedInterval).then(function(data) {\n                                var showData = [];\n                                angular$1.forEach(data, function(arr, key) {\n                                    var deviceData = [].concat(arr);\n                                    showData.push({\n                                        device: key,\n                                        data: deviceData\n                                    });\n                                });\n                                // order childrenDevices by showData\n                                var devicesMatchData = [];\n                                angular$1.forEach(showData, function(item, _index) {\n                                    angular$1.forEach($scope.childrenDevices, function(device) {\n                                        // just show devices with data\n                                        if (item.device == device.name && item.data.length > 0) {\n                                            devicesMatchData.splice(_index, 0, device);\n                                        }\n                                    });\n                                });\n                                //reset childrenDevies\n                                $scope.childrenDevices = devicesMatchData;\n                                //get configuration\n                                updateChildrenDetailChart(metadata, currentStore, $scope.rangeChildrenData, showData);\n                            }, function(data) {\n                                console.info(data);\n                            });\n                        };\n                        if (deviceInfo.length == 0) {\n                            var rangeLevel = null;\n                            var otherLevels = [];\n                            var relationConfig = metadata.data.groups[2];\n                            if (relationConfig.nameColumn) {\n                                $scope.childrenDeviceNameColumn = relationConfig.nameColumn;\n                            } else {\n                                $scope.childrenDeviceNameColumn = \"name\";\n                            }\n                            angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                                if (level.rows.length > 0) {\n                                    if (rangeLevel != null) {\n                                        otherLevels.push(rangeLevel);\n                                    }\n                                    rangeLevel = level.name;\n                                }\n                            });\n\n                            // try to find\n                            if ($scope.interactions.graphs.device.children.data) {\n                                var devices_key = $scope.interactions.graphs.device.children.data().then(\n                                    function(data) {\n                                        $q.all(dataService.devicesExtensionInitInfo($rootScope.host, $rootScope.applicationName, data, metadata.data.source.store, $scope.interactions.graphs.device.children.extension_type, rangeLevel, otherLevels, fields)).then(\n                                            function(data) {\n                                                if (data) {\n                                                    data.forEach(function (_device) {\n                                                        deviceInfo.push(_device.device);\n                                                    });\n                                                }\n                                                _init(deviceInfo, currentStore, newValue.begin, newValue.end, fields, expectedInterval);\n                                            },\n                                            function(error) {\n                                                console.error(error);\n                                            }\n                                        );\n                                    },\n                                    function(error) {\n                                        return;\n                                    }\n                                );\n                            } else {\n                                return;\n                            }\n                        } else {\n                            _init(deviceInfo, currentStore, newValue.begin, newValue.end, fields, expectedInterval);\n                        }\n\n\n                        $scope.fixGraphWithGap();\n                    } else {\n                        // cal tree\n                        angular$1.forEach($scope.trees, function(tree, index) {\n                            if (expectedInterval == tree.frequency) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                                    if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function(line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function(column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n\n                                                }\n\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                dataService.deviceStoreData($scope.graphId, $rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, new Date(newValue.begin).getTime(), new Date(newValue.end).getTime(), fields, tree.frequency).then(function(data) {\n                                    // udpate chart\n                                    var showData = data;\n                                    showData = showData.filter(function(obj) {\n                                        return obj != null;\n                                    });\n                                    showData.sort(function(a, b) {\n                                        return a.timestamp > b.timestamp ? 1 : -1;\n                                    });\n                                    // get configuration\n                                    updateDetailChart(metadata, tree.store, $scope.rangeData, showData);\n                                    // rest visibility\n                                    angular$1.forEach(showData, function(item) {\n                                        item[\"show\"] = true;\n                                    });\n\n                                    // tell some other widgets, the graph is changed.\n                                    $timeout(function() {\n                                        $rootScope.$broadcast('chartDataChangeEvent', {\n                                            'id': element_id,\n                                            'group': 'device',\n                                            'data': {\n                                                'collection': tree.store,\n                                                'group': 'device',\n                                                'data': showData\n                                            }\n                                        });\n                                    });\n\n                                }, function(data) {\n                                    console.info(data);\n                                });\n                            }\n                        });\n\n                        $scope.fixGraphWithGap();\n                    }\n                    // 2. series highlighting\n\n                    $scope.status = false;\n                }\n            });\n\n        });\n\n\n        var fetchData = function(values, node) {\n            if (node.children[0] != null) {\n                fetchData(values, node.children[0]);\n            }\n\n            if (node.children[1] != null) {\n                fetchData(values, node.children[1]);\n            }\n\n            if (node.children[0] == null && node.children[1] == null) {\n                if (node.data != null && node.data.array) {\n                    Array.prototype.push.apply(values, node.data.array.slice(0, node.data.size));\n                } else if (node.data != null) {\n                    Array.prototype.push.apply(values, node.data.slice(0, node.data.length));\n                }\n\n            }\n\n        };\n\n\n        $scope.trees = [];\n        $scope.rangeData = [];\n\n        $scope.ordinalRangeData = [];\n\n        var initChart = function(data, deviceName) {\n            $scope.intevalforshow = [];\n            //\n            $scope.intevals.device = [];\n            var trees = data.trees;\n            $scope.trees = trees;\n            var rangeTree = null;\n            angular$1.forEach(trees, function(tree) {\n                if (tree.range) {\n                    rangeTree = tree;\n                }\n                $scope.intevals.device.push({\n                    name: tree.store,\n                    interval: tree.frequency\n                });\n            });\n\n\n            // init chart with range data\n            var store = rangeTree.store;\n\n            // get all data\n            var allData = [];\n            // fetchData(allData, rangeTree.tree);only get first and last\n            // fix the problem of never seen the current data.\n            rangeTree.last.timestamp = rangeTree.last.timestamp + (rangeTree.frequency - 1);\n            allData = allData.concat([rangeTree.first, rangeTree.last]);\n\n            allData = allData.filter(function(obj) {\n                return obj != null;\n            });\n\n            allData.sort(function(a, b) {\n                return a.timestamp > b.timestamp ? 1 : -1;\n            });\n\n\n            if ($scope.trees.length == 0 || allData.length == 0) {\n                $scope.emptyDataShow = true;\n                return;\n            }\n\n            // if the data only has one point. change the data range to bigger\n            if (allData.length == 1) { //  means only one point.\n                var newData = [];\n                // add 1 points into both side\n                var thePoint = allData[0];\n                var timestamp = thePoint.timestamp;\n                var currentInterval = $scope.intevals.device[0].interval;\n                newData.push({\n                    timestamp: timestamp - currentInterval\n                });\n                Array.prototype.push.apply(newData, allData);\n                newData.push({\n                    timestamp: timestamp + currentInterval\n                });\n                allData = newData;\n            }\n            $scope.ordinalRangeData = allData;\n            // put the data into range tree cache\n            if (rangeTree) {\n                //\n                graphDataService.put(deviceName + \"/\" + rangeTree.store + \"/\" + $scope.graphId, [rangeTree.first, {\n                    timestamp: moment().endOf('day').toDate().getTime()\n                }]);\n            }\n            // get configuration and make real data\n            updateChart(metadata, store, allData, rangeTree);\n        };\n\n        $scope.childrenColors = [];\n\n        var initChildrenChart = function(deviceDatas) {\n            var devicesInfo = {};\n            $scope.intevals.device = [];\n            //range data with all device\n            $scope.childTrees = [];\n            $scope.childrenDevices = [];\n            // we should give colors to all devices (no matter has data or not)\n            deviceDatas.forEach(function(_device, _index) {\n                if ($scope.defaultColors[_index]) {\n                    $scope.childrenColors.push({\n                        name: _device.device.name,\n                        color: $scope.defaultColors[_index]\n                    });\n                } else {\n                    $scope.childrenColors.push({\n                        name: _device.device.name,\n                        color: '#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6)\n                    });\n                }\n            });\n            angular$1.forEach(deviceDatas, function(deviceData, _index) {\n                var device = {};\n                device[\"show\"] = true;\n                angular$1.merge(device, deviceData.device, deviceData.extension);\n                // $scope.childrenDevices.push(device);\n                var trees = deviceData.trees;\n                device[\"trees\"] = trees;\n                $scope.childTrees.push(device);\n                var rangeTree = null;\n                angular$1.forEach(trees, function(tree) {\n                    if (tree.range) {\n                        rangeTree = tree;\n                    }\n\n                    var flag = false;\n                    angular$1.forEach($scope.intevals.device, function(interval) {\n                        if (interval.name == tree.store && interval.interval == tree.frequency) {\n                            // has same one\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        $scope.intevals.device.push({\n                            name: tree.store,\n                            interval: tree.frequency\n                        });\n                    }\n\n                });\n\n                if (rangeTree != null) {\n                    var deviceObj = devicesInfo[device.name] = {};\n                    // get all data\n                    var allData = [rangeTree.first, {\n                        timestamp: moment().endOf('day').toDate().getTime()\n                    }];\n                    allData = allData.filter(function(obj) {\n                        return obj != null;\n                    });\n                    allData.sort(function(a, b) {\n                        return a.timestamp > b.timestamp ? 1 : -1;\n                    });\n                    //\n                    deviceObj[\"range\"] = rangeTree;\n                    deviceObj[\"data\"] = allData;\n                } else {\n                    console.info(device.name + \" has none data.\");\n                }\n            });\n            updateChildrenChart(metadata, devicesInfo);\n        };\n\n        var updateChildrenChart = function(metadata, devicesInfo) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {\n                left: relationConfig.leftYAxis,\n                right: relationConfig.rightYAxis\n            };\n            var allLines = [];\n            var allXLabels = [];\n            angular$1.forEach(devicesInfo, function(device, key, _index) {\n                angular$1.forEach(device.data, function(item) {\n                    var flag = false;\n                    angular$1.forEach(allXLabels, function(label) {\n                        if (label.getTime() == item.timestamp) {\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        allXLabels.push(new Date(item.timestamp));\n                    }\n                });\n            });\n            // order\n            allXLabels.sort(function(a, b) {\n                return a > b ? 1 : -1;\n            });\n\n            // make all line\n            angular$1.forEach(allXLabels, function(label) {\n                allLines.push([label]);\n            });\n\n            var yRange = {\n                min: null,\n                max: null\n            };\n            var showY2axis = false;\n            var counter = 0;\n            angular$1.forEach(devicesInfo, function(device, key) {\n                counter++;\n                angular$1.forEach(collections, function(collection) {\n                    if (collection.name == device.range.store) {\n                        $scope.currentIntervalName = device.range.store;\n                        var originalData = device.data;\n                        // always same for each device\n                        if (collection.rows[0].yaxis == 0) {\n                            series[collection.rows[0].label] = {\n                                'axis': 'y1'\n                            };\n                        } else {\n                            series[collection.rows[0].label] = {\n                                'axis': 'y2'\n                            };\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        labels.push(key); // put the name here and\n                        var filterF = null;\n                        if (collection.rows[0].filter) {\n                            filterF = collection.rows[0].filter;\n                        }\n\n                        // make a line\n                        var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                        // add value\n                        angular$1.forEach(allLines, function(realLine, index) {\n\n                            var flag = false;\n                            angular$1.forEach(originalData, function(odata) {\n                                if (realLine[0].getTime() == odata.timestamp) {\n                                    try {\n                                        var value = f(odata);\n                                        if ((filterF && filterF(value)) || !filterF) {\n                                            realLine.push(value);\n                                            if (yRange.min == null) {\n                                                yRange.min = value;\n                                            }\n\n                                            if (yRange.max == null) {\n                                                yRange.max = value;\n                                            }\n\n                                            if (yRange.min > value) {\n                                                yRange.min = value;\n                                            }\n\n                                            if (yRange.max < value) {\n                                                yRange.max = value;\n                                            }\n                                        } else {\n                                            realLine.push(null);\n                                        }\n                                    } catch (ex) {\n                                        realLine.push(null);\n                                    }\n                                    flag = true;\n                                }\n                            });\n\n                            if (!flag) {\n                                realLine.push(null);\n                            }\n                        });\n\n\n                    }\n                });\n            });\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n            var connectSeparatedPoints = false;\n            if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                connectSeparatedPoints = true; //'connectSeparatedPoints': connectSeparatedPoints,\n            }\n\n            //update chart\n            if ($scope.currentChart) {\n                $scope.rangeChildrenData = allLines;\n                // reset colors by labels\n                colors = [];\n                labels.forEach(function(key) {\n                    $scope.childrenColors.forEach(function(_item) {\n                        if (_item.name == key) {\n                            colors.push(_item.color);\n                        }\n                    });\n                });\n                if (showY2axis) {\n                    $scope.childrenRangeConfig = {\n                        'connectSeparatedPoints': connectSeparatedPoints,\n                        'labelsKMB': true,\n                        'file': allLines,\n                        legend: 'never',\n                        labelsKMB: true,\n                        labelsSeparateLines: false,\n                        highlightCircleSize: 2,\n\n                        strokeBorderWidth: 0,\n                        highlightSeriesOpts: {\n                            strokeWidth: 1.5,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        'labels': ['x'].concat(labels),\n                        'ylabel': leftAndRight.left,\n                        'y2label': leftAndRight.right,\n                        'series': series,\n                        'colors': colors,\n                        'axes': {\n                            'y': {\n                                valueRange: [yRange.min, yRange.max],\n                                axisLabelWidth: 80\n                            },\n                            'y2': {}\n                        }\n                        // showRangeSelector: true\n                    };\n                } else {\n                    $scope.showY2Btns = false;\n                    var newLines = [];\n                    angular$1.copy(allLines, newLines);\n                    angular$1.forEach(newLines, function(line) {\n                        line.push(null);\n                    });\n                    series[\"span_y2\"] = {\n                        'axis': 'y2'\n                    };\n                    $scope.childrenRangeConfig = {\n                        'connectSeparatedPoints': connectSeparatedPoints,\n                        'drawGapEdgePoints': true,\n                        'pointSize': 2,\n                        'legend': 'never',\n                        'labelsKMB': true,\n                        'file': newLines,\n                        'labelsSeparateLines': false,\n                        highlightCircleSize: 2,\n                        strokeBorderWidth: 0,\n                        highlightSeriesOpts: {\n                            strokeWidth: 1.5,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                        'ylabel': leftAndRight.left,\n                        'y2label': \"\",\n                        'series': series,\n                        'colors': colors,\n                        'axes': {\n                            'y': {\n                                valueRange: [yRange.min, yRange.max]\n                            },\n                            'y2': {\n                                axisLabelFormatter: function(d) {\n                                    return '';\n                                }\n                            }\n                        }\n                        // showRangeSelector: true\n                    };\n                }\n                //\n                $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n\n                // set the first one to range bar\n                // update range bar with the first channel data\n                if ($scope.basicInfo && $scope.basicInfo.range_show && $scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.scatter) {\n\n                    Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                        zoom: true,\n                        selection: false,\n                        range: false\n                    });\n                    if (showY2axis) {\n                        $scope.rangeConfig = {\n                            'file': newLines,\n                            'series': series,\n                            'labels': ['x'].concat(labels),\n                            highlightSeriesOpts: {\n                                strokeWidth: 1.5,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            }\n                        };\n                    } else {\n                        $scope.rangeConfig = {\n                            'file': newLines,\n                            'series': series,\n                            'labels': ['x'].concat(labels).concat(['span_y2']),\n                            highlightSeriesOpts: {\n                                strokeWidth: 1.5,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            }\n                        };\n                    }\n                    $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                    // reset the datetime for current chart\n\n                    if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= newLines[0][0] && $scope.chartDateWindow[1] <= newLines[newLines.length - 1][0])) {\n                        // keep the current range bar refresh once.\n                        $scope.chartDateTime = {\n                            begin: $scope.chartDateTime.begin,\n                            end: $scope.chartDateTime.end\n                        };\n                        $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                    } else {\n                        $scope.currentChart[\"xAxisZoomRange\"] = [newLines[0][0], newLines[newLines.length - 1][0]];\n                        if (begin_path && end_path && !init_flag) {\n                            // $scope.chartDateTime = {\n                            // \"begin\": new Date(new Number(begin_path)),\n                            // \"end\": new Date(new Number(end_path))\n                            // };\n                            $scope.chartDateWindow = [new Date(new Number(begin_path)).getTime(), new Date(new Number(end_path)).getTime()];\n                            $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)).getTime(), new Date(new Number(end_path)).getTime()];\n                            init_flag = true;\n                        } else {\n                            if ($scope.currentIntervalChoosed && ((newLines[newLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= newLines[0][0].getTime())) {\n                                $scope.rangeConfig.dateWindow = [newLines[newLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval, newLines[newLines.length - 1][0].getTime()];\n                            } else {\n                                $scope.chartDateWindow = [newLines[0][0].getTime(), newLines[newLines.length - 1][0].getTime()];\n                                $scope.rangeConfig.dateWindow = [newLines[0][0].getTime(), newLines[newLines.length - 1][0].getTime()];\n                            }\n                        }\n                        $scope.currentChart.updateOptions($scope.rangeConfig);\n                        $scope.currentChartOptions = $scope.rangeConfig;\n                    }\n                } else {\n                    //  keep the same time window and refersh\n                    $scope.chartDateTime = {\n                        begin: $scope.chartDateTime.begin,\n                        end: $scope.chartDateTime.end\n                    };\n                    $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                    $scope.loadingShow = false;\n                }\n\n            }\n\n\n        };\n\n\n        var updateChildrenDetailChart = function(metadata, store, rangeData, allData) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var newLines = [];\n            var newTime = [];\n            var series = {};\n            var labels = [];\n            var colors = [];\n            var leftAndRight = {\n                left: relationConfig.leftYAxis,\n                right: relationConfig.rightYAxis\n            };\n            var yRange = {\n                min: null,\n                max: null\n            };\n\n\n            var initScale = null;\n            if (relationConfig.initScale) {\n                initScale = relationConfig.initScale; // {left:{level:\"\",range:[num1,num2]},right:{}}\n            }\n\n\n            var counter = 0;\n            var showY2axis = null;\n            angular$1.forEach(allData, function(device) {\n                counter++;\n                if (device.data.length > 0) {\n                    labels.push(device.device);\n                    angular$1.forEach(collections, function(collection) {\n                        if (collection.name == store) {\n                            $scope.currentIntervalName = store;\n                            if (collection.rows[0].yaxis == 0) {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y1',\n                                };\n                            } else {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y2'\n                                };\n                                showY2axis = true;\n                                $scope.showY2Btns = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                            var filterF = null;\n                            if (collection.rows[0].filter) {\n                                filterF = collection.rows[0].filter;\n                            }\n                            var tempData = [];\n                            var tempTime = [];\n                            // make data\n                            angular$1.forEach(device.data, function(data) {\n                                var dateTime = new Date(data.timestamp);\n                                try {\n                                    var value = f(data);\n                                    if ((filterF && filterF(value)) || !filterF) {\n                                        tempData.push({\n                                            timestamp: dateTime,\n                                            value: value\n                                        });\n\n                                        if (yRange.min == null) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max == null) {\n                                            yRange.max = value;\n                                        }\n\n                                        if (yRange.min > value) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max < value) {\n                                            yRange.max = value;\n                                        }\n                                    } else {\n                                        tempData.push({\n                                            timestamp: dateTime,\n                                            value: null\n                                        });\n                                    }\n                                } catch (e) {\n                                    tempData.push({\n                                        timestamp: dateTime,\n                                        value: null\n                                    });\n                                }\n                                tempTime.push(dateTime.getTime());\n                            });\n                            newTime = newTime.concat(tempTime.filter(function(item) {\n                                return newTime.indexOf(item) < 0;\n                            }));\n                            newLines.push({\n                                device: device.device,\n                                data: tempData\n                            });\n                        }\n                    });\n                }\n            });\n\n            var chartData = [];\n            // time needs sort!!!\n            newTime = newTime.sort();\n            angular$1.forEach(newTime, function(nt) {\n                chartData.push([new Date(nt)]);\n            });\n\n\n            angular$1.forEach(newLines, function(line) {\n                angular$1.forEach(chartData, function(timeTicket) {\n                    // line data\n                    var flag = false;\n                    var lineData = line.data;\n                    for (var i = 0; i < lineData.length; i++) {\n                        if (lineData[i].timestamp.getTime() == timeTicket[0].getTime()) {\n                            timeTicket.push(lineData[i].value);\n                            flag = true;\n                            break;\n                        }\n                    }\n                    if (flag != true) {\n                        // we should use \"NaN\"\n                        timeTicket.push(null);\n                    }\n                });\n            });\n\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n\n\n            if (chartData.length == 0) {\n                $scope.currentChart.updateOptions({\n                    'file': []\n                });\n                $scope.loadingShow = false;\n            } else {\n                if ($scope.currentChart) {\n                    var connectSeparatedPoints = false;\n                    if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                        connectSeparatedPoints = true; //'connectSeparatedPoints': connectSeparatedPoints,\n                    }\n\n                    //rest colors by labels\n                    colors = [];\n                    labels.forEach(function(key) {\n                        $scope.childrenColors.forEach(function(_item) {\n                            if (_item.name == key) {\n                                colors.push(_item.color);\n                            }\n                        });\n                    });\n\n                    if (showY2axis) {\n                        $scope.currentChartOptions = {\n                            'connectSeparatedPoints': connectSeparatedPoints,\n                            'pointSize': 2,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            highlightCircleSize: 2,\n                            strokeBorderWidth: 0,\n                            highlightSeriesOpts: {\n                                strokeWidth: 1.5,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                }\n                            }\n                        };\n                        var _tempVisibility = [];\n                        $scope.currentChart.getOption('visibility').forEach(function(v,_index){\n                            if($scope.currentVisibility_[_index]){\n                                _tempVisibility[_index] = $scope.currentVisibility_[_index];\n                            }else{\n                                _tempVisibility[_index] = v;\n                            }\n                            if($scope.childrenDevices && $scope.childrenDevices[_index] && $scope.childrenDevices[_index].hasOwnProperty(\"show\")){\n                                $scope.childrenDevices[_index][\"show\"] = _tempVisibility[_index];\n                            }\n                        });\n                        $scope.currentVisibility_ = [];\n                        $scope.currentChart.updateOptions({\n                            'connectSeparatedPoints': connectSeparatedPoints,\n                            'pointSize': 2,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'visibility':_tempVisibility,\n                            highlightCircleSize: 2,\n                            strokeBorderWidth: 0,\n                            highlightSeriesOpts: {\n                                strokeWidth: 1.5,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    } else {\n                        var newLines = [];\n                        $scope.showY2Btns = false;\n                        angular$1.copy(chartData, newLines);\n                        angular$1.forEach(newLines, function(line) {\n                            line.push(null);\n                        });\n                        series[\"span_y2\"] = {\n                            axis: 'y2'\n                        };\n                        $scope.currentChartOptions = {\n                            'connectSeparatedPoints': connectSeparatedPoints,\n                            'pointSize': 2,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            highlightSeriesOpts: {\n                                strokeWidth: 1.5,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                },\n                                \"y2\": {\n                                    axisLabelFormatter: function(d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        };\n\n\n                        var _tempVisibility = [];\n                        $scope.currentChart.getOption('visibility').forEach(function(v,_index){\n                            if($scope.currentVisibility_[_index]){\n                                _tempVisibility[_index] = $scope.currentVisibility_[_index];\n                            }else{\n                                _tempVisibility[_index] = v;\n                            }\n                            if($scope.childrenDevices && $scope.childrenDevices[_index] && $scope.childrenDevices[_index].hasOwnProperty(\"show\")){\n                                $scope.childrenDevices[_index][\"show\"] = _tempVisibility[_index];\n                            }\n                        });\n                        $scope.currentVisibility_ = [];\n                        $scope.currentChart.updateOptions({\n                            'connectSeparatedPoints': connectSeparatedPoints,\n                            'pointSize': 2,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            'visibility':_tempVisibility,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            highlightCircleSize: 2,\n                            strokeBorderWidth: 0,\n                            highlightSeriesOpts: {\n                                strokeWidth: 1.5,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function(e, x, pts, row, seriesName) {\n                                if ($scope.currentView == -1) {\n                                    // device view is using default legend\n                                    return false;\n                                }\n                                // set current child device and will do show one\n                                $scope.currentHighLightChildDevice = seriesName;\n                                var maxWidth = e.target.offsetWidth;\n                                var sn = \"\";\n                                angular$1.forEach(series, function(value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {\n                                    x: 0,\n                                    y: 0\n                                };\n                                // get device name columns\n                                var relationConfig = metadata.data.groups[2];\n                                angular$1.forEach(pts, function(item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        var colorIndex = -1;\n                                        //get index from childrenDevices\n                                        angular$1.forEach($scope.childrenDevices, function(device, _index) {\n                                            if (device.name == seriesName) {\n                                                colorIndex = _index;\n                                            }\n                                        });\n\n                                        $scope.childrenColors.forEach(function(_item) {\n                                            if (_item.name == seriesName) {\n                                                $scope.legendColor = _item.color;\n                                            }\n                                        });\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_device_name = \"\";\n                                        // if the nameSd exist\n                                        if ($scope.childTrees && $scope.childTrees.length > 0) {\n                                            angular$1.forEach($scope.childTrees, function(item) {\n                                                //\n                                                if (item.name == seriesName) {\n                                                    if (item[relationConfig.nameColumn]) {\n                                                        $scope.legendText_device_name = item[relationConfig.nameColumn];\n                                                    }\n                                                }\n                                            });\n                                        }\n                                        if ($scope.legendText_device_name == \"\") {\n                                            //\n                                            $scope.legendText_device_name = seriesName;\n                                        }\n\n                                        if (moment.tz.guess()) {\n                                            $scope.legendText_datetime = moment(item.xval).tz(moment.tz.guess()).format('DD/MM/YYYY HH:mm:ss');\n                                        } else {\n                                            $scope.legendText_datetime = moment(item.xval).format('DD/MM/YYYY HH:mm:ss');\n                                        }\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function(point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n                                var legendbox = angular$1.element(\"#legendbox\" + element_id);\n\n                                $scope.$apply(function() {\n                                    $scope.legendTop = point_show.y;\n                                    if (maxWidth < (point_show.x + 200)) {\n                                        $scope.legendLeft = point_show.x - 200;\n                                    } else {\n                                        $scope.legendLeft = point_show.x;\n                                    }\n                                });\n\n                            },\n\n                            unhighlightCallback: function(e) {\n                                $scope.$apply(function() {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                },\n                                \"y2\": {\n                                    axisLabelFormatter: function(d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    }\n                    // reset l & r axes window\n                    var axesRight = $scope.currentChart.axes_[1];\n                    var axesLeft = $scope.currentChart.axes_[0];\n                    if (initScale && initScale.left && initScale.left.length > 0) {\n                        //init scale found\n                        initScale.left.forEach(function(_levelConfig) {\n                            // find current\n                            if (store == _levelConfig.level && !$scope.currentInitScaleLevelLeftConf) {\n                                // found it\n                                // set\n                                axesLeft.valueWindow = _levelConfig.range;\n                                $scope.currentInitScaleLevelLeftConf = _levelConfig;\n                                $scope.currentChart.drawGraph_(false);\n                            }\n                        });\n                    }\n\n                    if (initScale && initScale.right && initScale.right.length > 0) {\n                        //init scale found\n                        initScale.right.forEach(function(_levelConfig) {\n                            // find current\n                            if (store == _levelConfig.level) {\n                                // found it\n                                // set\n                                axesRight.valueWindow = _levelConfig.range;\n                                $scope.currentInitScaleLevelRightConf = _levelConfig;\n                                $scope.currentChart.drawGraph_(false);\n                            }\n                        });\n                    }\n\n                    $scope.loadingShow = false;\n                }\n            }\n        };\n\n\n        /**\n         * update detail chart\n         * @param metadata\n         * @param store\n         * @param rangeData\n         * @param allData\n         */\n        var updateDetailChart = function(metadata, store, rangeData, allData) {\n\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {\n                left: deviceConfig.leftYAxis,\n                right: deviceConfig.rightYAxis\n            };\n\n            var initScale = null;\n            if (deviceConfig.initScale) {\n                initScale = deviceConfig.initScale; // {left:{level:\"\",range:[num1,num2]},right:{}}\n            }\n\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{\n                min: null,\n                max: null\n            }, {\n                min: null,\n                max: null\n            }];\n            angular$1.forEach(collections, function(collection) {\n                if (collection.name == store) {\n                    angular$1.forEach(allData, function(line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    // var yRange = {'min': null, 'max': null};\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function(row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {\n                                'axis': 'y1'\n                            };\n                        } else {\n                            series[row.label] = {\n                                'axis': 'y2'\n                            };\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n\n                        var filterF = null;\n                        if (row.filter) {\n                            filterF = row.filter;\n                        }\n\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function(realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                if ((filterF && filterF(value)) || !filterF) {\n                                    realLine.push(value);\n                                    if (row.yaxis == 0) {\n                                        if (yRanges[0].min == null) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max == null) {\n                                            yRanges[0].max = value;\n                                        }\n\n                                        if (yRanges[0].min > value) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max < value) {\n                                            yRanges[0].max = value;\n                                        }\n                                    } else {\n                                        if (yRanges[1].min == null) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max == null) {\n                                            yRanges[1].max = value;\n                                        }\n\n                                        if (yRanges[1].min > value) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max < value) {\n                                            yRanges[1].max = value;\n                                        }\n                                    }\n                                } else {\n                                    realLine.push(value);\n                                }\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    angular$1.forEach(yRanges, function(yrange) {\n                        if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                            yrange.min = yrange.min - (yrange.min) * 0.10;\n                            yrange.max = yrange.max + (yrange.max) * 0.10;\n                        }\n                    });\n\n                    if (allLines.length == 0) {\n                        $scope.currentChart.updateOptions({\n                            'file': [],\n                            highlightSeriesOpts: {\n                                strokeWidth: 1.5,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            }\n                        });\n                        if ($scope.rangeSelectorBar) {\n                            $scope.currentChart[\"xAxisZoomRange\"] = $scope.rangeSelectorBar.xAxisExtremes();\n                        }\n                        $scope.loadingShow = false;\n                    } else {\n                        if ($scope.currentChart) {\n                            var connectSeparatedPoints = false;\n                            if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                                connectSeparatedPoints = true; //'connectSeparatedPoints': connectSeparatedPoints,\n                            }\n                            if (showY2axis) {\n                                $scope.currentChartOptions = {\n                                    'connectSeparatedPoints': connectSeparatedPoints,\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 2,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: {\n                                        strokeWidth: 1.5,\n                                        strokeBorderWidth: 1,\n                                        highlightCircleSize: 2\n                                    },\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n\n                                var _tempVisibility = [];\n                                $scope.currentChart.getOption('visibility').forEach(function(v,_index){\n                                    if($scope.currentVisibility_[_index]){\n                                        _tempVisibility[_index] = $scope.currentVisibility_[_index];\n                                    }else{\n                                        _tempVisibility[_index] = v;\n                                    }\n                                    if($scope.childrenDevices && $scope.childrenDevices[_index] && $scope.childrenDevices[_index].hasOwnProperty(\"show\")){\n                                        $scope.childrenDevices[_index][\"show\"] = _tempVisibility[_index];\n                                    }\n                                });\n                                $scope.currentVisibility_ = [];\n                                $scope.currentChart.updateOptions({\n                                    'connectSeparatedPoints': connectSeparatedPoints,\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 2,\n                                    'legend': 'follow',\n                                    'visibility': _tempVisibility,\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: {\n                                        strokeWidth: 1.5,\n                                        strokeBorderWidth: 1,\n                                        highlightCircleSize: 2\n                                    },\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n                            } else {\n                                var newLines = [];\n                                $scope.showY2Btns = false;\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function(line) {\n                                    line.push(null);\n                                });\n\n                                series[\"span-Y2\"] = {\n                                    axis: 'y2'\n                                };\n\n                                $scope.currentChartOptions = {\n                                    'connectSeparatedPoints': connectSeparatedPoints,\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 2,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: {\n                                        strokeWidth: 1.5,\n                                        strokeBorderWidth: 1,\n                                        highlightCircleSize: 2\n                                    },\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            axisLabelFormatter: function(d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n\n\n\n                                var _tempVisibility = [];\n                                $scope.currentChart.getOption('visibility').forEach(function(v,_index){\n                                    if($scope.currentVisibility_[_index]){\n                                        _tempVisibility[_index] = $scope.currentVisibility_[_index];\n                                    }else{\n                                        _tempVisibility[_index] = v;\n                                    }\n                                    if($scope.childrenDevices && $scope.childrenDevices[_index] && $scope.childrenDevices[_index].hasOwnProperty(\"show\")){\n                                        $scope.childrenDevices[_index][\"show\"] = _tempVisibility[_index];\n                                    }\n                                });\n                                $scope.currentVisibility_ = [];\n                                $scope.currentChart.updateOptions({\n                                    'connectSeparatedPoints': connectSeparatedPoints,\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 2,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    'visibility': _tempVisibility,\n                                    highlightSeriesOpts: {\n                                        strokeWidth: 1.5,\n                                        strokeBorderWidth: 1,\n                                        highlightCircleSize: 2\n                                    },\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            axisLabelFormatter: function(d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n                            }\n\n                            // reset l & r axes window\n                            var axesRight = $scope.currentChart.axes_[0];\n                            var axesLeft = $scope.currentChart.axes_[1];\n                            if (initScale && initScale.left && initScale.left.length > 0) {\n                                //init scale found\n                                initScale.left.forEach(function(_levelConfig) {\n                                    // find current\n                                    if (store == _levelConfig.level && !$scope.currentInitScaleLevelLeftConf) {\n                                        // found it\n                                        // set\n                                        axesLeft.valueWindow = _levelConfig.range;\n                                        $scope.currentInitScaleLevelLeftConf = _levelConfig;\n                                        $scope.currentChart.drawGraph_(false);\n                                    }\n                                });\n                            }\n\n                            if (initScale && initScale.right && initScale.right.length > 0) {\n                                //init scale found\n                                initScale.right.forEach(function(_levelConfig) {\n                                    // find current\n                                    if (store == _levelConfig.level) {\n                                        // found it\n                                        // set\n                                        axesRight.valueWindow = _levelConfig.range;\n                                        $scope.currentInitScaleLevelRightConf = _levelConfig;\n                                        $scope.currentChart.drawGraph_(false);\n                                    }\n                                });\n                            }\n\n                            $scope.loadingShow = false;\n                        }\n                    }\n\n\n                }\n            });\n\n\n        };\n\n        $scope.autoUpdateChart = updateDetailChart;\n\n        /**\n         * update range chart\n         * @param metadata\n         * @param store\n         * @param allData\n         */\n        var updateChart = function(metadata, store, allData, rangeTree) {\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {\n                left: deviceConfig.leftYAxis,\n                right: deviceConfig.rightYAxis\n            };\n            var initScale = null;\n            if (deviceConfig.initScale) {\n                initScale = deviceConfig.initScale; // {left:{level:\"\",range:[num1,num2]},right:{}}\n            }\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{\n                min: null,\n                max: null\n            }, {\n                min: null,\n                max: null\n            }];\n            angular$1.forEach(collections, function(collection) {\n                if (collection.name == store) {\n                    $scope.currentIntervalName = store;\n                    angular$1.forEach(allData, function(line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    $scope.rangeSeriesNumber = collection.rows.length;\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function(row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {\n                                'axis': 'y1'\n                            };\n                        } else {\n                            series[row.label] = {\n                                'axis': 'y2'\n                            };\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        var filterF = null;\n                        if (row.filter) {\n                            filterF = row.filter;\n                        }\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function(realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                if ((filterF && filterF(value)) || !filterF) {\n                                    realLine.push(value);\n                                    if (row.yaxis == 0) {\n                                        if (yRanges[0].min == null) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max == null) {\n                                            yRanges[0].max = value;\n                                        }\n\n                                        if (yRanges[0].min > value) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max < value) {\n                                            yRanges[0].max = value;\n                                        }\n                                    } else {\n                                        if (yRanges[1].min == null) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max == null) {\n                                            yRanges[1].max = value;\n                                        }\n\n                                        if (yRanges[1].min > value) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max < value) {\n                                            yRanges[1].max = value;\n                                        }\n                                    }\n                                } else {\n                                    realLine.push(null);\n                                }\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    if ($scope.currentChart) {\n                        $scope.rangeData = allLines;\n                        var basicInfo = $scope.basicInfo;\n                        if (basicInfo && basicInfo.range_show) {\n                            var rangeBarLabels = [];\n                            for (var i = 0; i < labels.length; i++) {\n                                rangeBarLabels.push(\"l\" + i);\n                            }\n                            var series_range = {\n                                'l0': {\n                                    axis: 'y1'\n                                }\n                            };\n                            if (showY2axis) {\n                                //noinspection JSDuplicatedDeclaration\n                                series_range = {\n                                    'l0': {\n                                        axis: 'y1'\n                                    },\n                                    'l0': {\n                                        axis: 'y2'\n                                    }\n                                };\n                                $scope.rangeSeries = series_range;\n\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': allLines,\n                                    'labels': ['x'].concat(rangeBarLabels),\n                                    'series': series_range,\n                                    highlightSeriesOpts: {\n                                        strokeWidth: 1.5,\n                                        strokeBorderWidth: 1,\n                                        highlightCircleSize: 2\n                                    }\n                                });\n                            } else {\n                                series_range[\"span_y2\"] = {\n                                    axis: 'y2'\n                                };\n                                $scope.showY2Btns = false;\n                                $scope.rangeSeries = series_range;\n                                var newLines = [];\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function(line) {\n                                    line.push(null);\n                                });\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': newLines,\n                                    'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                    'series': series_range,\n                                    highlightSeriesOpts: {\n                                        strokeWidth: 1.5,\n                                        strokeBorderWidth: 1,\n                                        highlightCircleSize: 2\n                                    }\n                                });\n                                // save\n                            }\n\n\n                        }\n\n                        angular$1.forEach(yRanges, function(yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max) * 0.10;\n                            }\n                        });\n\n\n                        // if graph has 2 yAxis or a yAxis\n                        var connectSeparatedPoints = false;\n                        if ($scope.basicInfo && $scope.basicInfo.points && $scope.basicInfo.points.connected) {\n                            connectSeparatedPoints = true; //'connectSeparatedPoints': connectSeparatedPoints,\n                        }\n\n                        if (showY2axis) {\n                            $scope.rangeConfig = {\n                                'connectSeparatedPoints': connectSeparatedPoints,\n                                'drawGapEdgePoints': true,\n                                'pointSize': 2,\n                                'legend': 'follow',\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: {\n                                    strokeWidth: 1.5,\n                                    strokeBorderWidth: 1,\n                                    highlightCircleSize: 2\n                                },\n                                'labelsKMB': true,\n                                'file': allLines,\n                                'labels': ['x'].concat(labels),\n                                'ylabel': leftAndRight.left,\n                                'y2label': leftAndRight.right,\n\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {\n                                        valueRange: [yRanges[0].min, yRanges[0].max],\n                                        axisLabelWidth: 80\n                                    },\n                                    'y2': {\n                                        'labelsKMB': true,\n                                        valueRange: [yRanges[1].min, yRanges[1].max],\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        } else {\n                            series['span_y2'] = {\n                                axis: 'y2'\n                            };\n                            $scope.showY2Btns = false;\n                            var newLines = [];\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function(line) {\n                                line.push(null);\n                            });\n                            $scope.rangeConfig = {\n                                'connectSeparatedPoints': connectSeparatedPoints,\n                                'drawGapEdgePoints': true,\n                                'pointSize': 2,\n                                'legend': 'follow',\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: {\n                                    strokeWidth: 1.5,\n                                    strokeBorderWidth: 1,\n                                    highlightCircleSize: 2\n                                },\n                                'labelsKMB': true,\n                                'file': newLines,\n                                'labels': ['x'].concat(labels).concat(['span_y2']),\n                                'ylabel': leftAndRight.left,\n                                'y2label': \"\",\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {\n                                        valueRange: [yRanges[0].min, yRanges[0].max],\n                                        axisLabelWidth: 80\n                                    },\n                                    'y2': {\n                                        axisLabelFormatter: function(d) {\n                                            return '';\n                                        },\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        }\n\n\n                        if (basicInfo && basicInfo.range_show) {\n                            $scope.rangeSelectorBar[\"_name_fgp\"] = \"rangebar\";\n                            $scope.currentChart[\"_name_fgp\"] = deviceConfig;\n                            Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                zoom: true,\n                                selection: false,\n                                range: false\n                            });\n                        }\n\n\n                        if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                            // keep the current range bar refresh once.\n                            $scope.chartDateTime = {\n                                begin: $scope.chartDateTime.begin,\n                                end: $scope.chartDateTime.end\n                            };\n                            $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                        } else {\n\n                            $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            if (begin_path && end_path && !init_flag) {\n                                // $scope.chartDateTime = {\n                                // \"begin\": new Date(new Number(begin_path)),\n                                // \"end\": new Date(new Number(end_path))\n                                // };\n                                $scope.chartDateWindow = [new Date(new Number(begin_path)).getTime(), new Date(new Number(end_path)).getTime()];\n                                $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)).getTime(), new Date(new Number(end_path)).getTime()];\n                                init_flag = true;\n                            } else {\n                                if ($scope.currentIntervalChoosed && ((allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= allLines[0][0].getTime())) {\n                                    $scope.rangeConfig.dateWindow = [allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval, allLines[allLines.length - 1][0].getTime()];\n                                } else {\n                                    $scope.chartDateWindow = [allLines[0][0].getTime(), allLines[allLines.length - 1][0].getTime()];\n                                    $scope.rangeConfig.dateWindow = [allLines[0][0].getTime(), allLines[allLines.length - 1][0].getTime()];\n                                }\n                            }\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            // reset l & r axes window\n                            var axesRight = $scope.currentChart.axes_[1];\n                            var axesLeft = $scope.currentChart.axes_[0];\n                            if (initScale && initScale.left && initScale.left.length > 0) {\n                                //init scale found\n                                initScale.left.forEach(function(_levelConfig) {\n                                    // find current\n                                    if (store == _levelConfig.level && !$scope.currentInitScaleLevelLeftConf) {\n                                        // found it\n                                        // set\n                                        axesLeft.valueWindow = _levelConfig.range;\n                                        $scope.currentInitScaleLevelLeftConf = _levelConfig;\n                                        $scope.currentChart.drawGraph_(false);\n                                    }\n                                });\n                            }\n\n                            if (initScale && initScale.right && initScale.right.length > 0) {\n                                //init scale found\n                                initScale.right.forEach(function(_levelConfig) {\n                                    // find current\n                                    if (store == _levelConfig.level) {\n                                        // found it\n                                        // set\n                                        axesRight.valueWindow = _levelConfig.range;\n                                        $scope.currentInitScaleLevelRightConf = _levelConfig;\n                                        $scope.currentChart.drawGraph_(false);\n                                    }\n                                });\n                            }\n\n\n                            $scope.currentChartOptions = $scope.rangeConfig;\n                        }\n                        //bind\n                        $scope.loadingShow = false;\n                    }\n\n                }\n            });\n        };\n\n        $scope.chartDateTime = {\n            begin: null,\n            end: null\n        };\n\n\n        $scope.drillDown = function() {\n            //get redirect configuration from interactions\n            if ($scope.currentView == 1 && $scope.currentHighLightChildDevice && $scope.drill && $scope.drill.graphs && $scope.drill.graphs.drillDown && $scope.drill.graphs.drillDown.url) {\n                //\n                var url = $scope.drill.graphs.drillDown.url;\n                url = url.replace(\"{0}\", $scope.currentHighLightChildDevice);\n                $window.open(url);\n            }\n        };\n        // function for show one\n        $scope.showOne = function(deviceName) {\n\n            if ($rootScope['standalone'] && $rootScope['standalone'] == true) {\n                return false;\n            }\n\n            // device type is\n            if ($location.url().indexOf('/app/page/param/') != -1) {\n                //open window\n                $window.open(\"/admin/#/app/page/param/\" + $rootScope.applicationName + \"/\" + metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1]));\n            } else {\n                //open window\n                $window.open(\"/admin/#\" + $location.url().replace(\"show\", \"param\").replace($location.url().substr($location.url().lastIndexOf('/', $location.url().lastIndexOf('/') - 1) + 1), metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1])));\n            }\n\n        };\n\n\n        var btntimer = null;\n\n        $scope.btnZoomInVLeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(true);\n        };\n\n        $scope.btnZoomOutVLeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(true);\n        };\n\n        $scope.btnZoomInVRight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(true);\n        };\n\n        $scope.btnZoomOutVRight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(true);\n        };\n\n        $scope.btnPanVULeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = [];\n            if (yAxes[0].valueWindow) {\n                range = yAxes[0].valueWindow;\n            } else {\n                range = yAxes[0].valueRange;\n            }\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(true);\n        };\n\n\n        $scope.btnPanVDLeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = [];\n            if (yAxes[0].valueWindow) {\n                range = yAxes[0].valueWindow;\n            } else {\n                range = yAxes[0].valueRange;\n            }\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(true);\n        };\n\n\n        $scope.btnPanVURight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = [];\n            if (yAxes[1].valueWindow) {\n                range = yAxes[1].valueWindow;\n            } else {\n                range = yAxes[1].valueRange;\n            }\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(true);\n        };\n\n        $scope.btnPanVDRight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = [];\n            if (yAxes[1].valueWindow) {\n                range = yAxes[1].valueWindow;\n            } else {\n                range = yAxes[1].valueRange;\n            }\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(true);\n        };\n\n        // functions for buttons\n        $scope.btnpanleft = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            // $scope.changeVisibility(g);\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[0] - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0] - pan_delta;\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[1] - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1] - pan_delta;\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                btntimer = null;\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnpanright = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            // $scope.changeVisibility(g);\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = $scope.chartDateWindow[0].getTime() + pan_delta;\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            } else {\n                if (($scope.chartDateWindow[0] + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = ($scope.chartDateWindow[0] + pan_delta);\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1].getTime() + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            } else {\n                if (($scope.chartDateWindow[1] + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1] + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            }\n\n            //update graph\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            btntimer = $timeout(function() {\n                btntimer = null;\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        $scope.btnzoomin = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            // $scope.changeVisibility(g);\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            startDate = rangeStart + (delta * 2);\n            endDate = rangeEnd - (delta * 2);\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            //\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnzoomout = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            // $scope.changeVisibility(g);\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            if ((rangeStart - (delta * 2)) > panRange[0]) {\n                startDate = rangeStart - (delta * 2);\n            } else {\n                startDate = panRange[0];\n            }\n\n            if ((rangeEnd + (delta * 2)) < panRange[1]) {\n                endDate = rangeEnd + (delta * 2);\n            } else {\n                endDate = panRange[1];\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.currentGxAxisRange = [];\n\n        $scope.currentVisibility_ = [];\n\n        $scope.refershTimer;\n        $scope.refersh = function(g, init, childGraph) {\n            if (init || (g.xAxisRange()[0] != $scope.chartDateTime.begin || g.xAxisRange()[1] != $scope.chartDateTime.end)) {\n                if ($scope.refershTimer) {\n                    g[\"hideLines\"] = true;\n                    if($scope.currentVisibility_.length == 0){\n                        $scope.currentVisibility_ = [].concat($scope.currentChart.getOption(\"visibility\"));\n                    }\n                    $timeout.cancel($scope.refershTimer);\n                }\n                $scope.refershTimer = $timeout(function() {\n                    $scope.refershTimer = null;\n                    g[\"hideLines\"] = false;\n                    $scope.chartDateTime = {\n                        begin: g.xAxisRange()[0],\n                        end: g.xAxisRange()[1]\n                    };\n                }, 300);\n            }\n        };\n\n    }\n\n};\n\n\nfgpWidgetGraph.buildFactory = function buildFactory ($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams, $compile, $q) {\n    fgpWidgetGraph.instance = new fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams, $compile, $q);\n    return fgpWidgetGraph.instance;\n};\n\nfgpWidgetGraph\n    .$inject = ['$timeout', 'dataService', '$rootScope', '$interval', '$filter', '$location', '$stateParams', '$compile', '$q'];\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPageTitle = function fgpWidgetPageTitle() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetPageTitle.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //drag-channel  item means this widget accepts items\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"\">' +\n        '<h1>{{css.title.text}}</h1>' +\n        '<h3>{{css.subtitle.text}}</h3>' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div>';\n    return dom_show;\n};\n\n\nfgpWidgetPageTitle.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"minHeight\"] = metadata.css.minHeight;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n        $scope.css[\"title\"] = metadata.css.title;\n        $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n        $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n        $scope.css[\"subtitle\"] = metadata.css.subtitle;\n        $scope.css[\"subtitle\"][\"color\"] = metadata.css.subtitle.color;\n        $scope.css[\"subtitle\"][\"show\"] = metadata.css.subtitle.show;\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"title\"].text + \"}\");\n            $scope.css[\"title\"].text = f(deviceData.device);\n            f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"subtitle\"].text + \"}\");\n            $scope.css[\"subtitle\"].text = f(deviceData.device);\n        });\n    }\n\n\n\n\n};\n\nfgpWidgetPageTitle.buildFactory = function buildFactory () {\n    fgpWidgetPageTitle.instance = new fgpWidgetPageTitle();\n    return fgpWidgetPageTitle.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetMap = function fgpWidgetMap() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetMap.prototype.template = function template (element, attrs) {\n    var dom_show = '<div class = \"{{css.width}}\" style=\"padding:0px;height:{{css.height}}px;\" map-lazy-load=\"https://maps.google.com/maps/api/js\">' +\n        '<ng-map style=\"height: 100%;width: 100%;\" center=\"{{center}}\" zoom=\"15\">' +\n        '<marker on-click=\"map.showInfoWindow(\\'info_' + attrs.id + '\\')\" id=\"marker_' + attrs.id + '\" ng-repeat=\"item in markers\" icon=\"{{item.image}}\" position=\"{{item.latitude}},{{item.longitude}}\" title=\"{{item.name}}\" animation=\"Animation.DROP\" ></marker>' +\n        '</ng-map>' +\n        '</div>' +\n        '';\n    return dom_show;\n};\n\n\nfgpWidgetMap.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n            var location = {};\n            $scope.markers = [];\n            $scope.details = $scope.$parent.device;\n\n\n            // show one point.\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { return \" + item.value + \";}\");\n                    var result = f(deviceData.device);\n                    if (result) {\n                        location[item.label] = result;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n                } catch (error) {\n                    // show image\n                    if (\"image\" == item.label) {\n                        location[item.label] = item.value;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n\n                }\n            });\n\n\n            //do not show\n            if (location.latitude == \"\" || location.longitude == \"\") {\n                //hard code. the location is Melbourne\n                location.latitude = \"-37.810000\";\n                location.longitude = \"144.950000\";\n                $scope.center = [location.latitude, location.longitude];\n                // $scope.markers.push(location);\n            } else {\n                $scope.center = [location.latitude, location.longitude];\n                $scope.markers.push(location);\n            }\n\n        });\n    }\n\n};\n\nfgpWidgetMap.buildFactory = function buildFactory () {\n    fgpWidgetMap.instance = new fgpWidgetMap();\n    return fgpWidgetMap.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetDeviceDetail = function fgpWidgetDeviceDetail() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetDeviceDetail.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '<div class=\"row\" ng-repeat=\"item in data\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"text-align: right; font-weight: bold;line-height: 30px;\">{{item.label}}</div><div class=\"col-xs-8 col-md-8\" style=\"text-align: left;line-height: 30px;\">{{item.value}}</div>' +\n        '</div>' +\n        '</div>' +\n        '<div id=\"detail_status_' + attrs.id + '\" class=\"row\" style=\"min-height: 50px;\">' +\n        '</div>' +\n        '</div>';\n};\n\n\nfgpWidgetDeviceDetail.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n\n            $scope.data = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = \"\";\n                    $scope.data.push(item);\n                }\n            });\n\n\n        });\n\n    }\n\n};\n\n\nfgpWidgetDeviceDetail.buildFactory = function buildFactory () {\n    fgpWidgetDeviceDetail.instance = new fgpWidgetDeviceDetail();\n    return fgpWidgetDeviceDetail.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetSpan = function fgpWidgetSpan() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetSpan.prototype.template = function template (scope, element) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '</div>';\n};\n\nfgpWidgetSpan.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n};\n\nfgpWidgetSpan.buildFactory = function buildFactory () {\n    fgpWidgetSpan.instance = new fgpWidgetSpan();\n    return fgpWidgetSpan.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPie = function fgpWidgetPie($timeout) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n};\n\n\nfgpWidgetPie.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" ><div style=\"height: {{css.height}}px;\">' +\n        '<canvas class=\"fgpPieChart\"></canvas>' +\n        '</div>' +\n        '</div>';\n};\n\nfgpWidgetPie.prototype.link = function link (scope, element) {\n\n    this.$timeout(function () {\n        var ctx = element.find(\"canvas\")[0];\n        scope.chart = new Chart(ctx, {\n            type: 'pie',\n            data: {\n                labels: ['1'],\n                datasets: [\n                    {\n                        data: [1],\n                        backgroundColor: []\n                    }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                animation: false,\n                legend: {display: true}\n            }\n        });\n    });\n};\n\n\nfgpWidgetPie.prototype.controller = function controller ($scope, $element, $timeout) {\n\n    var id = $element.attr(\"id\");\n    var metadata = null;\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n            $scope.showdata = widgetData.data;\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n            $scope.data = [];\n            var colors = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = item.value;\n                    $scope.data.push(item);\n                }\n                if (item.color) {\n                    colors.push(item.color);\n                } else {\n                    colors.push('#' + (function co(lor) {\n                            return (lor +=\n                                [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                            && (lor.length == 6) ? lor : co(lor);\n                        })(''));\n                }\n            });\n            // timeout\n            $scope.pieData = {labels: [], value: []};\n            $timeout(function () {\n                // create data\n                angular$1.forEach($scope.data, function (item) {\n                    $scope.pieData.labels.push(item.label);\n                    $scope.pieData.value.push(item.value);\n                });\n\n                $scope.chart.data.labels = $scope.pieData.labels;\n                $scope.chart.data.datasets[0].data = $scope.pieData.value;\n                $scope.chart.data.datasets[0].backgroundColor = colors;\n                // update chart\n                $scope.chart.update();\n            });\n\n        });\n\n\n    }\n\n\n};\n\nfgpWidgetPie.buildFactory = function buildFactory ($timeout) {\n    fgpWidgetPie.instance = new fgpWidgetPie($timeout);\n    return fgpWidgetPie.instance;\n};\nfgpWidgetPie.$inject = ['$timeout'];\n\n/**\n * Created by eric on 22/11/16.\n */\n\nvar fgpDockerButton = function fgpDockerButton() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\n\nfgpDockerButton.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"col-xs-12 btn-group\" role=\"group\" style=\"padding: 2px;\" aria-label=\"...\">' +\n        '<div style=\"float: right;\">' +\n        '<button type=\"button\" class=\"btn btn-{{button.color}} btn-xs\" ' +\n        ' ng-click=\"action(button)\" ng-repeat=\"button in buttons\" ng-show=\"checkShow(button)\"><i class=\"fa {{button.icon}}\"' +\n        ' aria-hidden=\"true\"></i>' +\n        '</button>' +\n        '</div>' +\n        '</div>';\n    return show_dom;\n};\n\n\nfgpDockerButton.prototype.controller = function controller ($scope, $element, $http, $timeout) {\n\n    $scope.stats = \"\";\n\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var confData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                confData = data.data;\n            }\n        }\n    });\n\n    var repeateId = [];\n\n    var pageDevice = null;\n    $scope.$on('deviceInfoEvent', function (event, data) {\n        pageDevice = data.device;\n    });\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n        if (data.application === repeateId[2] && data.container === repeateId[0] && data.host === repeateId[1]) {\n            $scope.stats = data.stats;\n        }\n    });\n\n    $scope.checkShow = function (button) {\n\n\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            return true;\n        }\n\n\n        if (button.type === \"stop\") {\n            if ($scope.stats === \"running\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"start\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"delete\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    // how many buttons?\n    $scope.buttons = [];\n\n    if ($scope.$parent.repeat) {\n        repeateId = $scope.$parent.repeat.split(\",\");\n    }\n\n    angular.forEach(configuration, function (item) {\n        if (item.label == \"buttons\") {\n            $scope.buttons = item.value;\n        }\n    });\n\n    $scope.healthinfo = \"\";\n\n\n    // submit \"action\" to rest api\n    $scope.action = function (button) {\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/exec',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    deviceName: pageDevice.name,\n                    deviceKey: pageDevice.key.id,\n                    relationship: 'node_application'\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        } else {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/hosts/action',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    container: repeateId[0],\n                    host: repeateId[1],\n                    application: repeateId[2]\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        }\n\n    };\n};\n\n\nfgpDockerButton.buildFactory = function buildFactory () {\n    fgpDockerButton.instance = new fgpDockerButton();\n    return fgpDockerButton.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetRepeatContainer = function fgpWidgetRepeatContainer($http) {\n    this.restrict = 'E';\n    this.scope = {};\n    this._$http = $http;\n};\n\nfgpWidgetRepeatContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{item.device.key.id}}\" ng-repeat=\"item in items\" emit-last-repeater-element style=\"padding-left: 2px; padding-right: 2px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding-left: 1px; padding-right: 1px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}};\"><i class=\"fa fa-desktop\" aria-hidden=\"true\" style=\"margin-right: 5px;\"></i>{{item.device.name}}</div>' +\n        '<div class=\"panel-body\"  style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\'}};\">' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" ng-repeat=\"item in items\" repeat-id=\"{{item.device.key.id}}\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;padding-left: 2px; padding-right: 2px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n};\n\nfgpWidgetRepeatContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout, $http, $location, $stateParams, $websocket) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    // all items\n    $scope.items = [];\n\n    $scope.labelstyle = [\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"];\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n\n    $scope.listStyle = \"list\";\n\n    $scope.labels = [];\n\n    var deviceType = $stateParams.type;\n    var deviceName = $stateParams.device;\n\n    if (metadata.data) {\n\n\n        $scope.labels = [];\n\n\n        if (metadata.data.datasource.labels) {\n            $scope.labels = metadata.data.datasource.labels.split(\" \");\n        }\n\n        if (metadata.data.datasource.style) {\n            $scope.listStyle = metadata.data.datasource.style;\n        }\n\n        // show different type\n        var relation = metadata.data.datasource.type;\n        $scope.items = [];\n        $http({\n            method: 'GET',\n            url: 'api/docker/repeat/' + deviceType + '/' + deviceName + '/' + relation\n        }).then(function (data) {\n            $scope.items = data.data;\n        }, function (error) {\n            console.error(error);\n        });\n\n        // I'm ready. please give all my children to me~\n        // call stage\n        $scope.$on('LastRepeaterElement', function () {\n            $timeout(function () {\n                $scope.$emit('bindChildRepeatEvent', {\n                    id: element_id\n                });\n            });\n        });\n\n\n    }\n    //establish a connection with websocket\n    var dataStream = $websocket('ws://' + $location.host() + \":\" + $location.port() + '/ws/hosts');\n    dataStream.onMessage(function (message) {\n        try {\n            var backData = JSON.parse(message.data);\n            if (backData.hasOwnProperty(\"container\")) {\n                // tell children\n                $scope.$parent.$broadcast('containerStatusEvent', backData);\n                // update health-check status\n                angular.forEach($scope.items, function (item) {\n                    if (backData.application == item.device.key.id) {\n                        if (backData.config.State.Health) {\n                            item[\"health\"] = backData.config.State.Health.Status;\n                        } else {\n                            item[\"health\"] = null;\n                        }\n\n                        if (backData.stats == \"exited\") {\n                            item[\"health\"] = null;\n                        }\n                    }\n                });\n            }\n        } catch (e) {\n        }\n    });\n\n    $scope.healthcheck = function (item) {\n        // call server and get the exception.\n        dataService.healthcheck(item.name, item.device.key.id);\n    };\n\n\n};\n\n\nfgpWidgetRepeatContainer.buildFactory = function buildFactory ($http) {\n    fgpWidgetRepeatContainer.instance = new fgpWidgetRepeatContainer($http);\n    return fgpWidgetRepeatContainer.instance;\n};\n\nfgpWidgetRepeatContainer.$inject = ['$http'];\n\n/**\n * Created by eric on 25/11/16.\n */\nvar fgpImage = function fgpImage() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpImage.prototype.template = function template (scope, element) {\n    return '' +\n        '<img src=\"{{url}}\" style=\"width:{{css.width}}px;height:{{css.height}}px;\">' +\n        '';\n};\n\nfgpImage.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"0\",\n        height: \"0\"\n    };\n\n    $scope.url = \"\";\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n    if($scope.showdata.metadata.data){\n        $scope.url = $scope.showdata.metadata.data.url;\n    }\n};\n\nfgpImage.buildFactory = function buildFactory () {\n    fgpImage.instance = new fgpImage();\n    return fgpImage.instance;\n};\n\n/**\n * Created by eric on 28/11/16.\n */\nvar fgpIcon = function fgpIcon() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpIcon.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"{{css.width}}\" style=\"margin-top: 10px;background-color: {{css.background.color}};border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"padding: 5px;\">' +\n        '<i class=\"fa fa-{{icon}}\" style=\"font-size: 60px;\"></i>' +\n        '</div>' +\n        '<div class=\"col-xs-8 col-md-8\">' +\n        '<div style=\"text-align: right;font-size: large;\"><label>{{title}}</label></div>' +\n        '<div style=\"text-align: right;font-size: small;\"><label>{{desc}}</label></div>' +\n        '</div>' +\n        '</div>' +\n        '';\n    return show_dom;\n};\n\nfgpIcon.prototype.controller = function controller ($scope, $element) {\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.icon = configuration.content.icon;\n\n    $scope.desc = configuration.content.desc;\n\n    $scope.title = \"\";\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + configuration.content.f + \"}\");\n            $scope.title = f(deviceData.device);\n        });\n\n    }\n\n};\n\n\nfgpIcon.buildFactory = function buildFactory () {\n    fgpIcon.instance = new fgpIcon();\n    return fgpIcon.instance;\n};\n\n/**\n * Created by eric on 29/11/16.\n */\nvar fgpWidgetAppContainer = function fgpWidgetAppContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetAppContainer.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //<div class=\"alert alert-info\" role=\"alert\">...</div>\n    return '' +\n        '<div ng-show=\"showstyle == \\'list\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-12 col-xs-12  alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px; text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n\n        '<div ng-show=\"showstyle == \\'grid\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-6 col-xs-6 alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px;text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n        '';\n};\n\nfgpWidgetAppContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.containers = [];\n    $scope.containerswithTimeout = [];\n    var metadata = widgetData.data.metadata;\n    // should be a host id\n    var repeat = $scope.$parent.repeat;\n\n    $scope.showstyle = \"list\";\n\n    $scope.host = repeat;\n\n\n    // I'm ready. please give all my children to me~\n    // call stage\n    $scope.$on('LastRepeaterElement', function () {\n        $timeout(function () {\n            $scope.$emit('bindChildRepeatEvent', {\n                id: element_id\n            });\n        });\n    });\n\n    $timeout(function () {\n        var pp = $scope.$emit('listStyleEvent', {\n            id: widgetData.data.parent,\n            callback: function (style) {\n                $scope.showstyle = style;\n            }\n        });\n\n    });\n\n    $scope.gotoContainer = function (container) {\n        // \"device type and device name\" display by a dynamic page!\n        console.info(container);\n        return false;\n    };\n\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n\n        if (data.host == repeat) {\n            //f\n            var labels = [];\n\n            if (metadata.data.datasource.labels) {\n                labels = metadata.data.datasource.labels.split(\" \");\n            }\n            var showLabel = \"\";\n            angular.forEach(labels, function (label) {\n                showLabel += data.config[label] + \" \";\n            });\n\n            var app = {\n                id: data.container,\n                label: showLabel,\n                application: data.application,\n                name: data.deviceName,\n                type: data.deviceType\n            };\n            var flag = false;\n            angular.forEach($scope.containers, function (container) {\n                if (container.id == app.id) {\n                    // update timer\n                    var timer_index = -1;\n                    var timer = $scope.containerswithTimeout.filter(function (item, index) {\n                        if(item.app.id == app.id){\n                            timer_index = index;\n                            return true;\n                        }else{\n                            false;\n                        }\n                    });\n                    $timeout.cancel(timer[0].t);\n                    if (data.stats != \"removed\") {\n                        var newTimer = $timeout(function () {\n                            var index = $scope.containers.indexOf(app);\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }, 30000);\n                        timer[0].t = newTimer;\n                        flag = true;\n                    } else {\n                        var index = -1;\n                        angular.forEach($scope.containers, function (item, itemIndex) {\n                            if (item.id === app.id) {\n                                index = itemIndex;\n                            }\n                        });\n                        if (index != -1 && timer_index != -1) {\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            flag = true;\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }\n                    }\n                }\n            });\n\n            if (!flag) {\n                // add to\n                $scope.containers.push(app);\n                // delete it after 30 seconds!\n                var t = $timeout(function () {\n                    var index = $scope.containers.indexOf(app);\n                    $scope.containers.splice(index, 1);\n                }, 30000);\n                $scope.containerswithTimeout.push({t: t, app: app});\n            }\n        }\n\n    });\n\n};\n\nfgpWidgetAppContainer.buildFactory = function buildFactory () {\n    fgpWidgetAppContainer.instance = new fgpWidgetAppContainer();\n    return fgpWidgetAppContainer.instance;\n};\n\nfgpWidgetAppContainer.$inject = [];\n\n/**\n * Created by ericwang on 21/06/2016.\n */\nvar fgpWidgetChartTable = function fgpWidgetChartTable() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetChartTable.prototype.template = function template (element, attrs) {\n    return '<div style=\"padding:0px;height: {{css.height}}px;position: relative; overflow-y : auto;\">' +\n        '<table st-table=\"rowCollection\" class=\"col-md-12 table table-striped\">' +\n        '<thead>' +\n        '<tr>' +\n        '<th ng-repeat=\"column in sampledata.columns\">{{column.label}}</th>' +\n        '</tr>' +\n        '</thead>' +\n        '<tbody>' +\n        '<tr ng-repeat=\"value in sampledata.values\">' +\n        '<td ng-repeat=\"col in sampledata.columns\">{{value[col.label] | tableformatter: value : col.label : col.formatter}}</td>' +\n        '</tr>' +\n        '</tbody>' +\n        '</table>' +\n        '</div>';\n};\n\nfgpWidgetChartTable.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    //show\n    $scope.showdata = widgetData.data;\n\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n\n\n    $scope.$on('chartDataChangeEvent', function (event, chartData) {\n        var chartId = chartData.id;\n        if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"device\") {\n            $scope.sampledata = {};\n            // make data\n            var collectionName = chartData.data.collection;\n            var groupName = chartData.group;\n            var columns = [];\n            //get group and collection configuration\n            angular$1.forEach($scope.showdata.metadata.data.groups, function (group) {\n                if (group.name == groupName) {\n                    angular$1.forEach(group.collections, function (collection) {\n                        if (collection.name === collectionName) {\n                            columns = collection.rows;\n                        }\n                    });\n                }\n            });\n\n\n            $scope.sampledata.columns = [];\n\n            angular$1.forEach(columns, function (column) {\n                $scope.sampledata.columns.push({label: column.label, formatter: column.formatter});\n            });\n            $scope.sampledata.values = [];\n            angular$1.forEach(columns, function (column) {\n                var f = new Function(\"data\", \"with(data) { if(\" + column.value + \") return \" + column.value + \";return '';}\");\n                angular$1.forEach(chartData.data.data, function (record, index) {\n                    if ($scope.sampledata.values.length < chartData.data.data.length) {\n                        //add new one\n                        var item = {};\n                        item[column.label] = f(record);\n                        $scope.sampledata.values.push(item);\n                    } else {\n                        $scope.sampledata.values[index][column.label] = f(record);\n                    }\n                });\n            });\n\n            var cleanData = [];\n            angular$1.forEach($scope.sampledata.values, function (value, index) {\n                var flag = false;\n                angular$1.forEach(columns, function (column) {\n                    if (value[column.label] && value[column.label] != \"\") {\n                        flag = true;\n                    }\n                });\n\n                if (flag) {\n                    cleanData.push(value);\n                }\n            });\n            $scope.sampledata.values = cleanData;\n\n        } else if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"relation\") {\n            //\n\n\n        }\n\n    });\n\n\n};\n\nfgpWidgetChartTable.buildFactory = function buildFactory () {\n    fgpWidgetChartTable.instance = new fgpWidgetChartTable();\n    return fgpWidgetChartTable.instance;\n};\n\n/**\n * Created by ericwang on 10/06/2016.\n */\n// angular module\nangular$1.module('fgp-kit', ['ngMap', 'ui.router', 'angular-cache']).service('dataService', dataAccessApi.buildFactory)\n    .filter('removeSlash', function() {\n        return function(input) {\n            if (input.startsWith(\"/\")) {\n                return input.substring(1, input.length);\n            }\n            return input;\n        }\n    })\n    .factory('$graphstorage', ['$window', function($window) {\n        return {\n            setTree: function(key, value) {\n                $window.localStorage[key] = JSON.stringify(value);\n            },\n            getTree: function(key) {\n                return JSON.parse($window.localStorage[key]) || false;\n            },\n            addTree: function(key, value) {\n                if ($window.localStorage[key]) {\n                    var trees = JSON.parse($window.localStorage[key]);\n                    trees.push(value);\n                    this.setTree(key, trees);\n                } else {\n                    this.setTree(key, [value]);\n                }\n            },\n            clear: function() {\n                $window.localStorage.clear();\n            }\n        }\n    }])\n    .directive('fgpContainer', fgpStage.buildFactory)\n    .directive('widgetContainer', fgpWidgetContainer.buildFactory)\n    .directive('widgetGraph', fgpWidgetGraph.buildFactory)\n    .directive('widgetPageTitle', fgpWidgetPageTitle.buildFactory)\n    .directive('widgetMap', fgpWidgetMap.buildFactory)\n    .directive('widgetStatus', fgpStage.buildFactory)\n    .directive('widgetDeviceDetail', fgpWidgetDeviceDetail.buildFactory)\n    .directive('widgetDeviceSpan', fgpWidgetSpan.buildFactory)\n    .directive('widgetPie', fgpWidgetPie.buildFactory)\n    .directive('widgetDockerButton', fgpDockerButton.buildFactory)\n    .directive('widgetRepeatContainer', fgpWidgetRepeatContainer.buildFactory)\n    .directive('widgetImage', fgpImage.buildFactory)\n    .directive('widgetIcon', fgpIcon.buildFactory)\n    .directive('widgetAppContainer', fgpWidgetAppContainer.buildFactory)\n    .directive('widgetChartTable', fgpWidgetChartTable.buildFactory)\n    .directive('emitLastRepeaterElement', [function() {\n        return function(scope) {\n            if (scope.$last) {\n                scope.$emit('LastRepeaterElement');\n            }\n        };\n    }]).config(function(CacheFactoryProvider) {\n        angular$1.extend(CacheFactoryProvider.defaults, {\n            maxAge: 30 * 60 * 1000, // half an hour\n            deleteOnExpire: 'aggressive',\n        });\n    }).service('graphDataService', function(CacheFactory) {\n        var graphCache = null;\n        if (!CacheFactory.get('graphCache')) {\n            graphCache = CacheFactory('graphCache',{\n                maxAge: 30 * 60 * 1000, // half an hour\n                deleteOnExpire: 'aggressive'\n            });\n        }\n        return {\n            get: function(name) {\n                return graphCache.get('/graph/'+name);\n            },\n            put: function(name, data) {\n                return graphCache.put('/graph/'+name, data);\n            }\n        };\n    })\n    .filter('tableformatter', ['$filter', function($filter) {\n        return function(input, obj, field, formatter) {\n            if (formatter) {\n                if (obj[field]) {\n                    if (\"date\" == formatter) {\n                        return $filter('date')(new Date(obj[field]), 'd/M/yy h:mm a');\n                    } else {\n                        return input;\n                    }\n                }\n            } else {\n                return input;\n            }\n        };\n    }]);\nvar index = 'fgp-kit';\n\nreturn index;\n\n})));\n\n//# sourceMappingURL=fgp.kit.bundle.js.map\n","Dygraph.Plugins.HideLines = function() {\n    \"use strict\";\n    var hideLines = function(opt_options) {\n        this.visibility = [];\n        this.opt_options = opt_options || {};\n    };\n    hideLines.prototype.toString = function() {\n        return \"Hide Lines Plugin\";\n    };\n    hideLines.prototype.activate = function(g) {};\n    return hideLines;\n}();\nDygraph.Plugins.RectSelection = function() {\n    \"use strict\";\n    var rectSelection = function(opt_options) {\n        this.canvas_ = document.createElement(\"canvas\");\n        this.opt_options = opt_options || {};\n    };\n    rectSelection.prototype.enable = function() {\n        this.canvas_.setAttribute(\"style\", \"position: absolute;z-index:99;\");\n    };\n    rectSelection.prototype.disable = function() {\n        this.ctx.clearRect(0, 0, this.graph.graphDiv.clientWidth, this.graph.graphDiv.clientHeight);\n        this.canvas_.setAttribute(\"style\", \"position: absolute;pointer-events:none;\");\n    };\n    rectSelection.prototype.toString = function() {\n        return \"Rect Selection Plugin\";\n    };\n    rectSelection.prototype.activate = function(g) {\n        var graph = this.graph = g;\n        var opts = this.opt_options;\n        this.canvas_.width = g.graphDiv.clientWidth;\n        this.canvas_.height = g.graphDiv.clientHeight;\n        this.canvas_.style.width = g.graphDiv.clientWidth + \"px\";\n        this.canvas_.style.height = g.graphDiv.clientHeight + \"px\";\n        this.canvas_.setAttribute(\"style\", \"position: absolute;pointer-events:none;z-index:99;\");\n        g.graphDiv.appendChild(this.canvas_);\n        var canDraw_ = false;\n        var mousePosition = {\n            x: 0,\n            y: 0,\n            startX: 0,\n            startY: 0\n        };\n        var ctx = this.ctx = this.ctx = this.canvas_.getContext(\"2d\");\n        this.canvas_.addEventListener(\"mousedown\", function(e) {\n            canDraw_ = true;\n            mousePosition.x = e.offsetX;\n            mousePosition.y = e.offsetY;\n            mousePosition.startX = mousePosition.x;\n            mousePosition.startY = mousePosition.y;\n            this.style.cursor = \"crosshair\";\n            var width = graph.width_;\n            var height = graph.height_;\n            ctx.clearRect(0, 0, width, height);\n        });\n        this.canvas_.addEventListener(\"mousemove\", function(e) {\n            if (canDraw_) {\n                mousePosition.x = e.offsetX;\n                mousePosition.y = e.offsetY;\n                var width = graph.width_;\n                var height = graph.height_;\n                ctx.strokeStyle = \"#FF0000\";\n                ctx.clearRect(0, 0, width, height);\n                ctx.strokeRect(mousePosition.startX, mousePosition.startY, mousePosition.x - mousePosition.startX, mousePosition.y - mousePosition.startY);\n            }\n        });\n        this.canvas_.addEventListener(\"mouseup\", function(e) {\n            canDraw_ = false;\n            var width = graph.width_;\n            var height = graph.height_;\n            ctx.clearRect(0, 0, width, height);\n            this.style.cursor = \"default\";\n            var rect = mousePosition;\n            var startX = rect.startX <= rect.x ? rect.startX : rect.x;\n            var endX = rect.startX > rect.x ? rect.startX : rect.x;\n            var startY = rect.startY <= rect.y ? rect.startY : rect.y;\n            var endY = rect.startY > rect.y ? rect.startY : rect.y;\n            var minDate = graph.toDataXCoord(startX);\n            var maxDate = graph.toDataXCoord(endX);\n            var maxY = graph.toDataYCoord(startY);\n            var minY = graph.toDataYCoord(endY);\n            console.info(\"[\" + new Date(minDate) + \",\" + new Date(maxDate) + \"]\", \"[\" + minY + \",\" + maxY + \"]\");\n            var _graphData = graph.file_;\n            var _series = graph.getLabels();\n            var choosedSeries = [];\n            var visibility = graph.getOption(\"visibility\");\n            _graphData.forEach(function(point) {\n                if (point[0] instanceof Date && point[0] >= minDate && point[0] <= maxDate) {\n                    for (var i = 1; i < point.length - 1; i++) {\n                        if (point[i] >= minY && point[i] <= maxY && choosedSeries.indexOf(_series[i]) == -1) {\n                            if (visibility[i - 1]) {\n                                choosedSeries.push(_series[i]);\n                            }\n                        }\n                    }\n                }\n            });\n            if (opts && opts.highlight) {\n                opts.highlight(choosedSeries);\n            }\n        });\n        return {};\n    };\n    rectSelection.prototype.clear = function(e) {\n        var ctx = this.canvas_.getContext(\"2d\");\n        ctx.clearRect(0, 0, this.canvas_.width, this.canvas_.height);\n    };\n    rectSelection.prototype.destroy = function() {\n        this.canvas_ = null;\n    };\n    return rectSelection;\n}();\n(function() {\n    \"use strict\";\n    var Dygraph;\n    if (window.Dygraph) {\n        Dygraph = window.Dygraph;\n    } else if (typeof module !== \"undefined\") {\n        Dygraph = require(\"../dygraph\");\n    }\n    var synchronize = function() {\n        var arguments$1 = arguments;\n\n        if (arguments.length === 0) {\n            throw \"Invalid invocation of Dygraph.synchronize(). Need >= 1 argument.\";\n        }\n        var OPTIONS = [ \"selection\", \"zoom\", \"range\" ];\n        var opts = {\n            selection: true,\n            zoom: true,\n            range: true\n        };\n        var dygraphs = [];\n        var prevCallbacks = [];\n        var parseOpts = function(obj) {\n            if (!(obj instanceof Object)) {\n                throw \"Last argument must be either Dygraph or Object.\";\n            } else {\n                for (var i = 0; i < OPTIONS.length; i++) {\n                    var optName = OPTIONS[i];\n                    if (obj.hasOwnProperty(optName)) opts[optName] = obj[optName];\n                }\n            }\n        };\n        if (arguments[0] instanceof Dygraph) {\n            for (var i = 0; i < arguments.length; i++) {\n                if (arguments$1[i] instanceof Dygraph) {\n                    dygraphs.push(arguments$1[i]);\n                } else {\n                    break;\n                }\n            }\n            if (i < arguments.length - 1) {\n                throw \"Invalid invocation of Dygraph.synchronize(). \" + \"All but the last argument must be Dygraph objects.\";\n            } else if (i == arguments.length - 1) {\n                parseOpts(arguments[arguments.length - 1]);\n            }\n        } else if (arguments[0].length) {\n            for (var i = 0; i < arguments[0].length; i++) {\n                dygraphs.push(arguments$1[0][i]);\n            }\n            if (arguments.length == 2) {\n                parseOpts(arguments[1]);\n            } else if (arguments.length > 2) {\n                throw \"Invalid invocation of Dygraph.synchronize(). \" + \"Expected two arguments: array and optional options argument.\";\n            }\n        } else {\n            throw \"Invalid invocation of Dygraph.synchronize(). \" + \"First parameter must be either Dygraph or list of Dygraphs.\";\n        }\n        if (dygraphs.length < 2) {\n            throw \"Invalid invocation of Dygraph.synchronize(). \" + \"Need two or more dygraphs to synchronize.\";\n        }\n        var readycount = dygraphs.length;\n        for (var i = 0; i < dygraphs.length; i++) {\n            var g = dygraphs[i];\n            g.ready(function() {\n                if (--readycount == 0) {\n                    var callBackTypes = [ \"drawCallback\", \"highlightCallback\", \"unhighlightCallback\" ];\n                    for (var j = 0; j < dygraphs.length; j++) {\n                        if (!prevCallbacks[j]) {\n                            prevCallbacks[j] = {};\n                        }\n                        for (var k = callBackTypes.length - 1; k >= 0; k--) {\n                            prevCallbacks[j][callBackTypes[k]] = dygraphs[j].getFunctionOption(callBackTypes[k]);\n                        }\n                    }\n                    if (opts.zoom) {\n                        attachZoomHandlers(dygraphs, opts, prevCallbacks);\n                    }\n                    if (opts.selection) {\n                        attachSelectionHandlers(dygraphs, prevCallbacks);\n                    }\n                }\n            });\n        }\n        return {\n            detach: function() {\n                for (var i = 0; i < dygraphs.length; i++) {\n                    var g = dygraphs[i];\n                    if (opts.zoom) {\n                        g.updateOptions({\n                            drawCallback: prevCallbacks[i].drawCallback\n                        });\n                    }\n                    if (opts.selection) {\n                        g.updateOptions({\n                            highlightCallback: prevCallbacks[i].highlightCallback,\n                            unhighlightCallback: prevCallbacks[i].unhighlightCallback\n                        });\n                    }\n                }\n                dygraphs = null;\n                opts = null;\n                prevCallbacks = null;\n            }\n        };\n    };\n    function attachZoomHandlers(gs, syncOpts, prevCallbacks) {\n        var block = false;\n        for (var i = 0; i < gs.length; i++) {\n            var g = gs[i];\n            g.updateOptions({\n                drawCallback: function(me, initial) {\n                    var arguments$1 = arguments;\n                    var this$1 = this;\n\n                    if (block || initial) return;\n                    block = true;\n                    var opts = {\n                        dateWindow: me.xAxisRange()\n                    };\n                    if (syncOpts.range) opts.valueRange = me.yAxisRange();\n                    for (var j = 0; j < gs.length; j++) {\n                        if (gs[j] == me) {\n                            if (prevCallbacks[j] && prevCallbacks[j].drawCallback) {\n                                prevCallbacks[j].drawCallback.apply(this$1, arguments$1);\n                            }\n                            continue;\n                        }\n                        if (gs[j].id && gs[j].hasOwnProperty(\"hideLines\") && gs[j][\"hideLines\"]) {\n                            var _tempVisibility = gs[j].getOption(\"visibility\");\n                            for (var k = 0; k < _tempVisibility.length; k++) {\n                                _tempVisibility[k] = false;\n                            }\n                        }\n                        gs[j].updateOptions(opts);\n                    }\n                    block = false;\n                }\n            }, true);\n        }\n    }\n    function attachSelectionHandlers(gs, prevCallbacks) {\n        var block = false;\n        for (var i = 0; i < gs.length; i++) {\n            var g = gs[i];\n            g.updateOptions({\n                highlightCallback: function(event, x, points, row, seriesName) {\n                    var arguments$1 = arguments;\n                    var this$1 = this;\n\n                    if (block) return;\n                    block = true;\n                    var me = this;\n                    for (var i = 0; i < gs.length; i++) {\n                        if (me == gs[i]) {\n                            if (prevCallbacks[i] && prevCallbacks[i].highlightCallback) {\n                                prevCallbacks[i].highlightCallback.apply(this$1, arguments$1);\n                            }\n                            continue;\n                        }\n                        var idx = gs[i].getRowForX(x);\n                        if (idx !== null) {\n                            gs[i].setSelection(idx, seriesName);\n                        }\n                    }\n                    block = false;\n                },\n                unhighlightCallback: function(event) {\n                    var arguments$1 = arguments;\n                    var this$1 = this;\n\n                    if (block) return;\n                    block = true;\n                    var me = this;\n                    for (var i = 0; i < gs.length; i++) {\n                        if (me == gs[i]) {\n                            if (prevCallbacks[i] && prevCallbacks[i].unhighlightCallback) {\n                                prevCallbacks[i].unhighlightCallback.apply(this$1, arguments$1);\n                            }\n                            continue;\n                        }\n                        gs[i].clearSelection();\n                    }\n                    block = false;\n                }\n            }, true);\n        }\n    }\n    Dygraph.synchronize = synchronize;\n})();\n(function(root, factory) {\n    \"use strict\";\n    if (typeof module !== \"undefined\" && module.exports) {\n        var ng = typeof angular === \"undefined\" ? require(\"angular\") : angular;\n        var jq = typeof jquery === \"undefined\" ? require(\"jquery\") : jquery;\n        factory(ng, jq);\n        module.exports = \"fgp.kit.queryBuilder\";\n    } else if (typeof define === \"function\" && define.amd) {\n        define([ \"angular\", \"jquery\" ], factory);\n    } else {\n        factory(root.angular, root.jquery);\n    }\n})(this, function(angular) {\n    \"use strict\";\n    var QueryBuilder = angular.module(\"fgp.kit.queryBuilder\", []);\n    QueryBuilder.directive(\"queryBuilder\", [ \"$interval\", function($interval) {\n        var _fields = '        <div class=\"col-md-3 dropdown\">            <button class=\"btn btn-sm btn-default dropdown-toggle form-control\" type=\"button\" data-toggle=\"dropdown\">{{rule.content.field}}<span class=\"caret\" style=\"float:right;\"></span></button>            <ul class=\"dropdown-menu\">                <li ng-repeat=\"f in fields\"><a ng-click=\"changeField(f, rule.content, \\'field\\')\"> {{f.label}} </a></li>            </ul>        </div>        ';\n        var _singleRule = '        <div class=\"col-md-12\">            ' + _fields + '            <div class=\"col-md-3 dropdown\">                <button class=\"btn btn-sm btn-default dropdown-toggle form-control\" type=\"button\" data-toggle=\"dropdown\">{{rule.content.condition}}<span class=\"caret\" style=\"float:right;\"></span></button>                <ul class=\"dropdown-menu\">                    <li ng-repeat=\"c in defaultConditions\"><a ng-click=\"changeCondition(c, rule.content, \\'condition\\')\"> {{c.label}} </a></li>                </ul>            </div>            <div class=\"col-md-4\">                <input class=\"form-control\" type=\"text\" ng-model=\"rule.content.value\"/>            </div>            <div class=\"col-md-2\">                <button style=\"button;height: 34px;width:34px;\" class=\"btn btn-sm btn-warning\" ng-click=\"removeRule(rule)\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>            </div>        </div>        ';\n        var _template = '            <div class=\"fgp-query-builder\">                <div class=\"row\">                    <div class=\"btn-group\" role=\"group\" style=\"float:left;\">                        <button type=\"button\" class=\"btn btn-sm btn-default\" ng-click=\"currentOperator=\\'add\\'\">ADD</button>                        <button type=\"button\" class=\"btn btn-sm btn-default\" ng-click=\"currentOperator=\\'or\\'\">OR</button>                    </div>                    <div class=\"btn-group\" role=\"group\" style=\"float:right;\">                        <button class=\"btn btn-sm btn-default\" ng-click=\"addNewRule()\"><i class=\"fa fa-plus\" aria-hidden=\"true\" style=\"margin-right:2px;\"></i>Rule</button>                        <button class=\"btn btn-sm btn-default\"><i class=\"fa fa-plus\" aria-hidden=\"true\" style=\"margin-right:2px;\"></i>Ruleset</button>                    </div>                </div>                <div class=\"row tree\" style=\"padding-top:3px;\">                    <ul>                        <li ng-repeat=\"rule in result.rules\">                        ' + _singleRule + \"                        </li>                    </ul>                </div>            <div>            \";\n        var _link = function(scope, element, attrs) {};\n        var _controller = [ \"$scope\", function($scope) {\n            $scope.currentOperator = \"and\";\n            $scope.fields = [ {\n                column: \"nic_mac_id\",\n                label: \"MAC_ID\"\n            }, {\n                column: \"meter_serial_num\",\n                label: \"SERIAL #\"\n            }, {\n                column: \"nmi_id\",\n                label: \"NMI\"\n            }, {\n                column: \"supplyPointGisId\",\n                label: \"SUPPLY POINT GIS\"\n            }, {\n                column: \"lv_circuit\",\n                label: \"LV_CIRCUIT\"\n            }, {\n                column: \"substation_name\",\n                label: \"SUBSTATION\"\n            }, {\n                column: \"switch_zone\",\n                label: \"SWITCH ZONE\"\n            }, {\n                column: \"hv_feeder\",\n                label: \"HVFEEDER\"\n            }, {\n                column: \"zone_substation\",\n                label: \"ZONE SUBSTATION\"\n            }, {\n                column: \"premise_address\",\n                label: \"ADDRESS\"\n            } ];\n            $scope.defaultConditions = [ {\n                label: \"==\",\n                value: \"==\"\n            }, {\n                label: \"is null\",\n                value: \"is null\"\n            }, {\n                label: \"is not null\",\n                value: \"is not null\"\n            } ];\n            $scope.result = {\n                rules: [ {\n                    id: Math.random().toString(36).replace(/[^a-z]+/g, \"\").substr(0, 20),\n                    content: {\n                        field: \"nic_mac_id\",\n                        condition: \"==\",\n                        value: \"\",\n                        operator: \"\"\n                    }\n                } ]\n            };\n            $scope.addNewRule = function() {\n                $scope.result.rules.push({\n                    id: Math.random().toString(36).replace(/[^a-z]+/g, \"\").substr(0, 20),\n                    content: {\n                        field: \"nic_mac_id\",\n                        condition: \"==\",\n                        value: \"\",\n                        operator: $scope.currentOperator\n                    }\n                });\n            };\n            $scope.removeRule = function(rule) {\n                var ridIndex = -1;\n                angular.forEach($scope.result.rules, function(item, _index) {\n                    if (item.id == rule.id) {\n                        ridIndex = _index;\n                    }\n                });\n                if (ridIndex != -1) {\n                    $scope.result.rules.splice(ridIndex, 1);\n                }\n            };\n            $scope.changeCondition = function(condition, obj, prop) {\n                obj[prop] = condition.value;\n            };\n            $scope.changeField = function(field, obj, prop) {\n                obj[prop] = field.column;\n            };\n        } ];\n        return {\n            restrict: \"E\",\n            template: _template,\n            scope: {\n                generateCallback: \"&\"\n            },\n            link: _link,\n            controller: _controller\n        };\n    } ]);\n});"],"sourceRoot":"/source/"}
{"version":3,"sources":["fgp.kit.bundle.js"],"names":["global","factory","exports","module","require","define","amd","fgp_kit","angular","$","Dygraph","ngmap","chartJS","this","angular$1","chart_js","fgpStage","scope","applicationName","deviceName","server","configuration","scatterColors","standalone","interactions","replace","restrict","prototype","template","controller","$scope","$element","$timeout","$rootScope","$compile","dataService","$interval","showdata","length","setColors","graphBindingArray","findChild4Repeat","parentId","parentHtmlObj","arrayItems","newId","newScope","i","parent","currentItem","element","html_render","id","attr","repeat","find","append","findChild","$watch","newVal","oldVal","empty","$destroy","$new","$on","evt","msg","push","forEach","item","items","children","item_new","currentElement","groupItems","dulpItem","param","config","callback","metadata","data","datasource","style","key","from","sendDeviceData","graph","$broadcast","graphs","deviceInfo","then","device","buildFactory","instance","dataAccessApi","$http","$q","$cacheFactory","_$http","_$q","indexCache","deviceStores","_$interval","host","deviceKey","deferred","defer","url","ajaxSettings","async","ajax","type","contentType","success","types","Object","defineProperty","name","get","result","field","error","e","reject","console","log","message","resolve","promise","deviceInitInfo","application","storeSchema","rangeLevel","otherLevels","fields","params","concat","cache","response","deviceStoreSchemaInfo","stores","this$1","results","promises","all","j","childrenDeviceInitInfo","relationType","relationDeviceType","fillChildrenTree","buckets","tree","showData","value","flag","info","fillTree","size","calTree","start","end","filter","elem","devicesStoreData","store","bucketsData","devicesNullBucket","index","bucketKeys","nullBucket","bucket","post","JSON","stringify","deviceData","currentBucketShowData","deviceStoreData","defaultColors","colors","co","lor","Math","floor","random","healthcheck","autoUpdateGraph","schema","count","fetcher","last","interval","trees","frequency","timeKey","devices","graphData","$inject","fgpWidgetContainer","attrs","hasOwnProperty","showTitle","element_id","dom_show","dom_show_notitle","widgetData","$emit","css","color","width","border","background","title","show","source","parse","fgpWidgetGraph","$filter","$location","$stateParams","_dataService","Export","DEFAULT_ATTRS","backgroundColor","titleFont","titleFontColor","axisLabelFont","axisLabelFontColor","labelFont","labelFontColor","legendFont","legendFontColor","vLabelLeft","legendHeight","legendMargin","lineHeight","maxlabelsWidth","labelTopMargin","magicNumbertop","isSupported","canvas","document","createElement","context","getContext","toDataURL","fillText","asPNG","dygraph","img","userOptions","asCanvas","src","options","createCanvas","update","width_","height","height_","drawPlot","drawLegend","ctx","fillStyle","fillRect","plotCanvas","hidden_","drawImage","axesPluginDict","getPlugin","axesPlugin","plugin","ylabels_","putLabel","xlabels_","labelsPluginDict","labelsPlugin","title_div_","xlabel_div_","putVerticalLabelY1","ylabel_div_","putVerticalLabelY2","y2label_div_","layout_","annotations","putLabelAnn","labelColor","divLabel","font","top","parseInt","left","bottom","textAlign","ceil","putText","text","innerText","textContent","textDim","measureText","save","translate","rotate","PI","restore","right","textBaseline","labelMargin","getColors","labels","attr_","slice","labelsWidth","labelsX","labelsY","labelVisibility","usedColorCount","txt","plugins_","toString","dom_loading","dom_legend","dom_empty_data","dom_alert_info","dom_datetime_interval","dom_series_list","dom_real_time_grap","dom_buttons","html","link","status","timeOut","completionPercent","getData","numSeries","numRows","initDate","Date","getTime","val","NaN","sampleData","movePan","event","g","side","preventDefault","stopPropagation","dragEndX","dragGetX_","dragEndY","dragGetY_","is2DPan","pixelsDragged","dragStartY","axis","axes_","axis_data","axes","unitsDragged","unitsPerPixel","boundedValue","boundedValues","maxValue","initialTopValue","min","minValue","dragValueRange","attributes_","getForAxis","valueWindow","pow","LOG_SCALE","valueRange","minDate","initialLeftmostDate","dragStartX","xUnitsPerPixel","boundedDates","max","maxDate","dateRange","zoomRange","xAxisZoomRange","getOptionForAxis","dateWindow_","drawGraph_","offsetToPercentage","offsetX","offsetY","xOffset","toDomCoords","xAxisRange","yar0","yAxisRange","yOffset","x","y","w","h","xPct","yPct","zoom","zoomInPercentage","xBias","yBias","direction","basicInfo","adjustAxis","bias","delta","increment","foo","yAxes","newYAxes","numAxes","ranges","range","newZoomRange","xAxisExtremes","updateOptions","dateWindow","canScroll","timer","mouseOverHandler","cancel","mouseEnterHandler","mouseOutHandler","scroll","normal","WheelEvent","detail","deltaY","wheelDelta","percentage","layerX","target","offsetLeft","layerY","offsetTop","percentages","plotter_","area","cancelEvent","chartDateWindow","firstPoint","timer_mousedown","mousedownHandler","initializeMouseDown","clientX","startPan","mousemoveHandler","isPanning","currentChart","mouseupHandler","endPan","currentView","currentHighlight","showOne","interactionModel","mousewheel","DOMMouseScroll","wheel","mousedown","mousemove","mouseenter","mouseup","mouseout","drawGapEdgePoints","pointSize","legend","labelsKMB","labelsSeparateLines","drawPoints","drawAxesAtZero","labelsDivStyles","text-align","position","display","yRangePad","ylabel","xLabelHeight","fillGraph","series","Device0","Device4","axisLabelWidth","y2","valueFormatter","moment","format","drawCallback","isInit","refersh","plugins","Plugins","Crosshair","timer_auto","process_bar_timer","on","tempConifg","realTimeGraph","currentChartOptions","file","darkenColor","colorStr","toRGB_","r","b","barChartPlotter","drawingContext","points","y_bottom","toDomYCoord","min_sep","Infinity","sep","canvasx","bar_width","p","center_x","canvasy","strokeRect","auto_device_name","auto_schema","auto_store","auto_fields","graph_data","worker","deviceConfig","auto_metadata","groups","collections","allLines","yRanges","collection","line","timestamp","showY2axis","rows","row","label","yaxis","plotter","DygraphCanvasRenderer","_linePlotter","barChartMultiColumnBarPlotter","f","Function","counter","realLine","ex","yrange","newLines","copy","perInterval","showRealTimeGraph","modal","buttons_show","buttonsShow","range_show","rangeSelectorBar","xAxisHeight","drawAxis","showRangeSelector","rangeSelectorHeight","finalDateRagne","chartDateTime","begin","finalDateRange","child","synchronize","selection","childrenChart","resize","$window","elementId","emptyDataShow","alertMessage","showY2Btns","legendText","legendText_device","legendText_datetime","legendText_column","legendText_value","legendColor","autoupdate","legendShow","dateTimeIntervals","download_image","dataurl","download","href","body","appendChild","click","removeChild","export_img","series_","currentIntervalName","download_data","content","fileName","mimeType","a","navigator","msSaveBlob","Blob","URL","createObjectURL","setAttribute","location","encodeURIComponent","export_data","getLabels","columns","csvContent","datewindow","rawData_","infoArray","tempArray","includes","dataString","join","basic","checked","currentIntervalChoosed","seriesIndex","sets","allSeriesPoints","newSets","fillColors","strokeColors","strokeStyle","x_left","stackedBarPlotter","changeInterval","rangeConfig","loadingShow","intevals","begin_path","end_path","init_flag","fixInterval","noneFixed","fixGraphWithGap","currentInterval","fixed","tempDate","obj","labels_","file_","showOrHideDevice","childrenDevices","setVisibility","fixGraphWithGap_click","scatter","newValue","oldValue","device_name","parent_container","data_from","checkY2Btns","currentIntervalsInfo","collection_conf","intervals","_interval","viewTimer","nObj","oObj","changeViewFunc","level","patt","RegExp","lines","match","column","startsWith","initChart","relation","relation_group","initChildrenChart","expect_points","expectedInterval","conf","preOne","lastOne","expects","cin","arr","Array","apply","series_range","l0","rangeBarLabels","objNeed2Add","dataLength","tempObj","sort","rangeSeries","currentStore","childTrees","currentDeviceInfo","extension","updateChildrenDetailChart","rangeChildrenData","fetchData","updateDetailChart","rangeData","group","values","node","array","ordinalRangeData","intevalforshow","rangeTree","first","allData","newData","thePoint","updateChart","deviceDatas","devicesInfo","deviceObj","updateChildrenChart","init","relationConfig","leftAndRight","leftYAxis","rightYAxis","allXLabels","yRange","substr","originalData","legend_label","odata","childrenRangeConfig","highlightSeriesOpts","strokeWidth","strokeBorderWidth","highlightCircleSize","y2label","highlightCallback","pts","seriesName","sn","point_show","xval","yval","point","$apply","legendTop","legendLeft","unhighlightCallback","axisLabelFormatter","d","Number","newTime","tempData","tempTime","dateTime","indexOf","chartData","nt","timeTicket","lineData","errorHandler","autoUpdateChart","rangeSeriesNumber","open","lastIndexOf","btntimer","btnZoomInVLeft","btnZoomOutVLeft","btnZoomInVRight","btnZoomOutVRight","btnPanVULeft","btnPanVDLeft","btnPanVURight","btnPanVDRight","btnpanleft","panRange","pan_delta","startDate","endDate","btnpanright","btnzoomin","rangeStart","rangeEnd","btnzoomout","fgpWidgetPageTitle","minHeight","subtitle","fgpWidgetMap","markers","details","$parent","latitude","longitude","center","fgpWidgetDeviceDetail","fgpWidgetSpan","fgpWidgetPie","chart","Chart","datasets","responsive","maintainAspectRatio","animation","pieData","fgpDockerButton","show_dom","stats","confData","repeateId","pageDevice","container","checkShow","button","shown","buttons","split","healthinfo","action","method","func","script","relationship","successCallback","errorCallback","fgpWidgetRepeatContainer","$websocket","labelstyle","listStyle","deviceType","dataStream","port","onMessage","backData","State","Health","Status","fgpImage","fgpIcon","icon","desc","fgpWidgetAppContainer","containers","containerswithTimeout","showstyle","pp","gotoContainer","showLabel","app","timer_index","t","newTimer","splice","itemIndex","fgpWidgetChartTable","chartId","sampledata","collectionName","groupName","formatter","record","cleanData","service","input","substring","setTree","localStorage","getTree","addTree","clear","directive","$last"],"mappings":"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","file":"fgp.kit.bundle.min.js","sourcesContent":["/**\n * fgp-kit\n * @version 1.0 - Homepage <http://www.future-grid.com.au>\n * @copyright (c) 2013-2016 Eric.Wang <flexdeviser@gmail.com>\n * @license Apache2. \n * @overview fgp.kit.js is a useful toolkit for future-grid's clients.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular'), require('jquery'), require('dygraphs'), require('ngmap'), require('chart.js')) :\n    typeof define === 'function' && define.amd ? define(['angular', 'jquery', 'dygraphs', 'ngmap', 'chart.js'], factory) :\n    (global.fgp_kit = factory(global.angular,global.$,global.Dygraph,global.ngmap,global.chartJS));\n}(this, (function (angular$1,$,Dygraph,ngmap,chart_js) {\n\nangular$1 = 'default' in angular$1 ? angular$1['default'] : angular$1;\n$ = 'default' in $ ? $['default'] : $;\nDygraph = 'default' in Dygraph ? Dygraph['default'] : Dygraph;\n\n/**\n * Created by ericwang on 10/06/2016.\n */\nvar fgpStage = function fgpStage() {\n    this.scope = {\n        applicationName: \"=\",\n        deviceName: \"=\",\n        server: \"=\",\n        configuration: '=',\n        scatterColors: \"=\",\n        standalone: \"=\",\n        interactions: \"=\"\n    };\n    this.replace = true;\n    this.restrict = 'A';\n};\n\nfgpStage.prototype.template = function template () {\n    return '<div id=\"pageStage\" class=\"wrapper col-md-12 col-xl-12\" style=\"background-color: #fff;height:100%;padding: 0px;\">' +\n        '</div>';\n};\n\nfgpStage.prototype.controller = function controller ($scope, $element, $timeout, $rootScope, $compile, dataService, $interval) {\n    $scope.showdata = {};\n\n    if ($scope.scatterColors && $scope.scatterColors.length > 0) {\n        dataService.setColors($scope.scatterColors);\n    }\n\n\n    $rootScope['applicationName'] = $scope.applicationName;\n    $rootScope['host'] = $scope.server;\n    $rootScope['device'] = $scope.deviceName;\n    $rootScope['standalone'] = $scope.standalone;\n\n\n    var graphBindingArray = [];\n\n\n    function findChild4Repeat(parentId, parentHtmlObj, arrayItems, newId,newScope) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n\n                newScope.showdata[id] = arrayItems[i];\n                if (parentHtmlObj.attr(\"repeat-id\")) {\n                    newScope.repeat = parentHtmlObj.attr(\"repeat-id\");\n                }\n                if (parentHtmlObj.find('#edit' + parentId).find(\"#\" + id).length == 0) {\n                    parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)(newScope));\n                }\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems,newScope);\n            }\n            else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                newScope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)(newScope));\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems,newScope);\n            }\n        }\n    }\n\n    function findChild(parentId, parentHtmlObj, arrayItems,newScope) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                newScope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)(newScope));\n                findChild(arrayItems[i].id, currentItem, arrayItems,newScope);\n            } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                newScope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)(newScope));\n                findChild(arrayItems[i].id, currentItem, arrayItems,newScope);\n            }\n        }\n    }\n\n    var newScope = null;\n    $scope.$watch('deviceName', function (newVal, oldVal) {\n        if(newVal){\n            $element.empty();\n            if(newScope){\n                newScope.$destroy();\n            }\n            newScope = $rootScope.$new(true);\n            newScope[\"showdata\"] = {};\n\n            newScope.$on('bindChildChartEvent', function (evt, msg) {\n                graphBindingArray.push(msg);\n            });\n\n            newScope[\"interactions\"] = $scope.interactions;\n\n            newScope.$on('bindChildRepeatEvent', function (evt, msg) {\n                angular$1.forEach($scope.configuration, function (item) {\n                    if (item.id == msg.id) {\n                        var items = angular$1.element(\"body\").find(\"#\" + item.id).children();\n                        angular$1.forEach(items, function (item_new) {\n                            newScope.showdata[item_new.id] = item;\n                            var currentElement = angular$1.element(item_new);\n                            if (currentElement.attr(\"dulp\")) {\n                                var groupItems = angular$1.element(\"body\").find(\"div[dulp='\" + item.id + \"']\");\n                                angular$1.forEach(groupItems, function (dulpItem) {\n                                    findChild4Repeat(item.id, angular$1.element(dulpItem), $scope.configuration, item_new.id,newScope);\n                                });\n                            }else{\n                                findChild4Repeat(item.id, currentElement, $scope.configuration, item_new.id,newScope);\n                            }\n                        });\n                    }\n                });\n            });\n\n            newScope.$on('listStyleEvent', function (evt, param) {\n                var config = newScope.showdata[param.id.replace(\"edit\", \"\")];\n                param.callback(config.metadata.data.datasource.style);\n            });\n\n\n            newScope.$on('fetchWidgetMetadataEvent', function (evt, msg) {\n                angular$1.forEach(newScope.showdata, function (metadata, key) {\n                    if (key == msg.id) {\n                        msg.callback({data: metadata, from: 'show'});\n                        return;\n                    }\n                });\n            });\n\n            // refersh\n            angular$1.forEach($scope.configuration, function (item) {\n                if ('workingArea' === item.parent) {\n                    var currentItem = angular$1.element(item.html_render);\n                    newScope.showdata[item.id] = item;\n                    $element.append($compile(currentItem)(newScope));\n                    findChild(item.id, currentItem, $scope.configuration,newScope);\n                }\n            });\n            /**\n             * get device information\n             */\n            if ($scope.deviceName && $scope.deviceName != \"\" && \"undefined\" != $scope.deviceName) {\n                // first time\n                sendDeviceData(newScope);\n            }\n            // all item created;\n            $timeout(function () {\n                angular$1.forEach(graphBindingArray, function (graph) {\n                    newScope.$broadcast('bindFatherGraphEvent', {parent: graph.graphs, children: graph.children});\n                });\n            });\n        }\n    });\n\n\n    var sendDeviceData = function (newScope) {\n            dataService.deviceInfo($scope.server, $scope.deviceName, null, $scope.applicationName).then(function (data) {\n                // send device info to all widget\n                $timeout(function () {\n                    newScope.$broadcast('deviceInfoEvent', {device: data, from: 'application'});\n                });\n            });\n    };\n\n\n\n\n\n\n};\n\n\nfgpStage.buildFactory = function buildFactory () {\n    fgpStage.instance = new fgpStage();\n    return fgpStage.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar dataAccessApi = function dataAccessApi($http, $q, $cacheFactory, $interval) {\n    this._$http = $http;\n    this._$q = $q;\n    // get cache\n    this.indexCache = $cacheFactory('indexCache');\n    this.deviceStores = $cacheFactory('deviceStores');\n    this._$interval = $interval;\n};\n\n\n/**\n * sync using JQuery\n * @param deviceName\n * @param deviceKey\n * @param applicationName\n * @returns {*}\n */\ndataAccessApi.prototype.deviceInfo = function deviceInfo (host, deviceName, deviceKey, applicationName) {\n    var deferred = this._$q.defer();\n    var url = host + \"/rest/api/\";\n\n    if (applicationName) {\n        url += \"app/\" + applicationName;\n    }\n\n    if (deviceName) {\n        url += '/devices/' + deviceName;\n    } else if (deviceKey) {\n        url += 'devices?key=' + deviceKey;\n    }\n\n    $.ajaxSettings.async = false;\n    $.ajax({\n        type: 'GET',\n        url: url,\n        contentType: \"application/json\",\n        success: function(data) {\n            var url = host + \"/rest/api/\";\n            if (applicationName) {\n                url += \"app/\" + applicationName + \"/devices/extension-types?device_type=\";\n            } else {\n                url += \"devices/extension-types?device_type=\";\n            }\n            $.ajaxSettings.async = false;\n            $.ajax({\n                type: 'GET',\n                url: url + data.type,\n                contentType: \"application/json\",\n                success: function(types) {\n                    angular$1.forEach(types, function(type) {\n                        Object.defineProperty(data, type.name, {\n                            get: function() {\n                                var result = null;\n                                var url = host + \"/rest/api/\";\n                                if (applicationName) {\n                                    url += \"app/\" + applicationName + \"/devices/extensions?device_name=\";\n                                } else {\n                                    url += \"devices/extensions?device_name=\";\n                                }\n                                $.ajaxSettings.async = false;\n                                $.ajax({\n                                    type: 'GET',\n                                    url: url + this.name + '&extension_type=' + type.name,\n                                    contentType: \"application/json\",\n                                    success: function(field) {\n                                        result = field;\n                                    },\n                                    error: function(e) {\n                                        deferred.reject(e);\n                                    }\n                                });\n                                return result;\n                            }\n                        });\n                    });\n                },\n                error: function(e) {\n                    console.log(e.message);\n                }\n            });\n\n            deferred.resolve(data);\n        },\n        error: function(e) {\n            deferred.reject(e);\n        }\n    });\n    return deferred.promise;\n};\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.deviceInitInfo = function deviceInitInfo (host, application, deviceKey, storeSchema, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            'otherLevels': otherLevels,\n            'fields': [].concat(fields)\n        },\n        cache: this.deviceStores\n    }).then(\n        function(response) {\n            deferred.resolve(response.data);\n        },\n        function(response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\ndataAccessApi.prototype.deviceStoreSchemaInfo = function deviceStoreSchemaInfo (host, application, device, storeSchema, stores, fields) {\n        var this$1 = this;\n\n    var deferred = this._$q.defer();\n    var results = [];\n    var promises = [];\n    for (var i = 0; i < stores.length; i++) {\n        var key = stores[i];\n        promises.push(this$1._$http.get(host + '/rest/api/app/' + application + '/store/devices/store_schema_info/' + storeSchema + '/' + key + '?device=' + device).then(function(response) {\n            return {\n                data: response.data\n            };\n        }));\n    }\n    this._$q.all(promises).then(function(result) {\n        for (var j = 0; j < result.length; j++) {\n            results.push(result[j]);\n        }\n        deferred.resolve(results);\n    });\n    return deferred.promise;\n};\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.childrenDeviceInitInfo = function childrenDeviceInitInfo (host, application, deviceKey, storeSchema, relationType, relationDeviceType, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/children/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            relationType: relationType,\n            relationDeviceType: relationDeviceType,\n            otherLevels: otherLevels,\n            fields: [].concat(fields)\n        },\n        cache: this.deviceStores\n    }).then(\n        function(response) {\n            deferred.resolve(response.data);\n        },\n        function(response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\ndataAccessApi.prototype.fillChildrenTree = function fillChildrenTree (buckets, tree, showData) {\n\n    if (tree.children[0] != null) {\n        fillChildrenTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillChildrenTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n\n        angular$1.forEach(buckets, function(value, key) {\n            if (key == tree.id && value != null) {\n                tree.data = value;\n                tree['size'] = value.length;\n\n                var flag = false;\n                angular$1.forEach(showData, function(data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        tree['size'] = value.length;\n                        flag = true;\n                    }\n                });\n\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n};\n\ndataAccessApi.prototype.fillTree = function fillTree (buckets, tree, showData) {\n    if (tree.children[0] != null) {\n        fillTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        angular$1.forEach(buckets, function(value, key) {\n            if (key == tree.id) {\n                tree.data = value;\n                tree['size'] = value.size;\n                var flag = false;\n                angular$1.forEach(showData, function(data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        data['size'] = tree.size;\n                        flag = true;\n                    }\n                });\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n\n};\n\ndataAccessApi.prototype.calTree = function calTree (buckets, tree, start, end) {\n    if (tree.children[0] != null) {\n        calTree(buckets, tree.children[0], start, end);\n    }\n\n    if (tree.children[1] != null) {\n        calTree(buckets, tree.children[1], start, end);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        // is overlap?\n        if (((start >= tree.start) && start < tree.end) ||\n            ((start > tree.start) && start <= tree.end) ||\n            ((tree.start >= start) && tree.start < end) ||\n            ((tree.start > start) && tree.start <= end)) {\n            if (buckets.filter(function(elem) {\n                    return elem.id == tree.id\n                }).length == 0) {\n                buckets.push(tree);\n            }\n        }\n    }\n};\n\n\n/**\n *\n * @param application\n * @param deviceInfo deviceKey and tree\n * @param storeSchema\n * @param store\n * @param start\n * @param end\n */\ndataAccessApi.prototype.devicesStoreData = function devicesStoreData (host, application, deviceInfo, storeSchema, store, start, end, fields) {\n\n    var bucketsData = [];\n    var devicesNullBucket = [];\n    var calTree = this.calTree;\n    var fillChildrenTree = this.fillChildrenTree;\n    angular$1.forEach(deviceInfo, function(device, index) {\n        var bucketKeys = [];\n        calTree(bucketKeys, device.tree, start, end);\n        var nullBucket = [];\n        // get null buckets\n        angular$1.forEach(bucketKeys, function(bucket) {\n            if (bucket.data == null) {\n                nullBucket.push(bucket.id);\n            }\n        });\n        if (nullBucket.length != 0) {\n            devicesNullBucket.push({\n                device: device.name,\n                nullBucket: nullBucket\n            });\n        }\n        bucketsData.push({\n            device: device.name,\n            data: bucketKeys\n        });\n    });\n\n    if (devicesNullBucket.length == 0) {\n        // get data from rest service\n        var deferred = this._$q.defer();\n        deferred.resolve(bucketsData);\n        return deferred.promise;\n    } else {\n        // get data from rest service\n        var deferred = this._$q.defer();\n        this._$http.post(host + '/rest/api/app/' + application + '/store/index/devices/store/data/' + storeSchema + '/' + store, {\n            'bucketKeys': JSON.stringify(devicesNullBucket),\n            'fields': JSON.stringify(fields)\n        }).then(\n            function(response) {\n                // response.data\n                angular$1.forEach(response.data, function(deviceData) {\n\n                    var currentBucketShowData = null;\n                    angular$1.forEach(bucketsData, function(showData) {\n                        if (showData.device == deviceData.device) {\n                            currentBucketShowData = showData.data; //  bucketKeys\n                            angular$1.forEach(deviceInfo, function(device, index) {\n                                if (deviceData.device == device.name) {\n                                    fillChildrenTree(deviceData.data, device.tree, currentBucketShowData);\n                                }\n                            });\n                        }\n                    });\n\n                });\n                // fill bucketKeys\n                deferred.resolve(bucketsData);\n            },\n            function(response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n};\n\n\ndataAccessApi.prototype.deviceStoreData = function deviceStoreData (host, application, deviceKey, storeSchema, store, tree, start, end, fields) {\n    var fillTree = this.fillTree;\n    var calTree = this.calTree;\n    var bucketKeys = [];\n    calTree(bucketKeys, tree, start, end);\n    var nullBucket = [];\n    // get null buckets\n    angular$1.forEach(bucketKeys, function(bucket) {\n        if (bucket.data == null) {\n            nullBucket.push(bucket.id);\n        }\n    });\n\n    if (nullBucket.length == 0) {\n        // send rest request\n        var deferred = this._$q.defer();\n        deferred.resolve(bucketKeys);\n        return deferred.promise;\n    } else {\n        // send rest request\n        var deferred = this._$q.defer();\n        this._$http.get(host + '/rest/api/app/' + application + '/store/index/store/data/' + deviceKey + '/' + storeSchema + '/' + store, {\n            params: {\n                bucketKeys: nullBucket,\n                fields: [].concat(fields)\n            }\n        }).then(\n            function(response) {\n                fillTree(response.data, tree, bucketKeys);\n                // fill bucketKeys\n                deferred.resolve(bucketKeys);\n            },\n            function(response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n};\n\ndataAccessApi.prototype.defaultColors = function defaultColors () {\n        var this$1 = this;\n\n    if (!this.colors) {\n        this['colors'] = [];\n        for (var i = 0; i < 300; i++) {\n            this$1.colors.push('#' + (function co(lor) {\n                return (lor += [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)]) &&\n                    (lor.length == 6) ? lor : co(lor);\n            })(''));\n        }\n    }\n    return this.colors;\n};\n\ndataAccessApi.prototype.setColors = function setColors (colors) {\n    this.colors = colors;\n};\n\n\n/**\n * device id\n * @param id\n */\ndataAccessApi.prototype.healthcheck = function healthcheck (application, id) {\n\n    if (id = null || id == \"\") {\n        return;\n    }\n    this._$http.get('/rest/api/app/' + application + '/docker/healthcheck/reports?id=' + id)\n        .success(function(response) {\n            console.info(response);\n            return response;\n        });\n\n\n};\n\n\ndataAccessApi.prototype.autoUpdateGraph = function autoUpdateGraph (application, device, schema, store, fields, count, callback) {\n    var _$interval = this._$interval;\n    var _$http = this._$http;\n    var fetcher = null;\n    this._$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n        .success(function(response) {\n            var last = -1;\n            var interval = -1;\n            if (response.trees && response.trees.length === 1) {\n                interval = response.trees[0].frequency;\n                last = response.trees[0].last.timeKey;\n            }\n            if (interval != -1) {\n                var start = last - (count * interval);\n                var end = last;\n                // first time\n                _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                    params: {\n                        \"devices\": JSON.stringify([device]),\n                        \"fields\": JSON.stringify(fields),\n                        \"start\": start,\n                        \"end\": end\n                    }\n                }).success(function(graphData) {\n\n                    // start task\n                    fetcher = _$interval(function() {\n                        _$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n                            .success(function(response) {\n                                if (response.trees && response.trees.length === 1) {\n                                    last = response.trees[0].last.timeKey;\n                                    start = last - (count * interval);\n                                    end = last;\n                                    _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                                        params: {\n                                            \"devices\": JSON.stringify([device]),\n                                            \"fields\": JSON.stringify(fields),\n                                            \"start\": start,\n                                            \"end\": end\n                                        }\n                                    }).success(function(graphData) {\n                                        // put the data back\n                                        callback(graphData[device], null, interval);\n                                    });\n                                }\n                            });\n                    }, interval);\n\n                    // put the data back\n                    callback(graphData[device], fetcher, interval);\n                });\n            }\n        });\n\n};\n\n\ndataAccessApi.buildFactory = function buildFactory ($http, $q, $cacheFactory, $interval) {\n    dataAccessApi.instance = new dataAccessApi($http, $q, $cacheFactory, $interval);\n    return dataAccessApi.instance;\n};\n\ndataAccessApi.$inject = ['$http', '$q', '$cacheFactory', '$interval'];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetContainer = function fgpWidgetContainer() {\n    this.restrict = 'E';\n    this.scope = {\n        interactions: \"=\"\n    };\n};\n\nfgpWidgetContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\" style=\"margin-top:10px;margin-bottom:10px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding: 0px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}}\">{{css.title.text}}</div>' +\n        '<div class=\"panel-body\" id=\"edit' + element_id + '\" style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '\" style=\"height: 100%;\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-top:10px;margin-bottom:10px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n\n};\n\nfgpWidgetContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n    if (metadata.data) {\n        $scope.data[\"source\"] = metadata.data.source;\n        if ($scope.data && $scope.data.source.device && $scope.data.source.device != -1) {\n\n            if ($scope.data.source.device) {\n                /**\n                 * get device information\n                 */\n                dataService.deviceInfo($rootScope.host, JSON.parse($scope.data.source.device).name, null, $rootScope.applicationName).then(function (data) {\n                    // send device info to all widget\n                    $timeout(function () {\n                        $rootScope.$broadcast('deviceInfoEvent', {device: data, from: element_id});\n                    });\n                });\n            }\n\n        }\n    }\n\n};\n\n\nfgpWidgetContainer.buildFactory = function buildFactory () {\n    fgpWidgetContainer.instance = new fgpWidgetContainer();\n    return fgpWidgetContainer.instance;\n};\n\nfgpWidgetContainer.$inject = [];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetGraph = function fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    this.restrict = 'E';\n    this.scope = {\n        interactions: \"=\"\n    };\n    this.$timeout = $timeout;\n    this._dataService = dataService;\n    this._$interval = $interval;\n\n\n    /*jslint vars: true, nomen: true, plusplus: true, maxerr: 500, indent: 4 */\n\n    /**\n     * @license\n     * Copyright 2011 Juan Manuel Caicedo Carvajal (juan@cavorite.com)\n     * MIT-licensed (http://opensource.org/licenses/MIT)\n     */\n\n    /**\n     * @fileoverview This file contains additional features for dygraphs, which\n     * are not required but can be useful for certain use cases. Examples include\n     * exporting a dygraph as a PNG image.\n     */\n\n    /**\n     * Demo code for exporting a Dygraph object as an image.\n     *\n     * See: http://cavorite.com/labs/js/dygraphs-export/\n     */\n\n    Dygraph.Export = {};\n\n    Dygraph.Export.DEFAULT_ATTRS = {\n\n        backgroundColor: \"transparent\",\n\n        //Texts displayed below the chart's x-axis and to the left of the y-axis\n        titleFont: \"bold 18px serif\",\n        titleFontColor: \"black\",\n\n        //Texts displayed below the chart's x-axis and to the left of the y-axis\n        axisLabelFont: \"bold 14px serif\",\n        axisLabelFontColor: \"black\",\n\n        // Texts for the axis ticks\n        labelFont: \"normal 12px serif\",\n        labelFontColor: \"black\",\n\n        // Text for the chart legend\n        legendFont: \"bold 12px serif\",\n        legendFontColor: \"black\",\n\n        // Default position for vertical labels\n        vLabelLeft: 20,\n\n        legendHeight: 20, // Height of the legend area\n        legendMargin: 20,\n        lineHeight: 30,\n        maxlabelsWidth: 0,\n        labelTopMargin: 35,\n        magicNumbertop: 8\n\n    };\n\n    /**\n     * Tests whether the browser supports the canvas API and its methods for\n     * drawing text and exporting it as a data URL.\n     */\n    Dygraph.Export.isSupported = function() {\n        \"use strict\";\n        try {\n            var canvas = document.createElement(\"canvas\");\n            var context = canvas.getContext(\"2d\");\n            return (!!canvas.toDataURL && !!context.fillText);\n        } catch (e) {\n            // Silent exception.\n        }\n        return false;\n    };\n\n    /**\n     * Exports a dygraph object as a PNG image.\n     *\n     *  dygraph: A Dygraph object\n     *  img: An IMG DOM node\n     *  userOptions: An object with the user specified options.\n     *\n     */\n    Dygraph.Export.asPNG = function(dygraph, img, userOptions) {\n        \"use strict\";\n        var canvas = Dygraph.Export.asCanvas(dygraph, userOptions);\n        img.src = canvas.toDataURL();\n    };\n\n    /**\n     * Exports a dygraph into a single canvas object.\n     *\n     * Returns a canvas object that can be exported as a PNG.\n     *\n     *  dygraph: A Dygraph object\n     *  userOptions: An object with the user specified options.\n     *\n     */\n    Dygraph.Export.asCanvas = function(dygraph, userOptions) {\n        \"use strict\";\n        var options = {},\n            canvas = Dygraph.createCanvas();\n\n        Dygraph.update(options, Dygraph.Export.DEFAULT_ATTRS);\n        Dygraph.update(options, userOptions);\n\n        canvas.width = dygraph.width_;\n        canvas.height = dygraph.height_ + options.legendHeight;\n\n        Dygraph.Export.drawPlot(canvas, dygraph, options);\n        Dygraph.Export.drawLegend(canvas, dygraph, options);\n        return canvas;\n    };\n\n    /**\n     * Adds the plot and the axes to a canvas context.\n     */\n    Dygraph.Export.drawPlot = function(canvas, dygraph, options) {\n        \"use strict\";\n        var ctx = canvas.getContext(\"2d\");\n\n        // Add user defined background\n        ctx.fillStyle = options.backgroundColor;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Copy the plot canvas into the context of the new image.\n        var plotCanvas = dygraph.hidden_;\n\n        var i = 0;\n\n        ctx.drawImage(plotCanvas, 0, 0);\n\n\n        // Add the x and y axes\n        var axesPluginDict = Dygraph.Export.getPlugin(dygraph, 'Axes Plugin');\n        if (axesPluginDict) {\n            var axesPlugin = axesPluginDict.plugin;\n\n            for (i = 0; i < axesPlugin.ylabels_.length; i++) {\n                Dygraph.Export.putLabel(ctx, axesPlugin.ylabels_[i], options,\n                    options.labelFont, options.labelFontColor);\n            }\n\n            for (i = 0; i < axesPlugin.xlabels_.length; i++) {\n                Dygraph.Export.putLabel(ctx, axesPlugin.xlabels_[i], options,\n                    options.labelFont, options.labelFontColor);\n            }\n        }\n\n        // Title and axis labels\n\n        var labelsPluginDict = Dygraph.Export.getPlugin(dygraph, 'ChartLabels Plugin');\n        if (labelsPluginDict) {\n            var labelsPlugin = labelsPluginDict.plugin;\n\n            Dygraph.Export.putLabel(ctx, labelsPlugin.title_div_, options,\n                options.titleFont, options.titleFontColor);\n\n            Dygraph.Export.putLabel(ctx, labelsPlugin.xlabel_div_, options,\n                options.axisLabelFont, options.axisLabelFontColor);\n\n            Dygraph.Export.putVerticalLabelY1(ctx, labelsPlugin.ylabel_div_, options,\n                options.axisLabelFont, options.axisLabelFontColor, \"center\");\n\n            Dygraph.Export.putVerticalLabelY2(ctx, labelsPlugin.y2label_div_, options,\n                options.axisLabelFont, options.axisLabelFontColor, \"center\");\n        }\n\n\n        for (i = 0; i < dygraph.layout_.annotations.length; i++) {\n            Dygraph.Export.putLabelAnn(ctx, dygraph.layout_.annotations[i], options,\n                options.labelFont, options.labelColor);\n        }\n\n    };\n\n    /**\n     * Draws a label (axis label or graph title) at the same position\n     * where the div containing the text is located.\n     */\n    Dygraph.Export.putLabel = function(ctx, divLabel, options, font, color) {\n        \"use strict\";\n\n        if (!divLabel || !divLabel.style) {\n            return;\n        }\n\n        var top = parseInt(divLabel.style.top, 10);\n        var left = parseInt(divLabel.style.left, 10);\n\n        if (!divLabel.style.top.length) {\n            var bottom = parseInt(divLabel.style.bottom, 10);\n            var height = parseInt(divLabel.style.height, 10);\n\n            top = ctx.canvas.height - options.legendHeight - bottom - height;\n        }\n\n        // FIXME: Remove this 'magic' number needed to get the line-height.\n        top = top + options.magicNumbertop;\n\n        var width = parseInt(divLabel.style.width, 10);\n\n        switch (divLabel.style.textAlign) {\n            case \"center\":\n                left = left + Math.ceil(width / 2);\n                break;\n            case \"right\":\n                left = left + width;\n                break;\n        }\n\n        Dygraph.Export.putText(ctx, left, top, divLabel, font, color);\n    };\n\n    /**\n     * Draws a label Y1 rotated 90 degrees counterclockwise.\n     */\n    Dygraph.Export.putVerticalLabelY1 = function(ctx, divLabel, options, font, color, textAlign) {\n        \"use strict\";\n        if (!divLabel) {\n            return;\n        }\n\n        var top = parseInt(divLabel.style.top, 10);\n        var left = parseInt(divLabel.style.left, 10) + parseInt(divLabel.style.width, 10) / 2;\n        var text = divLabel.innerText || divLabel.textContent;\n\n\n        // FIXME: The value of the 'left' property is frequently 0, used the option.\n        if (!left)\n            left = options.vLabelLeft;\n\n        if (textAlign == \"center\") {\n            var textDim = ctx.measureText(text);\n            top = Math.ceil((ctx.canvas.height - textDim.width) / 2 + textDim.width);\n        }\n\n        ctx.save();\n        ctx.translate(0, ctx.canvas.height);\n        ctx.rotate(-Math.PI / 2);\n\n        ctx.fillStyle = color;\n        ctx.font = font;\n        ctx.textAlign = textAlign;\n        ctx.fillText(text, top, left);\n\n        ctx.restore();\n    };\n\n    /**\n     * Draws a label Y2 rotated 90 degrees clockwise.\n     */\n    Dygraph.Export.putVerticalLabelY2 = function(ctx, divLabel, options, font, color, textAlign) {\n        \"use strict\";\n        if (!divLabel) {\n            return;\n        }\n\n        var top = parseInt(divLabel.style.top, 10);\n\n        if (divLabel.style.right == \"\") {\n            divLabel.style.right = \"10px\";\n        }\n\n        var right = parseInt(divLabel.style.right, 10) + parseInt(divLabel.style.width, 10) * 2;\n        var text = divLabel.innerText || divLabel.textContent;\n\n        if (textAlign == \"center\") {\n            var textDim = ctx.measureText(text);\n            top = Math.ceil((ctx.canvas.height + textDim.width) / 2 - textDim.width);\n        }\n\n        ctx.save();\n        ctx.translate(parseInt(divLabel.style.width, 10), 0);\n        ctx.rotate(Math.PI / 2);\n\n        ctx.fillStyle = color;\n        ctx.font = font;\n        ctx.textAlign = textAlign;\n        ctx.fillText(text, top, right - ctx.canvas.width);\n\n        ctx.restore();\n    };\n\n    /**\n     * Draws the text contained in 'divLabel' at the specified position.\n     */\n    Dygraph.Export.putText = function(ctx, left, top, divLabel, font, color) {\n        \"use strict\";\n        var textAlign = divLabel.style.textAlign || \"left\";\n        var text = divLabel.innerText || divLabel.textContent;\n\n        ctx.fillStyle = color;\n        ctx.font = font;\n        ctx.textAlign = textAlign;\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(text, left, top);\n    };\n\n    /**\n     * Draws the legend of a dygraph\n     *\n     */\n    Dygraph.Export.drawLegend = function(canvas, dygraph, options) {\n        \"use strict\";\n        var ctx = canvas.getContext(\"2d\");\n\n        // Margin from the plot\n        var labelTopMargin = 10;\n\n        // Margin between labels\n        var labelMargin = 5;\n\n        var colors = dygraph.getColors();\n        // Drop the first element, which is the label for the time dimension\n        var labels = dygraph.attr_(\"labels\").slice(1);\n\n        // 1. Compute the width of the labels:\n        var labelsWidth = 0;\n\n        var i;\n        for (i = 0; i < labels.length; i++) {\n            if (labels[i] != \"span_y1\" && labels[i] != \"span_y2\") {\n                labelsWidth = labelsWidth + ctx.measureText(\"- \" + labels[i]).width + labelMargin;\n            }\n        }\n\n        var labelsX = Math.floor((canvas.width - labelsWidth) / 2);\n        var labelsY = canvas.height - options.legendHeight + labelTopMargin;\n\n\n        var labelVisibility = dygraph.attr_(\"visibility\");\n\n        ctx.font = options.legendFont;\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"middle\";\n\n        var usedColorCount = 0;\n        for (i = 0; i < labels.length; i++) {\n            if (labelVisibility[i]) {\n                if (labels[i] != \"span_y1\" && labels[i] != \"span_y2\") {\n                    var txt = \"- \" + labels[i];\n                    ctx.fillStyle = colors[usedColorCount];\n                    usedColorCount++;\n                    ctx.fillText(txt, labelsX, labelsY);\n                    labelsX = labelsX + ctx.measureText(txt).width + labelMargin;\n                }\n            }\n        }\n    };\n\n    /**\n     * Finds a plugin by the value returned by its toString method..\n     *\n     * Returns the the dictionary corresponding to the plugin for the argument.\n     * If the plugin is not found, it returns null.\n     */\n    Dygraph.Export.getPlugin = function(dygraph, name) {\n        for (i = 0; i < dygraph.plugins_.length; i++) {\n            if (dygraph.plugins_[i].plugin.toString() == name) {\n                return dygraph.plugins_[i];\n            }\n        }\n        return null;\n    };\n\n\n};\n\n\nfgpWidgetGraph.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    if (flag) {\n        var dom_loading = '<div ng-show=\"loadingShow\" id=\"loading_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\">' +\n            '<div class=\"rect1\" style=\"background-color: darkgreen\"></div>' +\n            '<div class=\"rect2\" style=\"background-color: #3cb0fd\"></div>' +\n            '<div class=\"rect3\" style=\"background-color: #777777\"></div>' +\n            '<div class=\"rect4\" style=\"background-color: coral\"></div>' +\n            '<div class=\"rect5\" style=\"background-color: deeppink\"></div>' +\n            '</div></div>';\n\n\n        var dom_legend = '<li>{{legendText_device}}</li><li>{{legendText_datetime}}</li><li><label style=\"color: {{legendColor}}\">{{legendText_column}}</label>:{{legendText_value}}</li>';\n\n        var dom_empty_data = '<div ng-show=\"emptyDataShow\" id=\"emptydata_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\" style=\"width: 100%;\">' +\n            '<h1>Empty Data!</h1>' +\n            '</div></div>';\n\n        var dom_alert_info = '<span class=\"label label-warning\" ng-show=\"alertMessage\" style=\"color: #000;\">{{alertMessage}}</span>';\n\n        var dom_datetime_interval = '<div ng-show=\"rangeSelectorBar\" class=\"dropdown\"> <button class=\"btn btn-info dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">{{currentIntervalChoosed.name}}<span class=\"caret\"></span></button> <ul class=\"dropdown-menu dropdown-menu-right\" style=\"font-size:12px;\"><li ng-repeat=\"interval in dateTimeIntervals\"><a href=\"javascript:;\" ng-click=\"changeInterval(interval)\">{{interval.name}}</a></li></ul> </div>';\n\n\n        var dom_series_list = '<div ng-show=\"currentView === 1\" class=\"dropdown\"> <button class=\"btn btn-warning dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">Devices<span class=\"caret\"></span></button> <ul class=\"dropdown-menu dropdown-menu-right\" style=\"font-size:12px;\"><li ng-repeat=\"device in childrenDevices\"><input type=\"checkbox\" ng-click=\"showOrHideDevice(device)\" ng-checked=\"device.show\"/>{{device.name}}</li></ul> </div>';\n\n\n        var dom_real_time_grap = '<div class=\"modal fade \" id=\"real_time_graph_' + attrs.id + '\" role=\"dialog\">' +\n            '<div class=\"modal-dialog modal-lg\">' +\n            '<div class=\"modal-content\">' +\n            '<div class=\"col-md-12\"  style=\"padding-top:3px;height: 1px;background-color: #0e90d2;\" ng-style=\"{ \\'width\\': completionPercent + \\'%\\' }\"></div>' +\n            '<div class=\"modal-body\" style=\"width: 100%;height: 300px;\">' +\n            '<div class=\"real-time-graph\" style=\"width: 100%;height: 100%\"></div>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>';\n\n        var dom_buttons = '<div style=\"float: right;\"  class=\"dropdown\">' +\n            '<button class=\"btn btn-info badge dropdown-toggle\" data-toggle=\"dropdown\">' +\n            '<i class=\"fa fa-download\" aria-hidden=\"true\"></i>' +\n            '</button>' +\n            '<ul class=\"dropdown-menu dropdown-menu-right\" style=\"font-size:12px;\">' +\n            '<li style=\"text-align: center;\"><div class=\"col-md-6 col-xs-6\"><span><a href=\"javascript:;\" ng-click=\"export_img();\"><span class=\"fa fa-camera\" aria-hidden=\"true\"></span></a></span></div><div class=\"col-md-6 col-xs-6\"><span><a href=\"javascript:;\" ng-click=\"export_data();\"><span class=\"fa fa-table\" aria-hidden=\"true\"></span></a></span></div></li>' +\n            '</ul>' +\n            '</div>';\n\n        var html = '<div id=\"legendbox' + attrs.id + '\" ng-show=\"legendText\" ng-style=\"{top:legendTop,left:legendLeft}\" style=\"border-radius:10px;background-color:#ffffff;position: absolute;border: 1px solid {{legendColor}};-moz-box-shadow: 5px 5px 5px #888888;box-shadow: 5px 5px 5px #888888;z-index: 99999999;margin-right: 5px;\"><ul style=\"list-style: none;list-style-position: inside;text-align: right;\">' + dom_legend + '</ul></div><div class=\"{{css.width}}\"><div class=\"col-md-12\" style=\"padding:0px;-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\"><div class=\"row\" ng-show=\"buttonsShow\"><div class=\"col-md-12\">' + dom_buttons + '<a class=\"tooltips btn btn-xs btn-info badge\" href=\"javascript:;\"  style=\"float: right;margin-right: 10px;\" ng-click=\"currentView = -currentView\"><i class=\"glyphicon glyphicon-transfer\"></i><span>Scatter View</span></a><a ng-show=\"autoupdate\" class=\"tooltips btn btn-xs btn-info badge\" style=\"float: right;margin-right: 10px;\" ng-click=\"showRealTimeGraph()\" data-toggle=\"modal\"><span>Auto Update</span><i class=\"glyphicon glyphicon-random\"></i></a><div style=\"float: right; margin-right: 10px;\">' + dom_series_list + '</div><div style=\"float: right; margin-right: 10px;\">' + dom_datetime_interval + '</div><div ng-hide=\"true\" class=\"checkbox\" style=\"float: right;margin-right: 10px; margin-bottom: 5px; margin-top: 0;\" ng-model=\"fixInterval\" ng-click=\"fixInterval=!fixInterval\"><label><input type=\"checkbox\" ng-model=\"fixInterval\" ng-clicked=\"fixInterval\" ng-change=\"fixGraphWithGap_click()\"/>fixed interval</label></div><div style=\"float: right; margin-right: 10px;\"><label class=\"label-inline\" ng-repeat=\"item in intevals.device\"><span class=\"badge\" style=\"background-color: {{ item.name == currentIntervalName ? \\'#009900;\\' : \\'\\'}}\">{{item.name}}</span></label></div><div style=\"float: right; margin-right: 10px;\">' + dom_alert_info + '</div></div></div><div style=\"position: relative;width: 100%;height:100%;\"><div style=\"position: absolute;left:25px;z-index: 999;\" ng-show=\"basicInfo.zoom\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVULeft()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDLeft()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVLeft()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVLeft()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div><div class=\"line-chart-graph\" style=\"width: 100%;height:{{css.height}}px;\"></div><div style=\"position: absolute;right:-15px;top:0px;z-index: 999;\" ng-show=\"checkY2Btns()\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVURight()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDRight()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVRight()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVRight()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div>' + dom_loading + dom_empty_data + '<div class=\"row\" ng-show=\"basicInfo.range_show\"><div class=\"col-md-12\" style=\"min-height: 30px;\"></div><div class=\"col-md-6\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[0] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-6\" style=\"text-align: right;\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[1] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-12\" style=\"min-height: 40px;position: relative\"><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;left: 20px;\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanleft()\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanright()\"><i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></div><div class=\"range-selector-bar\" style=\"height: 0px;margin-top: 30px;width: 100%;position: absolute;\"></div><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;right: 1px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomin()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomout()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div></div></div>' + dom_real_time_grap;\n\n        return html;\n    }\n};\n\nfgpWidgetGraph.prototype.link = function link (scope, element, attrs) {\n    scope['defaultColors'] = this._dataService.defaultColors();\n    var dataService = this._dataService;\n    var _$interval = this._$interval;\n    scope.status = true;\n    var timeOut = this.$timeout;\n    scope.completionPercent = 0;\n\n\n    this.$timeout(function() {\n        var getData = function(numSeries, numRows, name) {\n            var result = {\n                labels: null,\n                data: null\n            };\n            var data = [];\n            var labels = [];\n            //init date\n            var initDate = new Date();\n            for (var j = 0; j < numRows; ++j) {\n                data[j] = [new Date(initDate.getTime() + 900000)];\n                initDate = new Date(initDate.getTime() + 900000);\n            }\n            for (var i = 0; i < numSeries; ++i) {\n                labels.push(name + i);\n                var val = 0;\n                for (var j = 0; j < numRows; ++j) {\n                    // val += Math.random() - 0.5;\n                    data[j][i + 1] = NaN;\n                }\n            }\n            result.labels = labels;\n            result.data = data;\n            return result;\n        };\n\n\n        var sampleData = getData(1, 1, 'Device');\n\n        function movePan(event, g, context, side) {\n            event.preventDefault();\n            event.stopPropagation();\n            context.dragEndX = Dygraph.dragGetX_(event, context);\n            context.dragEndY = Dygraph.dragGetY_(event, context);\n\n\n            // y-axis scaling is automatic unless this is a full 2D pan.\n            if (context.is2DPan) {\n\n                var pixelsDragged = context.dragEndY - context.dragStartY;\n                // Adjust each axis appropriately.\n                if (side == \"r\") {\n                    var axis = g.axes_[0];\n                    var axis_data = context.axes[0];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[0] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 0)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else if (side == 'l') {\n                    var axis = g.axes_[1];\n                    var axis_data = context.axes[1];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[1] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 1)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)\n                        ];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else {\n                    var minDate = context.initialLeftmostDate -\n                        (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n                    if (context.boundedDates) {\n                        minDate = Math.max(minDate, context.boundedDates[0]);\n                    }\n                    var maxDate = minDate + context.dateRange;\n                    if (context.boundedDates) {\n                        if (maxDate > context.boundedDates[1]) {\n                            // Adjust minDate, and recompute maxDate.\n                            minDate = minDate - (maxDate - context.boundedDates[1]);\n                            maxDate = minDate + context.dateRange;\n                        }\n                    }\n                    var zoomRange = g.xAxisZoomRange;\n                    if (g.xAxisZoomRange[0] instanceof Date) {\n                        zoomRange[0] = g.xAxisZoomRange[0].getTime();\n                    }\n                    if (g.xAxisZoomRange[1] instanceof Date) {\n                        zoomRange[1] = g.xAxisZoomRange[1].getTime();\n                    }\n\n                    if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                        return;\n                    }\n\n                    if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                        g.dateWindow_ = [Math.pow(Dygraph.LOG_SCALE, minDate),\n                            Math.pow(Dygraph.LOG_SCALE, maxDate)\n                        ];\n                    } else {\n                        g.dateWindow_ = [minDate, maxDate];\n                    }\n                }\n            }\n            g.drawGraph_(false);\n\n        }\n\n\n        function offsetToPercentage(g, offsetX, offsetY) {\n            // This is calculating the pixel offset of the leftmost date.\n            var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n            var yar0 = g.yAxisRange(0);\n\n            // This is calculating the pixel of the higest value. (Top pixel)\n            var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n            // x y w and h are relative to the corner of the drawing area,\n            // so that the upper corner of the drawing area is (0, 0).\n            var x = offsetX - xOffset;\n            var y = offsetY - yOffset;\n\n            // This is computing the rightmost pixel, effectively defining the\n            // width.\n            var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n            // This is computing the lowest pixel, effectively defining the height.\n            var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n            // Percentage from the left.\n            var xPct = w == 0 ? 0 : (x / w);\n            // Percentage from the top.\n            var yPct = h == 0 ? 0 : (y / h);\n\n            // The (1-) part below changes it from \"% distance down from the top\"\n            // to \"% distance up from the bottom\".\n            return [xPct, (1 - yPct)];\n        }\n\n\n        function zoom(g, zoomInPercentage, xBias, yBias, direction, side) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n\n            function adjustAxis(axis, zoomInPercentage, bias) {\n                var delta = axis[1] - axis[0];\n                var increment = delta * zoomInPercentage;\n                var foo = [increment * bias, increment * (1 - bias)];\n                return [axis[0] + foo[0], axis[1] - foo[1]];\n            }\n\n            xBias = xBias || 0.5;\n            yBias = yBias || 0.5;\n            var yAxes = g.axes_;\n            var newYAxes = [];\n            for (var i = 0; i < g.numAxes(); i++) {\n                newYAxes[i] = adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n            }\n            if ('v' == direction) {\n                if ('l' == side) {\n                    yAxes[0]['valueRange'] = newYAxes[0];\n                    yAxes[0]['valueWindow'] = newYAxes[0];\n                } else if ('r' == side && g.numAxes() == 2) {\n                    yAxes[1]['valueRange'] = newYAxes[1];\n                    yAxes[1]['valueWindow'] = newYAxes[1];\n                }\n                g.drawGraph_(false);\n            } else {\n\n                var ranges = [];\n                angular$1.forEach(g.xAxisRange(), function(range) {\n                    if (range instanceof Date) {\n                        ranges.push(range.getTime());\n                    } else {\n                        ranges.push(range);\n                    }\n                });\n\n                var newZoomRange = adjustAxis(ranges, zoomInPercentage, xBias);\n                // do not bigger than range data\n                var zoomRange = [];\n                if (g.hasOwnProperty(\"xAxisZoomRange\") && g.xAxisZoomRange) {\n                    zoomRange[0] = g.xAxisZoomRange[0];\n                    zoomRange[1] = g.xAxisZoomRange[1];\n                } else {\n                    zoomRange[0] = g.xAxisExtremes()[0];\n                    zoomRange[1] = g.xAxisExtremes()[1];\n                }\n                if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] >= newZoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [zoomRange[0], newZoomRange[1]]\n                    });\n                } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [newZoomRange[0], zoomRange[1]]\n                    });\n                } else {\n                    g.updateOptions({\n                        dateWindow: newZoomRange\n                    });\n                }\n            }\n\n        }\n\n\n        var canScroll = false;\n\n        var timer = null;\n        var mouseOverHandler = function(e, g, context) {\n            //\n            e.preventDefault();\n            e.stopPropagation();\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function() {\n                canScroll = true;\n            }, 1000);\n\n\n        };\n\n\n        var mouseEnterHandler = function(e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function() {\n                canScroll = true;\n            }, 1000);\n\n        };\n\n        var mouseOutHandler = function(e, g, context) {\n            // set flag to false\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            canScroll = false;\n\n        };\n\n        var scroll = function(e, g, context) {\n\n            if ((scope.basicInfo && !scope.basicInfo.zoom) || !canScroll) {\n                return;\n            }\n\n            var normal;\n\n            if (e instanceof WheelEvent) {\n                normal = e.detail ? e.detail * -1 : e.deltaY / 40;\n            } else {\n                normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n            }\n\n            // For me the normalized value shows 0.075 for one click. If I took\n            // that verbatim, it would be a 7.5%.\n            var percentage = normal / 50;\n\n            if (!(e.offsetX && e.offsetY)) {\n                e.offsetX = e.layerX - e.target.offsetLeft;\n                e.offsetY = e.layerY - e.target.offsetTop;\n            }\n            var percentages = offsetToPercentage(g, e.offsetX, e.offsetY);\n            var xPct = percentages[0];\n            var yPct = percentages[1];\n            //\n            if (e.offsetX <= (g.plotter_.area.x)) {\n                // console.info(\"v\", \"l\")\n                // left zoom\n                zoom(g, percentage, xPct, yPct, 'v', 'l');\n            } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                // right zoom\n                // console.info(\"v\", \"r\")\n                zoom(g, percentage, xPct, yPct, 'v', 'r');\n            } else {\n                // middle zoom\n                // console.info(\"h\")\n                zoom(g, percentage, xPct, yPct, 'h', null);\n            }\n            Dygraph.cancelEvent(e);\n            timeOut(function() {\n                scope.chartDateWindow = g.xAxisRange();\n            });\n        };\n\n        var firstPoint = null;\n        var timer_mousedown = null;\n        var mousedownHandler = function(e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n\n            if (timer_mousedown != null) {\n                timeOut.cancel(timer_mousedown);\n            }\n            timer_mousedown = timeOut(function() {\n                context.initializeMouseDown(e, g, context);\n                firstPoint = e.clientX;\n                Dygraph.startPan(e, g, context);\n\n            }, 300);\n\n        };\n        var mousemoveHandler = function(e, g, context) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (context.isPanning) {\n                if (e.offsetX <= (g.plotter_.area.x)) {\n                    movePan(e, g, context, 'r');\n                } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                    movePan(e, g, context, 'l');\n                } else {\n                    movePan(e, g, context, 'h');\n                }\n                timeOut(function() {\n                    scope.chartDateWindow = scope.currentChart.xAxisRange();\n                });\n\n            }\n        };\n\n\n        var mouseupHandler = function(e, g, context) {\n\n            if (context.isPanning) {\n                Dygraph.endPan(e, g, context);\n            } else {\n                if (scope.currentView != -1 && scope.currentHighlight != \"\") {\n                    scope.showOne(scope.currentHighlight);\n                }\n            }\n            if (timer_mousedown) {\n                timeOut.cancel(timer_mousedown);\n            }\n            canScroll = true;\n        };\n\n\n        var interactionModel = {\n            'mousewheel': scroll,\n            'DOMMouseScroll': scroll,\n            'wheel': scroll,\n            'mousedown': mousedownHandler,\n            'mousemove': mousemoveHandler,\n            'mouseenter': mouseEnterHandler,\n            'mouseup': mouseupHandler,\n            // 'mouseover': mouseOverHandler,\n            'mouseout': mouseOutHandler\n        };\n\n\n        //init configuration\n        var configuration = {\n            drawGapEdgePoints: true,\n            'pointSize': 3,\n            legend: 'follow',\n            labelsKMB: true,\n            labelsSeparateLines: true,\n            // data formate\n            labels: ['x'].concat(sampleData.labels),\n            // highlightSeriesOpts: {\n            // strokeWidth: 2,\n            // strokeBorderWidth: 1,\n            // highlightCircleSize: 2\n            // },\n            drawPoints: false,\n            drawAxesAtZero: false,\n            labelsDivStyles: {\n                'text-align': 'right',\n                'position': 'relative',\n                'display': 'inline-block'\n            },\n            yRangePad: 10,\n            // x label y label\n            ylabel: 'Value',\n            xLabelHeight: 0,\n            colors: scope.defaultColors,\n            fillGraph: true,\n            // multiple Y axis\n            series: {\n                'Device0': {\n                    axis: 'y2'\n                },\n                'Device4': {\n                    axis: 'y2'\n                }\n            },\n            // showRangeSelector: true,\n            axes: {\n                y: {\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                y2: {\n                    // set axis-related properties here\n                    'labelsKMB': true,\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                x: {\n                    // datetime format\n                    valueFormatter: function(y) {\n                        return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                    }\n                }\n            },\n            // pointClickCallback: function (e, p) {\n            // if (scope.currentView != -1) {\n            //     scope.showOne(p.name);\n            // }\n            // },\n            drawCallback: function(g, isInit) {\n                if (scope.refersh) { // make sure \"scope.refersh\" doesn't call when the graph create first time.\n                    scope.refersh(g, isInit);\n                }\n            },\n            'interactionModel': interactionModel,\n            'plugins': [\n                new Dygraph.Plugins.Crosshair({\n                    direction: \"vertical\"\n                })\n            ]\n        };\n\n        scope.currentChart = new Dygraph(element.find(\"div[class='line-chart-graph']\")[0], sampleData.data, configuration);\n        element.find(\"canvas\").css(\"zIndex\", 99);\n\n        var timer_auto = null;\n        var process_bar_timer = null;\n        element.find(\"#real_time_graph_\" + attrs.id).on(\"hidden.bs.modal\", function() {\n            // put your default event here\n            _$interval.cancel(timer_auto);\n            _$interval.cancel(process_bar_timer);\n        });\n\n\n        //real-time-graph\n        element.find(\"#real_time_graph_\" + attrs.id).on('shown.bs.modal', function() {\n\n            var tempConifg = {\n                drawGapEdgePoints: true,\n                'pointSize': 3,\n                labelsKMB: true,\n                labelsSeparateLines: false,\n                drawPoints: false,\n                drawAxesAtZero: false,\n                labelsDivStyles: {\n                    'text-align': 'right',\n                    'position': 'relative',\n                    'display': 'inline-block'\n                },\n                // x label y label\n                ylabel: 'Value',\n                xLabelHeight: 0,\n                colors: scope.defaultColors,\n                // multiple Y axis\n                series: {\n                    'Device0': {\n                        axis: 'y2'\n                    },\n                    'Device4': {\n                        axis: 'y2'\n                    }\n                },\n                // showRangeSelector: true,\n                axes: {\n                    y: {\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    y2: {\n                        // set axis-related properties here\n                        'labelsKMB': true,\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    x: {\n                        // datetime format\n                        valueFormatter: function(y) {\n                            return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                        }\n                    }\n                },\n                interactionModel: {}\n            };\n\n            scope.realTimeGraph = new Dygraph(element.find(\"div[class='real-time-graph']\")[0], sampleData.data, tempConifg);\n            scope.realTimeGraph.updateOptions(scope.currentChartOptions);\n            scope.realTimeGraph.updateOptions({\n                \"file\": []\n            });\n\n\n            var darkenColor = function(colorStr) {\n                // Defined in dygraph-utils.js\n                var color = Dygraph.toRGB_(colorStr);\n                color.r = Math.floor((255 + color.r) / 2);\n                color.g = Math.floor((255 + color.g) / 2);\n                color.b = Math.floor((255 + color.b) / 2);\n                return 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n            };\n\n            var barChartPlotter = function(e) {\n                var ctx = e.drawingContext;\n                var points = e.points;\n                var y_bottom = e.dygraph.toDomYCoord(0);\n\n                ctx.fillStyle = darkenColor(e.color);\n\n                // Find the minimum separation between x-values.\n                // This determines the bar width.\n                var min_sep = Infinity;\n                for (var i = 1; i < points.length; i++) {\n                    var sep = points[i].canvasx - points[i - 1].canvasx;\n                    if (sep < min_sep) min_sep = sep;\n                }\n                var bar_width = Math.floor(2.0 / 3 * min_sep);\n\n                // Do the actual plotting.\n                for (var i = 0; i < points.length; i++) {\n                    var p = points[i];\n                    var center_x = p.canvasx;\n\n                    ctx.fillRect(center_x - bar_width / 2, p.canvasy,\n                        bar_width, y_bottom - p.canvasy);\n\n                    ctx.strokeRect(center_x - bar_width / 2, p.canvasy,\n                        bar_width, y_bottom - p.canvasy);\n                }\n            };\n\n            timer_auto = dataService.autoUpdateGraph(scope.applicationName, scope.auto_device_name, scope.auto_schema, scope.auto_store, scope.auto_fields, element.find(\"div[class='real-time-graph']\").width() / 4, function(graph_data, worker, interval) {\n                // update graph\n                var deviceConfig = scope.auto_metadata.data.groups[1];\n                var collections = deviceConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var allLines = [];\n                //0 for y  1 for y2\n                var yRanges = [{\n                    min: null,\n                    max: null\n                }, {\n                    min: null,\n                    max: null\n                }];\n                angular$1.forEach(collections, function(collection) {\n                    if (collection.name == scope.auto_store) {\n                        angular$1.forEach(graph_data.data, function(line) {\n                            allLines.push([new Date(line.timestamp)]);\n                        });\n\n                        var showY2axis = false;\n                        angular$1.forEach(collection.rows, function(row) {\n                            labels.push(row.label);\n                            colors.push(row.color);\n\n                            if (row.yaxis == 0) {\n                                series[row.label] = {\n                                    'axis': 'y1'\n                                };\n                                if (row.type == 'line') {\n                                    series[row.label] = {\n                                        'axis': 'y1',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                } else if (row.type == 'bar') {\n                                    series[row.label] = {\n                                        'axis': 'y1',\n                                        'plotter': barChartMultiColumnBarPlotter\n                                    };\n                                } else {\n                                    series[row.label] = {\n                                        'axis': 'y1',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                }\n                            } else {\n                                series[row.label] = {\n                                    'axis': 'y2'\n                                };\n                                if (row.type == 'line') {\n                                    series[row.label] = {\n                                        'axis': 'y2',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                } else if (row.type == 'bar') {\n                                    series[row.label] = {\n                                        'axis': 'y2',\n                                        'plotter': barChartMultiColumnBarPlotter\n                                    };\n                                } else {\n                                    series[row.label] = {\n                                        'axis': 'y2',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                }\n                                showY2axis = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                            // add value\n                            var counter = 0;\n                            angular$1.forEach(allLines, function(realLine) {\n                                try {\n                                    var value = f(graph_data.data[counter]);\n                                    realLine.push(value);\n                                    if (row.yaxis == 0) {\n                                        if (yRanges[0].min == null) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max == null) {\n                                            yRanges[0].max = value;\n                                        }\n\n                                        if (yRanges[0].min > value) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max < value) {\n                                            yRanges[0].max = value;\n                                        }\n                                    } else {\n                                        if (yRanges[1].min == null) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max == null) {\n                                            yRanges[1].max = value;\n                                        }\n\n                                        if (yRanges[1].min > value) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max < value) {\n                                            yRanges[1].max = value;\n                                        }\n                                    }\n                                } catch (ex) {\n                                    realLine.push(null);\n                                }\n                                counter++;\n                            });\n\n                        });\n\n                        angular$1.forEach(yRanges, function(yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.min) * 0.10;\n                            } else {\n                                yrange.min = yrange.min - (yrange.max - yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max - yrange.min) * 0.10;\n                            }\n                        });\n\n                        var newLines = [];\n                        if (!showY2axis) {\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function(line) {\n                                line.push(NaN);\n                            });\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: newLines,\n                                axes: {\n                                    y: {\n                                        valueRange: [yRanges[0].min, yRanges[0].max]\n                                    },\n                                    y2: {\n                                        valueRange: [yRanges[1].min, yRanges[1].max]\n                                    }\n                                }\n                            });\n                        } else {\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: allLines,\n                                axes: {\n                                    y: {\n                                        valueRange: [yRanges[0].min, yRanges[0].max]\n                                    },\n                                    y2: {\n                                        valueRange: [yRanges[1].min, yRanges[1].max]\n                                    }\n                                }\n                            });\n                        }\n                    }\n                });\n                if (worker) {\n                    timer_auto = worker;\n                }\n\n\n                //\n                var perInterval = interval / 100;\n                var counter = 0;\n\n                if (process_bar_timer) {\n                    _$interval.cancel(process_bar_timer);\n                    counter = 0;\n                }\n\n                process_bar_timer = _$interval(function() {\n                    scope.completionPercent = counter;\n                    counter++;\n                }, perInterval, 100);\n\n\n            });\n        });\n\n\n        scope.currentChartOptions = {};\n\n        scope.showRealTimeGraph = function() {\n            element.find(\"#real_time_graph_\" + attrs.id).modal();\n        };\n\n\n        if (attrs.hasOwnProperty(\"shown\")) {\n\n\n            var basicInfo = scope.basicInfo;\n\n\n            if (basicInfo && basicInfo.buttons_show == false) {\n                scope.buttonsShow = false;\n            }\n\n\n            if (basicInfo && basicInfo.range_show) {\n                scope.rangeSelectorBar = new Dygraph(element.find(\"div[class='range-selector-bar']\")[0], sampleData.data, {\n                    xAxisHeight: 0,\n                    axes: {\n                        x: {\n                            drawAxis: false\n                        }\n                    },\n                    showRangeSelector: true,\n                    rangeSelectorHeight: 30\n                });\n                scope.chartDateWindow = scope.rangeSelectorBar.xAxisRange();\n            }\n\n\n            var status = false;\n            // add mouse up event to range select\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mouseup', function(event) {\n                status = false;\n                timeOut(function() {\n                    var finalDateRagne = scope.currentChart.xAxisRange();\n                    scope.chartDateTime = {\n                        begin: finalDateRagne[0],\n                        end: finalDateRagne[1]\n                    };\n                });\n            });\n\n            scope.$on('mouseUpMessage', function($scope, e) {\n                if (\"mouseup\" === e.type && status) {\n                    status = false;\n                    timeOut(function() {\n                        var finalDateRange = scope.currentChart.xAxisRange();\n                        scope.chartDateTime = {\n                            begin: finalDateRange[0],\n                            end: finalDateRange[1]\n                        };\n                    });\n                }\n            });\n\n            scope.$on('bindFatherGraphEvent', function(event, data) {\n                angular$1.forEach(data.children, function(child) {\n                    if (child == attrs.id) {\n                        Dygraph.synchronize([scope.currentChart].concat(data.parent), {\n                            zoom: true,\n                            selection: false,\n                            range: false\n                        });\n                        scope.currentChart.updateOptions({\n                            drawCallback: function(g, isInit) {\n                                // console.info(\"refersh running!\" + \" is  Init?\"+ isInit);\n                                scope.refersh(g, isInit);\n                            }\n                        });\n\n                    }\n                });\n\n\n            });\n\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousemove', function(event) {\n                if (status) {\n                    scope.chartDateWindow = scope.currentChart.xAxisRange();\n                }\n            });\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousedown', function(event) {\n                status = true;\n            });\n\n\n            //bind chart\n            if (basicInfo && basicInfo.childrenChart.length > 0) {\n                var param = {\n                    'graphs': [scope.currentChart],\n                    children: basicInfo.childrenChart\n                };\n                if (scope.rangeSelectorBar) {\n                    param.graphs.push(scope.rangeSelectorBar);\n                }\n                scope.$emit('bindChildChartEvent', param);\n            }\n\n            scope.$on('changeSize', function(event) {\n                scope.currentChart.resize();\n                if (scope.rangeSelectorBar) {\n                    scope.rangeSelectorBar.resize();\n                }\n            });\n\n\n        }\n    }, 0);\n};\n\n//controller: ['$scope', '$element', '$window', '$interval', '$timeout', '$filter', '$location', function ($scope, $element, $window, $interval, $timeout, $filter, $location) {\nfgpWidgetGraph.prototype.controller = function controller ($scope, $element, $window, $interval, $timeout, $filter, $location, dataService, $rootScope, $stateParams) {\n    var element_id = $element.attr(\"id\");\n    $scope.elementId = element_id;\n\n    $scope.currentHighlight = \"\";\n\n    $scope['defaultColors'] = dataService.defaultColors();\n    var metadata = null;\n    var widgetData = null;\n    $scope.emptyDataShow = false;\n    // attributes----------------------\n    $scope.applicationName = $rootScope.applicationName;\n\n    $scope.alertMessage;\n\n\n    $scope.showY2Btns = false;\n\n    $scope.legendText = null;\n    $scope.legendText_device = null;\n    $scope.legendText_datetime = null;\n    $scope.legendText_column = null;\n    $scope.legendText_value = null;\n    $scope.legendColor = null;\n    $scope.autoupdate = false;\n    $scope.auto_device_name = \"\";\n    $scope.auto_schema = \"\";\n    $scope.auto_store = \"\";\n    $scope.auto_fields = [];\n\n    $scope.legendShow = true;\n\n    $scope.buttonsShow = true;\n\n\n    // default data-time intervals\n    $scope.dateTimeIntervals = [{\n        name: \"5 minutes\",\n        interval: 300000\n    }, {\n        name: \"1 hour\",\n        interval: 3600000\n    }, {\n        name: \"1 day\",\n        interval: 86400000\n    }, {\n        name: \"1 week\",\n        interval: 604800017\n    }, {\n        name: \"1 month\",\n        interval: 2629800000\n    }, {\n        name: \"1 year\",\n        interval: 31557600000\n    }];\n\n\n    var download_image = function(dataurl, name) {\n        var link = document.createElement(\"a\");\n        link.download = name;\n        link.href = dataurl;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    $scope.export_img = function() {\n        // export canvas\n        var canvas = Dygraph.Export.asCanvas($scope.currentChart, {\n            \"series\": $scope.currentChart.attributes_.series_\n        });\n        download_image(canvas.toDataURL(), $scope.currentIntervalName + \".png\");\n    };\n\n\n    var download_data = function(content, fileName, mimeType) {\n        var a = document.createElement('a');\n        mimeType = mimeType || 'application/octet-stream';\n\n        if (navigator.msSaveBlob) { // IE10\n            navigator.msSaveBlob(new Blob([content], {\n                type: mimeType\n            }), fileName);\n        } else if (URL && 'download' in a) { //html5 A[download]\n            a.href = URL.createObjectURL(new Blob([content], {\n                type: mimeType\n            }));\n            a.setAttribute('download', fileName);\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n        } else {\n            location.href = 'data:application/octet-stream,' + encodeURIComponent(content); // only this mime type is supported\n        }\n    };\n\n\n    $scope.export_data = function() {\n\n        // columns\n        var labels = $scope.currentChart.getLabels();\n\n        var columns = [$scope.currentIntervalName];\n\n        var csvContent = $scope.currentIntervalName;\n        angular$1.forEach(labels, function(label, index) {\n            if (label !== \"x\" && label != \"span_y1\" && label != \"span_y2\") {\n                columns.push(index);\n                csvContent += \",\" + label;\n            }\n        });\n\n        csvContent += \"\\n\";\n\n        var result = [];\n\n        var datewindow = $scope.currentChart.dateWindow_;\n\n        if ($scope.currentChart.dateWindow_[0] instanceof Date && $scope.currentChart.dateWindow_[1] instanceof Date) {\n            datewindow[0] = $scope.currentChart.dateWindow_[0].getTime();\n            datewindow[1] = $scope.currentChart.dateWindow_[1].getTime();\n        }\n\n        // add title\n        angular$1.forEach($scope.currentChart.rawData_, function(data) {\n\n            if (data[0] >= datewindow[0] && data[0] <= datewindow[1]) {\n                result.push(data);\n            }\n        });\n\n        result.forEach(function(infoArray, index) {\n            var tempArray = [].concat(infoArray[0]);\n            angular$1.forEach(infoArray, function(data, index) {\n                if (columns.includes(index)) {\n                    tempArray.push(data);\n                }\n            });\n            var dataString = tempArray.join(',');\n            csvContent += index < result.length ? dataString + '\\n' : dataString;\n        });\n        download_data(csvContent, $scope.auto_device_name + '_' + new Date() + '.csv', 'text/csv;encoding:utf-8');\n    };\n\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id,\n        callback: function(data) {\n            if (data) {\n                widgetData = data;\n                if (widgetData.data.metadata.data.basic.ranges) {\n                    if (widgetData.data.metadata.data.basic.hasOwnProperty(\"ranges\")) {\n                        $scope.dateTimeIntervals = widgetData.data.metadata.data.basic.ranges;\n                        angular$1.forEach($scope.dateTimeIntervals, function(range) {\n                            range[\"interval\"] = range.value;\n                            if (range.checked == true) {\n                                $scope.currentIntervalChoosed = range;\n                            }\n                        });\n                    }\n                } else {\n                    $scope.currentIntervalChoosed = $scope.dateTimeIntervals[1];\n                }\n            }\n        }\n    });\n\n\n    var darkenColor = function(colorStr) {\n        // Defined in dygraph-utils.js\n        var color = Dygraph.toRGB_(colorStr);\n        color.r = Math.floor((255 + color.r) / 2);\n        color.g = Math.floor((255 + color.g) / 2);\n        color.b = Math.floor((255 + color.b) / 2);\n        return 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n    };\n\n\n    var barChartMultiColumnBarPlotter = function(e) {\n        // We need to handle all the series simultaneously.\n        if (e.seriesIndex !== 0) return;\n        var g = e.dygraph;\n        var ctx = e.drawingContext;\n        var sets = e.allSeriesPoints;\n        var y_bottom = e.dygraph.toDomYCoord(0);\n        var series = e.dygraph.attributes_.series_;\n        // Find the minimum separation between x-values.\n        // This determines the bar width.\n        var newSets = [];\n        var min_sep = Infinity;\n        for (var j = 0; j < sets.length; j++) {\n            if (sets[j] && sets[j].length > 0 && series[sets[j][0].name].options.plotter && \"barChartMultiColumnBarPlotter\" == series[sets[j][0].name].options.plotter.name) {\n                var points = sets[j];\n                for (var i = 1; i < points.length; i++) {\n                    var sep = points[i].canvasx - points[i - 1].canvasx;\n                    if (sep < min_sep) min_sep = sep;\n                }\n                newSets.push(sets[j]);\n            }\n        }\n        var bar_width = Math.floor(2.0 / 3 * min_sep);\n        var fillColors = [];\n        var strokeColors = g.getColors();\n        for (var i = 0; i < strokeColors.length; i++) {\n            fillColors.push(darkenColor(strokeColors[i]));\n        }\n        for (var j = 0; j < newSets.length; j++) {\n            ctx.fillStyle = fillColors[j];\n            ctx.strokeStyle = strokeColors[j];\n            for (var i = 0; i < newSets[j].length; i++) {\n                var p = newSets[j][i];\n                var center_x = p.canvasx;\n                // var x_left = center_x - (bar_width / 2) * (1 - j / (newSets.length - 1));\n                var x_left = center_x - (bar_width / 2) + (bar_width / newSets.length) * j;\n                ctx.fillRect(x_left, p.canvasy,\n                    bar_width / newSets.length - 1, y_bottom - p.canvasy);\n                ctx.strokeRect(x_left, p.canvasy,\n                    bar_width / newSets.length - 1, y_bottom - p.canvasy);\n            }\n        }\n    };\n\n    var stackedBarPlotter = function(e) {\n        var ctx = e.drawingContext;\n        var points = e.points;\n        var y_bottom = e.dygraph.toDomYCoord(0);\n        ctx.fillStyle = darkenColor(e.color);\n        // Find the minimum separation between x-values.\n        // This determines the bar width.\n        var min_sep = Infinity;\n        for (var i = 1; i < points.length; i++) {\n            var sep = points[i].canvasx - points[i - 1].canvasx;\n            if (sep < min_sep) min_sep = sep;\n        }\n        var bar_width = Math.floor(2.0 / 3 * min_sep);\n        // Do the actual plotting.\n        for (var i = 0; i < points.length; i++) {\n            var p = points[i];\n            var center_x = p.canvasx;\n            ctx.fillRect(center_x - bar_width / 2, p.canvasy,\n                bar_width, y_bottom - p.canvasy);\n            ctx.strokeRect(center_x - bar_width / 2, p.canvasy,\n                bar_width, y_bottom - p.canvasy);\n        }\n    };\n\n    var barChartPlotter = function(e) {\n        var ctx = e.drawingContext;\n        var points = e.points;\n        var y_bottom = e.dygraph.toDomYCoord(0);\n        ctx.fillStyle = darkenColor(e.color);\n        // Find the minimum separation between x-values.\n        // This determines the bar width.\n        var min_sep = Infinity;\n        for (var i = 1; i < points.length; i++) {\n            var sep = points[i].canvasx - points[i - 1].canvasx;\n            if (sep < min_sep) min_sep = sep;\n        }\n        var bar_width = Math.floor(2.0 / 3 * min_sep);\n        // Do the actual plotting.\n        for (var i = 0; i < points.length; i++) {\n            var p = points[i];\n            var center_x = p.canvasx;\n            ctx.fillRect(center_x - bar_width / 2, p.canvasy,\n                bar_width, y_bottom - p.canvasy);\n            ctx.strokeRect(center_x - bar_width / 2, p.canvasy,\n                bar_width, y_bottom - p.canvasy);\n        }\n    };\n\n\n    $scope.changeInterval = function(interval) {\n        var range = $scope.currentChart[\"xAxisZoomRange\"];\n        if (range[0] instanceof Date) {\n            range[0] = range[0].getTime();\n        }\n        if (range[1] instanceof Date) {\n            range[1] = range[1].getTime();\n        }\n        if (interval && ((range[1] - interval.interval) >= range[0])) {\n            $scope.rangeConfig.dateWindow = [new Date(range[1] - interval.interval), range[1]];\n            $scope.currentChart.updateOptions($scope.rangeConfig);\n            $scope.currentIntervalChoosed = interval;\n        }\n    };\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.loadingShow = false;\n        $scope.intevals = {\n            device: []\n        };\n        // update chart\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if (widgetData.data.metadata.css) {\n            $scope.css = widgetData.data.metadata.css;\n        }\n        // get start and end from url\n        var begin_path = $stateParams.begin;\n        var end_path = $stateParams.end;\n        var init_flag = false;\n        //fix interval\n        $scope.fixInterval = false;\n        var noneFixed = [];\n        $scope.fixGraphWithGap = function() {\n            if ($scope.currentChart && $scope.fixInterval) {\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function(item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({\n                        file: fixed\n                    });\n                }\n            } else if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                $scope.currentChart.updateOptions({\n                    file: noneFixed\n                });\n            }\n        };\n\n        $scope.showOrHideDevice = function(device) {\n            angular$1.forEach($scope.childrenDevices, function(item, index) {\n                if (item.name === device.name) {\n                    var graph = $scope.currentChart;\n                    if (device.show == true) {\n                        graph.setVisibility(index, false);\n                        device.show = false;\n                    } else {\n                        graph.setVisibility(index, true);\n                        device.show = true;\n                    }\n                }\n            });\n        };\n        $scope.fixGraphWithGap_click = function() {\n            if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function(item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({\n                        file: fixed\n                    });\n                }\n            } else if ($scope.currentChart && $scope.fixInterval) {\n                $scope.currentChart.updateOptions({\n                    file: noneFixed\n                });\n            }\n        };\n        metadata = widgetData.data.metadata;\n        $scope.basicInfo = metadata.data.basic;\n        $scope.currentView = 0; // -1 is device view and 1 is scatter view\n        if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.scatter) {\n            $scope.currentView = 1;\n        } else {\n            $scope.currentView = -1;\n        }\n        if ($scope['interactions'] && $scope['interactions'].graphs) {\n            $scope.$watch('interactions.graphs.dateWindow', function(newValue, oldValue) {\n                //\n                if (newValue && newValue.start && !newValue.end) {\n                    $timeout(function() {\n                        var currentInterval = {\n                            name: \"\",\n                            interval: newValue.start\n                        };\n                        if ($scope.currentChart[\"xAxisZoomRange\"]) {\n                            var range = $scope.currentChart[\"xAxisZoomRange\"];\n                            if (range[0] instanceof Date) {\n                                range[0] = range[0].getTime();\n                            }\n                            if (range[1] instanceof Date) {\n                                range[1] = range[1].getTime();\n                            }\n                            if (currentInterval && ((range[1] - currentInterval.interval) >= range[0])) {\n                                if ($scope.rangeConfig) {\n                                    $scope.rangeConfig.dateWindow = [new Date(range[1] - currentInterval.interval), range[1]];\n                                }\n                                $scope.currentChart.updateOptions({\n                                    dateWindow: [new Date(range[1] - currentInterval.interval), range[1]]\n                                });\n                                $scope.currentIntervalChoosed = currentInterval;\n                            }\n                        } else {\n                            $scope.currentIntervalChoosed = currentInterval;\n                        }\n                    });\n                } else if (newValue && newValue.start && newValue.end) {\n                    // need to change start and end\n                    $timeout(function() {\n                        var currentInterval = {\n                            name: \"\",\n                            interval: newValue.end - newValue.start\n                        };\n                        if ($scope.currentChart[\"xAxisZoomRange\"]) {\n                            var range = $scope.currentChart[\"xAxisZoomRange\"];\n                            if (range[0] instanceof Date) {\n                                range[0] = range[0].getTime();\n                            }\n                            if (range[1] instanceof Date) {\n                                range[1] = range[1].getTime();\n                            }\n                            // if (currentInterval && range[0] <= newValue.start && range[1] >= newValue.end) {\n                            if ($scope.rangeConfig) {\n                                $scope.rangeConfig.dateWindow = [new Date(newValue.start), new Date(newValue.end)];\n                            }\n                            $scope.currentChart.updateOptions({\n                                dateWindow: [new Date(newValue.start), new Date(newValue.end)]\n                            });\n                            $scope.currentIntervalChoosed = currentInterval;\n                            // }\n                        } else {\n                            $scope.currentIntervalChoosed = currentInterval;\n                        }\n                    });\n                }\n            });\n        }\n\n        $scope.device_name = \"\";\n        $scope.parent_container = widgetData.data.parent;\n        $scope.data_from = \"application\";\n        $scope.checkY2Btns = function() {\n            return $scope.basicInfo.zoom === true && $scope.showY2Btns === true;\n        };\n        $scope.$on('deviceInfoEvent', function(event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            $scope.auto_schema = metadata.data.source.store;\n            $scope.auto_metadata = metadata;\n            $scope.auto_device_name = deviceData.device.name;\n            $scope.currentIntervalsInfo = [];\n            if ($scope['interactions'] && $scope['interactions'].graphs) {\n                var collection_conf = null;\n                if ($scope['interactions'].graphs.scatter) {\n                    collection_conf = metadata.data.groups[2].collections;\n                } else {\n                    collection_conf = metadata.data.groups[1].collections;\n                }\n                var intervals = [];\n                //reset\n                $scope.currentIntervalsInfo = [];\n                angular$1.forEach(collection_conf, function(item) {\n                    intervals.push(item.name);\n                });\n                //get first and last for all levels\n                dataService.deviceStoreSchemaInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, intervals).then(function(data) {\n                    angular$1.forEach(data, function(_interval) {\n                        angular$1.forEach(_interval.data[0], function(value, key) {\n                            $scope.currentIntervalsInfo.push({\n                                interval: key,\n                                info: value\n                            });\n                        });\n                    });\n                });\n                // -------------------  ---------------------\n            }\n            // add a timer just make sure the user is not playing with the button.\n            var viewTimer = null;\n            $scope.$watch('currentView', function(nObj, oObj) {\n                // change\n                if (viewTimer != null) {\n                    $timeout.cancel(viewTimer);\n                    // create new one\n                    viewTimer = $timeout(function() {\n                        changeViewFunc(nObj, oObj);\n                    }, 500);\n                } else {\n                    viewTimer = $timeout(function() {\n                        changeViewFunc(nObj, oObj);\n                    }, 500);\n                }\n                $scope.fixInterval = false;\n            });\n\n            var changeViewFunc = function(nObj, oObj) {\n                if (nObj == -1) {\n                    $scope.autoupdate = true;\n                    var rangeLevel = null;\n                    var otherLevels = [];\n                    angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                        if (level.rows.length > 0) {\n                            if (rangeLevel != null) {\n                                otherLevels.push(rangeLevel);\n                            }\n                            rangeLevel = level.name;\n                        }\n                    });\n                    if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                        // show device view\n                        var fields = [];\n                        var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                        angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                            if (level.rows.length > 0 && level.name === rangeLevel) {\n                                var lines = level.rows;\n                                if (lines) {\n                                    angular$1.forEach(lines, function(line) {\n                                        if (line.value) {\n                                            var columns = (line.value).match(patt);\n                                            angular$1.forEach(columns, function(column) {\n                                                if (column.startsWith('data.')) {\n                                                    fields.push(column.replace('data.', ''));\n                                                }\n                                            });\n                                        }\n                                    });\n                                }\n                            }\n                        });\n                        $scope.auto_fields = fields;\n                        $scope.loadingShow = true;\n                        dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function(data) {\n                            initChart(data);\n                        }, function(error) {\n                            console.error(error);\n                            // if errors happing in the server side, the graph should show someting like \"lost connection\" or \"....\"\n                            $scope.emptyDataShow = true;\n                            $scope.loadingShow = false;\n                        });\n                    }\n                } else {\n                    $scope.autoupdate = false;\n                    //get relation config\n                    if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                        return;\n                    } else {\n                        var rangeLevel = null;\n                        var otherLevels = [];\n                        angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                            if (level.rows.length > 0) {\n                                if (rangeLevel != null) {\n                                    otherLevels.push(rangeLevel);\n                                }\n                                rangeLevel = level.name;\n                            }\n                        });\n                        if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n                            angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                                if (level.rows.length > 0 && level.name === rangeLevel) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function(line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function(column) {\n                                                    if (column.startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n                            $scope.auto_fields = fields;\n                            // show children view\n                            $scope.loadingShow = true;\n                            dataService.childrenDeviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, metadata.data.source.relation, metadata.data.source.relation_group, rangeLevel, otherLevels, fields).then(function(data) {\n                                // get all device trees\n                                if (data != null && data.length > 0) {\n                                    initChildrenChart(data);\n                                } else {\n                                    return;\n                                }\n                            }, function(error) {\n                                console.error(error);\n                                $scope.emptyDataShow = true;\n                                $scope.loadingShow = false;\n                            });\n                        }\n                    }\n                }\n            };\n\n            // first time of showing chart\n            $scope.$watch('currentChart', function(newValue) {\n                if (newValue) {\n                    //device first level\n                    var rangeLevel = null;\n                    var otherLevels = [];\n                    angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                        if (level.rows.length > 0) {\n                            if (rangeLevel != null) {\n                                otherLevels.push(rangeLevel);\n                            }\n                            rangeLevel = level.name;\n                        }\n                    });\n                    // fields of range level\n                    var fields = [];\n                    var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n                    angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                        if (level.rows.length > 0 && level.name === rangeLevel) {\n                            var lines = level.rows;\n                            if (lines) {\n                                angular$1.forEach(lines, function(line) {\n                                    //\n                                    if (line.value) {\n                                        var columns = (line.value).match(patt);\n                                        angular$1.forEach(columns, function(column) {\n                                            if ((column).startsWith('data.')) {\n                                                fields.push(column.replace('data.', ''));\n                                            }\n                                        });\n                                    }\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.auto_fields = fields;\n                    //send a rest request\n                    $scope.loadingShow = true;\n                    dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function(data) {\n                        initChart(data);\n                    }, function(error) {\n                        console.error(error);\n                        $scope.emptyDataShow = true;\n                        $scope.loadingShow = false;\n                    });\n                }\n            });\n\n            $scope.$watch(\"chartDateTime\", function(newValue, oldValue) {\n                if (newValue.begin != null && newValue.end != null) {\n                    var expect_points = Math.floor($element.parent().width());\n                    // find a interval\n                    var expectedInterval = (newValue.end - newValue.begin) / expect_points;\n                    var conf = $scope.intevals.device;\n                    // device detail view\n                    if (!conf || conf.length == 0) {\n                        return;\n                    }\n                    var preOne = conf[0].interval;\n                    var lastOne = conf[conf.length - 1].interval;\n                    // get the max\n                    var expects = {\n                        interval: null,\n                        points: 0,\n                        name: \"\"\n                    };\n                    angular$1.forEach(conf, function(config) {\n                        if (((newValue.end - newValue.begin) / config.interval) <= expect_points) {\n                            if (expects.points < ((newValue.end - newValue.begin) / config.interval)) {\n                                expects.interval = config.interval;\n                                expects.points = ((newValue.end - newValue.begin) / config.interval);\n                                expects.name = config.name;\n                            }\n                        }\n                    });\n                    var cin = \"\";\n                    // only have one interval\n                    if (conf && conf.length == 1) {\n                        expects.interval = conf[0].interval;\n                        expectedInterval = conf[0].interval;\n                        if ($scope.currentView == -1) {\n                            $scope.autoupdate = true;\n                            $scope.auto_store = conf[conf.length - 1].name;\n                        }\n                    } else {\n                        if (expects.interval == preOne) {\n                            expectedInterval = preOne;\n                            $scope.autoupdate = false;\n                        } else if (expects.interval == lastOne) {\n                            expectedInterval = lastOne;\n                            if ($scope.currentView == -1) {\n                                $scope.autoupdate = true;\n                                $scope.auto_store = conf[conf.length - 1].name;\n                            }\n                        } else {\n                            $scope.autoupdate = false;\n                            cin = expects.name;\n                            expectedInterval = expects.interval;\n                        }\n                    }\n                    $scope.currentIntervalName = \"\";\n                    angular$1.forEach(conf, function(config) {\n                        if (config.interval == expectedInterval) {\n                            $scope.currentIntervalName = config.name;\n                        }\n                    });\n                    // check the interval(raw data) no more than 1000 points\n                    if (expectedInterval == lastOne) {\n                        //\n                        if (((newValue.end - newValue.begin) / expectedInterval) > expect_points) {\n                            // reset range bar\n                            $scope.rangeConfig.dateWindow = [new Date(newValue.end - (expect_points - 1) * expectedInterval), new Date(newValue.end)];\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n                            $scope.alertMessage = \"Limit the number of \\\"Zoom-Out\\\" points to \" + expect_points * 2 + \".\";\n                            $timeout(function() {\n                                $scope.alertMessage = null;\n                            }, 5000);\n                            return;\n                        }\n                    }\n                    // update range-bar\n                    if ($scope.rangeSelectorBar) {\n                        angular$1.forEach($scope.trees, function(tree) {\n                            if (tree.range == true) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n                                angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                                    if (level.rows.length > 0 && level.name === tree.store) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function(line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function(column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n                                                }\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                $scope.loadingShow = true;\n                                dataService.deviceStoreData($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, newValue.begin, newValue.end, fields).then(function(data) {\n                                        // udpate chart\n                                        var showData = [];\n                                        angular$1.forEach(data, function(arr) {\n                                            Array.prototype.push.apply(showData, arr.data.slice(0, arr.size));\n                                        });\n                                        showData = showData.filter(function(obj) {\n                                            return obj != null;\n                                        });\n                                        // update range bar\n                                        var basicInfo = $scope.basicInfo;\n                                        var allLines = [];\n                                        angular$1.forEach(showData, function(line) {\n                                            allLines.push([new Date(line.timestamp)]);\n                                        });\n                                        var series_range = {\n                                            'l0': {\n                                                axis: 'y1'\n                                            }\n                                        };\n                                        var rangeBarLabels = [];\n                                        for (var i = 0; i < fields.length; i++) {\n                                            rangeBarLabels.push(fields[i]);\n                                            var f = new Function(\"data\", \"with(data) { if(data.\" + fields[i] + \"!=null)return data.\" + fields[i] + \";return null;}\");\n                                            // add value\n                                            var counter = 0;\n                                            angular$1.forEach(allLines, function(realLine) {\n                                                try {\n                                                    var value = f(showData[counter]);\n                                                    realLine.push(value);\n                                                } catch (ex) {\n                                                    realLine.push(null);\n                                                }\n                                                counter++;\n                                            });\n                                        }\n                                        //\n                                        if ($scope.rangeConfig && $scope.rangeConfig.file && $scope.rangeConfig.file != null) {\n                                            var objNeed2Add = [];\n                                            angular$1.forEach($scope.rangeConfig.file, function(item) {\n                                                var flag = false;\n                                                var dataLength = -1;\n                                                angular$1.forEach(allLines, function(line) {\n                                                    dataLength = line.length;\n                                                    if (line.length > 0 && line[0].getTime() === item[0].getTime()) {\n                                                        flag = true;\n                                                    } else if (line.length === 0) {\n                                                        flag = true;\n                                                    } else {\n                                                        dataLength = line.length;\n                                                    }\n\n                                                });\n                                                if (!flag) {\n                                                    var tempObj = [];\n                                                    for (var i = 0; i < dataLength; i++) {\n                                                        tempObj[i] = item[i];\n                                                    }\n                                                    objNeed2Add.push(tempObj);\n                                                }\n                                            });\n                                        }\n                                        allLines = allLines.concat(objNeed2Add);\n                                        allLines.sort(function(a, b) {\n                                            return a[0] > b[0] ? 1 : -1;\n                                        });\n                                        if ($scope.showY2Btns) {\n                                            //noinspection JSDuplicatedDeclaration\n                                            if ($scope.rangeConfig.axes && !$scope.rangeConfig.axes.hasOwnProperty(\"y2\")) {\n                                                series_range = {\n                                                    'l0': {\n                                                        axis: 'y1'\n                                                    },\n                                                    'l0': {\n                                                        axis: 'y2'\n                                                    }\n                                                };\n                                                $scope.rangeSeries = series_range;\n                                                $scope.rangeConfig = {\n                                                    'file': allLines,\n                                                    'labels': ['x'].concat(rangeBarLabels),\n                                                    'series': series_range\n                                                };\n                                                if (basicInfo && basicInfo.range_show) {\n                                                    $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                                }\n                                            }\n\n                                        } else {\n                                            series_range[\"span_y2\"] = {\n                                                axis: 'y2'\n                                            };\n                                            $scope.rangeSeries = series_range;\n                                            var newLines = [];\n                                            angular$1.copy(allLines, newLines);\n                                            angular$1.forEach(newLines, function(line) {\n                                                line.push(NaN);\n                                            });\n                                            $scope.rangeConfig = {\n                                                'file': newLines,\n                                                'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                                'series': series_range\n                                            };\n                                            if (basicInfo && basicInfo.range_show) {\n                                                $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                            }\n                                        }\n                                    },\n                                    function(data) {\n                                        console.info(data);\n                                        $scope.emptyDataShow = true;\n                                        $scope.loadingShow = false;\n                                    }\n                                );\n                            }\n                        });\n                    }\n\n\n                    $scope.loadingShow = true;\n                    if ($scope.currentView == 1) {\n                        // scatter detail view\n\n                        $scope.legendText = null;\n                        var deviceInfo = [];\n                        var currentStore = \"\";\n\n                        $scope.childrenDevices = [];\n\n                        // has problem....\n                        angular$1.forEach($scope.childTrees, function(device) {\n                            angular$1.forEach(device.trees, function(tree, index) {\n                                if (expectedInterval == tree.frequency) {\n                                    currentStore = tree.store;\n                                    deviceInfo.push({\n                                        name: device.name,\n                                        device: device,\n                                        tree: tree.tree\n                                    });\n                                    device[\"show\"] = true;\n                                    $scope.childrenDevices.push(device);\n                                }\n                            });\n                        });\n\n                        var fields = [];\n                        var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                        angular$1.forEach(metadata.data.groups[2].collections, function(level) {\n                            if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                var lines = level.rows;\n                                if (lines) {\n                                    angular$1.forEach(lines, function(line) {\n                                        if (line.value) {\n                                            var columns = (line.value).match(patt);\n                                            angular$1.forEach(columns, function(column) {\n                                                if (column && (column).startsWith('data.')) {\n                                                    fields.push(column.replace('data.', ''));\n                                                }\n                                            });\n                                        }\n                                    });\n                                }\n                            }\n                        });\n\n                        $scope.auto_fields = fields;\n                        $scope.loadingShow = true;\n                        dataService.devicesStoreData($rootScope.host, $rootScope.applicationName, deviceInfo, metadata.data.source.store, currentStore, newValue.begin, newValue.end, fields).then(function(data) {\n                            var showData = [];\n                            angular$1.forEach(data, function(arr) {\n                                var deviceData = [];\n                                angular$1.forEach(arr.data, function(bucket) {\n                                    if (bucket.data != null) {\n                                        Array.prototype.push.apply(deviceData, bucket.data.slice(0, bucket.size));\n                                    }\n                                });\n\n                                var currentDeviceInfo = {};\n                                angular$1.forEach(deviceInfo, function(device) {\n                                    if (device.name == arr.device) {\n                                        currentDeviceInfo = device;\n                                    }\n\n                                });\n                                showData.push({\n                                    device: arr.device,\n                                    extension: currentDeviceInfo,\n                                    data: deviceData\n                                });\n                            });\n                            //get configuration\n                            updateChildrenDetailChart(metadata, currentStore, $scope.rangeChildrenData, showData);\n\n                            $timeout(function() {\n                                // call interactions back\n                                if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.fetchData) {\n                                    $scope['interactions'].graphs.fetchData(showData);\n                                    // check if the last guy is older than the end of the range bar, update graph again\n                                    if ($scope['interactions'].graphs.dateWindow && !$scope['interactions'].graphs.dateWindow.end) {\n                                        var end = null;\n                                        if ($scope.chartDateWindow[1] instanceof Date) {\n                                            end = $scope.chartDateWindow[1].getTime();\n                                        } else {\n                                            end = $scope.chartDateWindow[1];\n                                        }\n                                        if (end > showData[showData.length - 1].timestamp) {\n                                            // need to move rang bar\n                                            $scope.chartDateWindow = [showData[showData.length - 1].timestamp - $scope['interactions'].graphs.dateWindow.start, showData[showData.length - 1].timestamp];\n                                            $scope.currentChart.updateOptions({\n                                                dateWindow: $scope.chartDateWindow\n                                            });\n                                            // $scope.chartDateTime = {begin:showData[showData.length - 1].timestamp - $scope['interactions'].graphs.dateWindow.start, end:showData[showData.length - 1].timestamp};\n                                        }\n                                    }\n                                }\n                            });\n                        }, function(data) {\n                            console.info(data);\n                            $scope.emptyDataShow = true;\n                            $scope.loadingShow = false;\n                        });\n\n                        $scope.fixGraphWithGap();\n                    } else {\n                        // cal tree\n                        angular$1.forEach($scope.trees, function(tree, index) {\n                            if (expectedInterval == tree.frequency) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[1].collections, function(level) {\n                                    if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function(line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function(column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n\n                                                }\n\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                $scope.loadingShow = true;\n\n                                if ($scope['interactions'] && $scope['interactions'].graphs) {\n                                    //$scope.currentIntervalsInfo\n                                    var end = null;\n                                    var begin = null;\n                                    if (newValue.begin instanceof Date) {\n                                        begin = newValue.begin.getTime();\n                                    } else {\n                                        begin = newValue.begin;\n                                    }\n                                    if (newValue.end instanceof Date) {\n                                        end = newValue.end.getTime();\n                                    } else {\n                                        end = newValue.end;\n                                    }\n                                    // don't change it to angular.forEach()\n                                    for (var i = 0; i < $scope.currentIntervalsInfo.length; i++) {\n                                        var item = $scope.currentIntervalsInfo[i];\n                                        if (item.interval == tree.store) {\n                                            if (item.info.last.timestamp < end) {\n                                                // reset chartDateTime\n                                                $scope.chartDateTime = {\n                                                    begin: begin - (end - item.info.last.timestamp),\n                                                    end: item.info.last.timestamp\n                                                };\n                                                return false;\n                                            }\n                                        }\n                                    }\n                                }\n                                dataService.deviceStoreData($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, newValue.begin, newValue.end, fields).then(function(data) {\n                                    // udpate chart\n                                    var showData = [];\n                                    angular$1.forEach(data, function(arr) {\n                                        Array.prototype.push.apply(showData, arr.data.slice(0, arr.size));\n                                    });\n                                    showData = showData.filter(function(obj) {\n                                        return obj != null;\n                                    });\n                                    showData.sort(function(a, b) {\n                                        return a.timestamp > b.timestamp ? 1 : -1;\n                                    });\n                                    //get configuration\n                                    updateDetailChart(metadata, tree.store, $scope.rangeData, showData);\n\n                                    // tell some other widgets, the graph is changed.\n                                    $timeout(function() {\n                                        $rootScope.$broadcast('chartDataChangeEvent', {\n                                            'id': element_id,\n                                            'group': 'device',\n                                            'data': {\n                                                'collection': tree.store,\n                                                'group': 'device',\n                                                'data': showData\n                                            }\n                                        });\n\n\n                                        // call interactions back\n                                        if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.fetchData) {\n                                            $scope['interactions'].graphs.fetchData(showData);\n                                            // check if the last guy is older than the end of the range bar, update graph again\n                                            if ($scope['interactions'].graphs.dateWindow && !$scope['interactions'].graphs.dateWindow.end) {\n                                                var end = null;\n                                                if ($scope.chartDateWindow[1] instanceof Date) {\n                                                    end = $scope.chartDateWindow[1].getTime();\n                                                } else {\n                                                    end = $scope.chartDateWindow[1];\n                                                }\n                                                if (end > showData[showData.length - 1].timestamp) {\n                                                    // need to move rang bar\n                                                    $scope.chartDateWindow = [showData[showData.length - 1].timestamp - $scope['interactions'].graphs.dateWindow.start, showData[showData.length - 1].timestamp];\n                                                    $scope.currentChart.updateOptions({\n                                                        dateWindow: $scope.chartDateWindow\n                                                    });\n                                                    // $scope.chartDateTime = {begin:showData[showData.length - 1].timestamp - $scope['interactions'].graphs.dateWindow.start, end:showData[showData.length - 1].timestamp};\n                                                }\n\n                                            }\n\n                                        }\n\n\n                                    });\n\n                                }, function(data) {\n                                    console.info(data);\n                                });\n                            }\n                        });\n\n                        $scope.fixGraphWithGap();\n                    }\n                    $scope.status = false;\n                }\n            });\n\n        });\n\n\n        var fetchData = function(values, node) {\n            if (node.children[0] != null) {\n                fetchData(values, node.children[0]);\n            }\n\n            if (node.children[1] != null) {\n                fetchData(values, node.children[1]);\n            }\n\n            if (node.children[0] == null && node.children[1] == null) {\n                if (node.data != null && node.data.array) {\n                    Array.prototype.push.apply(values, node.data.array.slice(0, node.data.size));\n                } else if (node.data != null) {\n                    Array.prototype.push.apply(values, node.data.slice(0, node.data.length));\n                }\n\n            }\n\n        };\n\n\n        $scope.trees = [];\n        $scope.rangeData = [];\n\n        $scope.ordinalRangeData = [];\n\n        var initChart = function(data) {\n            $scope.intevalforshow = [];\n            //\n            $scope.intevals.device = [];\n            var trees = data.trees;\n\n            if (trees.length == 0) {\n                return false;\n            }\n\n            $scope.trees = trees;\n            var rangeTree = null;\n            angular$1.forEach(trees, function(tree) {\n                if (tree.range) {\n                    if (tree.first != null && tree.last != null) {\n                        rangeTree = tree;\n                    }\n                } else {\n                    // the next on after range tree\n                    if (tree.first != null && tree.last != null) {\n                        rangeTree = tree;\n                    }\n                }\n                $scope.intevals.device.push({\n                    name: tree.store,\n                    interval: tree.frequency\n                });\n            });\n\n            // init chart with range data\n\n            if (!rangeTree) {\n                // data is empty\n                $scope.emptyDataShow = true;\n                $scope.loadingShow = false;\n                return false;\n            }\n            var store = rangeTree.store;\n            // get all data\n            var allData = [];\n            if (!rangeTree.first || !rangeTree.last) {\n                $scope.emptyDataShow = true;\n                $scope.loadingShow = false;\n                return;\n            }\n            // fetchData(allData, rangeTree.tree);only get first and last\n            if (rangeTree.first.timestamp == rangeTree.last.timestamp) {\n                allData = allData.concat([rangeTree.first]);\n            } else {\n                allData = allData.concat([rangeTree.first, rangeTree.last]);\n            }\n\n            allData = allData.filter(function(obj) {\n                return obj != null;\n            });\n\n            allData.sort(function(a, b) {\n                return a.timestamp > b.timestamp ? 1 : -1;\n            });\n\n\n            if ($scope.trees.length == 0 || allData.length == 0) {\n                $scope.emptyDataShow = true;\n                $scope.loadingShow = false;\n                return;\n            }\n\n            // if the data only has one point. change the data range to bigger\n            if (allData.length == 1) { //  means only one point.\n                var newData = [];\n                // add 1 points into both side\n                var thePoint = allData[0];\n                var timestamp = thePoint.timestamp;\n                var currentInterval = $scope.intevals.device[0].interval;\n                newData.push({\n                    timestamp: timestamp - currentInterval\n                });\n                Array.prototype.push.apply(newData, allData);\n                newData.push({\n                    timestamp: timestamp + currentInterval\n                });\n                allData = newData;\n            }\n            $scope.ordinalRangeData = allData;\n            // get configuration and make real data\n            updateChart(metadata, store, allData, true);\n        };\n\n        var initChildrenChart = function(deviceDatas) {\n            var devicesInfo = {};\n            $scope.intevals.device = [];\n            //range data with all device\n            $scope.childTrees = [];\n            $scope.childrenDevices = [];\n\n            angular$1.forEach(deviceDatas, function(deviceData) {\n                var device = deviceData.device;\n                device[\"show\"] = true;\n                $scope.childrenDevices.push(device);\n                var trees = deviceData.trees;\n                $scope.childTrees.push({\n                    name: device.name,\n                    device: device,\n                    trees: trees\n                });\n                var rangeTree = null;\n                angular$1.forEach(trees, function(tree) {\n                    if (tree.range && tree.first && tree.last) {\n                        rangeTree = tree;\n                    }\n\n                    var flag = false;\n                    angular$1.forEach($scope.intevals.device, function(interval) {\n                        if (interval.name == tree.store && interval.interval == tree.frequency) {\n                            // has same one\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        $scope.intevals.device.push({\n                            name: tree.store,\n                            interval: tree.frequency\n                        });\n                    }\n\n                });\n\n                if (rangeTree != null) {\n                    var deviceObj = devicesInfo[device.name] = {};\n                    // get all data\n                    var allData = [];\n                    // fetchData(allData, rangeTree.tree);\n                    if (rangeTree.first.timestamp == rangeTree.last.timestamp) {\n                        allData = allData.concat([rangeTree.first]);\n                    } else {\n                        allData = allData.concat([rangeTree.first, rangeTree.last]);\n                    }\n\n                    allData = allData.filter(function(obj) {\n                        return obj != null;\n                    });\n                    allData.sort(function(a, b) {\n                        return a.timestamp > b.timestamp ? 1 : -1;\n                    });\n                    //\n                    deviceObj[\"range\"] = rangeTree;\n                    deviceObj[\"data\"] = allData;\n                    deviceObj[\"device\"] = device;\n                } else {\n                    console.info(device.name + \" has none data.\");\n                }\n\n            });\n\n            updateChildrenChart(metadata, devicesInfo, true);\n        };\n\n\n        var updateChildrenChart = function(metadata, devicesInfo, init) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {\n                left: relationConfig.leftYAxis,\n                right: relationConfig.rightYAxis\n            };\n            var allLines = [];\n            var allXLabels = [];\n            angular$1.forEach(devicesInfo, function(device, key) {\n                angular$1.forEach(device.data, function(item) {\n                    var flag = false;\n                    angular$1.forEach(allXLabels, function(label) {\n                        if (label.getTime() == item.timestamp) {\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        allXLabels.push(new Date(item.timestamp));\n                    }\n\n\n                });\n            });\n            // order\n            allXLabels.sort(function(a, b) {\n                return a > b ? 1 : -1;\n            });\n\n            // make all line\n            angular$1.forEach(allXLabels, function(label) {\n                allLines.push([label]);\n            });\n\n\n            var yRange = {\n                min: null,\n                max: null\n            };\n            var showY2axis = false;\n            var counter = 0;\n\n\n            angular$1.forEach(devicesInfo, function(device, key) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                angular$1.forEach(collections, function(collection) {\n                    if (collection.name == device.range.store) {\n                        $scope.currentIntervalName = device.range.store;\n                        var originalData = device.data;\n\n                        // always same for each device\n                        if (collection.rows[0].yaxis == 0) {\n                            if (collection.rows[0].type == 'line') {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y1',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            } else if (collection.rows[0].type == 'bar') {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y1',\n                                    'plotter': barChartMultiColumnBarPlotter\n                                };\n                            } else {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y1',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            }\n\n                        } else {\n                            series[collection.rows[0].label] = {\n                                'axis': 'y2'\n                            };\n\n                            if (collection.rows[0].type == 'line') {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y2',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            } else if (collection.rows[0].type == 'bar') {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y2',\n                                    'plotter': barChartMultiColumnBarPlotter\n                                };\n                            } else {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y2',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            }\n\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n\n                        if (collection.rows[0].legend_label) {\n                            labels.push(device.device[collection.rows[0].legend_label]);\n                        } else {\n                            labels.push(key);\n                        }\n\n\n                        // make a line\n                        var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                        // add value\n                        angular$1.forEach(allLines, function(realLine, index) {\n\n                            var flag = false;\n                            angular$1.forEach(originalData, function(odata) {\n                                if (realLine[0].getTime() == odata.timestamp) {\n                                    try {\n                                        var value = f(odata);\n                                        realLine.push(value);\n                                        if (yRange.min == null) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max == null) {\n                                            yRange.max = value;\n                                        }\n\n                                        if (yRange.min > value) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max < value) {\n                                            yRange.max = value;\n                                        }\n                                    } catch (ex) {\n                                        realLine.push(null);\n                                    }\n                                    flag = true;\n                                }\n                            });\n\n                            if (!flag) {\n                                realLine.push(null);\n                            }\n                        });\n\n\n                    }\n                });\n            });\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n            //update chart\n            if ($scope.currentChart) {\n\n                $scope.rangeChildrenData = allLines;\n\n                if (showY2axis) {\n                    $scope.childrenRangeConfig = {\n                        'labelsKMB': true,\n                        'file': init ? [] : allLines,\n                        legend: 'never',\n                        labelsKMB: true,\n                        labelsSeparateLines: false,\n                        // data formate\n                        labels: ['x'].concat(sampleData.labels),\n                        highlightSeriesOpts: {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        'labels': ['x'].concat(labels),\n                        'ylabel': leftAndRight.left,\n                        'y2label': leftAndRight.right,\n                        'series': series,\n                        'colors': colors,\n                        highlightCallback: function(e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            $scope.currentHighlight = seriesName;\n                            angular$1.forEach(series, function(value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {\n                                x: 0,\n                                y: 0\n                            };\n                            angular$1.forEach(pts, function(item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function(point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n\n                            $scope.$apply(function() {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n                        },\n                        unhighlightCallback: function(e) {\n                            $scope.currentHighlight = \"\";\n                            $scope.$apply(function() {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'axes': {\n                            'y': {\n                                valueRange: [yRange.min, yRange.max],\n                                axisLabelWidth: 80\n                            },\n                            'y2': {}\n                        }\n                        // showRangeSelector: true\n                    };\n                } else {\n                    $scope.showY2Btns = false;\n                    var newLines = [];\n                    angular$1.copy(allLines, newLines);\n                    angular$1.forEach(newLines, function(line) {\n                        line.push(NaN);\n                    });\n                    series[\"span_y2\"] = {\n                        'axis': 'y2'\n                    };\n                    $scope.childrenRangeConfig = {\n                        'drawGapEdgePoints': true,\n                        'pointSize': 3,\n                        'legend': 'never',\n                        'labelsKMB': true,\n                        'file': init ? [] : newLines,\n                        'labelsSeparateLines': false,\n                        'highlightSeriesOpts': {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        highlightCallback: function(e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            $scope.currentHighlight = seriesName;\n                            angular$1.forEach(series, function(value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {\n                                x: 0,\n                                y: 0\n                            };\n                            angular$1.forEach(pts, function(item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function(point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n                            $scope.$apply(function() {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n                        },\n\n                        unhighlightCallback: function(e) {\n                            $scope.currentHighlight = \"\";\n                            $scope.$apply(function() {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                        'ylabel': leftAndRight.left,\n                        'y2label': \"\",\n                        'series': series,\n                        'colors': colors,\n                        'axes': {\n                            'y': {\n                                valueRange: [yRange.min, yRange.max]\n                            },\n                            'y2': {\n                                axisLabelFormatter: function(d) {\n                                    return '';\n                                }\n                            }\n                        }\n                        // showRangeSelector: true\n                    };\n                }\n\n\n                if ($scope.chartDateWindow && $scope.rangeSelectorBar && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                    // keep the current range bar refresh once.\n                    // make sure the begin != end\n                    $scope.chartDateTime = {\n                        begin: $scope.chartDateTime.begin,\n                        end: $scope.chartDateTime.end\n                    };\n                    $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                } else if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != $scope.chartDateWindow[1]) && !$scope.rangeSelectorBar && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                    $scope.chartDateTime = {\n                        begin: $scope.chartDateTime.begin,\n                        end: $scope.chartDateTime.end\n                    };\n                    $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                    $scope.currentChart.updateOptions({\n                        dateWindow: $scope.chartDateWindow\n                    });\n                } else {\n                    $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                    if (begin_path && end_path && !init_flag) {\n                        // $scope.chartDateTime = {\n                        // \"begin\": new Date(new Number(begin_path)),\n                        // \"end\": new Date(new Number(end_path))\n                        // };\n                        $scope.chartDateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                        $scope.childrenRangeConfig.dateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                        init_flag = true;\n                    } else {\n                        if ($scope.currentIntervalChoosed && ((allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= allLines[0][0].getTime())) {\n                            if ($scope.childrenRangeConfig) {\n                                $scope.childrenRangeConfig.dateWindow = [new Date(allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval), allLines[allLines.length - 1][0]];\n                            }\n                            $scope.chartDateWindow = [new Date(allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval), allLines[allLines.length - 1][0]];\n                        } else {\n                            $scope.chartDateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            if ($scope.childrenRangeConfig) {\n                                $scope.childrenRangeConfig.dateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            }\n\n                        }\n                    }\n\n                    $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n                    $scope.currentChartOptions = $scope.childrenRangeConfig;\n                }\n\n                //\n                // $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n                // keep the same time window and refersh\n                // $scope.chartDateTime = {begin: $scope.chartDateTime.begin, end: $scope.chartDateTime.end};\n                // $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                $scope.loadingShow = false;\n            }\n        };\n\n\n        var updateChildrenDetailChart = function(metadata, store, rangeData, allData, init) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var newLines = [];\n            var newTime = [];\n            var series = {};\n            var labels = [];\n            var colors = [];\n            var leftAndRight = {\n                left: relationConfig.leftYAxis,\n                right: relationConfig.rightYAxis\n            };\n            var yRange = {\n                min: null,\n                max: null\n            };\n            var counter = 0;\n            var showY2axis = null;\n            angular$1.forEach(allData, function(device) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                if (device.data.length > 0) {\n\n                    angular$1.forEach(collections, function(collection) {\n                        if (collection.name == store) {\n                            if (collection.rows[0].legend_label) {\n                                labels.push(device.extension.device.device[collection.rows[0].legend_label]);\n                            } else {\n                                labels.push(device.device);\n                            }\n\n                            $scope.currentIntervalName = store;\n                            if (collection.rows[0].yaxis == 0) {\n                                if (collection.rows[0].type == 'line') {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y1',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                } else if (collection.rows[0].type == 'bar') {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y1',\n                                        'plotter': barChartMultiColumnBarPlotter\n                                    };\n                                } else {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y1',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                }\n                            } else {\n                                if (collection.rows[0].type == 'line') {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y2',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                } else if (collection.rows[0].type == 'bar') {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y2',\n                                        'plotter': barChartMultiColumnBarPlotter\n                                    };\n                                } else {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y2',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                }\n                                showY2axis = true;\n                                $scope.showY2Btns = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                            var tempData = [];\n                            var tempTime = [];\n                            // make data\n                            angular$1.forEach(device.data, function(data) {\n                                var dateTime = new Date(data.timestamp);\n                                try {\n                                    var value = f(data);\n                                    tempData.push({\n                                        timestamp: dateTime,\n                                        value: value\n                                    });\n\n                                    if (yRange.min == null) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max == null) {\n                                        yRange.max = value;\n                                    }\n\n                                    if (yRange.min > value) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max < value) {\n                                        yRange.max = value;\n                                    }\n\n                                } catch (e) {\n                                    tempData.push({\n                                        timestamp: dateTime,\n                                        value: null\n                                    });\n                                }\n                                tempTime.push(dateTime.getTime());\n                            });\n                            newTime = newTime.concat(tempTime.filter(function(item) {\n                                return newTime.indexOf(item) < 0;\n                            }));\n                            newLines.push({\n                                device: device.device,\n                                data: tempData\n                            });\n                        }\n                    });\n                }\n            });\n\n            var chartData = [];\n            // time needs sort!!!\n            newTime = newTime.sort();\n            angular$1.forEach(newTime, function(nt) {\n                chartData.push([new Date(nt)]);\n            });\n            angular$1.forEach(newLines, function(line) {\n                angular$1.forEach(chartData, function(timeTicket) {\n                    // line data\n                    var flag = false;\n                    var lineData = line.data;\n                    for (var i = 0; i < lineData.length; i++) {\n                        if (lineData[i].timestamp.getTime() == timeTicket[0].getTime()) {\n                            timeTicket.push(lineData[i].value);\n                            flag = true;\n                            break;\n                        }\n                    }\n                    if (flag != true) {\n                        // we should use \"NaN\"\n                        timeTicket.push(NaN);\n                    }\n                });\n            });\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n            if (chartData.length == 0) {\n                $scope.currentChart.updateOptions({\n                    'file': []\n                });\n                $scope.loadingShow = false;\n            } else {\n                if ($scope.currentChart) {\n                    if (showY2axis) {\n                        $scope.currentChartOptions = {\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            labelsSeparateLines: false,\n                            'file': init ? [] : chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                }\n                            }\n                        };\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function(e, x, pts, row, seriesName) {\n                                var sn = \"\";\n                                $scope.currentHighlight = seriesName;\n                                angular$1.forEach(series, function(value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {\n                                    x: 0,\n                                    y: 0\n                                };\n                                angular$1.forEach(pts, function(item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function(point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n                                $scope.$apply(function() {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n                            },\n                            unhighlightCallback: function(e) {\n                                $scope.currentHighlight = \"\";\n                                $scope.$apply(function() {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            labelsSeparateLines: false,\n                            'file': init ? [] : chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    } else {\n                        var newLines = [];\n                        $scope.showY2Btns = false;\n                        angular$1.copy(chartData, newLines);\n                        angular$1.forEach(newLines, function(line) {\n                            line.push(NaN);\n                        });\n                        series[\"span_y2\"] = {\n                            axis: 'y2'\n                        };\n                        $scope.currentChartOptions = {\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': init ? [] : newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                },\n                                \"y2\": {\n                                    axisLabelFormatter: function(d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        };\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': init ? [] : newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function(e, x, pts, row, seriesName) {\n\n                                var sn = \"\";\n                                $scope.currentHighlight = seriesName;\n                                angular$1.forEach(series, function(value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {\n                                    x: 0,\n                                    y: 0\n                                };\n                                angular$1.forEach(pts, function(item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function(point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n\n                                $scope.$apply(function() {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n\n                            },\n\n                            unhighlightCallback: function(e) {\n                                $scope.currentHighlight = \"\";\n                                $scope.$apply(function() {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {\n                                    valueRange: [yRange.min, yRange.max],\n                                    axisLabelWidth: 80\n                                },\n                                \"y2\": {\n                                    axisLabelFormatter: function(d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    }\n                    $scope.loadingShow = false;\n                }\n            }\n            if (init) {\n                // send the date window back to outside.\n                if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.errorHandler) {\n                    $scope['interactions'].graphs.errorHandler(\"G_OUT_RANG\", $scope.currentChart[\"xAxisZoomRange\"]);\n                }\n            }\n        };\n        /**\n         * update detail chart\n         * @param metadata\n         * @param store\n         * @param rangeData\n         * @param allData\n         */\n        var updateDetailChart = function(metadata, store, rangeData, allData) {\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {\n                left: deviceConfig.leftYAxis,\n                right: deviceConfig.rightYAxis\n            };\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{\n                min: null,\n                max: null\n            }, {\n                min: null,\n                max: null\n            }];\n            angular$1.forEach(collections, function(collection) {\n                if (collection.name == store) {\n                    angular$1.forEach(allData, function(line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n                    // var yRange = {'min': null, 'max': null};\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function(row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n                        if (row.yaxis == 0) {\n                            series[row.label] = {\n                                'axis': 'y1'\n                            };\n                            if (row.type == 'line') {\n                                series[row.label] = {\n                                    'axis': 'y1',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {\n                                    'axis': 'y1',\n                                    'plotter': barChartMultiColumnBarPlotter\n                                };\n                            } else {\n                                series[row.label] = {\n                                    'axis': 'y1',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            }\n                        } else {\n                            series[row.label] = {\n                                'axis': 'y2'\n                            };\n                            if (row.type == 'line') {\n                                series[row.label] = {\n                                    'axis': 'y2',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {\n                                    'axis': 'y2',\n                                    'plotter': barChartMultiColumnBarPlotter\n                                };\n                            } else {\n                                series[row.label] = {\n                                    'axis': 'y2',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            }\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function(realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n                    });\n\n                    angular$1.forEach(yRanges, function(yrange) {\n                        if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                            yrange.min = yrange.min - (yrange.min) * 0.10;\n                            yrange.max = yrange.max + (yrange.max) * 0.10;\n                        }\n                    });\n\n                    if (allLines.length == 0) {\n                        $scope.currentChart.updateOptions({\n                            'file': []\n                        });\n                        if ($scope.rangeSelectorBar) {\n                            $scope.currentChart[\"xAxisZoomRange\"] = $scope.rangeSelectorBar.xAxisExtremes();\n                        }\n                        $scope.loadingShow = false;\n                    } else {\n                        if ($scope.currentChart) {\n                            if (showY2axis) {\n                                $scope.currentChartOptions = {\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    'labelsSeparateLines': true,\n                                    'highlightSeriesOpts': null,\n                                    'labelsKMB': true,\n                                    'fillGraph': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    'fillGraph': true,\n                                    'labelsSeparateLines': true,\n                                    'highlightSeriesOpts': null,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n\n                            } else {\n                                var newLines = [];\n                                $scope.showY2Btns = false;\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function(line) {\n                                    line.push(NaN);\n                                });\n                                series[\"span-Y2\"] = {\n                                    axis: 'y2'\n                                };\n                                $scope.currentChartOptions = {\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    'fillGraph': true,\n                                    'labelsSeparateLines': true,\n                                    'highlightSeriesOpts': null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            axisLabelFormatter: function(d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    'fillGraph': true,\n                                    'labelsSeparateLines': true,\n                                    'highlightSeriesOpts': null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {\n                                            valueRange: [yRanges[0].min, yRanges[0].max],\n                                            axisLabelWidth: 80\n                                        },\n                                        'y2': {\n                                            axisLabelFormatter: function(d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n                            }\n                            $scope.loadingShow = false;\n                        }\n                    }\n                }\n            });\n        };\n\n        $scope.autoUpdateChart = updateDetailChart;\n\n        /**\n         * update range chart\n         * @param metadata\n         * @param store\n         * @param allData\n         */\n        var updateChart = function(metadata, store, allData, init) {\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {\n                left: deviceConfig.leftYAxis,\n                right: deviceConfig.rightYAxis\n            };\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{\n                min: null,\n                max: null\n            }, {\n                min: null,\n                max: null\n            }];\n            angular$1.forEach(collections, function(collection) {\n                if (collection.name == store) {\n                    $scope.currentIntervalName = store;\n                    angular$1.forEach(allData, function(line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    $scope.rangeSeriesNumber = collection.rows.length;\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function(row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {\n                                'axis': 'y1'\n                            };\n                            if (row.type == 'line') {\n                                series[row.label] = {\n                                    'axis': 'y1',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {\n                                    'axis': 'y1',\n                                    'plotter': barChartMultiColumnBarPlotter\n                                };\n                            } else {\n                                series[row.label] = {\n                                    'axis': 'y1',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            }\n                        } else {\n                            series[row.label] = {\n                                'axis': 'y2'\n                            };\n                            if (row.type == 'line') {\n                                series[row.label] = {\n                                    'axis': 'y2',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {\n                                    'axis': 'y2',\n                                    'plotter': barChartMultiColumnBarPlotter\n                                };\n                            } else {\n                                series[row.label] = {\n                                    'axis': 'y2',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            }\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function(realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    if ($scope.currentChart) {\n                        $scope.rangeData = allLines;\n                        var basicInfo = $scope.basicInfo;\n                        if (basicInfo && basicInfo.range_show) {\n                            var rangeBarLabels = [];\n                            for (var i = 0; i < labels.length; i++) {\n                                rangeBarLabels.push(\"l\" + i);\n                            }\n                            var series_range = {\n                                'l0': {\n                                    axis: 'y1'\n                                }\n                            };\n                            if (showY2axis) {\n                                //noinspection JSDuplicatedDeclaration\n                                series_range = {\n                                    'l0': {\n                                        axis: 'y1'\n                                    },\n                                    'l0': {\n                                        axis: 'y2'\n                                    }\n                                };\n                                $scope.rangeSeries = series_range;\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': allLines,\n                                    'labels': ['x'].concat(rangeBarLabels),\n                                    'series': series_range\n                                });\n                            } else {\n                                series_range[\"span_y2\"] = {\n                                    axis: 'y2'\n                                };\n                                $scope.showY2Btns = false;\n                                $scope.rangeSeries = series_range;\n                                var newLines = [];\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function(line) {\n                                    line.push(NaN);\n                                });\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': newLines,\n                                    'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                    'series': series_range\n                                });\n                            }\n                        }\n\n                        angular$1.forEach(yRanges, function(yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max) * 0.10;\n                            }\n                        });\n\n                        // if graph has 2 yAxis or a yAxis\n                        if (showY2axis) {\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                'fillGraph': true,\n                                'labelsSeparateLines': true,\n                                'highlightSeriesOpts': null,\n                                'labelsKMB': true,\n                                'file': init ? [] : allLines,\n                                'labels': ['x'].concat(labels),\n                                'ylabel': leftAndRight.left,\n                                'y2label': leftAndRight.right,\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {\n                                        valueRange: [yRanges[0].min, yRanges[0].max],\n                                        axisLabelWidth: 80\n                                    },\n                                    'y2': {\n                                        'labelsKMB': true,\n                                        valueRange: [yRanges[1].min, yRanges[1].max],\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        } else {\n                            series['span_y2'] = {\n                                axis: 'y2'\n                            };\n                            $scope.showY2Btns = false;\n                            var newLines = [];\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function(line) {\n                                line.push(NaN);\n                            });\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                'fillGraph': true,\n                                'labelsSeparateLines': true,\n                                'highlightSeriesOpts': null,\n                                'labelsKMB': true,\n                                'file': init ? [] : newLines,\n                                'labels': ['x'].concat(labels).concat(['span_y2']),\n                                'ylabel': leftAndRight.left,\n                                'y2label': \"\",\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {\n                                        valueRange: [yRanges[0].min, yRanges[0].max],\n                                        axisLabelWidth: 80\n                                    },\n                                    'y2': {\n                                        axisLabelFormatter: function(d) {\n                                            return '';\n                                        },\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        }\n\n\n                        if (basicInfo && basicInfo.range_show) {\n                            Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                zoom: true,\n                                selection: false,\n                                range: false\n                            });\n                        }\n\n\n                        if ($scope.chartDateWindow && $scope.rangeSelectorBar && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                            // keep the current range bar refresh once.\n                            // make sure the begin != end\n                            $scope.chartDateTime = {\n                                begin: $scope.chartDateTime.begin,\n                                end: $scope.chartDateTime.end\n                            };\n                            $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                        } else if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != $scope.chartDateWindow[1]) && !$scope.rangeSelectorBar && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                            $scope.chartDateTime = {\n                                begin: $scope.chartDateTime.begin,\n                                end: $scope.chartDateTime.end\n                            };\n                            $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                            $scope.currentChart.updateOptions({\n                                dateWindow: $scope.chartDateWindow\n                            });\n                        } else {\n                            $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            if (begin_path && end_path && !init_flag) {\n                                // $scope.chartDateTime = {\n                                // \"begin\": new Date(new Number(begin_path)),\n                                // \"end\": new Date(new Number(end_path))\n                                // };\n                                $scope.chartDateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                init_flag = true;\n                            } else {\n                                if ($scope.currentIntervalChoosed && ((allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= allLines[0][0].getTime())) {\n                                    $scope.rangeConfig.dateWindow = [new Date(allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval), allLines[allLines.length - 1][0]];\n                                } else {\n                                    $scope.chartDateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                    $scope.rangeConfig.dateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                }\n                            }\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n                        }\n\n\n                        if (init) {\n                            // send the date window back to outside.\n                            if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.errorHandler) {\n                                $scope['interactions'].graphs.errorHandler(\"G_OUT_RANG\", $scope.currentChart[\"xAxisZoomRange\"]);\n                            }\n                        }\n\n\n                        //bind\n                        $scope.loadingShow = false;\n                    }\n\n                }\n            });\n        };\n\n\n        $scope.chartDateTime = {\n            begin: null,\n            end: null\n        };\n\n        // function for show one\n        $scope.showOne = function(deviceName) {\n\n            if ($rootScope['standalone'] && $rootScope['standalone'] == true) {\n                return false;\n            }\n\n            if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.scatter) {\n                return false;\n            }\n\n\n            // device type is\n            if ($location.url().indexOf('/app/page/param/') != -1) {\n                //open window\n                $window.open(\"/#/app/page/param/\" + $rootScope.applicationName + \"/\" + metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1]));\n            } else {\n                //open window\n                $window.open(\"/#\" + $location.url().replace(\"show\", \"param\").replace($location.url().substr($location.url().lastIndexOf('/', $location.url().lastIndexOf('/') - 1) + 1), metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1])));\n            }\n\n        };\n\n\n        var btntimer = null;\n\n\n        $scope.btnZoomInVLeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVLeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomInVRight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVRight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVULeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVDLeft = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVURight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVDRight = function() {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        // functions for buttons\n        $scope.btnpanleft = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[0] - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0] - pan_delta;\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[1] - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1] - pan_delta;\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnpanright = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = $scope.chartDateWindow[0].getTime() + pan_delta;\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            } else {\n                if (($scope.chartDateWindow[0] + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = ($scope.chartDateWindow[0] + pan_delta);\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1].getTime() + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            } else {\n                if (($scope.chartDateWindow[1] + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1] + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        $scope.btnzoomin = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            startDate = rangeStart + (delta * 2);\n            endDate = rangeEnd - (delta * 2);\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            //\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnzoomout = function() {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            if ((rangeStart - (delta * 2)) > panRange[0]) {\n                startDate = rangeStart - (delta * 2);\n            } else {\n                startDate = panRange[0];\n            }\n\n            if ((rangeEnd + (delta * 2)) < panRange[1]) {\n                endDate = rangeEnd + (delta * 2);\n            } else {\n                endDate = panRange[1];\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function() {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        var timer = null;\n        $scope.refersh = function(g, init) {\n            if (timer) {\n                $timeout.cancel(timer);\n            }\n            timer = $timeout(function() {\n                if (init || g.xAxisRange()[0] != $scope.chartDateTime.begin || g.xAxisRange()[1] != $scope.chartDateTime.end) {\n                    $scope.chartDateTime = {\n                        begin: g.xAxisRange()[0],\n                        end: g.xAxisRange()[1]\n                    };\n                    $scope.chartDateWindow = g.xAxisRange();\n                }\n            }, 600);\n        };\n    }\n};\n\nfgpWidgetGraph.buildFactory = function buildFactory ($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    fgpWidgetGraph.instance = new fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams);\n    return fgpWidgetGraph.instance;\n};\n\nfgpWidgetGraph.$inject = ['$timeout', 'dataService', '$rootScope', '$interval', '$filter', '$location', '$stateParams'];\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPageTitle = function fgpWidgetPageTitle() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetPageTitle.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //drag-channel  item means this widget accepts items\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"\">' +\n        '<h1>{{css.title.text}}</h1>' +\n        '<h3>{{css.subtitle.text}}</h3>' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div>';\n    return dom_show;\n};\n\n\nfgpWidgetPageTitle.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"minHeight\"] = metadata.css.minHeight;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n        $scope.css[\"title\"] = metadata.css.title;\n        $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n        $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n        $scope.css[\"subtitle\"] = metadata.css.subtitle;\n        $scope.css[\"subtitle\"][\"color\"] = metadata.css.subtitle.color;\n        $scope.css[\"subtitle\"][\"show\"] = metadata.css.subtitle.show;\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"title\"].text + \"}\");\n            $scope.css[\"title\"].text = f(deviceData.device);\n            f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"subtitle\"].text + \"}\");\n            $scope.css[\"subtitle\"].text = f(deviceData.device);\n        });\n    }\n\n\n\n\n};\n\nfgpWidgetPageTitle.buildFactory = function buildFactory () {\n    fgpWidgetPageTitle.instance = new fgpWidgetPageTitle();\n    return fgpWidgetPageTitle.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetMap = function fgpWidgetMap() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetMap.prototype.template = function template (element, attrs) {\n    var dom_show = '<div class = \"{{css.width}}\" style=\"padding:0px;height:{{css.height}}px;\" map-lazy-load=\"https://maps.google.com/maps/api/js\">' +\n        '<ng-map style=\"height: 100%;width: 100%;\" center=\"{{center}}\" zoom=\"15\">' +\n        '<marker on-click=\"map.showInfoWindow(\\'info_' + attrs.id + '\\')\" id=\"marker_' + attrs.id + '\" ng-repeat=\"item in markers\" icon=\"{{item.image}}\" position=\"{{item.latitude}},{{item.longitude}}\" title=\"{{item.name}}\" animation=\"Animation.DROP\" ></marker>' +\n        '</ng-map>' +\n        '</div>' +\n        '';\n    return dom_show;\n};\n\n\nfgpWidgetMap.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n            var location = {};\n            $scope.markers = [];\n            $scope.details = $scope.$parent.device;\n\n\n            // show one point.\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { return \" + item.value + \";}\");\n                    var result = f(deviceData.device);\n                    if (result) {\n                        location[item.label] = result;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n                } catch (error) {\n                    // show image\n                    if (\"image\" == item.label) {\n                        location[item.label] = item.value;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n\n                }\n            });\n\n\n            //do not show\n            if (location.latitude == \"\" || location.longitude == \"\") {\n                //hard code. the location is Melbourne\n                location.latitude = \"-37.810000\";\n                location.longitude = \"144.950000\";\n                $scope.center = [location.latitude, location.longitude];\n                // $scope.markers.push(location);\n            } else {\n                $scope.center = [location.latitude, location.longitude];\n                $scope.markers.push(location);\n            }\n\n        });\n    }\n\n};\n\nfgpWidgetMap.buildFactory = function buildFactory () {\n    fgpWidgetMap.instance = new fgpWidgetMap();\n    return fgpWidgetMap.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetDeviceDetail = function fgpWidgetDeviceDetail() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetDeviceDetail.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '<div class=\"row\" ng-repeat=\"item in data\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"text-align: right; font-weight: bold;line-height: 30px;\">{{item.label}}</div><div class=\"col-xs-8 col-md-8\" style=\"text-align: left;line-height: 30px;\">{{item.value}}</div>' +\n        '</div>' +\n        '</div>' +\n        '<div id=\"detail_status_' + attrs.id + '\" class=\"row\" style=\"min-height: 50px;\">' +\n        '</div>' +\n        '</div>';\n};\n\n\nfgpWidgetDeviceDetail.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n\n            $scope.data = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = \"\";\n                    $scope.data.push(item);\n                }\n            });\n\n\n        });\n\n    }\n\n};\n\n\nfgpWidgetDeviceDetail.buildFactory = function buildFactory () {\n    fgpWidgetDeviceDetail.instance = new fgpWidgetDeviceDetail();\n    return fgpWidgetDeviceDetail.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetSpan = function fgpWidgetSpan() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetSpan.prototype.template = function template (scope, element) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '</div>';\n};\n\nfgpWidgetSpan.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n};\n\nfgpWidgetSpan.buildFactory = function buildFactory () {\n    fgpWidgetSpan.instance = new fgpWidgetSpan();\n    return fgpWidgetSpan.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPie = function fgpWidgetPie($timeout) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n};\n\n\nfgpWidgetPie.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" ><div style=\"height: {{css.height}}px;\">' +\n        '<canvas class=\"fgpPieChart\"></canvas>' +\n        '</div>' +\n        '</div>';\n};\n\nfgpWidgetPie.prototype.link = function link (scope, element) {\n\n    this.$timeout(function () {\n        var ctx = element.find(\"canvas\")[0];\n        scope.chart = new Chart(ctx, {\n            type: 'pie',\n            data: {\n                labels: ['1'],\n                datasets: [\n                    {\n                        data: [1],\n                        backgroundColor: []\n                    }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                animation: false,\n                legend: {display: true}\n            }\n        });\n    });\n};\n\n\nfgpWidgetPie.prototype.controller = function controller ($scope, $element, $timeout) {\n\n    var id = $element.attr(\"id\");\n    var metadata = null;\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n            $scope.showdata = widgetData.data;\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n            $scope.data = [];\n            var colors = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = item.value;\n                    $scope.data.push(item);\n                }\n                if (item.color) {\n                    colors.push(item.color);\n                } else {\n                    colors.push('#' + (function co(lor) {\n                            return (lor +=\n                                [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                            && (lor.length == 6) ? lor : co(lor);\n                        })(''));\n                }\n            });\n            // timeout\n            $scope.pieData = {labels: [], value: []};\n            $timeout(function () {\n                // create data\n                angular$1.forEach($scope.data, function (item) {\n                    $scope.pieData.labels.push(item.label);\n                    $scope.pieData.value.push(item.value);\n                });\n\n                $scope.chart.data.labels = $scope.pieData.labels;\n                $scope.chart.data.datasets[0].data = $scope.pieData.value;\n                $scope.chart.data.datasets[0].backgroundColor = colors;\n                // update chart\n                $scope.chart.update();\n            });\n\n        });\n\n\n    }\n\n\n};\n\nfgpWidgetPie.buildFactory = function buildFactory ($timeout) {\n    fgpWidgetPie.instance = new fgpWidgetPie($timeout);\n    return fgpWidgetPie.instance;\n};\nfgpWidgetPie.$inject = ['$timeout'];\n\n/**\n * Created by eric on 22/11/16.\n */\n\nvar fgpDockerButton = function fgpDockerButton() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\n\nfgpDockerButton.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"col-xs-12 btn-group\" role=\"group\" style=\"padding: 2px;\" aria-label=\"...\">' +\n        '<div style=\"float: right;\">' +\n        '<button type=\"button\" class=\"btn btn-{{button.color}} btn-xs\" ' +\n        ' ng-click=\"action(button)\" ng-repeat=\"button in buttons\" ng-show=\"checkShow(button)\"><i class=\"fa {{button.icon}}\"' +\n        ' aria-hidden=\"true\"></i>' +\n        '</button>' +\n        '</div>' +\n        '</div>';\n    return show_dom;\n};\n\n\nfgpDockerButton.prototype.controller = function controller ($scope, $element, $http, $timeout) {\n\n    $scope.stats = \"\";\n\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var confData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                confData = data.data;\n            }\n        }\n    });\n\n    var repeateId = [];\n\n    var pageDevice = null;\n    $scope.$on('deviceInfoEvent', function (event, data) {\n        pageDevice = data.device;\n    });\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n        if (data.application === repeateId[2] && data.container === repeateId[0] && data.host === repeateId[1]) {\n            $scope.stats = data.stats;\n        }\n    });\n\n    $scope.checkShow = function (button) {\n\n\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            return true;\n        }\n\n\n        if (button.type === \"stop\") {\n            if ($scope.stats === \"running\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"start\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"delete\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    // how many buttons?\n    $scope.buttons = [];\n\n    if ($scope.$parent.repeat) {\n        repeateId = $scope.$parent.repeat.split(\",\");\n    }\n\n    angular.forEach(configuration, function (item) {\n        if (item.label == \"buttons\") {\n            $scope.buttons = item.value;\n        }\n    });\n\n    $scope.healthinfo = \"\";\n\n\n    // submit \"action\" to rest api\n    $scope.action = function (button) {\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/exec',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    deviceName: pageDevice.name,\n                    deviceKey: pageDevice.key.id,\n                    relationship: 'node_application'\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        } else {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/hosts/action',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    container: repeateId[0],\n                    host: repeateId[1],\n                    application: repeateId[2]\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        }\n\n    };\n};\n\n\nfgpDockerButton.buildFactory = function buildFactory () {\n    fgpDockerButton.instance = new fgpDockerButton();\n    return fgpDockerButton.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetRepeatContainer = function fgpWidgetRepeatContainer($http) {\n    this.restrict = 'E';\n    this.scope = {};\n    this._$http = $http;\n};\n\nfgpWidgetRepeatContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{item.device.key.id}}\" ng-repeat=\"item in items\" emit-last-repeater-element style=\"padding-left: 2px; padding-right: 2px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding-left: 1px; padding-right: 1px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}};\"><i class=\"fa fa-desktop\" aria-hidden=\"true\" style=\"margin-right: 5px;\"></i>{{item.device.name}}</div>' +\n        '<div class=\"panel-body\"  style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\'}};\">' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" ng-repeat=\"item in items\" repeat-id=\"{{item.device.key.id}}\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;padding-left: 2px; padding-right: 2px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n};\n\nfgpWidgetRepeatContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout, $http, $location, $stateParams, $websocket) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    // all items\n    $scope.items = [];\n\n    $scope.labelstyle = [\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"];\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n\n    $scope.listStyle = \"list\";\n\n    $scope.labels = [];\n\n    var deviceType = $stateParams.type;\n    var deviceName = $stateParams.device;\n\n    if (metadata.data) {\n\n\n        $scope.labels = [];\n\n\n        if (metadata.data.datasource.labels) {\n            $scope.labels = metadata.data.datasource.labels.split(\" \");\n        }\n\n        if (metadata.data.datasource.style) {\n            $scope.listStyle = metadata.data.datasource.style;\n        }\n\n        // show different type\n        var relation = metadata.data.datasource.type;\n        $scope.items = [];\n        $http({\n            method: 'GET',\n            url: 'api/docker/repeat/' + deviceType + '/' + deviceName + '/' + relation\n        }).then(function (data) {\n            $scope.items = data.data;\n        }, function (error) {\n            console.error(error);\n        });\n\n        // I'm ready. please give all my children to me~\n        // call stage\n        $scope.$on('LastRepeaterElement', function () {\n            $timeout(function () {\n                $scope.$emit('bindChildRepeatEvent', {\n                    id: element_id\n                });\n            });\n        });\n\n\n    }\n    //establish a connection with websocket\n    var dataStream = $websocket('ws://' + $location.host() + \":\" + $location.port() + '/ws/hosts');\n    dataStream.onMessage(function (message) {\n        try {\n            var backData = JSON.parse(message.data);\n            if (backData.hasOwnProperty(\"container\")) {\n                // tell children\n                $scope.$parent.$broadcast('containerStatusEvent', backData);\n                // update health-check status\n                angular.forEach($scope.items, function (item) {\n                    if (backData.application == item.device.key.id) {\n                        if (backData.config.State.Health) {\n                            item[\"health\"] = backData.config.State.Health.Status;\n                        } else {\n                            item[\"health\"] = null;\n                        }\n\n                        if (backData.stats == \"exited\") {\n                            item[\"health\"] = null;\n                        }\n                    }\n                });\n            }\n        } catch (e) {\n        }\n    });\n\n    $scope.healthcheck = function (item) {\n        // call server and get the exception.\n        dataService.healthcheck(item.name, item.device.key.id);\n    };\n\n\n};\n\n\nfgpWidgetRepeatContainer.buildFactory = function buildFactory ($http) {\n    fgpWidgetRepeatContainer.instance = new fgpWidgetRepeatContainer($http);\n    return fgpWidgetRepeatContainer.instance;\n};\n\nfgpWidgetRepeatContainer.$inject = ['$http'];\n\n/**\n * Created by eric on 25/11/16.\n */\nvar fgpImage = function fgpImage() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpImage.prototype.template = function template (scope, element) {\n    return '' +\n        '<img src=\"{{url}}\" style=\"width:{{css.width}}px;height:{{css.height}}px;\">' +\n        '';\n};\n\nfgpImage.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"0\",\n        height: \"0\"\n    };\n\n    $scope.url = \"\";\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n    if($scope.showdata.metadata.data){\n        $scope.url = $scope.showdata.metadata.data.url;\n    }\n};\n\nfgpImage.buildFactory = function buildFactory () {\n    fgpImage.instance = new fgpImage();\n    return fgpImage.instance;\n};\n\n/**\n * Created by eric on 28/11/16.\n */\nvar fgpIcon = function fgpIcon() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpIcon.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"{{css.width}}\" style=\"margin-top: 10px;background-color: {{css.background.color}};border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"padding: 5px;\">' +\n        '<i class=\"fa fa-{{icon}}\" style=\"font-size: 60px;\"></i>' +\n        '</div>' +\n        '<div class=\"col-xs-8 col-md-8\">' +\n        '<div style=\"text-align: right;font-size: large;\"><label>{{title}}</label></div>' +\n        '<div style=\"text-align: right;font-size: small;\"><label>{{desc}}</label></div>' +\n        '</div>' +\n        '</div>' +\n        '';\n    return show_dom;\n};\n\nfgpIcon.prototype.controller = function controller ($scope, $element) {\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.icon = configuration.content.icon;\n\n    $scope.desc = configuration.content.desc;\n\n    $scope.title = \"\";\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + configuration.content.f + \"}\");\n            $scope.title = f(deviceData.device);\n        });\n\n    }\n\n};\n\n\nfgpIcon.buildFactory = function buildFactory () {\n    fgpIcon.instance = new fgpIcon();\n    return fgpIcon.instance;\n};\n\n/**\n * Created by eric on 29/11/16.\n */\nvar fgpWidgetAppContainer = function fgpWidgetAppContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetAppContainer.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //<div class=\"alert alert-info\" role=\"alert\">...</div>\n    return '' +\n        '<div ng-show=\"showstyle == \\'list\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-12 col-xs-12  alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px; text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n\n        '<div ng-show=\"showstyle == \\'grid\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-6 col-xs-6 alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px;text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n        '';\n};\n\nfgpWidgetAppContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.containers = [];\n    $scope.containerswithTimeout = [];\n    var metadata = widgetData.data.metadata;\n    // should be a host id\n    var repeat = $scope.$parent.repeat;\n\n    $scope.showstyle = \"list\";\n\n    $scope.host = repeat;\n\n\n    // I'm ready. please give all my children to me~\n    // call stage\n    $scope.$on('LastRepeaterElement', function () {\n        $timeout(function () {\n            $scope.$emit('bindChildRepeatEvent', {\n                id: element_id\n            });\n        });\n    });\n\n    $timeout(function () {\n        var pp = $scope.$emit('listStyleEvent', {\n            id: widgetData.data.parent,\n            callback: function (style) {\n                $scope.showstyle = style;\n            }\n        });\n\n    });\n\n    $scope.gotoContainer = function (container) {\n        // \"device type and device name\" display by a dynamic page!\n        console.info(container);\n        return false;\n    };\n\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n\n        if (data.host == repeat) {\n            //f\n            var labels = [];\n\n            if (metadata.data.datasource.labels) {\n                labels = metadata.data.datasource.labels.split(\" \");\n            }\n            var showLabel = \"\";\n            angular.forEach(labels, function (label) {\n                showLabel += data.config[label] + \" \";\n            });\n\n            var app = {\n                id: data.container,\n                label: showLabel,\n                application: data.application,\n                name: data.deviceName,\n                type: data.deviceType\n            };\n            var flag = false;\n            angular.forEach($scope.containers, function (container) {\n                if (container.id == app.id) {\n                    // update timer\n                    var timer_index = -1;\n                    var timer = $scope.containerswithTimeout.filter(function (item, index) {\n                        if(item.app.id == app.id){\n                            timer_index = index;\n                            return true;\n                        }else{\n                            false;\n                        }\n                    });\n                    $timeout.cancel(timer[0].t);\n                    if (data.stats != \"removed\") {\n                        var newTimer = $timeout(function () {\n                            var index = $scope.containers.indexOf(app);\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }, 30000);\n                        timer[0].t = newTimer;\n                        flag = true;\n                    } else {\n                        var index = -1;\n                        angular.forEach($scope.containers, function (item, itemIndex) {\n                            if (item.id === app.id) {\n                                index = itemIndex;\n                            }\n                        });\n                        if (index != -1 && timer_index != -1) {\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            flag = true;\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }\n                    }\n                }\n            });\n\n            if (!flag) {\n                // add to\n                $scope.containers.push(app);\n                // delete it after 30 seconds!\n                var t = $timeout(function () {\n                    var index = $scope.containers.indexOf(app);\n                    $scope.containers.splice(index, 1);\n                }, 30000);\n                $scope.containerswithTimeout.push({t: t, app: app});\n            }\n        }\n\n    });\n\n};\n\nfgpWidgetAppContainer.buildFactory = function buildFactory () {\n    fgpWidgetAppContainer.instance = new fgpWidgetAppContainer();\n    return fgpWidgetAppContainer.instance;\n};\n\nfgpWidgetAppContainer.$inject = [];\n\n/**\n * Created by ericwang on 21/06/2016.\n */\nvar fgpWidgetChartTable = function fgpWidgetChartTable() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetChartTable.prototype.template = function template (element, attrs) {\n    return '<div style=\"padding:0px;height: {{css.height}}px;position: relative; overflow-y : auto;\">' +\n        '<table st-table=\"rowCollection\" class=\"col-md-12 table table-striped\">' +\n        '<thead>' +\n        '<tr>' +\n        '<th ng-repeat=\"column in sampledata.columns\">{{column.label}}</th>' +\n        '</tr>' +\n        '</thead>' +\n        '<tbody>' +\n        '<tr ng-repeat=\"value in sampledata.values\">' +\n        '<td ng-repeat=\"col in sampledata.columns\">{{value[col.label] | tableformatter: value : col.label : col.formatter}}</td>' +\n        '</tr>' +\n        '</tbody>' +\n        '</table>' +\n        '</div>';\n};\n\nfgpWidgetChartTable.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    //show\n    $scope.showdata = widgetData.data;\n\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n\n\n    $scope.$on('chartDataChangeEvent', function (event, chartData) {\n        var chartId = chartData.id;\n        if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"device\") {\n            $scope.sampledata = {};\n            // make data\n            var collectionName = chartData.data.collection;\n            var groupName = chartData.group;\n            var columns = [];\n            //get group and collection configuration\n            angular$1.forEach($scope.showdata.metadata.data.groups, function (group) {\n                if (group.name == groupName) {\n                    angular$1.forEach(group.collections, function (collection) {\n                        if (collection.name === collectionName) {\n                            columns = collection.rows;\n                        }\n                    });\n                }\n            });\n\n\n            $scope.sampledata.columns = [];\n\n            angular$1.forEach(columns, function (column) {\n                $scope.sampledata.columns.push({label: column.label, formatter: column.formatter});\n            });\n            $scope.sampledata.values = [];\n            angular$1.forEach(columns, function (column) {\n                var f = new Function(\"data\", \"with(data) { if(\" + column.value + \") return \" + column.value + \";return '';}\");\n                angular$1.forEach(chartData.data.data, function (record, index) {\n                    if ($scope.sampledata.values.length < chartData.data.data.length) {\n                        //add new one\n                        var item = {};\n                        item[column.label] = f(record);\n                        $scope.sampledata.values.push(item);\n                    } else {\n                        $scope.sampledata.values[index][column.label] = f(record);\n                    }\n                });\n            });\n\n            var cleanData = [];\n            angular$1.forEach($scope.sampledata.values, function (value, index) {\n                var flag = false;\n                angular$1.forEach(columns, function (column) {\n                    if (value[column.label] && value[column.label] != \"\") {\n                        flag = true;\n                    }\n                });\n\n                if (flag) {\n                    cleanData.push(value);\n                }\n            });\n            $scope.sampledata.values = cleanData;\n\n        } else if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"relation\") {\n            //\n\n\n        }\n\n    });\n\n\n};\n\nfgpWidgetChartTable.buildFactory = function buildFactory () {\n    fgpWidgetChartTable.instance = new fgpWidgetChartTable();\n    return fgpWidgetChartTable.instance;\n};\n\n/**\n * Created by ericwang on 10/06/2016.\n */\n// angular module\nangular$1.module('fgp-kit', ['ngMap','ui.router']).service('dataService', dataAccessApi.buildFactory)\n    .filter('removeSlash', function () {\n        return function (input) {\n            if (input.startsWith(\"/\")) {\n                return input.substring(1, input.length);\n            }\n            return input;\n        }\n    })\n    .factory('$graphstorage', ['$window', function($window) {\n    return {\n        setTree: function(key, value) {\n            $window.localStorage[key] = JSON.stringify(value);\n        },\n        getTree: function(key) {\n            return JSON.parse($window.localStorage[key]) || false;\n        },\n        addTree: function (key,value) {\n            if($window.localStorage[key]){\n                var trees = JSON.parse($window.localStorage[key]);\n                trees.push(value);\n                this.setTree(key,trees);\n            }else{\n                this.setTree(key, [value]);\n            }\n        },\n        clear: function(){\n            $window.localStorage.clear();\n        }\n    }\n    }])\n    .directive('fgpContainer', fgpStage.buildFactory)\n    .directive('widgetContainer', fgpWidgetContainer.buildFactory)\n    .directive('widgetGraph', fgpWidgetGraph.buildFactory)\n    .directive('widgetPageTitle', fgpWidgetPageTitle.buildFactory)\n    .directive('widgetMap', fgpWidgetMap.buildFactory)\n    .directive('widgetStatus', fgpStage.buildFactory)\n    .directive('widgetDeviceDetail', fgpWidgetDeviceDetail.buildFactory)\n    .directive('widgetDeviceSpan', fgpWidgetSpan.buildFactory)\n    .directive('widgetPie', fgpWidgetPie.buildFactory)\n    .directive('widgetDockerButton', fgpDockerButton.buildFactory)\n    .directive('widgetRepeatContainer', fgpWidgetRepeatContainer.buildFactory)\n    .directive('widgetImage', fgpImage.buildFactory)\n    .directive('widgetIcon', fgpIcon.buildFactory)\n    .directive('widgetAppContainer', fgpWidgetAppContainer.buildFactory)\n    .directive('widgetChartTable', fgpWidgetChartTable.buildFactory)\n    .directive('emitLastRepeaterElement', [function () {\n        return function (scope) {\n            if (scope.$last) {\n                scope.$emit('LastRepeaterElement');\n            }\n        };\n    }]).filter('tableformatter', ['$filter', function ($filter) {\n    return function (input, obj, field, formatter) {\n        if (formatter) {\n            if (obj[field]) {\n                if (\"date\" == formatter) {\n                    return $filter('date')(new Date(obj[field]), 'd/M/yy h:mm a');\n                } else {\n                    return input;\n                }\n            }\n        } else {\n            return input;\n        }\n    };\n}]);\nvar index = 'fgp-kit';\n\nreturn index;\n\n})));\n\n//# sourceMappingURL=fgp.kit.bundle.js.map\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["fgp.kit.bundle.js"],"names":["global","factory","exports","module","require","define","amd","fgp_kit","angular","$","Dygraph","ngmap","chartJS","this","angular$1","chart_js","fgpStage","scope","applicationName","deviceName","server","configuration","scatterColors","standalone","interactions","replace","restrict","prototype","template","controller","$scope","$element","$timeout","$rootScope","$compile","dataService","$interval","showdata","length","setColors","graphBindingArray","$on","evt","msg","push","forEach","item","id","items","element","find","children","item_new","currentElement","attr","groupItems","dulpItem","findChild4Repeat","param","config","callback","metadata","data","datasource","style","key","from","parentId","parentHtmlObj","arrayItems","newId","i","parent","currentItem","html_render","repeat","append","findChild","$watch","newVal","oldVal","empty","sendDeviceData","graph","$broadcast","graphs","deviceInfo","then","device","buildFactory","instance","dataAccessApi","$http","$q","$cacheFactory","_$http","_$q","indexCache","deviceStores","_$interval","host","deviceKey","deferred","defer","url","ajaxSettings","async","ajax","type","contentType","success","types","Object","defineProperty","name","get","result","field","error","e","reject","console","log","message","resolve","promise","deviceInitInfo","application","storeSchema","rangeLevel","otherLevels","fields","params","concat","cache","response","childrenDeviceInitInfo","relationType","relationDeviceType","fillChildrenTree","buckets","tree","showData","value","flag","info","fillTree","size","calTree","start","end","filter","elem","devicesStoreData","store","bucketsData","devicesNullBucket","index","bucketKeys","nullBucket","bucket","post","JSON","stringify","deviceData","currentBucketShowData","deviceStoreData","defaultColors","this$1","colors","co","lor","Math","floor","random","healthcheck","autoUpdateGraph","schema","count","fetcher","last","interval","trees","frequency","timeKey","devices","graphData","$inject","fgpWidgetContainer","attrs","hasOwnProperty","showTitle","element_id","dom_show","dom_show_notitle","widgetData","$emit","css","color","width","border","background","title","show","source","parse","fgpWidgetGraph","$filter","$location","$stateParams","_dataService","Export","DEFAULT_ATTRS","backgroundColor","titleFont","titleFontColor","axisLabelFont","axisLabelFontColor","labelFont","labelFontColor","legendFont","legendFontColor","vLabelLeft","legendHeight","legendMargin","lineHeight","maxlabelsWidth","labelTopMargin","magicNumbertop","isSupported","canvas","document","createElement","context","getContext","toDataURL","fillText","asPNG","dygraph","img","userOptions","asCanvas","src","options","createCanvas","update","width_","height","height_","drawPlot","drawLegend","ctx","fillStyle","fillRect","plotCanvas","hidden_","drawImage","axesPluginDict","getPlugin","axesPlugin","plugin","ylabels_","putLabel","xlabels_","labelsPluginDict","labelsPlugin","title_div_","xlabel_div_","putVerticalLabelY1","ylabel_div_","putVerticalLabelY2","y2label_div_","layout_","annotations","putLabelAnn","labelColor","divLabel","font","top","parseInt","left","bottom","textAlign","ceil","putText","text","innerText","textContent","textDim","measureText","save","translate","rotate","PI","restore","right","textBaseline","labelMargin","getColors","labels","attr_","slice","labelsWidth","labelsX","labelsY","labelVisibility","usedColorCount","txt","plugins_","toString","dom_loading","dom_legend","dom_empty_data","dom_alert_info","dom_datetime_interval","dom_series_list","dom_real_time_grap","dom_buttons","html","link","status","timeOut","completionPercent","getData","numSeries","numRows","initDate","Date","j","getTime","val","NaN","sampleData","movePan","event","g","side","preventDefault","stopPropagation","dragEndX","dragGetX_","dragEndY","dragGetY_","is2DPan","pixelsDragged","dragStartY","axis","axes_","axis_data","axes","unitsDragged","unitsPerPixel","boundedValue","boundedValues","maxValue","initialTopValue","min","minValue","dragValueRange","attributes_","getForAxis","valueWindow","pow","LOG_SCALE","valueRange","minDate","initialLeftmostDate","dragStartX","xUnitsPerPixel","boundedDates","max","maxDate","dateRange","zoomRange","xAxisZoomRange","getOptionForAxis","dateWindow_","drawGraph_","offsetToPercentage","offsetX","offsetY","xOffset","toDomCoords","xAxisRange","yar0","yAxisRange","yOffset","x","y","w","h","xPct","yPct","zoom","zoomInPercentage","xBias","yBias","direction","basicInfo","adjustAxis","bias","delta","increment","foo","yAxes","newYAxes","numAxes","ranges","range","newZoomRange","xAxisExtremes","updateOptions","dateWindow","canScroll","timer","mouseOverHandler","cancel","mouseEnterHandler","mouseOutHandler","scroll","normal","WheelEvent","detail","deltaY","wheelDelta","percentage","layerX","target","offsetLeft","layerY","offsetTop","percentages","plotter_","area","cancelEvent","chartDateWindow","firstPoint","timer_mousedown","mousedownHandler","initializeMouseDown","clientX","startPan","mousemoveHandler","isPanning","currentChart","mouseupHandler","endPan","currentView","currentHighlight","showOne","interactionModel","mousewheel","DOMMouseScroll","wheel","mousedown","mousemove","mouseenter","mouseup","mouseout","drawGapEdgePoints","pointSize","legend","labelsKMB","labelsSeparateLines","drawPoints","drawAxesAtZero","labelsDivStyles","text-align","position","display","yRangePad","ylabel","xLabelHeight","fillGraph","series","Device0","Device4","axisLabelWidth","y2","valueFormatter","moment","format","drawCallback","isInit","refersh","plugins","Plugins","Crosshair","timer_auto","process_bar_timer","on","tempConifg","realTimeGraph","currentChartOptions","file","darkenColor","colorStr","toRGB_","r","b","barChartPlotter","drawingContext","points","y_bottom","toDomYCoord","min_sep","Infinity","sep","canvasx","bar_width","p","center_x","canvasy","strokeRect","auto_device_name","auto_schema","auto_store","auto_fields","graph_data","worker","deviceConfig","auto_metadata","groups","collections","allLines","yRanges","collection","line","timestamp","showY2axis","rows","row","label","yaxis","plotter","DygraphCanvasRenderer","_linePlotter","barChartMultiColumnBarPlotter","f","Function","counter","realLine","ex","yrange","newLines","copy","perInterval","showRealTimeGraph","modal","buttons_show","buttonsShow","range_show","rangeSelectorBar","xAxisHeight","drawAxis","showRangeSelector","rangeSelectorHeight","finalDateRagne","chartDateTime","begin","finalDateRange","child","synchronize","selection","childrenChart","resize","$window","elementId","emptyDataShow","alertMessage","showY2Btns","legendText","legendText_device","legendText_datetime","legendText_column","legendText_value","legendColor","autoupdate","legendShow","newValue","oldValue","currentInterval","rangeConfig","currentIntervalChoosed","dateTimeIntervals","download_image","dataurl","download","href","body","appendChild","click","removeChild","export_img","series_","currentIntervalName","download_data","content","fileName","mimeType","a","navigator","msSaveBlob","Blob","URL","createObjectURL","setAttribute","location","encodeURIComponent","export_data","getLabels","columns","csvContent","datewindow","rawData_","infoArray","tempArray","includes","dataString","join","basic","checked","seriesIndex","sets","allSeriesPoints","newSets","fillColors","strokeColors","strokeStyle","x_left","stackedBarPlotter","changeInterval","loadingShow","intevals","begin_path","end_path","init_flag","fixInterval","noneFixed","fixGraphWithGap","fixed","tempDate","obj","labels_","file_","showOrHideDevice","childrenDevices","setVisibility","fixGraphWithGap_click","scatter","device_name","parent_container","data_from","checkY2Btns","viewTimer","nObj","oObj","changeViewFunc","level","patt","RegExp","lines","match","column","startsWith","initChart","relation","relation_group","initChildrenChart","expect_points","expectedInterval","conf","preOne","lastOne","expects","cin","arr","Array","apply","series_range","l0","rangeBarLabels","objNeed2Add","dataLength","tempObj","sort","rangeSeries","currentStore","childTrees","currentDeviceInfo","extension","updateChildrenDetailChart","rangeChildrenData","updateDetailChart","rangeData","group","fetchData","values","node","array","ordinalRangeData","intevalforshow","rangeTree","allData","first","newData","thePoint","updateChart","deviceDatas","devicesInfo","deviceObj","updateChildrenChart","relationConfig","leftAndRight","leftYAxis","rightYAxis","allXLabels","yRange","substr","originalData","legend_label","odata","childrenRangeConfig","highlightSeriesOpts","strokeWidth","strokeBorderWidth","highlightCircleSize","y2label","highlightCallback","pts","seriesName","sn","point_show","xval","yval","point","$apply","legendTop","legendLeft","unhighlightCallback","axisLabelFormatter","d","Number","updateInteraction","newTime","tempData","tempTime","dateTime","indexOf","chartData","nt","timeTicket","lineData","autoUpdateChart","rangeSeriesNumber","open","lastIndexOf","btntimer","btnZoomInVLeft","btnZoomOutVLeft","btnZoomInVRight","btnZoomOutVRight","btnPanVULeft","btnPanVDLeft","btnPanVURight","btnPanVDRight","btnpanleft","panRange","pan_delta","startDate","endDate","btnpanright","btnzoomin","rangeStart","rangeEnd","btnzoomout","init","fgpWidgetPageTitle","minHeight","subtitle","fgpWidgetMap","markers","details","$parent","latitude","longitude","center","fgpWidgetDeviceDetail","fgpWidgetSpan","fgpWidgetPie","chart","Chart","datasets","responsive","maintainAspectRatio","animation","pieData","fgpDockerButton","show_dom","stats","confData","repeateId","pageDevice","container","checkShow","button","shown","buttons","split","healthinfo","action","method","func","script","relationship","successCallback","errorCallback","fgpWidgetRepeatContainer","$websocket","labelstyle","listStyle","deviceType","dataStream","port","onMessage","backData","State","Health","Status","fgpImage","fgpIcon","icon","desc","fgpWidgetAppContainer","containers","containerswithTimeout","showstyle","pp","gotoContainer","showLabel","app","timer_index","t","newTimer","splice","itemIndex","fgpWidgetChartTable","chartId","sampledata","collectionName","groupName","formatter","record","cleanData","service","input","substring","setTree","localStorage","getTree","addTree","clear","directive","$last"],"mappings":"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","file":"fgp.kit.bundle.min.js","sourcesContent":["/**\n * fgp-kit\n * @version 1.0 - Homepage <http://www.future-grid.com.au>\n * @copyright (c) 2013-2016 Eric.Wang <flexdeviser@gmail.com>\n * @license Apache2. \n * @overview fgp.kit.js is a useful toolkit for future-grid's clients.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular'), require('jquery'), require('dygraphs'), require('ngmap'), require('chart.js')) :\n    typeof define === 'function' && define.amd ? define(['angular', 'jquery', 'dygraphs', 'ngmap', 'chart.js'], factory) :\n    (global.fgp_kit = factory(global.angular,global.$,global.Dygraph,global.ngmap,global.chartJS));\n}(this, (function (angular$1,$,Dygraph,ngmap,chart_js) {\n\nangular$1 = 'default' in angular$1 ? angular$1['default'] : angular$1;\n$ = 'default' in $ ? $['default'] : $;\nDygraph = 'default' in Dygraph ? Dygraph['default'] : Dygraph;\n\n/**\n * Created by ericwang on 10/06/2016.\n */\nvar fgpStage = function fgpStage() {\n    this.scope = {\n        applicationName: \"=\",\n        deviceName: \"=\",\n        server: \"=\",\n        configuration: '=',\n        scatterColors: \"=\",\n        standalone: \"=\",\n        interactions: \"=\"\n    };\n    this.replace = true;\n    this.restrict = 'A';\n};\n\nfgpStage.prototype.template = function template () {\n    return '<div id=\"pageStage\" class=\"wrapper col-md-12 col-xl-12\" style=\"background-color: #fff;height:100%;padding: 0px;\">' +\n        '</div>';\n};\n\nfgpStage.prototype.controller = function controller ($scope, $element, $timeout, $rootScope, $compile, dataService, $interval) {\n    $scope.showdata = {};\n\n    if ($scope.scatterColors && $scope.scatterColors.length > 0) {\n        dataService.setColors($scope.scatterColors);\n    }\n\n\n    $rootScope['applicationName'] = $scope.applicationName;\n    $rootScope['host'] = $scope.server;\n    $rootScope['device'] = $scope.deviceName;\n    $rootScope['standalone'] = $scope.standalone;\n\n\n    var graphBindingArray = [];\n\n    $scope.$on('bindChildChartEvent', function (evt, msg) {\n        graphBindingArray.push(msg);\n    });\n\n    $scope.$on('bindChildRepeatEvent', function (evt, msg) {\n        angular$1.forEach($scope.configuration, function (item) {\n            if (item.id == msg.id) {\n                var items = angular$1.element(\"body\").find(\"#\" + item.id).children();\n                angular$1.forEach(items, function (item_new) {\n                    $scope.showdata[item_new.id] = item;\n                    var currentElement = angular$1.element(item_new);\n                    if (currentElement.attr(\"dulp\")) {\n                        var groupItems = angular$1.element(\"body\").find(\"div[dulp='\" + item.id + \"']\");\n                        angular$1.forEach(groupItems, function (dulpItem) {\n                            findChild4Repeat(item.id, angular$1.element(dulpItem), $scope.configuration, item_new.id);\n                        });\n                    }else{\n                        findChild4Repeat(item.id, currentElement, $scope.configuration, item_new.id);\n                    }\n                });\n            }\n        });\n    });\n\n    $scope.$on('listStyleEvent', function (evt, param) {\n        var config = $scope.showdata[param.id.replace(\"edit\", \"\")];\n        param.callback(config.metadata.data.datasource.style);\n    });\n\n\n    $scope.$on('fetchWidgetMetadataEvent', function (evt, msg) {\n        angular$1.forEach($scope.showdata, function (metadata, key) {\n            if (key == msg.id) {\n                msg.callback({data: metadata, from: 'show'});\n                return;\n            }\n        });\n    });\n\n\n    function findChild4Repeat(parentId, parentHtmlObj, arrayItems, newId) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n\n                $scope.showdata[id] = arrayItems[i];\n                if (parentHtmlObj.attr(\"repeat-id\")) {\n                    $scope.repeat = parentHtmlObj.attr(\"repeat-id\");\n                }\n                if (parentHtmlObj.find('#edit' + parentId).find(\"#\" + id).length == 0) {\n                    parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                }\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems);\n            }\n            else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems);\n            }\n        }\n    }\n\n    function findChild(parentId, parentHtmlObj, arrayItems) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                findChild(arrayItems[i].id, currentItem, arrayItems);\n            } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                findChild(arrayItems[i].id, currentItem, arrayItems);\n            }\n        }\n    }\n\n\n\n    $scope.$watch('deviceName', function (newVal, oldVal) {\n        if(newVal){\n            $element.empty();\n            // refersh\n            angular$1.forEach($scope.configuration, function (item) {\n                if ('workingArea' === item.parent) {\n                    var currentItem = angular$1.element(item.html_render);\n                    $scope.showdata[item.id] = item;\n                    $element.append($compile(currentItem)($scope));\n                    findChild(item.id, currentItem, $scope.configuration);\n                }\n            });\n            /**\n             * get device information\n             */\n            if ($scope.deviceName && $scope.deviceName != \"\" && \"undefined\" != $scope.deviceName) {\n                // first time\n                sendDeviceData();\n            }\n            // all item created;\n            $timeout(function () {\n                angular$1.forEach(graphBindingArray, function (graph) {\n                    $scope.$broadcast('bindFatherGraphEvent', {parent: graph.graphs, children: graph.children});\n                });\n            });\n        }\n    });\n\n\n    var sendDeviceData = function () {\n            dataService.deviceInfo($scope.server, $scope.deviceName, null, $scope.applicationName).then(function (data) {\n                // send device info to all widget\n                $timeout(function () {\n                    $scope.$broadcast('deviceInfoEvent', {device: data, from: 'application'});\n                });\n            });\n    };\n\n\n\n\n\n\n};\n\n\nfgpStage.buildFactory = function buildFactory () {\n    fgpStage.instance = new fgpStage();\n    return fgpStage.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar dataAccessApi = function dataAccessApi($http, $q, $cacheFactory, $interval) {\n    this._$http = $http;\n    this._$q = $q;\n    // get cache\n    this.indexCache = $cacheFactory('indexCache');\n    this.deviceStores = $cacheFactory('deviceStores');\n    this._$interval = $interval;\n};\n\n\n/**\n * sync using JQuery\n * @param deviceName\n * @param deviceKey\n * @param applicationName\n * @returns {*}\n */\ndataAccessApi.prototype.deviceInfo = function deviceInfo (host, deviceName, deviceKey, applicationName) {\n    var deferred = this._$q.defer();\n    var url = host + \"/rest/api/\";\n\n    if (applicationName) {\n        url += \"app/\" + applicationName;\n    }\n\n    if (deviceName) {\n        url += '/devices/' + deviceName;\n    } else if (deviceKey) {\n        url += 'devices?key=' + deviceKey;\n    }\n\n    $.ajaxSettings.async = false;\n    $.ajax({\n        type: 'GET',\n        url: url,\n        contentType: \"application/json\",\n        success: function (data) {\n            var url = host + \"/rest/api/\";\n            if (applicationName) {\n                url += \"app/\" + applicationName + \"/devices/extension-types?device_type=\";\n            } else {\n                url += \"devices/extension-types?device_type=\";\n            }\n            $.ajaxSettings.async = false;\n            $.ajax({\n                type: 'GET',\n                url: url + data.type,\n                contentType: \"application/json\",\n                success: function (types) {\n                    angular$1.forEach(types, function (type) {\n                        Object.defineProperty(data, type.name, {\n                            get: function () {\n                                var result = null;\n                                var url = host + \"/rest/api/\";\n                                if (applicationName) {\n                                    url += \"app/\" + applicationName + \"/devices/extensions?device_name=\";\n                                } else {\n                                    url += \"devices/extensions?device_name=\";\n                                }\n                                $.ajaxSettings.async = false;\n                                $.ajax({\n                                    type: 'GET',\n                                    url: url + this.name + '&extension_type=' + type.name,\n                                    contentType: \"application/json\",\n                                    success: function (field) {\n                                        result = field;\n                                    },\n                                    error: function (e) {\n                                        deferred.reject(e);\n                                    }\n                                });\n                                return result;\n                            }\n                        });\n                    });\n                },\n                error: function (e) {\n                    console.log(e.message);\n                }\n            });\n\n            deferred.resolve(data);\n        },\n        error: function (e) {\n            deferred.reject(e);\n        }\n    });\n    return deferred.promise;\n};\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.deviceInitInfo = function deviceInitInfo (host, application, deviceKey, storeSchema, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {'otherLevels': otherLevels, 'fields': [].concat(fields)}, cache: this.deviceStores\n    }).then(\n        function (response) {\n            deferred.resolve(response.data);\n        },\n        function (response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.childrenDeviceInitInfo = function childrenDeviceInitInfo (host, application, deviceKey, storeSchema, relationType, relationDeviceType, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/children/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            relationType: relationType,\n            relationDeviceType: relationDeviceType,\n            otherLevels: otherLevels,\n            fields: [].concat(fields)\n        },\n        cache: this.deviceStores\n    }).then(\n        function (response) {\n            deferred.resolve(response.data);\n        },\n        function (response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\ndataAccessApi.prototype.fillChildrenTree = function fillChildrenTree (buckets, tree, showData) {\n\n    if (tree.children[0] != null) {\n        fillChildrenTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillChildrenTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n\n        angular$1.forEach(buckets, function (value, key) {\n            if (key == tree.id && value != null) {\n                tree.data = value;\n                tree['size'] = value.length;\n\n                var flag = false;\n                angular$1.forEach(showData, function (data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        tree['size'] = value.length;\n                        flag = true;\n                    }\n                });\n\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n};\n\n\ndataAccessApi.prototype.fillTree = function fillTree (buckets, tree, showData) {\n    if (tree.children[0] != null) {\n        fillTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        angular$1.forEach(buckets, function (value, key) {\n            if (key == tree.id) {\n                tree.data = value;\n                tree['size'] = value.size;\n                var flag = false;\n                angular$1.forEach(showData, function (data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        data['size'] = tree.size;\n                        flag = true;\n                    }\n                });\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n\n};\n\ndataAccessApi.prototype.calTree = function calTree (buckets, tree, start, end) {\n    if (tree.children[0] != null) {\n        calTree(buckets, tree.children[0], start, end);\n    }\n\n    if (tree.children[1] != null) {\n        calTree(buckets, tree.children[1], start, end);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        // is overlap?\n        if (((start >= tree.start) && start < tree.end)\n            ||\n            ((start > tree.start) && start <= tree.end)\n            ||\n            ((tree.start >= start) && tree.start < end)\n            ||\n            ((tree.start > start) && tree.start <= end)) {\n            if (buckets.filter(function (elem) {\n                    return elem.id == tree.id\n                }).length == 0) {\n                buckets.push(tree);\n            }\n        }\n    }\n};\n\n\n/**\n *\n * @param application\n * @param deviceInfo deviceKey and tree\n * @param storeSchema\n * @param store\n * @param start\n * @param end\n */\ndataAccessApi.prototype.devicesStoreData = function devicesStoreData (host, application, deviceInfo, storeSchema, store, start, end, fields) {\n\n    var bucketsData = [];\n    var devicesNullBucket = [];\n    var calTree = this.calTree;\n    var fillChildrenTree = this.fillChildrenTree;\n    angular$1.forEach(deviceInfo, function (device, index) {\n        var bucketKeys = [];\n        calTree(bucketKeys, device.tree, start, end);\n        var nullBucket = [];\n        // get null buckets\n        angular$1.forEach(bucketKeys, function (bucket) {\n            if (bucket.data == null) {\n                nullBucket.push(bucket.id);\n            }\n        });\n        if (nullBucket.length != 0) {\n            devicesNullBucket.push({device: device.name, nullBucket: nullBucket});\n        }\n        bucketsData.push({device: device.name, data: bucketKeys});\n    });\n\n    if (devicesNullBucket.length == 0) {\n        // get data from rest service\n        var deferred = this._$q.defer();\n        deferred.resolve(bucketsData);\n        return deferred.promise;\n    } else {\n        // get data from rest service\n        var deferred = this._$q.defer();\n        this._$http.post(host + '/rest/api/app/' + application + '/store/index/devices/store/data/' + storeSchema + '/' + store,\n            {'bucketKeys': JSON.stringify(devicesNullBucket), 'fields': JSON.stringify(fields)}\n        ).then(\n            function (response) {\n                // response.data\n                angular$1.forEach(response.data, function (deviceData) {\n\n                    var currentBucketShowData = null;\n                    angular$1.forEach(bucketsData, function (showData) {\n                        if (showData.device == deviceData.device) {\n                            currentBucketShowData = showData.data; //  bucketKeys\n                            angular$1.forEach(deviceInfo, function (device, index) {\n                                if (deviceData.device == device.name) {\n                                    fillChildrenTree(deviceData.data, device.tree, currentBucketShowData);\n                                }\n                            });\n                        }\n                    });\n\n                });\n                // fill bucketKeys\n                deferred.resolve(bucketsData);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n};\n\n\ndataAccessApi.prototype.deviceStoreData = function deviceStoreData (host, application, deviceKey, storeSchema, store, tree, start, end, fields) {\n    var fillTree = this.fillTree;\n    var calTree = this.calTree;\n    var bucketKeys = [];\n    calTree(bucketKeys, tree, start, end);\n    var nullBucket = [];\n    // get null buckets\n    angular$1.forEach(bucketKeys, function (bucket) {\n        if (bucket.data == null) {\n            nullBucket.push(bucket.id);\n        }\n    });\n\n    if (nullBucket.length == 0) {\n        // send rest request\n        var deferred = this._$q.defer();\n        deferred.resolve(bucketKeys);\n        return deferred.promise;\n    } else {\n        // send rest request\n        var deferred = this._$q.defer();\n        this._$http.get(host + '/rest/api/app/' + application + '/store/index/store/data/' + deviceKey + '/' + storeSchema + '/' + store, {\n            params: {\n                bucketKeys: nullBucket,\n                fields: [].concat(fields)\n            }\n        }).then(\n            function (response) {\n                fillTree(response.data, tree, bucketKeys);\n                // fill bucketKeys\n                deferred.resolve(bucketKeys);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n};\n\ndataAccessApi.prototype.defaultColors = function defaultColors () {\n        var this$1 = this;\n\n    if (!this.colors) {\n        this['colors'] = [];\n        for (var i = 0; i < 300; i++) {\n            this$1.colors.push('#' + (function co(lor) {\n                    return (lor +=\n                        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                    && (lor.length == 6) ? lor : co(lor);\n                })(''));\n        }\n    }\n    return this.colors;\n};\n\ndataAccessApi.prototype.setColors = function setColors (colors) {\n    this.colors = colors;\n};\n\n\n/**\n * device id\n * @param id\n */\ndataAccessApi.prototype.healthcheck = function healthcheck (application, id) {\n\n    if (id = null || id == \"\") {\n        return;\n    }\n    this._$http.get('/rest/api/app/' + application + '/docker/healthcheck/reports?id=' + id)\n        .success(function (response) {\n            console.info(response);\n            return response;\n        });\n\n\n};\n\n\ndataAccessApi.prototype.autoUpdateGraph = function autoUpdateGraph (application, device, schema, store, fields, count, callback) {\n    var _$interval = this._$interval;\n    var _$http = this._$http;\n    var fetcher = null;\n    this._$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n        .success(function (response) {\n            var last = -1;\n            var interval = -1;\n            if (response.trees && response.trees.length === 1) {\n                interval = response.trees[0].frequency;\n                last = response.trees[0].last.timeKey;\n            }\n            if (interval != -1) {\n                var start = last - (count * interval);\n                var end = last;\n                // first time\n                _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                    params: {\n                        \"devices\": JSON.stringify([device]),\n                        \"fields\": JSON.stringify(fields),\n                        \"start\": start,\n                        \"end\": end\n                    }\n                }).success(function (graphData) {\n\n                    // start task\n                    fetcher = _$interval(function () {\n                        _$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n                            .success(function (response) {\n                                if (response.trees && response.trees.length === 1) {\n                                    last = response.trees[0].last.timeKey;\n                                    start = last - (count * interval);\n                                    end = last;\n                                    _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                                        params: {\n                                            \"devices\": JSON.stringify([device]),\n                                            \"fields\": JSON.stringify(fields),\n                                            \"start\": start,\n                                            \"end\": end\n                                        }\n                                    }).success(function (graphData) {\n                                        // put the data back\n                                        callback(graphData[device], null, interval);\n                                    });\n                                }\n                            });\n                    }, interval);\n\n                    // put the data back\n                    callback(graphData[device], fetcher, interval);\n                });\n            }\n        });\n\n};\n\n\ndataAccessApi.buildFactory = function buildFactory ($http, $q, $cacheFactory, $interval) {\n    dataAccessApi.instance = new dataAccessApi($http, $q, $cacheFactory, $interval);\n    return dataAccessApi.instance;\n};\n\ndataAccessApi.$inject = ['$http', '$q', '$cacheFactory', '$interval'];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetContainer = function fgpWidgetContainer() {\n    this.restrict = 'E';\n    this.scope = {\n        interactions: \"=\"\n    };\n};\n\nfgpWidgetContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\" style=\"margin-top:10px;margin-bottom:10px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding: 0px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}}\">{{css.title.text}}</div>' +\n        '<div class=\"panel-body\" id=\"edit' + element_id + '\" style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '\" style=\"height: 100%;\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-top:10px;margin-bottom:10px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n\n};\n\nfgpWidgetContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n    if (metadata.data) {\n        $scope.data[\"source\"] = metadata.data.source;\n        if ($scope.data && $scope.data.source.device && $scope.data.source.device != -1) {\n\n            if ($scope.data.source.device) {\n                /**\n                 * get device information\n                 */\n                dataService.deviceInfo($rootScope.host, JSON.parse($scope.data.source.device).name, null, $rootScope.applicationName).then(function (data) {\n                    // send device info to all widget\n                    $timeout(function () {\n                        $rootScope.$broadcast('deviceInfoEvent', {device: data, from: element_id});\n                    });\n                });\n            }\n\n        }\n    }\n\n};\n\n\nfgpWidgetContainer.buildFactory = function buildFactory () {\n    fgpWidgetContainer.instance = new fgpWidgetContainer();\n    return fgpWidgetContainer.instance;\n};\n\nfgpWidgetContainer.$inject = [];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetGraph = function fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    this.restrict = 'E';\n    this.scope = {\n        interactions: \"=\"\n    };\n    this.$timeout = $timeout;\n    this._dataService = dataService;\n    this._$interval = $interval;\n\n\n    /*jslint vars: true, nomen: true, plusplus: true, maxerr: 500, indent: 4 */\n\n    /**\n     * @license\n     * Copyright 2011 Juan Manuel Caicedo Carvajal (juan@cavorite.com)\n     * MIT-licensed (http://opensource.org/licenses/MIT)\n     */\n\n    /**\n     * @fileoverview This file contains additional features for dygraphs, which\n     * are not required but can be useful for certain use cases. Examples include\n     * exporting a dygraph as a PNG image.\n     */\n\n    /**\n     * Demo code for exporting a Dygraph object as an image.\n     *\n     * See: http://cavorite.com/labs/js/dygraphs-export/\n     */\n\n    Dygraph.Export = {};\n\n    Dygraph.Export.DEFAULT_ATTRS = {\n\n        backgroundColor: \"transparent\",\n\n        //Texts displayed below the chart's x-axis and to the left of the y-axis\n        titleFont: \"bold 18px serif\",\n        titleFontColor: \"black\",\n\n        //Texts displayed below the chart's x-axis and to the left of the y-axis\n        axisLabelFont: \"bold 14px serif\",\n        axisLabelFontColor: \"black\",\n\n        // Texts for the axis ticks\n        labelFont: \"normal 12px serif\",\n        labelFontColor: \"black\",\n\n        // Text for the chart legend\n        legendFont: \"bold 12px serif\",\n        legendFontColor: \"black\",\n\n        // Default position for vertical labels\n        vLabelLeft: 20,\n\n        legendHeight: 20,// Height of the legend area\n        legendMargin: 20,\n        lineHeight: 30,\n        maxlabelsWidth: 0,\n        labelTopMargin: 35,\n        magicNumbertop: 8\n\n    };\n\n    /**\n     * Tests whether the browser supports the canvas API and its methods for\n     * drawing text and exporting it as a data URL.\n     */\n    Dygraph.Export.isSupported = function () {\n        \"use strict\";\n        try {\n            var canvas = document.createElement(\"canvas\");\n            var context = canvas.getContext(\"2d\");\n            return (!!canvas.toDataURL && !!context.fillText);\n        } catch (e) {\n            // Silent exception.\n        }\n        return false;\n    };\n\n    /**\n     * Exports a dygraph object as a PNG image.\n     *\n     *  dygraph: A Dygraph object\n     *  img: An IMG DOM node\n     *  userOptions: An object with the user specified options.\n     *\n     */\n    Dygraph.Export.asPNG = function (dygraph, img, userOptions) {\n        \"use strict\";\n        var canvas = Dygraph.Export.asCanvas(dygraph, userOptions);\n        img.src = canvas.toDataURL();\n    };\n\n    /**\n     * Exports a dygraph into a single canvas object.\n     *\n     * Returns a canvas object that can be exported as a PNG.\n     *\n     *  dygraph: A Dygraph object\n     *  userOptions: An object with the user specified options.\n     *\n     */\n    Dygraph.Export.asCanvas = function (dygraph, userOptions) {\n        \"use strict\";\n        var options = {},\n            canvas = Dygraph.createCanvas();\n\n        Dygraph.update(options, Dygraph.Export.DEFAULT_ATTRS);\n        Dygraph.update(options, userOptions);\n\n        canvas.width = dygraph.width_;\n        canvas.height = dygraph.height_ + options.legendHeight;\n\n        Dygraph.Export.drawPlot(canvas, dygraph, options);\n        Dygraph.Export.drawLegend(canvas, dygraph, options);\n        return canvas;\n    };\n\n    /**\n     * Adds the plot and the axes to a canvas context.\n     */\n    Dygraph.Export.drawPlot = function (canvas, dygraph, options) {\n        \"use strict\";\n        var ctx = canvas.getContext(\"2d\");\n\n        // Add user defined background\n        ctx.fillStyle = options.backgroundColor;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Copy the plot canvas into the context of the new image.\n        var plotCanvas = dygraph.hidden_;\n\n        var i = 0;\n\n        ctx.drawImage(plotCanvas, 0, 0);\n\n\n        // Add the x and y axes\n        var axesPluginDict = Dygraph.Export.getPlugin(dygraph, 'Axes Plugin');\n        if (axesPluginDict) {\n            var axesPlugin = axesPluginDict.plugin;\n\n            for (i = 0; i < axesPlugin.ylabels_.length; i++) {\n                Dygraph.Export.putLabel(ctx, axesPlugin.ylabels_[i], options,\n                    options.labelFont, options.labelFontColor);\n            }\n\n            for (i = 0; i < axesPlugin.xlabels_.length; i++) {\n                Dygraph.Export.putLabel(ctx, axesPlugin.xlabels_[i], options,\n                    options.labelFont, options.labelFontColor);\n            }\n        }\n\n        // Title and axis labels\n\n        var labelsPluginDict = Dygraph.Export.getPlugin(dygraph, 'ChartLabels Plugin');\n        if (labelsPluginDict) {\n            var labelsPlugin = labelsPluginDict.plugin;\n\n            Dygraph.Export.putLabel(ctx, labelsPlugin.title_div_, options,\n                options.titleFont, options.titleFontColor);\n\n            Dygraph.Export.putLabel(ctx, labelsPlugin.xlabel_div_, options,\n                options.axisLabelFont, options.axisLabelFontColor);\n\n            Dygraph.Export.putVerticalLabelY1(ctx, labelsPlugin.ylabel_div_, options,\n                options.axisLabelFont, options.axisLabelFontColor, \"center\");\n\n            Dygraph.Export.putVerticalLabelY2(ctx, labelsPlugin.y2label_div_, options,\n                options.axisLabelFont, options.axisLabelFontColor, \"center\");\n        }\n\n\n        for (i = 0; i < dygraph.layout_.annotations.length; i++) {\n            Dygraph.Export.putLabelAnn(ctx, dygraph.layout_.annotations[i], options,\n                options.labelFont, options.labelColor);\n        }\n\n    };\n\n    /**\n     * Draws a label (axis label or graph title) at the same position\n     * where the div containing the text is located.\n     */\n    Dygraph.Export.putLabel = function (ctx, divLabel, options, font, color) {\n        \"use strict\";\n\n        if (!divLabel || !divLabel.style) {\n            return;\n        }\n\n        var top = parseInt(divLabel.style.top, 10);\n        var left = parseInt(divLabel.style.left, 10);\n\n        if (!divLabel.style.top.length) {\n            var bottom = parseInt(divLabel.style.bottom, 10);\n            var height = parseInt(divLabel.style.height, 10);\n\n            top = ctx.canvas.height - options.legendHeight - bottom - height;\n        }\n\n        // FIXME: Remove this 'magic' number needed to get the line-height.\n        top = top + options.magicNumbertop;\n\n        var width = parseInt(divLabel.style.width, 10);\n\n        switch (divLabel.style.textAlign) {\n            case \"center\":\n                left = left + Math.ceil(width / 2);\n                break;\n            case \"right\":\n                left = left + width;\n                break;\n        }\n\n        Dygraph.Export.putText(ctx, left, top, divLabel, font, color);\n    };\n\n    /**\n     * Draws a label Y1 rotated 90 degrees counterclockwise.\n     */\n    Dygraph.Export.putVerticalLabelY1 = function (ctx, divLabel, options, font, color, textAlign) {\n        \"use strict\";\n        if (!divLabel) {\n            return;\n        }\n\n        var top = parseInt(divLabel.style.top, 10);\n        var left = parseInt(divLabel.style.left, 10) + parseInt(divLabel.style.width, 10) / 2;\n        var text = divLabel.innerText || divLabel.textContent;\n\n\n        // FIXME: The value of the 'left' property is frequently 0, used the option.\n        if (!left)\n            left = options.vLabelLeft;\n\n        if (textAlign == \"center\") {\n            var textDim = ctx.measureText(text);\n            top = Math.ceil((ctx.canvas.height - textDim.width) / 2 + textDim.width);\n        }\n\n        ctx.save();\n        ctx.translate(0, ctx.canvas.height);\n        ctx.rotate(-Math.PI / 2);\n\n        ctx.fillStyle = color;\n        ctx.font = font;\n        ctx.textAlign = textAlign;\n        ctx.fillText(text, top, left);\n\n        ctx.restore();\n    };\n\n    /**\n     * Draws a label Y2 rotated 90 degrees clockwise.\n     */\n    Dygraph.Export.putVerticalLabelY2 = function (ctx, divLabel, options, font, color, textAlign) {\n        \"use strict\";\n        if (!divLabel) {\n            return;\n        }\n\n        var top = parseInt(divLabel.style.top, 10);\n\n        if (divLabel.style.right == \"\") {\n            divLabel.style.right = \"10px\";\n        }\n\n        var right = parseInt(divLabel.style.right, 10) + parseInt(divLabel.style.width, 10) * 2;\n        var text = divLabel.innerText || divLabel.textContent;\n\n        if (textAlign == \"center\") {\n            var textDim = ctx.measureText(text);\n            top = Math.ceil((ctx.canvas.height + textDim.width) / 2 - textDim.width);\n        }\n\n        ctx.save();\n        ctx.translate(parseInt(divLabel.style.width, 10), 0);\n        ctx.rotate(Math.PI / 2);\n\n        ctx.fillStyle = color;\n        ctx.font = font;\n        ctx.textAlign = textAlign;\n        ctx.fillText(text, top, right - ctx.canvas.width);\n\n        ctx.restore();\n    };\n\n    /**\n     * Draws the text contained in 'divLabel' at the specified position.\n     */\n    Dygraph.Export.putText = function (ctx, left, top, divLabel, font, color) {\n        \"use strict\";\n        var textAlign = divLabel.style.textAlign || \"left\";\n        var text = divLabel.innerText || divLabel.textContent;\n\n        ctx.fillStyle = color;\n        ctx.font = font;\n        ctx.textAlign = textAlign;\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(text, left, top);\n    };\n\n    /**\n     * Draws the legend of a dygraph\n     *\n     */\n    Dygraph.Export.drawLegend = function (canvas, dygraph, options) {\n        \"use strict\";\n        var ctx = canvas.getContext(\"2d\");\n\n        // Margin from the plot\n        var labelTopMargin = 10;\n\n        // Margin between labels\n        var labelMargin = 5;\n\n        var colors = dygraph.getColors();\n        // Drop the first element, which is the label for the time dimension\n        var labels = dygraph.attr_(\"labels\").slice(1);\n\n        // 1. Compute the width of the labels:\n        var labelsWidth = 0;\n\n        var i;\n        for (i = 0; i < labels.length; i++) {\n            if (labels[i] != \"span_y1\" && labels[i] != \"span_y2\") {\n                labelsWidth = labelsWidth + ctx.measureText(\"- \" + labels[i]).width + labelMargin;\n            }\n        }\n\n        var labelsX = Math.floor((canvas.width - labelsWidth) / 2);\n        var labelsY = canvas.height - options.legendHeight + labelTopMargin;\n\n\n        var labelVisibility = dygraph.attr_(\"visibility\");\n\n        ctx.font = options.legendFont;\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"middle\";\n\n        var usedColorCount = 0;\n        for (i = 0; i < labels.length; i++) {\n            if (labelVisibility[i]) {\n                if (labels[i] != \"span_y1\" && labels[i] != \"span_y2\") {\n                    var txt = \"- \" + labels[i];\n                    ctx.fillStyle = colors[usedColorCount];\n                    usedColorCount++;\n                    ctx.fillText(txt, labelsX, labelsY);\n                    labelsX = labelsX + ctx.measureText(txt).width + labelMargin;\n                }\n            }\n        }\n    };\n\n    /**\n     * Finds a plugin by the value returned by its toString method..\n     *\n     * Returns the the dictionary corresponding to the plugin for the argument.\n     * If the plugin is not found, it returns null.\n     */\n    Dygraph.Export.getPlugin = function (dygraph, name) {\n        for (i = 0; i < dygraph.plugins_.length; i++) {\n            if (dygraph.plugins_[i].plugin.toString() == name) {\n                return dygraph.plugins_[i];\n            }\n        }\n        return null;\n    };\n\n\n};\n\n\nfgpWidgetGraph.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    if (flag) {\n        var dom_loading = '<div ng-show=\"loadingShow\" id=\"loading_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\">' +\n            '<div class=\"rect1\" style=\"background-color: darkgreen\"></div>' +\n            '<div class=\"rect2\" style=\"background-color: #3cb0fd\"></div>' +\n            '<div class=\"rect3\" style=\"background-color: #777777\"></div>' +\n            '<div class=\"rect4\" style=\"background-color: coral\"></div>' +\n            '<div class=\"rect5\" style=\"background-color: deeppink\"></div>' +\n            '</div></div>';\n\n\n        var dom_legend = '<li>{{legendText_device}}</li><li>{{legendText_datetime}}</li><li><label style=\"color: {{legendColor}}\">{{legendText_column}}</label>:{{legendText_value}}</li>';\n\n        var dom_empty_data = '<div ng-show=\"emptyDataShow\" id=\"emptydata_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\" style=\"width: 100%;\">' +\n            '<h1>Empty Data!</h1>' +\n            '</div></div>';\n\n        var dom_alert_info = '<span class=\"label label-warning\" ng-show=\"alertMessage\" style=\"color: #000;\">{{alertMessage}}</span>';\n\n        var dom_datetime_interval = '<div ng-show=\"rangeSelectorBar\" class=\"dropdown\"> <button class=\"btn btn-info dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">{{currentIntervalChoosed.name}}<span class=\"caret\"></span></button> <ul class=\"dropdown-menu dropdown-menu-right\" style=\"font-size:12px;\"><li ng-repeat=\"interval in dateTimeIntervals\"><a href=\"javascript:;\" ng-click=\"changeInterval(interval)\">{{interval.name}}</a></li></ul> </div>';\n\n\n        var dom_series_list = '<div ng-show=\"currentView === 1\" class=\"dropdown\"> <button class=\"btn btn-warning dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">Devices<span class=\"caret\"></span></button> <ul class=\"dropdown-menu dropdown-menu-right\" style=\"font-size:12px;\"><li ng-repeat=\"device in childrenDevices\"><input type=\"checkbox\" ng-click=\"showOrHideDevice(device)\" ng-checked=\"device.show\"/>{{device.name}}</li></ul> </div>';\n\n\n        var dom_real_time_grap = '<div class=\"modal fade \" id=\"real_time_graph_' + attrs.id + '\" role=\"dialog\">' +\n            '<div class=\"modal-dialog modal-lg\">' +\n            '<div class=\"modal-content\">' +\n            '<div class=\"col-md-12\"  style=\"padding-top:3px;height: 1px;background-color: #0e90d2;\" ng-style=\"{ \\'width\\': completionPercent + \\'%\\' }\"></div>' +\n            '<div class=\"modal-body\" style=\"width: 100%;height: 300px;\">' +\n            '<div class=\"real-time-graph\" style=\"width: 100%;height: 100%\"></div>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>';\n\n        var dom_buttons = '<div style=\"float: right;\"  class=\"dropdown\">' +\n            '<button class=\"btn btn-info badge dropdown-toggle\" data-toggle=\"dropdown\">' +\n            '<i class=\"fa fa-download\" aria-hidden=\"true\"></i>' +\n            '</button>' +\n            '<ul class=\"dropdown-menu dropdown-menu-right\" style=\"font-size:12px;\">' +\n            '<li style=\"text-align: center;\"><div class=\"col-md-6 col-xs-6\"><span><a href=\"javascript:;\" ng-click=\"export_img();\"><span class=\"fa fa-camera\" aria-hidden=\"true\"></span></a></span></div><div class=\"col-md-6 col-xs-6\"><span><a href=\"javascript:;\" ng-click=\"export_data();\"><span class=\"fa fa-table\" aria-hidden=\"true\"></span></a></span></div></li>' +\n            '</ul>' +\n            '</div>';\n\n        var html = '<div id=\"legendbox' + attrs.id + '\" ng-show=\"legendText\" ng-style=\"{top:legendTop,left:legendLeft}\" style=\"border-radius:10px;background-color:#ffffff;position: absolute;border: 1px solid {{legendColor}};-moz-box-shadow: 5px 5px 5px #888888;box-shadow: 5px 5px 5px #888888;z-index: 99999999;margin-right: 5px;\"><ul style=\"list-style: none;list-style-position: inside;text-align: right;\">' + dom_legend + '</ul></div><div class=\"{{css.width}}\"><div class=\"col-md-12\" style=\"padding:0px;-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\"><div class=\"row\" ng-show=\"buttonsShow\"><div class=\"col-md-12\">' + dom_buttons + '<a class=\"tooltips btn btn-xs btn-info badge\" href=\"javascript:;\"  style=\"float: right;margin-right: 10px;\" ng-click=\"currentView = -currentView\"><i class=\"glyphicon glyphicon-transfer\"></i><span>Scatter View</span></a><a ng-show=\"autoupdate\" class=\"tooltips btn btn-xs btn-info badge\" style=\"float: right;margin-right: 10px;\" ng-click=\"showRealTimeGraph()\" data-toggle=\"modal\"><span>Auto Update</span><i class=\"glyphicon glyphicon-random\"></i></a><div style=\"float: right; margin-right: 10px;\">' + dom_series_list + '</div><div style=\"float: right; margin-right: 10px;\">' + dom_datetime_interval + '</div><div ng-hide=\"true\" class=\"checkbox\" style=\"float: right;margin-right: 10px; margin-bottom: 5px; margin-top: 0;\" ng-model=\"fixInterval\" ng-click=\"fixInterval=!fixInterval\"><label><input type=\"checkbox\" ng-model=\"fixInterval\" ng-clicked=\"fixInterval\" ng-change=\"fixGraphWithGap_click()\"/>fixed interval</label></div><div style=\"float: right; margin-right: 10px;\"><label class=\"label-inline\" ng-repeat=\"item in intevals.device\"><span class=\"badge\" style=\"background-color: {{ item.name == currentIntervalName ? \\'#009900;\\' : \\'\\'}}\">{{item.name}}</span></label></div><div style=\"float: right; margin-right: 10px;\">' + dom_alert_info + '</div></div></div><div style=\"position: relative;width: 100%;height:100%;\"><div style=\"position: absolute;left:25px;z-index: 999;\" ng-show=\"basicInfo.zoom\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVULeft()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDLeft()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVLeft()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVLeft()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div><div class=\"line-chart-graph\" style=\"width: 100%;height:{{css.height}}px;\"></div><div style=\"position: absolute;right:-15px;top:0px;z-index: 999;\" ng-show=\"checkY2Btns()\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVURight()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDRight()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVRight()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVRight()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div>' + dom_loading + dom_empty_data + '<div class=\"row\" ng-show=\"basicInfo.range_show\"><div class=\"col-md-12\" style=\"min-height: 30px;\"></div><div class=\"col-md-6\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[0] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-6\" style=\"text-align: right;\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[1] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-12\" style=\"min-height: 40px;position: relative\"><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;left: 20px;\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanleft()\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanright()\"><i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></div><div class=\"range-selector-bar\" style=\"height: 0px;margin-top: 30px;width: 100%;position: absolute;\"></div><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;right: 1px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomin()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomout()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div></div></div>' + dom_real_time_grap;\n\n        return html;\n    }\n};\n\nfgpWidgetGraph.prototype.link = function link (scope, element, attrs) {\n    scope['defaultColors'] = this._dataService.defaultColors();\n    var dataService = this._dataService;\n    var _$interval = this._$interval;\n    scope.status = true;\n    var timeOut = this.$timeout;\n    scope.completionPercent = 0;\n\n\n    this.$timeout(function () {\n        var getData = function (numSeries, numRows, name) {\n            var result = {labels: null, data: null};\n            var data = [];\n            var labels = [];\n            //init date\n            var initDate = new Date();\n            for (var j = 0; j < numRows; ++j) {\n                data[j] = [new Date(initDate.getTime() + 900000)];\n                initDate = new Date(initDate.getTime() + 900000);\n            }\n            for (var i = 0; i < numSeries; ++i) {\n                labels.push(name + i);\n                var val = 0;\n                for (var j = 0; j < numRows; ++j) {\n                    // val += Math.random() - 0.5;\n                    data[j][i + 1] = NaN;\n                }\n            }\n            result.labels = labels;\n            result.data = data;\n            return result;\n        };\n\n\n        var sampleData = getData(1, 1, 'Device');\n\n        function movePan(event, g, context, side) {\n            event.preventDefault();\n            event.stopPropagation();\n            context.dragEndX = Dygraph.dragGetX_(event, context);\n            context.dragEndY = Dygraph.dragGetY_(event, context);\n\n\n            // y-axis scaling is automatic unless this is a full 2D pan.\n            if (context.is2DPan) {\n\n                var pixelsDragged = context.dragEndY - context.dragStartY;\n                // Adjust each axis appropriately.\n                if (side == \"r\") {\n                    var axis = g.axes_[0];\n                    var axis_data = context.axes[0];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[0] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 0)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else if (side == 'l') {\n                    var axis = g.axes_[1];\n                    var axis_data = context.axes[1];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[1] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 1)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else {\n                    var minDate = context.initialLeftmostDate -\n                        (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n                    if (context.boundedDates) {\n                        minDate = Math.max(minDate, context.boundedDates[0]);\n                    }\n                    var maxDate = minDate + context.dateRange;\n                    if (context.boundedDates) {\n                        if (maxDate > context.boundedDates[1]) {\n                            // Adjust minDate, and recompute maxDate.\n                            minDate = minDate - (maxDate - context.boundedDates[1]);\n                            maxDate = minDate + context.dateRange;\n                        }\n                    }\n                    var zoomRange = g.xAxisZoomRange;\n                    if (g.xAxisZoomRange[0] instanceof Date) {\n                        zoomRange[0] = g.xAxisZoomRange[0].getTime();\n                    }\n                    if (g.xAxisZoomRange[1] instanceof Date) {\n                        zoomRange[1] = g.xAxisZoomRange[1].getTime();\n                    }\n\n                    if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                        return;\n                    }\n\n                    if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                        g.dateWindow_ = [Math.pow(Dygraph.LOG_SCALE, minDate),\n                            Math.pow(Dygraph.LOG_SCALE, maxDate)];\n                    } else {\n                        g.dateWindow_ = [minDate, maxDate];\n                    }\n                }\n            }\n            g.drawGraph_(false);\n\n        }\n\n\n        function offsetToPercentage(g, offsetX, offsetY) {\n            // This is calculating the pixel offset of the leftmost date.\n            var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n            var yar0 = g.yAxisRange(0);\n\n            // This is calculating the pixel of the higest value. (Top pixel)\n            var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n            // x y w and h are relative to the corner of the drawing area,\n            // so that the upper corner of the drawing area is (0, 0).\n            var x = offsetX - xOffset;\n            var y = offsetY - yOffset;\n\n            // This is computing the rightmost pixel, effectively defining the\n            // width.\n            var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n            // This is computing the lowest pixel, effectively defining the height.\n            var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n            // Percentage from the left.\n            var xPct = w == 0 ? 0 : (x / w);\n            // Percentage from the top.\n            var yPct = h == 0 ? 0 : (y / h);\n\n            // The (1-) part below changes it from \"% distance down from the top\"\n            // to \"% distance up from the bottom\".\n            return [xPct, (1 - yPct)];\n        }\n\n\n        function zoom(g, zoomInPercentage, xBias, yBias, direction, side) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n\n            function adjustAxis(axis, zoomInPercentage, bias) {\n                var delta = axis[1] - axis[0];\n                var increment = delta * zoomInPercentage;\n                var foo = [increment * bias, increment * (1 - bias)];\n                return [axis[0] + foo[0], axis[1] - foo[1]];\n            }\n\n            xBias = xBias || 0.5;\n            yBias = yBias || 0.5;\n            var yAxes = g.axes_;\n            var newYAxes = [];\n            for (var i = 0; i < g.numAxes(); i++) {\n                newYAxes[i] = adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n            }\n            if ('v' == direction) {\n                if ('l' == side) {\n                    yAxes[0]['valueRange'] = newYAxes[0];\n                    yAxes[0]['valueWindow'] = newYAxes[0];\n                } else if ('r' == side && g.numAxes() == 2) {\n                    yAxes[1]['valueRange'] = newYAxes[1];\n                    yAxes[1]['valueWindow'] = newYAxes[1];\n                }\n                g.drawGraph_(false);\n            } else {\n\n                var ranges = [];\n                angular$1.forEach(g.xAxisRange(), function (range) {\n                    if (range instanceof Date) {\n                        ranges.push(range.getTime());\n                    } else {\n                        ranges.push(range);\n                    }\n                });\n\n                var newZoomRange = adjustAxis(ranges, zoomInPercentage, xBias);\n                // do not bigger than range data\n                var zoomRange = [];\n                if (g.hasOwnProperty(\"xAxisZoomRange\") && g.xAxisZoomRange) {\n                    zoomRange[0] = g.xAxisZoomRange[0];\n                    zoomRange[1] = g.xAxisZoomRange[1];\n                } else {\n                    zoomRange[0] = g.xAxisExtremes()[0];\n                    zoomRange[1] = g.xAxisExtremes()[1];\n                }\n                if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] >= newZoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [zoomRange[0], newZoomRange[1]]\n                    });\n                } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [newZoomRange[0], zoomRange[1]]\n                    });\n                } else {\n                    g.updateOptions({\n                        dateWindow: newZoomRange\n                    });\n                }\n            }\n\n        }\n\n\n        var canScroll = false;\n\n        var timer = null;\n        var mouseOverHandler = function (e, g, context) {\n            //\n            e.preventDefault();\n            e.stopPropagation();\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function () {\n                canScroll = true;\n            }, 1000);\n\n\n        };\n\n\n        var mouseEnterHandler = function (e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function () {\n                canScroll = true;\n            }, 1000);\n\n        };\n\n        var mouseOutHandler = function (e, g, context) {\n            // set flag to false\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            canScroll = false;\n\n        };\n\n        var scroll = function (e, g, context) {\n\n            if ((scope.basicInfo && !scope.basicInfo.zoom) || !canScroll) {\n                return;\n            }\n\n            var normal;\n\n            if (e instanceof WheelEvent) {\n                normal = e.detail ? e.detail * -1 : e.deltaY / 40;\n            } else {\n                normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n            }\n\n            // For me the normalized value shows 0.075 for one click. If I took\n            // that verbatim, it would be a 7.5%.\n            var percentage = normal / 50;\n\n            if (!(e.offsetX && e.offsetY)) {\n                e.offsetX = e.layerX - e.target.offsetLeft;\n                e.offsetY = e.layerY - e.target.offsetTop;\n            }\n            var percentages = offsetToPercentage(g, e.offsetX, e.offsetY);\n            var xPct = percentages[0];\n            var yPct = percentages[1];\n            //\n            if (e.offsetX <= (g.plotter_.area.x)) {\n                // console.info(\"v\", \"l\")\n                // left zoom\n                zoom(g, percentage, xPct, yPct, 'v', 'l');\n            } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                // right zoom\n                // console.info(\"v\", \"r\")\n                zoom(g, percentage, xPct, yPct, 'v', 'r');\n            } else {\n                // middle zoom\n                // console.info(\"h\")\n                zoom(g, percentage, xPct, yPct, 'h', null);\n            }\n            Dygraph.cancelEvent(e);\n            timeOut(function () {\n                scope.chartDateWindow = g.xAxisRange();\n            });\n        };\n\n        var firstPoint = null;\n        var timer_mousedown = null;\n        var mousedownHandler = function (e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n\n            if (timer_mousedown != null) {\n                timeOut.cancel(timer_mousedown);\n            }\n            timer_mousedown = timeOut(function () {\n                context.initializeMouseDown(e, g, context);\n                firstPoint = e.clientX;\n                Dygraph.startPan(e, g, context);\n\n            }, 300);\n\n        };\n        var mousemoveHandler = function (e, g, context) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (context.isPanning) {\n                if (e.offsetX <= (g.plotter_.area.x)) {\n                    movePan(e, g, context, 'r');\n                } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                    movePan(e, g, context, 'l');\n                } else {\n                    movePan(e, g, context, 'h');\n                }\n                timeOut(function () {\n                    scope.chartDateWindow = scope.currentChart.xAxisRange();\n                });\n\n            }\n        };\n\n\n        var mouseupHandler = function (e, g, context) {\n\n            if (context.isPanning) {\n                Dygraph.endPan(e, g, context);\n            } else {\n                if (scope.currentView != -1 && scope.currentHighlight != \"\") {\n                    scope.showOne(scope.currentHighlight);\n                }\n            }\n            if (timer_mousedown) {\n                timeOut.cancel(timer_mousedown);\n            }\n            canScroll = true;\n        };\n\n\n        var interactionModel = {\n            'mousewheel': scroll,\n            'DOMMouseScroll': scroll,\n            'wheel': scroll,\n            'mousedown': mousedownHandler,\n            'mousemove': mousemoveHandler,\n            'mouseenter': mouseEnterHandler,\n            'mouseup': mouseupHandler,\n            // 'mouseover': mouseOverHandler,\n            'mouseout': mouseOutHandler\n        };\n\n\n        //init configuration\n        var configuration = {\n            drawGapEdgePoints: true,\n            'pointSize': 3,\n            legend: 'follow',\n            labelsKMB: true,\n            labelsSeparateLines: true,\n            // data formate\n            labels: ['x'].concat(sampleData.labels),\n            // highlightSeriesOpts: {\n            // strokeWidth: 2,\n            // strokeBorderWidth: 1,\n            // highlightCircleSize: 2\n            // },\n            drawPoints: false,\n            drawAxesAtZero: false,\n            labelsDivStyles: {\n                'text-align': 'right',\n                'position': 'relative',\n                'display': 'inline-block'\n            },\n            yRangePad: 10,\n            // x label y label\n            ylabel: 'Value',\n            xLabelHeight: 0,\n            colors: scope.defaultColors,\n            fillGraph: true,\n            // multiple Y axis\n            series: {\n                'Device0': {\n                    axis: 'y2'\n                },\n                'Device4': {\n                    axis: 'y2'\n                }\n            },\n            // showRangeSelector: true,\n            axes: {\n                y: {\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                y2: {\n                    // set axis-related properties here\n                    'labelsKMB': true,\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                x: {\n                    // datetime format\n                    valueFormatter: function (y) {\n                        return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                    }\n                }\n            },\n            // pointClickCallback: function (e, p) {\n            // if (scope.currentView != -1) {\n            //     scope.showOne(p.name);\n            // }\n            // },\n            drawCallback: function (g, isInit) {\n                if (scope.refersh) { // make sure \"scope.refersh\" doesn't call when the graph create first time.\n                    scope.refersh(g, isInit);\n                }\n            },\n            'interactionModel': interactionModel,\n            'plugins': [\n                new Dygraph.Plugins.Crosshair({\n                    direction: \"vertical\"\n                }),\n\n            ]\n        };\n\n        scope.currentChart = new Dygraph(element.find(\"div[class='line-chart-graph']\")[0], sampleData.data, configuration);\n        element.find(\"canvas\").css(\"zIndex\", 99);\n\n        var timer_auto = null;\n        var process_bar_timer = null;\n        element.find(\"#real_time_graph_\" + attrs.id).on(\"hidden.bs.modal\", function () {\n            // put your default event here\n            _$interval.cancel(timer_auto);\n            _$interval.cancel(process_bar_timer);\n        });\n\n\n        //real-time-graph\n        element.find(\"#real_time_graph_\" + attrs.id).on('shown.bs.modal', function () {\n\n            var tempConifg = {\n                drawGapEdgePoints: true,\n                'pointSize': 3,\n                labelsKMB: true,\n                labelsSeparateLines: false,\n                drawPoints: false,\n                drawAxesAtZero: false,\n                labelsDivStyles: {\n                    'text-align': 'right',\n                    'position': 'relative',\n                    'display': 'inline-block'\n                },\n                // x label y label\n                ylabel: 'Value',\n                xLabelHeight: 0,\n                colors: scope.defaultColors,\n                // multiple Y axis\n                series: {\n                    'Device0': {\n                        axis: 'y2'\n                    },\n                    'Device4': {\n                        axis: 'y2'\n                    }\n                },\n                // showRangeSelector: true,\n                axes: {\n                    y: {\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    y2: {\n                        // set axis-related properties here\n                        'labelsKMB': true,\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    x: {\n                        // datetime format\n                        valueFormatter: function (y) {\n                            return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                        }\n                    }\n                },\n                interactionModel: {}\n            };\n\n            scope.realTimeGraph = new Dygraph(element.find(\"div[class='real-time-graph']\")[0], sampleData.data, tempConifg);\n            scope.realTimeGraph.updateOptions(scope.currentChartOptions);\n            scope.realTimeGraph.updateOptions({\"file\": []});\n\n\n            var darkenColor = function (colorStr) {\n                // Defined in dygraph-utils.js\n                var color = Dygraph.toRGB_(colorStr);\n                color.r = Math.floor((255 + color.r) / 2);\n                color.g = Math.floor((255 + color.g) / 2);\n                color.b = Math.floor((255 + color.b) / 2);\n                return 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n            };\n\n            var barChartPlotter = function (e) {\n                var ctx = e.drawingContext;\n                var points = e.points;\n                var y_bottom = e.dygraph.toDomYCoord(0);\n\n                ctx.fillStyle = darkenColor(e.color);\n\n                // Find the minimum separation between x-values.\n                // This determines the bar width.\n                var min_sep = Infinity;\n                for (var i = 1; i < points.length; i++) {\n                    var sep = points[i].canvasx - points[i - 1].canvasx;\n                    if (sep < min_sep) min_sep = sep;\n                }\n                var bar_width = Math.floor(2.0 / 3 * min_sep);\n\n                // Do the actual plotting.\n                for (var i = 0; i < points.length; i++) {\n                    var p = points[i];\n                    var center_x = p.canvasx;\n\n                    ctx.fillRect(center_x - bar_width / 2, p.canvasy,\n                        bar_width, y_bottom - p.canvasy);\n\n                    ctx.strokeRect(center_x - bar_width / 2, p.canvasy,\n                        bar_width, y_bottom - p.canvasy);\n                }\n            };\n\n            timer_auto = dataService.autoUpdateGraph(scope.applicationName, scope.auto_device_name, scope.auto_schema, scope.auto_store, scope.auto_fields, element.find(\"div[class='real-time-graph']\").width() / 4, function (graph_data, worker, interval) {\n                // update graph\n                var deviceConfig = scope.auto_metadata.data.groups[1];\n                var collections = deviceConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var allLines = [];\n                //0 for y  1 for y2\n                var yRanges = [{min: null, max: null}, {min: null, max: null}];\n                angular$1.forEach(collections, function (collection) {\n                    if (collection.name == scope.auto_store) {\n                        angular$1.forEach(graph_data.data, function (line) {\n                            allLines.push([new Date(line.timestamp)]);\n                        });\n\n                        var showY2axis = false;\n                        angular$1.forEach(collection.rows, function (row) {\n                            labels.push(row.label);\n                            colors.push(row.color);\n\n                            if (row.yaxis == 0) {\n                                series[row.label] = {'axis': 'y1'};\n                                if (row.type == 'line') {\n                                    series[row.label] = {\n                                        'axis': 'y1',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                } else if (row.type == 'bar') {\n                                    series[row.label] = {'axis': 'y1', 'plotter': barChartMultiColumnBarPlotter};\n                                } else {\n                                    series[row.label] = {\n                                        'axis': 'y1',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                }\n                            } else {\n                                series[row.label] = {'axis': 'y2'};\n                                if (row.type == 'line') {\n                                    series[row.label] = {\n                                        'axis': 'y2',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                } else if (row.type == 'bar') {\n                                    series[row.label] = {'axis': 'y2', 'plotter': barChartMultiColumnBarPlotter};\n                                } else {\n                                    series[row.label] = {\n                                        'axis': 'y2',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                }\n                                showY2axis = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                            // add value\n                            var counter = 0;\n                            angular$1.forEach(allLines, function (realLine) {\n                                try {\n                                    var value = f(graph_data.data[counter]);\n                                    realLine.push(value);\n                                    if (row.yaxis == 0) {\n                                        if (yRanges[0].min == null) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max == null) {\n                                            yRanges[0].max = value;\n                                        }\n\n                                        if (yRanges[0].min > value) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max < value) {\n                                            yRanges[0].max = value;\n                                        }\n                                    } else {\n                                        if (yRanges[1].min == null) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max == null) {\n                                            yRanges[1].max = value;\n                                        }\n\n                                        if (yRanges[1].min > value) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max < value) {\n                                            yRanges[1].max = value;\n                                        }\n                                    }\n                                } catch (ex) {\n                                    realLine.push(null);\n                                }\n                                counter++;\n                            });\n\n                        });\n\n                        angular$1.forEach(yRanges, function (yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.min) * 0.10;\n                            } else {\n                                yrange.min = yrange.min - (yrange.max - yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max - yrange.min) * 0.10;\n                            }\n                        });\n\n                        var newLines = [];\n                        if (!showY2axis) {\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function (line) {\n                                line.push(NaN);\n                            });\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: newLines,\n                                axes: {\n                                    y: {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                    y2: {valueRange: [yRanges[1].min, yRanges[1].max]}\n                                }\n                            });\n                        } else {\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: allLines,\n                                axes: {\n                                    y: {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                    y2: {valueRange: [yRanges[1].min, yRanges[1].max]}\n                                }\n                            });\n                        }\n                    }\n                });\n                if (worker) {\n                    timer_auto = worker;\n                }\n\n\n                //\n                var perInterval = interval / 100;\n                var counter = 0;\n\n                if (process_bar_timer) {\n                    _$interval.cancel(process_bar_timer);\n                    counter = 0;\n                }\n\n                process_bar_timer = _$interval(function () {\n                    scope.completionPercent = counter;\n                    counter++;\n                }, perInterval, 100);\n\n\n            });\n        });\n\n\n        scope.currentChartOptions = {};\n\n        scope.showRealTimeGraph = function () {\n            element.find(\"#real_time_graph_\" + attrs.id).modal();\n        };\n\n\n        if (attrs.hasOwnProperty(\"shown\")) {\n\n\n            var basicInfo = scope.basicInfo;\n\n\n            if (basicInfo && basicInfo.buttons_show == false) {\n                scope.buttonsShow = false;\n            }\n\n\n            if (basicInfo && basicInfo.range_show) {\n                scope.rangeSelectorBar = new Dygraph(element.find(\"div[class='range-selector-bar']\")[0], sampleData.data, {\n                        xAxisHeight: 0,\n                        axes: {\n                            x: {\n                                drawAxis: false\n                            }\n                        },\n                        showRangeSelector: true,\n                        rangeSelectorHeight: 30\n                    }\n                );\n                scope.chartDateWindow = scope.rangeSelectorBar.xAxisRange();\n            }\n\n\n            var status = false;\n            // add mouse up event to range select\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mouseup', function (event) {\n                status = false;\n                timeOut(function () {\n                    var finalDateRagne = scope.currentChart.xAxisRange();\n                    scope.chartDateTime = {begin: finalDateRagne[0], end: finalDateRagne[1]};\n                });\n            });\n\n            scope.$on('mouseUpMessage', function ($scope, e) {\n                if (\"mouseup\" === e.type && status) {\n                    status = false;\n                    timeOut(function () {\n                        var finalDateRange = scope.currentChart.xAxisRange();\n                        scope.chartDateTime = {begin: finalDateRange[0], end: finalDateRange[1]};\n                    });\n                }\n            });\n\n            scope.$on('bindFatherGraphEvent', function (event, data) {\n                angular$1.forEach(data.children, function (child) {\n                    if (child == attrs.id) {\n                        Dygraph.synchronize([scope.currentChart].concat(data.parent), {\n                            zoom: true,\n                            selection: false,\n                            range: false\n                        });\n                        scope.currentChart.updateOptions({\n                            drawCallback: function (g, isInit) {\n                                // console.info(\"refersh running!\" + \" is  Init?\"+ isInit);\n                                scope.refersh(g, isInit);\n                            }\n                        });\n\n                    }\n                });\n\n\n            });\n\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousemove', function (event) {\n                if (status) {\n                    scope.chartDateWindow = scope.currentChart.xAxisRange();\n                }\n            });\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousedown', function (event) {\n                status = true;\n            });\n\n\n            //bind chart\n            if (basicInfo && basicInfo.childrenChart.length > 0) {\n                var param = {'graphs': [scope.currentChart], children: basicInfo.childrenChart};\n                if (scope.rangeSelectorBar) {\n                    param.graphs.push(scope.rangeSelectorBar);\n                }\n                scope.$emit('bindChildChartEvent', param);\n            }\n\n            scope.$on('changeSize', function (event) {\n                scope.currentChart.resize();\n                if (scope.rangeSelectorBar) {\n                    scope.rangeSelectorBar.resize();\n                }\n            });\n\n\n        }\n    }, 0);\n};\n\n//controller: ['$scope', '$element', '$window', '$interval', '$timeout', '$filter', '$location', function ($scope, $element, $window, $interval, $timeout, $filter, $location) {\nfgpWidgetGraph.prototype.controller = function controller ($scope, $element, $window, $interval, $timeout, $filter, $location, dataService, $rootScope, $stateParams) {\n    var element_id = $element.attr(\"id\");\n    $scope.elementId = element_id;\n\n    $scope.currentHighlight = \"\";\n\n    $scope['defaultColors'] = dataService.defaultColors();\n    var metadata = null;\n    var widgetData = null;\n    $scope.emptyDataShow = false;\n    // attributes----------------------\n    $scope.applicationName = $rootScope.applicationName;\n\n    $scope.alertMessage;\n\n\n    $scope.showY2Btns = false;\n\n    $scope.legendText = null;\n    $scope.legendText_device = null;\n    $scope.legendText_datetime = null;\n    $scope.legendText_column = null;\n    $scope.legendText_value = null;\n    $scope.legendColor = null;\n    $scope.autoupdate = false;\n    $scope.auto_device_name = \"\";\n    $scope.auto_schema = \"\";\n    $scope.auto_store = \"\";\n    $scope.auto_fields = [];\n\n    $scope.legendShow = true;\n\n    $scope.buttonsShow = true;\n\n\n    $timeout(function () {\n        if ($scope['interactions'] && $scope['interactions'].graphs) {\n            $scope.$watch('interactions.graphs.dateWindow', function (newValue, oldValue) {\n                //\n                if (newValue && newValue.start && !newValue.end) {\n                    $timeout(function () {\n                        var currentInterval = {name: \"\", interval: newValue.start};\n                        if ($scope.currentChart[\"xAxisZoomRange\"]) {\n                            var range = $scope.currentChart[\"xAxisZoomRange\"];\n                            if (range[0] instanceof Date) {\n                                range[0] = range[0].getTime();\n                            }\n                            if (range[1] instanceof Date) {\n                                range[1] = range[1].getTime();\n                            }\n\n                            if (currentInterval && ((range[1] - currentInterval.interval) >= range[0])) {\n                                $scope.rangeConfig.dateWindow = [new Date(range[1] - currentInterval.interval), range[1]];\n                                $scope.currentChart.updateOptions($scope.rangeConfig);\n                                $scope.currentIntervalChoosed = currentInterval;\n                            }\n                        } else {\n                            $scope.currentIntervalChoosed = currentInterval;\n                        }\n                    });\n                } else if (newValue && newValue.start && newValue.end) {\n                    // need to change start and end\n                    $timeout(function () {\n                        var currentInterval = {name: \"\", interval: newValue.end - newValue.start};\n                        if ($scope.currentChart[\"xAxisZoomRange\"]) {\n                            var range = $scope.currentChart[\"xAxisZoomRange\"];\n                            if (range[0] instanceof Date) {\n                                range[0] = range[0].getTime();\n                            }\n                            if (range[1] instanceof Date) {\n                                range[1] = range[1].getTime();\n                            }\n                            // if (currentInterval && range[0] <= newValue.start && range[1] >= newValue.end) {\n                            $scope.rangeConfig.dateWindow = [new Date(newValue.start), new Date(newValue.end)];\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentIntervalChoosed = currentInterval;\n                            // }\n                        } else {\n                            $scope.currentIntervalChoosed = currentInterval;\n                        }\n\n\n                    });\n\n\n                }\n            });\n\n        }\n    });\n\n\n    // default data-time intervals\n    $scope.dateTimeIntervals = [{name: \"5 minutes\", interval: 300000}, {\n        name: \"1 hour\",\n        interval: 3600000\n    }, {name: \"1 day\", interval: 86400000}, {name: \"1 week\", interval: 604800017}, {\n        name: \"1 month\",\n        interval: 2629800000\n    }, {name: \"1 year\", interval: 31557600000}];\n\n\n    var download_image = function (dataurl, name) {\n        var link = document.createElement(\"a\");\n        link.download = name;\n        link.href = dataurl;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    $scope.export_img = function () {\n        // export canvas\n        var canvas = Dygraph.Export.asCanvas($scope.currentChart, {\"series\": $scope.currentChart.attributes_.series_});\n        download_image(canvas.toDataURL(), $scope.currentIntervalName + \".png\");\n    };\n\n\n    var download_data = function (content, fileName, mimeType) {\n        var a = document.createElement('a');\n        mimeType = mimeType || 'application/octet-stream';\n\n        if (navigator.msSaveBlob) { // IE10\n            navigator.msSaveBlob(new Blob([content], {\n                type: mimeType\n            }), fileName);\n        } else if (URL && 'download' in a) { //html5 A[download]\n            a.href = URL.createObjectURL(new Blob([content], {\n                type: mimeType\n            }));\n            a.setAttribute('download', fileName);\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n        } else {\n            location.href = 'data:application/octet-stream,' + encodeURIComponent(content); // only this mime type is supported\n        }\n    };\n\n\n    $scope.export_data = function () {\n\n        // columns\n        var labels = $scope.currentChart.getLabels();\n\n        var columns = [$scope.currentIntervalName];\n\n        var csvContent = $scope.currentIntervalName;\n        angular$1.forEach(labels, function (label, index) {\n            if (label !== \"x\" && label != \"span_y1\" && label != \"span_y2\") {\n                columns.push(index);\n                csvContent += \",\" + label;\n            }\n        });\n\n        csvContent += \"\\n\";\n\n        var result = [];\n\n        var datewindow = $scope.currentChart.dateWindow_;\n\n        if ($scope.currentChart.dateWindow_[0] instanceof Date && $scope.currentChart.dateWindow_[1] instanceof Date) {\n            datewindow[0] = $scope.currentChart.dateWindow_[0].getTime();\n            datewindow[1] = $scope.currentChart.dateWindow_[1].getTime();\n        }\n\n        // add title\n        angular$1.forEach($scope.currentChart.rawData_, function (data) {\n\n            if (data[0] >= datewindow[0] && data[0] <= datewindow[1]) {\n                result.push(data);\n            }\n        });\n\n        result.forEach(function (infoArray, index) {\n            var tempArray = [].concat(infoArray[0]);\n            angular$1.forEach(infoArray, function (data, index) {\n                if (columns.includes(index)) {\n                    tempArray.push(data);\n                }\n            });\n            var dataString = tempArray.join(',');\n            csvContent += index < result.length ? dataString + '\\n' : dataString;\n        });\n\n\n        download_data(csvContent, $scope.auto_device_name + '_' + new Date() + '.csv', 'text/csv;encoding:utf-8');\n    };\n\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n                if (widgetData.data.metadata.data.basic.ranges) {\n                    if (widgetData.data.metadata.data.basic.hasOwnProperty(\"ranges\")) {\n                        $scope.dateTimeIntervals = widgetData.data.metadata.data.basic.ranges;\n                        angular$1.forEach($scope.dateTimeIntervals, function (range) {\n                            range[\"interval\"] = range.value;\n                            if (range.checked == true) {\n                                $scope.currentIntervalChoosed = range;\n                            }\n                        });\n                    }\n                } else {\n                    $scope.currentIntervalChoosed = $scope.dateTimeIntervals[1];\n                }\n\n\n                //\n\n\n            }\n        }\n    });\n\n\n    var darkenColor = function (colorStr) {\n        // Defined in dygraph-utils.js\n        var color = Dygraph.toRGB_(colorStr);\n        color.r = Math.floor((255 + color.r) / 2);\n        color.g = Math.floor((255 + color.g) / 2);\n        color.b = Math.floor((255 + color.b) / 2);\n        return 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n    };\n\n\n    var barChartMultiColumnBarPlotter = function (e) {\n        // We need to handle all the series simultaneously.\n        if (e.seriesIndex !== 0) return;\n\n        var g = e.dygraph;\n        var ctx = e.drawingContext;\n        var sets = e.allSeriesPoints;\n        var y_bottom = e.dygraph.toDomYCoord(0);\n        var series = e.dygraph.attributes_.series_;\n\n        // Find the minimum separation between x-values.\n        // This determines the bar width.\n        var newSets = [];\n        var min_sep = Infinity;\n        for (var j = 0; j < sets.length; j++) {\n            if (sets[j] && sets[j].length > 0 && series[sets[j][0].name].options.plotter && \"barChartMultiColumnBarPlotter\" == series[sets[j][0].name].options.plotter.name) {\n                var points = sets[j];\n                for (var i = 1; i < points.length; i++) {\n                    var sep = points[i].canvasx - points[i - 1].canvasx;\n                    if (sep < min_sep) min_sep = sep;\n                }\n                newSets.push(sets[j]);\n            }\n\n        }\n        var bar_width = Math.floor(2.0 / 3 * min_sep);\n\n        var fillColors = [];\n        var strokeColors = g.getColors();\n        for (var i = 0; i < strokeColors.length; i++) {\n            fillColors.push(darkenColor(strokeColors[i]));\n        }\n\n        for (var j = 0; j < newSets.length; j++) {\n            ctx.fillStyle = fillColors[j];\n            ctx.strokeStyle = strokeColors[j];\n            for (var i = 0; i < newSets[j].length; i++) {\n                var p = newSets[j][i];\n                var center_x = p.canvasx;\n                // var x_left = center_x - (bar_width / 2) * (1 - j / (newSets.length - 1));\n                var x_left = center_x - (bar_width / 2) + (bar_width / newSets.length) * j;\n                ctx.fillRect(x_left, p.canvasy,\n                    bar_width / newSets.length - 1, y_bottom - p.canvasy);\n\n                ctx.strokeRect(x_left, p.canvasy,\n                    bar_width / newSets.length - 1, y_bottom - p.canvasy);\n            }\n\n        }\n    };\n\n\n    var stackedBarPlotter = function (e) {\n        var ctx = e.drawingContext;\n        var points = e.points;\n        var y_bottom = e.dygraph.toDomYCoord(0);\n\n        ctx.fillStyle = darkenColor(e.color);\n\n        // Find the minimum separation between x-values.\n        // This determines the bar width.\n        var min_sep = Infinity;\n        for (var i = 1; i < points.length; i++) {\n            var sep = points[i].canvasx - points[i - 1].canvasx;\n            if (sep < min_sep) min_sep = sep;\n        }\n        var bar_width = Math.floor(2.0 / 3 * min_sep);\n\n        // Do the actual plotting.\n        for (var i = 0; i < points.length; i++) {\n            var p = points[i];\n            var center_x = p.canvasx;\n\n            ctx.fillRect(center_x - bar_width / 2, p.canvasy,\n                bar_width, y_bottom - p.canvasy);\n\n            ctx.strokeRect(center_x - bar_width / 2, p.canvasy,\n                bar_width, y_bottom - p.canvasy);\n        }\n    };\n\n\n    var barChartPlotter = function (e) {\n        var ctx = e.drawingContext;\n        var points = e.points;\n        var y_bottom = e.dygraph.toDomYCoord(0);\n\n        ctx.fillStyle = darkenColor(e.color);\n\n        // Find the minimum separation between x-values.\n        // This determines the bar width.\n        var min_sep = Infinity;\n        for (var i = 1; i < points.length; i++) {\n            var sep = points[i].canvasx - points[i - 1].canvasx;\n            if (sep < min_sep) min_sep = sep;\n        }\n        var bar_width = Math.floor(2.0 / 3 * min_sep);\n\n        // Do the actual plotting.\n        for (var i = 0; i < points.length; i++) {\n            var p = points[i];\n            var center_x = p.canvasx;\n\n            ctx.fillRect(center_x - bar_width / 2, p.canvasy,\n                bar_width, y_bottom - p.canvasy);\n\n            ctx.strokeRect(center_x - bar_width / 2, p.canvasy,\n                bar_width, y_bottom - p.canvasy);\n        }\n    };\n\n\n    $scope.changeInterval = function (interval) {\n\n        var range = $scope.currentChart[\"xAxisZoomRange\"];\n\n        if (range[0] instanceof Date) {\n            range[0] = range[0].getTime();\n        }\n\n        if (range[1] instanceof Date) {\n            range[1] = range[1].getTime();\n        }\n\n        if (interval && ((range[1] - interval.interval) >= range[0])) {\n            $scope.rangeConfig.dateWindow = [new Date(range[1] - interval.interval), range[1]];\n            $scope.currentChart.updateOptions($scope.rangeConfig);\n            $scope.currentIntervalChoosed = interval;\n        }\n    };\n\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.loadingShow = false;\n\n        $scope.intevals = {device: []};\n\n\n        // update chart\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if (widgetData.data.metadata.css) {\n            $scope.css = widgetData.data.metadata.css;\n        }\n\n        // get start and end from url\n        var begin_path = $stateParams.begin;\n        var end_path = $stateParams.end;\n        var init_flag = false;\n\n\n        //fix interval\n        $scope.fixInterval = false;\n        var noneFixed = [];\n        $scope.fixGraphWithGap = function () {\n            if ($scope.currentChart && $scope.fixInterval) {\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function (item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({file: fixed});\n                }\n            } else if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                $scope.currentChart.updateOptions({file: noneFixed});\n            }\n\n        };\n\n\n        $scope.showOrHideDevice = function (device) {\n            angular$1.forEach($scope.childrenDevices, function (item, index) {\n                if (item.name === device.name) {\n                    var graph = $scope.currentChart;\n\n                    if (device.show == true) {\n                        graph.setVisibility(index, false);\n                        device.show = false;\n                    } else {\n                        graph.setVisibility(index, true);\n                        device.show = true;\n                    }\n\n                }\n            });\n        };\n\n        $scope.fixGraphWithGap_click = function () {\n            if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function (item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({file: fixed});\n                }\n            } else if ($scope.currentChart && $scope.fixInterval) {\n                $scope.currentChart.updateOptions({file: noneFixed});\n            }\n\n        };\n\n\n        metadata = widgetData.data.metadata;\n        $scope.basicInfo = metadata.data.basic;\n        $scope.currentView = 0; // -1 is device view and 1 is scatter view\n\n        if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.scatter) {\n            $scope.currentView = 1;\n        } else {\n            $scope.currentView = -1;\n        }\n\n\n        $scope.device_name = \"\";\n\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.data_from = \"application\";\n\n        $scope.checkY2Btns = function () {\n            return $scope.basicInfo.zoom === true && $scope.showY2Btns === true;\n        };\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            $scope.auto_schema = metadata.data.source.store;\n            $scope.auto_metadata = metadata;\n            $scope.auto_device_name = deviceData.device.name;\n\n            // add a timer just make sure the user is not playing with the button.\n\n            var viewTimer = null;\n\n            $scope.$watch('currentView', function (nObj, oObj) {\n                // change\n                if (viewTimer != null) {\n                    $timeout.cancel(viewTimer);\n                    // create new one\n                    viewTimer = $timeout(function () {\n                        changeViewFunc(nObj, oObj);\n                    }, 500);\n                } else {\n                    viewTimer = $timeout(function () {\n                        changeViewFunc(nObj, oObj);\n                    }, 500);\n                }\n                $scope.fixInterval = false;\n\n            });\n\n            var changeViewFunc = function (nObj, oObj) {\n                if (nObj == -1) {\n                    $scope.autoupdate = true;\n                    var rangeLevel = null;\n                    var otherLevels = [];\n                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                        if (level.rows.length > 0) {\n                            if (rangeLevel != null) {\n                                otherLevels.push(rangeLevel);\n                            }\n                            rangeLevel = level.name;\n                        }\n                    });\n                    if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                        // show device view\n                        var fields = [];\n                        var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                        angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                            if (level.rows.length > 0 && level.name === rangeLevel) {\n                                var lines = level.rows;\n                                if (lines) {\n                                    angular$1.forEach(lines, function (line) {\n                                        if (line.value) {\n                                            var columns = (line.value).match(patt);\n                                            angular$1.forEach(columns, function (column) {\n                                                if (column.startsWith('data.')) {\n                                                    fields.push(column.replace('data.', ''));\n                                                }\n                                            });\n                                        }\n                                    });\n                                }\n                            }\n                        });\n                        $scope.auto_fields = fields;\n                        $scope.loadingShow = true;\n                        dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function (data) {\n                            initChart(data);\n                        }, function (error) {\n                            console.error(error);\n                        });\n                    }\n\n                } else {\n                    $scope.autoupdate = false;\n                    //get relation config\n                    if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                        return;\n                    } else {\n                        var rangeLevel = null;\n                        var otherLevels = [];\n                        angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                            if (level.rows.length > 0) {\n                                if (rangeLevel != null) {\n                                    otherLevels.push(rangeLevel);\n                                }\n                                rangeLevel = level.name;\n                            }\n                        });\n                        if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                            angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                if (level.rows.length > 0 && level.name === rangeLevel) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function (line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function (column) {\n                                                    if (column.startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n                            $scope.auto_fields = fields;\n                            // show children view\n                            $scope.loadingShow = true;\n                            dataService.childrenDeviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, metadata.data.source.relation, metadata.data.source.relation_group, rangeLevel, otherLevels, fields).then(function (data) {\n                                // get all device trees\n                                if (data != null && data.length > 0) {\n                                    initChildrenChart(data);\n                                } else {\n                                    return;\n                                }\n\n                            }, function (error) {\n                                console.error(error);\n                            });\n\n                        }\n                    }\n                }\n            };\n\n\n            // first time of showing chart\n            $scope.$watch('currentChart', function (newValue) {\n                if (newValue) {\n                    //device first level\n                    var rangeLevel = null;\n                    var otherLevels = [];\n                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                        if (level.rows.length > 0) {\n                            if (rangeLevel != null) {\n                                otherLevels.push(rangeLevel);\n                            }\n                            rangeLevel = level.name;\n                        }\n                    });\n\n                    // fields of range level\n                    var fields = [];\n                    var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                        if (level.rows.length > 0 && level.name === rangeLevel) {\n                            var lines = level.rows;\n                            if (lines) {\n                                angular$1.forEach(lines, function (line) {\n                                    //\n                                    if (line.value) {\n                                        var columns = (line.value).match(patt);\n                                        angular$1.forEach(columns, function (column) {\n                                            if ((column).startsWith('data.')) {\n                                                fields.push(column.replace('data.', ''));\n                                            }\n                                        });\n                                    }\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.auto_fields = fields;\n                    //send a rest request\n                    $scope.loadingShow = true;\n                    dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function (data) {\n                        initChart(data);\n                    }, function (error) {\n                        console.error(error);\n                    });\n                }\n            });\n            $scope.$watch(\"chartDateTime\", function (newValue, oldValue) {\n                if (newValue.begin != null && newValue.end != null) {\n                    var expect_points = Math.floor($element.parent().width());\n                    // find a interval\n                    var expectedInterval = (newValue.end - newValue.begin) / expect_points;\n                    var conf = $scope.intevals.device;\n                    // device detail view\n                    var preOne = conf[0].interval;\n                    var lastOne = conf[conf.length - 1].interval;\n\n                    // get the max\n                    var expects = {interval: null, points: 0, name: \"\"};\n                    angular$1.forEach(conf, function (config) {\n                        if (((newValue.end - newValue.begin) / config.interval) <= expect_points) {\n                            if (expects.points < ((newValue.end - newValue.begin) / config.interval)) {\n                                expects.interval = config.interval;\n                                expects.points = ((newValue.end - newValue.begin) / config.interval);\n                                expects.name = config.name;\n                            }\n                        }\n                    });\n\n                    var cin = \"\";\n                    if (expects.interval == preOne) {\n                        expectedInterval = preOne;\n                        $scope.autoupdate = false;\n                    } else if (expects.interval == lastOne) {\n                        expectedInterval = lastOne;\n                        if ($scope.currentView == -1) {\n                            $scope.autoupdate = true;\n                            $scope.auto_store = conf[conf.length - 1].name;\n                        }\n                    } else {\n                        $scope.autoupdate = false;\n                        cin = expects.name;\n                        expectedInterval = expects.interval;\n                    }\n\n\n                    $scope.currentIntervalName = \"\";\n\n                    angular$1.forEach(conf, function (config) {\n                        if (config.interval == expectedInterval) {\n                            $scope.currentIntervalName = config.name;\n                        }\n                    });\n\n                    // check the interval(raw data) no more than 1000 points\n                    if (expectedInterval == lastOne) {\n                        //\n                        if (((newValue.end - newValue.begin) / expectedInterval) > expect_points) {\n                            // reset range bar\n                            $scope.rangeConfig.dateWindow = [new Date(newValue.end - (expect_points - 1) * expectedInterval), new Date(newValue.end)];\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n\n                            $scope.alertMessage = \"Limit the number of \\\"Zoom-Out\\\" points to \" + expect_points * 2 + \".\";\n                            $timeout(function () {\n                                $scope.alertMessage = null;\n                            }, 5000);\n\n                            return;\n                        }\n\n                    }\n\n                    // update range-bar\n                    if ($scope.rangeSelectorBar) {\n                        angular$1.forEach($scope.trees, function (tree) {\n                            if (tree.range == true) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                    if (level.rows.length > 0 && level.name === tree.store) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function (line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function (column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n\n                                                }\n\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                $scope.loadingShow = true;\n                                dataService.deviceStoreData($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, newValue.begin, newValue.end, fields).then(function (data) {\n                                        // udpate chart\n                                        var showData = [];\n                                        angular$1.forEach(data, function (arr) {\n                                            Array.prototype.push.apply(showData, arr.data.slice(0, arr.size));\n                                        });\n                                        showData = showData.filter(function (obj) {\n                                            return obj != null;\n                                        });\n\n                                        // update range bar\n                                        var basicInfo = $scope.basicInfo;\n                                        var allLines = [];\n                                        angular$1.forEach(showData, function (line) {\n                                            allLines.push([new Date(line.timestamp)]);\n                                        });\n                                        var series_range = {'l0': {axis: 'y1'}};\n\n                                        var rangeBarLabels = [];\n                                        for (var i = 0; i < fields.length; i++) {\n                                            rangeBarLabels.push(fields[i]);\n\n                                            var f = new Function(\"data\", \"with(data) { if(data.\" + fields[i] + \"!=null)return data.\" + fields[i] + \";return null;}\");\n                                            // add value\n                                            var counter = 0;\n                                            angular$1.forEach(allLines, function (realLine) {\n                                                try {\n                                                    var value = f(showData[counter]);\n                                                    realLine.push(value);\n                                                } catch (ex) {\n                                                    realLine.push(null);\n                                                }\n                                                counter++;\n                                            });\n                                        }\n                                        //\n\n                                        if ($scope.rangeConfig && $scope.rangeConfig.file && $scope.rangeConfig.file != null) {\n                                            var objNeed2Add = [];\n                                            angular$1.forEach($scope.rangeConfig.file, function (item) {\n                                                var flag = false;\n                                                var dataLength = -1;\n                                                angular$1.forEach(allLines, function (line) {\n                                                    dataLength = line.length;\n                                                    if (line.length > 0 && line[0].getTime() === item[0].getTime()) {\n                                                        flag = true;\n                                                    } else if (line.length === 0) {\n                                                        flag = true;\n                                                    } else {\n                                                        dataLength = line.length;\n                                                    }\n\n                                                });\n                                                if (!flag) {\n                                                    var tempObj = [];\n                                                    for (var i = 0; i < dataLength; i++) {\n                                                        tempObj[i] = item[i];\n                                                    }\n                                                    objNeed2Add.push(tempObj);\n                                                }\n                                            });\n                                        }\n                                        allLines = allLines.concat(objNeed2Add);\n                                        allLines.sort(function (a, b) {\n                                            return a[0] > b[0] ? 1 : -1;\n                                        });\n                                        if ($scope.showY2Btns) {\n                                            //noinspection JSDuplicatedDeclaration\n                                            if ($scope.rangeConfig.axes && !$scope.rangeConfig.axes.hasOwnProperty(\"y2\")) {\n                                                series_range = {\n                                                    'l0': {axis: 'y1'},\n                                                    'l0': {axis: 'y2'}\n                                                };\n                                                $scope.rangeSeries = series_range;\n                                                $scope.rangeConfig = {\n                                                    'file': allLines,\n                                                    'labels': ['x'].concat(rangeBarLabels),\n                                                    'series': series_range\n                                                };\n                                                if (basicInfo && basicInfo.range_show) {\n                                                    $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                                }\n                                            }\n\n                                        } else {\n                                            series_range[\"span_y2\"] = {axis: 'y2'};\n                                            $scope.rangeSeries = series_range;\n                                            var newLines = [];\n                                            angular$1.copy(allLines, newLines);\n                                            angular$1.forEach(newLines, function (line) {\n                                                line.push(NaN);\n                                            });\n                                            $scope.rangeConfig = {\n                                                'file': newLines,\n                                                'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                                'series': series_range\n                                            };\n                                            if (basicInfo && basicInfo.range_show) {\n                                                $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                            }\n                                        }\n                                    },\n                                    function (data) {\n                                        console.info(data);\n                                    }\n                                );\n                            }\n                        });\n                    }\n\n\n                    $scope.loadingShow = true;\n                    if ($scope.currentView == 1) {\n                        // scatter detail view\n\n                        $scope.legendText = null;\n                        var deviceInfo = [];\n                        var currentStore = \"\";\n\n                        $scope.childrenDevices = [];\n\n                        // has problem....\n                        angular$1.forEach($scope.childTrees, function (device) {\n                            angular$1.forEach(device.trees, function (tree, index) {\n                                if (expectedInterval == tree.frequency) {\n                                    currentStore = tree.store;\n                                    deviceInfo.push({name: device.name, device: device, tree: tree.tree});\n                                    device[\"show\"] = true;\n                                    $scope.childrenDevices.push(device);\n                                }\n                            });\n                        });\n\n                        var fields = [];\n                        var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                        angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                            if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                var lines = level.rows;\n                                if (lines) {\n                                    angular$1.forEach(lines, function (line) {\n                                        if (line.value) {\n                                            var columns = (line.value).match(patt);\n                                            angular$1.forEach(columns, function (column) {\n                                                if (column && (column).startsWith('data.')) {\n                                                    fields.push(column.replace('data.', ''));\n                                                }\n                                            });\n                                        }\n                                    });\n                                }\n                            }\n                        });\n\n                        $scope.auto_fields = fields;\n                        $scope.loadingShow = true;\n                        dataService.devicesStoreData($rootScope.host, $rootScope.applicationName, deviceInfo, metadata.data.source.store, currentStore, newValue.begin, newValue.end, fields).then(function (data) {\n                            var showData = [];\n                            angular$1.forEach(data, function (arr) {\n                                var deviceData = [];\n                                angular$1.forEach(arr.data, function (bucket) {\n                                    if (bucket.data != null) {\n                                        Array.prototype.push.apply(deviceData, bucket.data.slice(0, bucket.size));\n                                    }\n                                });\n\n                                var currentDeviceInfo = {};\n                                angular$1.forEach(deviceInfo, function (device) {\n                                    if (device.name == arr.device) {\n                                        currentDeviceInfo = device;\n                                    }\n\n                                });\n                                showData.push({\n                                    device: arr.device,\n                                    extension: currentDeviceInfo,\n                                    data: deviceData\n                                });\n                            });\n                            //get configuration\n                            updateChildrenDetailChart(metadata, currentStore, $scope.rangeChildrenData, showData);\n\n                        }, function (data) {\n                            console.info(data);\n                        });\n\n                        $scope.fixGraphWithGap();\n                    } else {\n                        // cal tree\n                        angular$1.forEach($scope.trees, function (tree, index) {\n                            if (expectedInterval == tree.frequency) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                    if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function (line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function (column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n\n                                                }\n\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                $scope.loadingShow = true;\n                                dataService.deviceStoreData($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, newValue.begin, newValue.end, fields).then(function (data) {\n                                    // udpate chart\n                                    var showData = [];\n                                    angular$1.forEach(data, function (arr) {\n                                        Array.prototype.push.apply(showData, arr.data.slice(0, arr.size));\n                                    });\n                                    showData = showData.filter(function (obj) {\n                                        return obj != null;\n                                    });\n                                    showData.sort(function (a, b) {\n                                        return a.timestamp > b.timestamp ? 1 : -1;\n                                    });\n                                    //get configuration\n                                    updateDetailChart(metadata, tree.store, $scope.rangeData, showData);\n\n                                    // tell some other widgets, the graph is changed.\n                                    $timeout(function () {\n                                        $rootScope.$broadcast('chartDataChangeEvent', {\n                                            'id': element_id,\n                                            'group': 'device',\n                                            'data': {\n                                                'collection': tree.store,\n                                                'group': 'device',\n                                                'data': showData\n                                            }\n                                        });\n                                    });\n\n                                }, function (data) {\n                                    console.info(data);\n                                });\n                            }\n                        });\n\n                        $scope.fixGraphWithGap();\n                    }\n                    $scope.status = false;\n                }\n            });\n\n        });\n\n\n        var fetchData = function (values, node) {\n            if (node.children[0] != null) {\n                fetchData(values, node.children[0]);\n            }\n\n            if (node.children[1] != null) {\n                fetchData(values, node.children[1]);\n            }\n\n            if (node.children[0] == null && node.children[1] == null) {\n                if (node.data != null && node.data.array) {\n                    Array.prototype.push.apply(values, node.data.array.slice(0, node.data.size));\n                } else if (node.data != null) {\n                    Array.prototype.push.apply(values, node.data.slice(0, node.data.length));\n                }\n\n            }\n\n        };\n\n\n        $scope.trees = [];\n        $scope.rangeData = [];\n\n        $scope.ordinalRangeData = [];\n\n        var initChart = function (data) {\n            $scope.intevalforshow = [];\n            //\n            $scope.intevals.device = [];\n            var trees = data.trees;\n            $scope.trees = trees;\n            var rangeTree = null;\n            angular$1.forEach(trees, function (tree) {\n                if (tree.range) {\n                    rangeTree = tree;\n                }\n                $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n            });\n\n\n            // init chart with range data\n            var store = rangeTree.store;\n\n            // get all data\n            var allData = [];\n            // fetchData(allData, rangeTree.tree);only get first and last\n            if (rangeTree.first.timestamp == rangeTree.last.timestamp) {\n                allData = allData.concat([rangeTree.first]);\n            } else {\n                allData = allData.concat([rangeTree.first, rangeTree.last]);\n            }\n\n            allData = allData.filter(function (obj) {\n                return obj != null;\n            });\n\n            allData.sort(function (a, b) {\n                return a.timestamp > b.timestamp ? 1 : -1;\n            });\n\n\n            if ($scope.trees.length == 0 || allData.length == 0) {\n                $scope.emptyDataShow = true;\n                return;\n            }\n\n            // if the data only has one point. change the data range to bigger\n            if (allData.length == 1) { //  means only one point.\n                var newData = [];\n                // add 1 points into both side\n                var thePoint = allData[0];\n                var timestamp = thePoint.timestamp;\n                var currentInterval = $scope.intevals.device[0].interval;\n                newData.push({timestamp: timestamp - currentInterval});\n                Array.prototype.push.apply(newData, allData);\n                newData.push({timestamp: timestamp + currentInterval});\n                allData = newData;\n            }\n            $scope.ordinalRangeData = allData;\n            // get configuration and make real data\n            updateChart(metadata, store, allData);\n        };\n\n        var initChildrenChart = function (deviceDatas) {\n            var devicesInfo = {};\n            $scope.intevals.device = [];\n            //range data with all device\n            $scope.childTrees = [];\n            $scope.childrenDevices = [];\n\n            angular$1.forEach(deviceDatas, function (deviceData) {\n                var device = deviceData.device;\n                device[\"show\"] = true;\n                $scope.childrenDevices.push(device);\n                var trees = deviceData.trees;\n                $scope.childTrees.push({name: device.name, device: device, trees: trees});\n                var rangeTree = null;\n                angular$1.forEach(trees, function (tree) {\n                    if (tree.range) {\n                        rangeTree = tree;\n                    }\n\n                    var flag = false;\n                    angular$1.forEach($scope.intevals.device, function (interval) {\n                        if (interval.name == tree.store && interval.interval == tree.frequency) {\n                            // has same one\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n                    }\n\n                });\n\n                if (rangeTree != null) {\n                    var deviceObj = devicesInfo[device.name] = {};\n                    // get all data\n                    var allData = [];\n                    // fetchData(allData, rangeTree.tree);\n                    if (rangeTree.first.timestamp == rangeTree.last.timestamp) {\n                        allData = allData.concat([rangeTree.first]);\n                    } else {\n                        allData = allData.concat([rangeTree.first, rangeTree.last]);\n                    }\n\n                    allData = allData.filter(function (obj) {\n                        return obj != null;\n                    });\n                    allData.sort(function (a, b) {\n                        return a.timestamp > b.timestamp ? 1 : -1;\n                    });\n                    //\n                    deviceObj[\"range\"] = rangeTree;\n                    deviceObj[\"data\"] = allData;\n                    deviceObj[\"device\"] = device;\n                } else {\n                    console.info(device.name + \" has none data.\");\n                }\n\n            });\n\n            updateChildrenChart(metadata, devicesInfo);\n        };\n\n\n        var updateChildrenChart = function (metadata, devicesInfo) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n            var allLines = [];\n            var allXLabels = [];\n            angular$1.forEach(devicesInfo, function (device, key) {\n                angular$1.forEach(device.data, function (item) {\n                    var flag = false;\n                    angular$1.forEach(allXLabels, function (label) {\n                        if (label.getTime() == item.timestamp) {\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        allXLabels.push(new Date(item.timestamp));\n                    }\n\n\n                });\n            });\n            // order\n            allXLabels.sort(function (a, b) {\n                return a > b ? 1 : -1;\n            });\n\n            // make all line\n            angular$1.forEach(allXLabels, function (label) {\n                allLines.push([label]);\n            });\n\n\n            var yRange = {min: null, max: null};\n            var showY2axis = false;\n            var counter = 0;\n\n\n            angular$1.forEach(devicesInfo, function (device, key) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                angular$1.forEach(collections, function (collection) {\n                    if (collection.name == device.range.store) {\n                        $scope.currentIntervalName = device.range.store;\n                        var originalData = device.data;\n\n                        // always same for each device\n                        if (collection.rows[0].yaxis == 0) {\n                            if (collection.rows[0].type == 'line') {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y1',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            } else if (collection.rows[0].type == 'bar') {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y1',\n                                    'plotter': barChartMultiColumnBarPlotter\n                                };\n                            } else {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y1',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            }\n\n                        } else {\n                            series[collection.rows[0].label] = {'axis': 'y2'};\n\n                            if (collection.rows[0].type == 'line') {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y2',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            } else if (collection.rows[0].type == 'bar') {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y2',\n                                    'plotter': barChartMultiColumnBarPlotter\n                                };\n                            } else {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y2',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            }\n\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n\n                        if (collection.rows[0].legend_label) {\n                            labels.push(device.device[collection.rows[0].legend_label]);\n                        } else {\n                            labels.push(key);\n                        }\n\n\n                        // make a line\n                        var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                        // add value\n                        angular$1.forEach(allLines, function (realLine, index) {\n\n                            var flag = false;\n                            angular$1.forEach(originalData, function (odata) {\n                                if (realLine[0].getTime() == odata.timestamp) {\n                                    try {\n                                        var value = f(odata);\n                                        realLine.push(value);\n                                        if (yRange.min == null) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max == null) {\n                                            yRange.max = value;\n                                        }\n\n                                        if (yRange.min > value) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max < value) {\n                                            yRange.max = value;\n                                        }\n                                    } catch (ex) {\n                                        realLine.push(null);\n                                    }\n                                    flag = true;\n                                }\n                            });\n\n                            if (!flag) {\n                                realLine.push(null);\n                            }\n                        });\n\n\n                    }\n                });\n            });\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n            //update chart\n            if ($scope.currentChart) {\n                $scope.rangeChildrenData = allLines;\n\n                if (showY2axis) {\n                    $scope.childrenRangeConfig = {\n                        'labelsKMB': true,\n                        'file': allLines,\n                        legend: 'never',\n                        labelsKMB: true,\n                        labelsSeparateLines: false,\n                        // data formate\n                        labels: ['x'].concat(sampleData.labels),\n                        highlightSeriesOpts: {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        'labels': ['x'].concat(labels),\n                        'ylabel': leftAndRight.left,\n                        'y2label': leftAndRight.right,\n                        'series': series,\n                        'colors': colors,\n                        highlightCallback: function (e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            $scope.currentHighlight = seriesName;\n                            angular$1.forEach(series, function (value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {x: 0, y: 0};\n                            angular$1.forEach(pts, function (item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function (point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n\n                            $scope.$apply(function () {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n\n\n                        },\n\n                        unhighlightCallback: function (e) {\n                            $scope.currentHighlight = \"\";\n                            $scope.$apply(function () {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'axes': {\n                            'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                            'y2': {}\n                        }\n                        // showRangeSelector: true\n                    };\n                } else {\n                    $scope.showY2Btns = false;\n                    var newLines = [];\n                    angular$1.copy(allLines, newLines);\n                    angular$1.forEach(newLines, function (line) {\n                        line.push(NaN);\n                    });\n                    series[\"span_y2\"] = {'axis': 'y2'};\n                    $scope.childrenRangeConfig = {\n                        'drawGapEdgePoints': true,\n                        'pointSize': 3,\n                        'legend': 'never',\n                        'labelsKMB': true,\n                        'file': newLines,\n                        'labelsSeparateLines': false,\n                        'highlightSeriesOpts': {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        highlightCallback: function (e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            $scope.currentHighlight = seriesName;\n                            angular$1.forEach(series, function (value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {x: 0, y: 0};\n                            angular$1.forEach(pts, function (item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function (point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n                            $scope.$apply(function () {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n                        },\n\n                        unhighlightCallback: function (e) {\n                            $scope.currentHighlight = \"\";\n                            $scope.$apply(function () {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                        'ylabel': leftAndRight.left,\n                        'y2label': \"\",\n                        'series': series,\n                        'colors': colors,\n                        'axes': {\n                            'y': {valueRange: [yRange.min, yRange.max]},\n                            'y2': {\n                                axisLabelFormatter: function (d) {\n                                    return '';\n                                }\n                            }\n                        }\n                        // showRangeSelector: true\n                    };\n                }\n\n\n                if ($scope.chartDateWindow && $scope.rangeSelectorBar && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                    // keep the current range bar refresh once.\n                    // make sure the begin != end\n                    $scope.chartDateTime = {\n                        begin: $scope.chartDateTime.begin,\n                        end: $scope.chartDateTime.end\n                    };\n                    $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                } else if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != $scope.chartDateWindow[1]) && !$scope.rangeSelectorBar && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                    $scope.chartDateTime = {\n                        begin: $scope.chartDateTime.begin,\n                        end: $scope.chartDateTime.end\n                    };\n                    $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                    $scope.currentChart.updateOptions({dateWindow: $scope.chartDateWindow});\n                } else {\n                    $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                    if (begin_path && end_path && !init_flag) {\n                        // $scope.chartDateTime = {\n                        // \"begin\": new Date(new Number(begin_path)),\n                        // \"end\": new Date(new Number(end_path))\n                        // };\n                        $scope.chartDateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                        $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                        init_flag = true;\n                    } else {\n                        if ($scope.currentIntervalChoosed && ((allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= allLines[0][0].getTime())) {\n                            $scope.rangeConfig.dateWindow = [new Date(allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval), allLines[allLines.length - 1][0]];\n                        } else {\n                            $scope.chartDateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            $scope.rangeConfig.dateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                        }\n                    }\n                    $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n                    $scope.currentChartOptions = $scope.childrenRangeConfig;\n                }\n                updateInteraction();\n                // //\n                // $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n                // //  keep the same time window and refersh\n                // $scope.chartDateTime = {begin: $scope.chartDateTime.begin, end: $scope.chartDateTime.end};\n                // $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                $scope.loadingShow = false;\n            }\n\n\n        };\n\n\n        var updateChildrenDetailChart = function (metadata, store, rangeData, allData) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var newLines = [];\n            var newTime = [];\n            var series = {};\n            var labels = [];\n            var colors = [];\n            var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n            var yRange = {min: null, max: null};\n            var counter = 0;\n            var showY2axis = null;\n            angular$1.forEach(allData, function (device) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                if (device.data.length > 0) {\n\n                    angular$1.forEach(collections, function (collection) {\n                        if (collection.name == store) {\n                            if (collection.rows[0].legend_label) {\n                                labels.push(device.extension.device.device[collection.rows[0].legend_label]);\n                            } else {\n                                labels.push(device.device);\n                            }\n\n                            $scope.currentIntervalName = store;\n                            if (collection.rows[0].yaxis == 0) {\n                                if (collection.rows[0].type == 'line') {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y1',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                } else if (collection.rows[0].type == 'bar') {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y1',\n                                        'plotter': barChartMultiColumnBarPlotter\n                                    };\n                                } else {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y1',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                }\n\n                            } else {\n\n                                if (collection.rows[0].type == 'line') {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y2',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                } else if (collection.rows[0].type == 'bar') {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y2',\n                                        'plotter': barChartMultiColumnBarPlotter\n                                    };\n                                } else {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y2',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                }\n\n                                showY2axis = true;\n                                $scope.showY2Btns = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                            var tempData = [];\n                            var tempTime = [];\n                            // make data\n                            angular$1.forEach(device.data, function (data) {\n                                var dateTime = new Date(data.timestamp);\n                                try {\n                                    var value = f(data);\n                                    tempData.push({timestamp: dateTime, value: value});\n\n                                    if (yRange.min == null) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max == null) {\n                                        yRange.max = value;\n                                    }\n\n                                    if (yRange.min > value) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max < value) {\n                                        yRange.max = value;\n                                    }\n\n                                } catch (e) {\n                                    tempData.push({timestamp: dateTime, value: null});\n                                }\n                                tempTime.push(dateTime.getTime());\n                            });\n                            newTime = newTime.concat(tempTime.filter(function (item) {\n                                return newTime.indexOf(item) < 0;\n                            }));\n                            newLines.push({device: device.device, data: tempData});\n                        }\n                    });\n                }\n            });\n\n            var chartData = [];\n            // time needs sort!!!\n            newTime = newTime.sort();\n            angular$1.forEach(newTime, function (nt) {\n                chartData.push([new Date(nt)]);\n            });\n\n\n            angular$1.forEach(newLines, function (line) {\n                angular$1.forEach(chartData, function (timeTicket) {\n                    // line data\n                    var flag = false;\n                    var lineData = line.data;\n                    for (var i = 0; i < lineData.length; i++) {\n                        if (lineData[i].timestamp.getTime() == timeTicket[0].getTime()) {\n                            timeTicket.push(lineData[i].value);\n                            flag = true;\n                            break;\n                        }\n                    }\n                    if (flag != true) {\n                        // we should use \"NaN\"\n                        timeTicket.push(NaN);\n                    }\n                });\n            });\n\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n\n\n            if (chartData.length == 0) {\n                $scope.currentChart.updateOptions({\n                    'file': []\n                });\n                $scope.loadingShow = false;\n            } else {\n                if ($scope.currentChart) {\n\n                    if (showY2axis) {\n\n                        $scope.currentChartOptions = {\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80}\n                            }\n                        };\n\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function (e, x, pts, row, seriesName) {\n                                var sn = \"\";\n                                $scope.currentHighlight = seriesName;\n                                angular$1.forEach(series, function (value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {x: 0, y: 0};\n                                angular$1.forEach(pts, function (item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function (point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n                                $scope.$apply(function () {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n                            },\n\n                            unhighlightCallback: function (e) {\n                                $scope.currentHighlight = \"\";\n                                $scope.$apply(function () {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80}\n                            }\n                            // showRangeSelector: true\n                        });\n                    } else {\n                        var newLines = [];\n                        $scope.showY2Btns = false;\n                        angular$1.copy(chartData, newLines);\n                        angular$1.forEach(newLines, function (line) {\n                            line.push(NaN);\n                        });\n                        series[\"span_y2\"] = {axis: 'y2'};\n                        $scope.currentChartOptions = {\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                                \"y2\": {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        };\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function (e, x, pts, row, seriesName) {\n\n                                var sn = \"\";\n                                $scope.currentHighlight = seriesName;\n                                angular$1.forEach(series, function (value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {x: 0, y: 0};\n                                angular$1.forEach(pts, function (item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function (point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n\n                                $scope.$apply(function () {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n\n                            },\n\n                            unhighlightCallback: function (e) {\n                                $scope.currentHighlight = \"\";\n                                $scope.$apply(function () {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                                \"y2\": {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    }\n                    $scope.loadingShow = false;\n                }\n            }\n\n\n        };\n\n\n        /**\n         * update detail chart\n         * @param metadata\n         * @param store\n         * @param rangeData\n         * @param allData\n         */\n        var updateDetailChart = function (metadata, store, rangeData, allData) {\n\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{min: null, max: null}, {min: null, max: null}];\n\n\n            angular$1.forEach(collections, function (collection) {\n                if (collection.name == store) {\n                    angular$1.forEach(allData, function (line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    // var yRange = {'min': null, 'max': null};\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function (row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {'axis': 'y1'};\n                            if (row.type == 'line') {\n                                series[row.label] = {'axis': 'y1', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {'axis': 'y1', 'plotter': barChartMultiColumnBarPlotter};\n                            } else {\n                                series[row.label] = {'axis': 'y1', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            }\n                        } else {\n                            series[row.label] = {'axis': 'y2'};\n                            if (row.type == 'line') {\n                                series[row.label] = {'axis': 'y2', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {'axis': 'y2', 'plotter': barChartMultiColumnBarPlotter};\n                            } else {\n                                series[row.label] = {'axis': 'y2', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            }\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function (realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    angular$1.forEach(yRanges, function (yrange) {\n                        if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                            yrange.min = yrange.min - (yrange.min) * 0.10;\n                            yrange.max = yrange.max + (yrange.max) * 0.10;\n                        }\n                    });\n\n\n                    if (allLines.length == 0) {\n\n                        $scope.currentChart.updateOptions({\n                            'file': []\n                        });\n                        if ($scope.rangeSelectorBar) {\n                            $scope.currentChart[\"xAxisZoomRange\"] = $scope.rangeSelectorBar.xAxisExtremes();\n                        }\n\n\n                        $scope.loadingShow = false;\n                    } else {\n                        if ($scope.currentChart) {\n\n                            if (showY2axis) {\n                                $scope.currentChartOptions = {\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    fillGraph: true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    fillGraph: true,\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n\n\n                            } else {\n\n                                var newLines = [];\n                                $scope.showY2Btns = false;\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function (line) {\n                                    line.push(NaN);\n                                });\n\n                                series[\"span-Y2\"] = {axis: 'y2'};\n\n\n                                $scope.currentChartOptions = {\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    fillGraph: true,\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            axisLabelFormatter: function (d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    fillGraph: true,\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            axisLabelFormatter: function (d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n                            }\n\n\n                            $scope.loadingShow = false;\n                        }\n                    }\n\n\n                }\n            });\n\n            // call interactions back\n            if ($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.fetchData) {\n                $scope['interactions'].graphs.fetchData(allData);\n                // check if the last guy is older than the end of the range bar, update graph again\n                if ($scope['interactions'].graphs.dateWindow && !$scope['interactions'].graphs.dateWindow.end) {\n                    var end = null;\n                    if ($scope.chartDateWindow[1] instanceof Date) {\n                        end = $scope.chartDateWindow[1].getTime();\n                    } else {\n                        end = $scope.chartDateWindow[1];\n                    }\n\n                    if (end > allData[allData.length - 1].timestamp) {\n                        // need to move rang bar\n                        $scope.chartDateWindow = [allData[allData.length - 1].timestamp - $scope['interactions'].graphs.dateWindow.start, allData[allData.length - 1].timestamp];\n                        $scope.currentChart.updateOptions({dateWindow: $scope.chartDateWindow});\n                    }\n                }\n\n            }\n\n\n        };\n\n        $scope.autoUpdateChart = updateDetailChart;\n\n        /**\n         * update range chart\n         * @param metadata\n         * @param store\n         * @param allData\n         */\n        var updateChart = function (metadata, store, allData) {\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{min: null, max: null}, {min: null, max: null}];\n            angular$1.forEach(collections, function (collection) {\n                if (collection.name == store) {\n                    $scope.currentIntervalName = store;\n                    angular$1.forEach(allData, function (line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    $scope.rangeSeriesNumber = collection.rows.length;\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function (row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {'axis': 'y1'};\n                            if (row.type == 'line') {\n                                series[row.label] = {'axis': 'y1', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {'axis': 'y1', 'plotter': barChartMultiColumnBarPlotter};\n                            } else {\n                                series[row.label] = {'axis': 'y1', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            }\n                        } else {\n                            series[row.label] = {'axis': 'y2'};\n                            if (row.type == 'line') {\n                                series[row.label] = {'axis': 'y2', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {'axis': 'y2', 'plotter': barChartMultiColumnBarPlotter};\n                            } else {\n                                series[row.label] = {'axis': 'y2', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            }\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function (realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    if ($scope.currentChart) {\n                        $scope.rangeData = allLines;\n                        var basicInfo = $scope.basicInfo;\n                        if (basicInfo && basicInfo.range_show) {\n                            var rangeBarLabels = [];\n                            for (var i = 0; i < labels.length; i++) {\n                                rangeBarLabels.push(\"l\" + i);\n                            }\n                            var series_range = {'l0': {axis: 'y1'}};\n                            if (showY2axis) {\n                                //noinspection JSDuplicatedDeclaration\n                                series_range = {\n                                    'l0': {axis: 'y1'},\n                                    'l0': {axis: 'y2'}\n                                };\n                                $scope.rangeSeries = series_range;\n\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': allLines,\n                                    'labels': ['x'].concat(rangeBarLabels),\n                                    'series': series_range\n                                });\n                            } else {\n                                series_range[\"span_y2\"] = {axis: 'y2'};\n                                $scope.showY2Btns = false;\n                                $scope.rangeSeries = series_range;\n                                var newLines = [];\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function (line) {\n                                    line.push(NaN);\n                                });\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': newLines,\n                                    'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                    'series': series_range\n                                });\n                            }\n\n\n                        }\n\n                        angular$1.forEach(yRanges, function (yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max) * 0.10;\n                            }\n                        });\n\n\n                        // if graph has 2 yAxis or a yAxis\n\n\n                        if (showY2axis) {\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                fillGraph: true,\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: null,\n                                'labelsKMB': true,\n                                'file': allLines,\n                                'labels': ['x'].concat(labels),\n                                'ylabel': leftAndRight.left,\n                                'y2label': leftAndRight.right,\n\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                    'y2': {\n                                        'labelsKMB': true,\n                                        valueRange: [yRanges[1].min, yRanges[1].max],\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        } else {\n                            series['span_y2'] = {axis: 'y2'};\n                            $scope.showY2Btns = false;\n                            var newLines = [];\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function (line) {\n                                line.push(NaN);\n                            });\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                fillGraph: true,\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: null,\n                                'labelsKMB': true,\n                                'file': newLines,\n                                'labels': ['x'].concat(labels).concat(['span_y2']),\n                                'ylabel': leftAndRight.left,\n                                'y2label': \"\",\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                    'y2': {\n                                        axisLabelFormatter: function (d) {\n                                            return '';\n                                        },\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        }\n\n\n                        if (basicInfo && basicInfo.range_show) {\n                            Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                zoom: true,\n                                selection: false,\n                                range: false\n                            });\n                        }\n\n\n                        if ($scope.chartDateWindow && $scope.rangeSelectorBar && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                            // keep the current range bar refresh once.\n                            // make sure the begin != end\n                            $scope.chartDateTime = {\n                                begin: $scope.chartDateTime.begin,\n                                end: $scope.chartDateTime.end\n                            };\n                            $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                        } else if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != $scope.chartDateWindow[1]) && !$scope.rangeSelectorBar && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                            $scope.chartDateTime = {\n                                begin: $scope.chartDateTime.begin,\n                                end: $scope.chartDateTime.end\n                            };\n                            $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                            $scope.currentChart.updateOptions({dateWindow: $scope.chartDateWindow});\n                        } else {\n                            $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            if (begin_path && end_path && !init_flag) {\n                                // $scope.chartDateTime = {\n                                // \"begin\": new Date(new Number(begin_path)),\n                                // \"end\": new Date(new Number(end_path))\n                                // };\n                                $scope.chartDateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                init_flag = true;\n                            } else {\n                                if ($scope.currentIntervalChoosed && ((allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= allLines[0][0].getTime())) {\n                                    $scope.rangeConfig.dateWindow = [new Date(allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval), allLines[allLines.length - 1][0]];\n                                } else {\n                                    $scope.chartDateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                    $scope.rangeConfig.dateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                }\n                            }\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n                        }\n                        updateInteraction();\n                        //bind\n                        $scope.loadingShow = false;\n                    }\n\n                }\n            });\n        };\n\n\n        var updateInteraction = function () {\n            $timeout(function () {\n                if ($scope['interactions'] && $scope['interactions'].graphs) {\n                    $scope.$watch('interactions.graphs.dateWindow', function (newValue, oldValue) {\n                        //\n                        if (newValue && newValue.start && !newValue.end) {\n                            $timeout(function () {\n                                var currentInterval = {name: \"\", interval: newValue.start};\n                                if ($scope.currentChart[\"xAxisZoomRange\"]) {\n                                    var range = $scope.currentChart[\"xAxisZoomRange\"];\n                                    if (range[0] instanceof Date) {\n                                        range[0] = range[0].getTime();\n                                    }\n                                    if (range[1] instanceof Date) {\n                                        range[1] = range[1].getTime();\n                                    }\n\n                                    if (currentInterval && ((range[1] - currentInterval.interval) >= range[0])) {\n                                        $scope.rangeConfig.dateWindow = [new Date(range[1] - currentInterval.interval), range[1]];\n                                        $scope.currentChart.updateOptions($scope.rangeConfig);\n                                        $scope.currentIntervalChoosed = currentInterval;\n                                    }\n                                } else {\n                                    $scope.currentIntervalChoosed = currentInterval;\n                                }\n                            });\n                        } else if (newValue && newValue.start && newValue.end) {\n                            // need to change start and end\n                            $timeout(function () {\n                                var currentInterval = {name: \"\", interval: newValue.end - newValue.start};\n                                if ($scope.currentChart[\"xAxisZoomRange\"]) {\n                                    var range = $scope.currentChart[\"xAxisZoomRange\"];\n                                    if (range[0] instanceof Date) {\n                                        range[0] = range[0].getTime();\n                                    }\n                                    if (range[1] instanceof Date) {\n                                        range[1] = range[1].getTime();\n                                    }\n                                    // if (currentInterval && range[0] <= newValue.start && range[1] >= newValue.end) {\n                                    $scope.rangeConfig.dateWindow = [new Date(newValue.start), new Date(newValue.end)];\n                                    $scope.currentChart.updateOptions($scope.rangeConfig);\n                                    $scope.currentIntervalChoosed = currentInterval;\n                                    // }\n                                } else {\n                                    $scope.currentIntervalChoosed = currentInterval;\n                                }\n\n\n                            });\n\n\n                        }\n                    });\n\n                }\n            });\n        };\n\n\n        $scope.chartDateTime = {begin: null, end: null};\n\n        // function for show one\n        $scope.showOne = function (deviceName) {\n\n            if ($rootScope['standalone'] && $rootScope['standalone'] == true) {\n                return false;\n            }\n\n            if($scope['interactions'] && $scope['interactions'].graphs && $scope['interactions'].graphs.scatter){\n                return false;\n            }\n\n\n            // device type is\n            if ($location.url().indexOf('/app/page/param/') != -1) {\n                //open window\n                $window.open(\"/#/app/page/param/\" + $rootScope.applicationName + \"/\" + metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1]));\n            } else {\n                //open window\n                $window.open(\"/#\" + $location.url().replace(\"show\", \"param\").replace($location.url().substr($location.url().lastIndexOf('/', $location.url().lastIndexOf('/') - 1) + 1), metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1])));\n            }\n\n        };\n\n\n        var btntimer = null;\n\n\n        $scope.btnZoomInVLeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVLeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomInVRight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVRight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVULeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVDLeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVURight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVDRight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        // functions for buttons\n        $scope.btnpanleft = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[0] - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0] - pan_delta;\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[1] - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1] - pan_delta;\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnpanright = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = $scope.chartDateWindow[0].getTime() + pan_delta;\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            } else {\n                if (($scope.chartDateWindow[0] + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = ($scope.chartDateWindow[0] + pan_delta);\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1].getTime() + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            } else {\n                if (($scope.chartDateWindow[1] + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1] + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        $scope.btnzoomin = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            startDate = rangeStart + (delta * 2);\n            endDate = rangeEnd - (delta * 2);\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            //\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnzoomout = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            if ((rangeStart - (delta * 2)) > panRange[0]) {\n                startDate = rangeStart - (delta * 2);\n            } else {\n                startDate = panRange[0];\n            }\n\n            if ((rangeEnd + (delta * 2)) < panRange[1]) {\n                endDate = rangeEnd + (delta * 2);\n            } else {\n                endDate = panRange[1];\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        var timer = null;\n        $scope.refersh = function (g, init) {\n            if (timer) {\n                $timeout.cancel(timer);\n            }\n            timer = $timeout(function () {\n                if (init || g.xAxisRange()[0] != $scope.chartDateTime.begin || g.xAxisRange()[1] != $scope.chartDateTime.end) {\n                    $scope.chartDateTime = {begin: g.xAxisRange()[0], end: g.xAxisRange()[1]};\n                    $scope.chartDateWindow = g.xAxisRange();\n                }\n            }, 600);\n        };\n    }\n\n};\n\n\nfgpWidgetGraph.buildFactory = function buildFactory ($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    fgpWidgetGraph.instance = new fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams);\n    return fgpWidgetGraph.instance;\n};\n\nfgpWidgetGraph\n    .$inject = ['$timeout', 'dataService', '$rootScope', '$interval', '$filter', '$location', '$stateParams'];\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPageTitle = function fgpWidgetPageTitle() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetPageTitle.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //drag-channel  item means this widget accepts items\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"\">' +\n        '<h1>{{css.title.text}}</h1>' +\n        '<h3>{{css.subtitle.text}}</h3>' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div>';\n    return dom_show;\n};\n\n\nfgpWidgetPageTitle.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"minHeight\"] = metadata.css.minHeight;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n        $scope.css[\"title\"] = metadata.css.title;\n        $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n        $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n        $scope.css[\"subtitle\"] = metadata.css.subtitle;\n        $scope.css[\"subtitle\"][\"color\"] = metadata.css.subtitle.color;\n        $scope.css[\"subtitle\"][\"show\"] = metadata.css.subtitle.show;\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"title\"].text + \"}\");\n            $scope.css[\"title\"].text = f(deviceData.device);\n            f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"subtitle\"].text + \"}\");\n            $scope.css[\"subtitle\"].text = f(deviceData.device);\n        });\n    }\n\n\n\n\n};\n\nfgpWidgetPageTitle.buildFactory = function buildFactory () {\n    fgpWidgetPageTitle.instance = new fgpWidgetPageTitle();\n    return fgpWidgetPageTitle.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetMap = function fgpWidgetMap() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetMap.prototype.template = function template (element, attrs) {\n    var dom_show = '<div class = \"{{css.width}}\" style=\"padding:0px;height:{{css.height}}px;\" map-lazy-load=\"https://maps.google.com/maps/api/js\">' +\n        '<ng-map style=\"height: 100%;width: 100%;\" center=\"{{center}}\" zoom=\"15\">' +\n        '<marker on-click=\"map.showInfoWindow(\\'info_' + attrs.id + '\\')\" id=\"marker_' + attrs.id + '\" ng-repeat=\"item in markers\" icon=\"{{item.image}}\" position=\"{{item.latitude}},{{item.longitude}}\" title=\"{{item.name}}\" animation=\"Animation.DROP\" ></marker>' +\n        '</ng-map>' +\n        '</div>' +\n        '';\n    return dom_show;\n};\n\n\nfgpWidgetMap.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n            var location = {};\n            $scope.markers = [];\n            $scope.details = $scope.$parent.device;\n\n\n            // show one point.\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { return \" + item.value + \";}\");\n                    var result = f(deviceData.device);\n                    if (result) {\n                        location[item.label] = result;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n                } catch (error) {\n                    // show image\n                    if (\"image\" == item.label) {\n                        location[item.label] = item.value;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n\n                }\n            });\n\n\n            //do not show\n            if (location.latitude == \"\" || location.longitude == \"\") {\n                //hard code. the location is Melbourne\n                location.latitude = \"-37.810000\";\n                location.longitude = \"144.950000\";\n                $scope.center = [location.latitude, location.longitude];\n                // $scope.markers.push(location);\n            } else {\n                $scope.center = [location.latitude, location.longitude];\n                $scope.markers.push(location);\n            }\n\n        });\n    }\n\n};\n\nfgpWidgetMap.buildFactory = function buildFactory () {\n    fgpWidgetMap.instance = new fgpWidgetMap();\n    return fgpWidgetMap.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetDeviceDetail = function fgpWidgetDeviceDetail() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetDeviceDetail.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '<div class=\"row\" ng-repeat=\"item in data\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"text-align: right; font-weight: bold;line-height: 30px;\">{{item.label}}</div><div class=\"col-xs-8 col-md-8\" style=\"text-align: left;line-height: 30px;\">{{item.value}}</div>' +\n        '</div>' +\n        '</div>' +\n        '<div id=\"detail_status_' + attrs.id + '\" class=\"row\" style=\"min-height: 50px;\">' +\n        '</div>' +\n        '</div>';\n};\n\n\nfgpWidgetDeviceDetail.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n\n            $scope.data = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = \"\";\n                    $scope.data.push(item);\n                }\n            });\n\n\n        });\n\n    }\n\n};\n\n\nfgpWidgetDeviceDetail.buildFactory = function buildFactory () {\n    fgpWidgetDeviceDetail.instance = new fgpWidgetDeviceDetail();\n    return fgpWidgetDeviceDetail.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetSpan = function fgpWidgetSpan() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetSpan.prototype.template = function template (scope, element) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '</div>';\n};\n\nfgpWidgetSpan.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n};\n\nfgpWidgetSpan.buildFactory = function buildFactory () {\n    fgpWidgetSpan.instance = new fgpWidgetSpan();\n    return fgpWidgetSpan.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPie = function fgpWidgetPie($timeout) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n};\n\n\nfgpWidgetPie.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" ><div style=\"height: {{css.height}}px;\">' +\n        '<canvas class=\"fgpPieChart\"></canvas>' +\n        '</div>' +\n        '</div>';\n};\n\nfgpWidgetPie.prototype.link = function link (scope, element) {\n\n    this.$timeout(function () {\n        var ctx = element.find(\"canvas\")[0];\n        scope.chart = new Chart(ctx, {\n            type: 'pie',\n            data: {\n                labels: ['1'],\n                datasets: [\n                    {\n                        data: [1],\n                        backgroundColor: []\n                    }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                animation: false,\n                legend: {display: true}\n            }\n        });\n    });\n};\n\n\nfgpWidgetPie.prototype.controller = function controller ($scope, $element, $timeout) {\n\n    var id = $element.attr(\"id\");\n    var metadata = null;\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n            $scope.showdata = widgetData.data;\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n            $scope.data = [];\n            var colors = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = item.value;\n                    $scope.data.push(item);\n                }\n                if (item.color) {\n                    colors.push(item.color);\n                } else {\n                    colors.push('#' + (function co(lor) {\n                            return (lor +=\n                                [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                            && (lor.length == 6) ? lor : co(lor);\n                        })(''));\n                }\n            });\n            // timeout\n            $scope.pieData = {labels: [], value: []};\n            $timeout(function () {\n                // create data\n                angular$1.forEach($scope.data, function (item) {\n                    $scope.pieData.labels.push(item.label);\n                    $scope.pieData.value.push(item.value);\n                });\n\n                $scope.chart.data.labels = $scope.pieData.labels;\n                $scope.chart.data.datasets[0].data = $scope.pieData.value;\n                $scope.chart.data.datasets[0].backgroundColor = colors;\n                // update chart\n                $scope.chart.update();\n            });\n\n        });\n\n\n    }\n\n\n};\n\nfgpWidgetPie.buildFactory = function buildFactory ($timeout) {\n    fgpWidgetPie.instance = new fgpWidgetPie($timeout);\n    return fgpWidgetPie.instance;\n};\nfgpWidgetPie.$inject = ['$timeout'];\n\n/**\n * Created by eric on 22/11/16.\n */\n\nvar fgpDockerButton = function fgpDockerButton() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\n\nfgpDockerButton.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"col-xs-12 btn-group\" role=\"group\" style=\"padding: 2px;\" aria-label=\"...\">' +\n        '<div style=\"float: right;\">' +\n        '<button type=\"button\" class=\"btn btn-{{button.color}} btn-xs\" ' +\n        ' ng-click=\"action(button)\" ng-repeat=\"button in buttons\" ng-show=\"checkShow(button)\"><i class=\"fa {{button.icon}}\"' +\n        ' aria-hidden=\"true\"></i>' +\n        '</button>' +\n        '</div>' +\n        '</div>';\n    return show_dom;\n};\n\n\nfgpDockerButton.prototype.controller = function controller ($scope, $element, $http, $timeout) {\n\n    $scope.stats = \"\";\n\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var confData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                confData = data.data;\n            }\n        }\n    });\n\n    var repeateId = [];\n\n    var pageDevice = null;\n    $scope.$on('deviceInfoEvent', function (event, data) {\n        pageDevice = data.device;\n    });\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n        if (data.application === repeateId[2] && data.container === repeateId[0] && data.host === repeateId[1]) {\n            $scope.stats = data.stats;\n        }\n    });\n\n    $scope.checkShow = function (button) {\n\n\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            return true;\n        }\n\n\n        if (button.type === \"stop\") {\n            if ($scope.stats === \"running\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"start\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"delete\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    // how many buttons?\n    $scope.buttons = [];\n\n    if ($scope.$parent.repeat) {\n        repeateId = $scope.$parent.repeat.split(\",\");\n    }\n\n    angular.forEach(configuration, function (item) {\n        if (item.label == \"buttons\") {\n            $scope.buttons = item.value;\n        }\n    });\n\n    $scope.healthinfo = \"\";\n\n\n    // submit \"action\" to rest api\n    $scope.action = function (button) {\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/exec',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    deviceName: pageDevice.name,\n                    deviceKey: pageDevice.key.id,\n                    relationship: 'node_application'\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        } else {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/hosts/action',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    container: repeateId[0],\n                    host: repeateId[1],\n                    application: repeateId[2]\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        }\n\n    };\n};\n\n\nfgpDockerButton.buildFactory = function buildFactory () {\n    fgpDockerButton.instance = new fgpDockerButton();\n    return fgpDockerButton.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetRepeatContainer = function fgpWidgetRepeatContainer($http) {\n    this.restrict = 'E';\n    this.scope = {};\n    this._$http = $http;\n};\n\nfgpWidgetRepeatContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{item.device.key.id}}\" ng-repeat=\"item in items\" emit-last-repeater-element style=\"padding-left: 2px; padding-right: 2px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding-left: 1px; padding-right: 1px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}};\"><i class=\"fa fa-desktop\" aria-hidden=\"true\" style=\"margin-right: 5px;\"></i>{{item.device.name}}</div>' +\n        '<div class=\"panel-body\"  style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\'}};\">' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" ng-repeat=\"item in items\" repeat-id=\"{{item.device.key.id}}\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;padding-left: 2px; padding-right: 2px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n};\n\nfgpWidgetRepeatContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout, $http, $location, $stateParams, $websocket) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    // all items\n    $scope.items = [];\n\n    $scope.labelstyle = [\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"];\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n\n    $scope.listStyle = \"list\";\n\n    $scope.labels = [];\n\n    var deviceType = $stateParams.type;\n    var deviceName = $stateParams.device;\n\n    if (metadata.data) {\n\n\n        $scope.labels = [];\n\n\n        if (metadata.data.datasource.labels) {\n            $scope.labels = metadata.data.datasource.labels.split(\" \");\n        }\n\n        if (metadata.data.datasource.style) {\n            $scope.listStyle = metadata.data.datasource.style;\n        }\n\n        // show different type\n        var relation = metadata.data.datasource.type;\n        $scope.items = [];\n        $http({\n            method: 'GET',\n            url: 'api/docker/repeat/' + deviceType + '/' + deviceName + '/' + relation\n        }).then(function (data) {\n            $scope.items = data.data;\n        }, function (error) {\n            console.error(error);\n        });\n\n        // I'm ready. please give all my children to me~\n        // call stage\n        $scope.$on('LastRepeaterElement', function () {\n            $timeout(function () {\n                $scope.$emit('bindChildRepeatEvent', {\n                    id: element_id\n                });\n            });\n        });\n\n\n    }\n    //establish a connection with websocket\n    var dataStream = $websocket('ws://' + $location.host() + \":\" + $location.port() + '/ws/hosts');\n    dataStream.onMessage(function (message) {\n        try {\n            var backData = JSON.parse(message.data);\n            if (backData.hasOwnProperty(\"container\")) {\n                // tell children\n                $scope.$parent.$broadcast('containerStatusEvent', backData);\n                // update health-check status\n                angular.forEach($scope.items, function (item) {\n                    if (backData.application == item.device.key.id) {\n                        if (backData.config.State.Health) {\n                            item[\"health\"] = backData.config.State.Health.Status;\n                        } else {\n                            item[\"health\"] = null;\n                        }\n\n                        if (backData.stats == \"exited\") {\n                            item[\"health\"] = null;\n                        }\n                    }\n                });\n            }\n        } catch (e) {\n        }\n    });\n\n    $scope.healthcheck = function (item) {\n        // call server and get the exception.\n        dataService.healthcheck(item.name, item.device.key.id);\n    };\n\n\n};\n\n\nfgpWidgetRepeatContainer.buildFactory = function buildFactory ($http) {\n    fgpWidgetRepeatContainer.instance = new fgpWidgetRepeatContainer($http);\n    return fgpWidgetRepeatContainer.instance;\n};\n\nfgpWidgetRepeatContainer.$inject = ['$http'];\n\n/**\n * Created by eric on 25/11/16.\n */\nvar fgpImage = function fgpImage() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpImage.prototype.template = function template (scope, element) {\n    return '' +\n        '<img src=\"{{url}}\" style=\"width:{{css.width}}px;height:{{css.height}}px;\">' +\n        '';\n};\n\nfgpImage.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"0\",\n        height: \"0\"\n    };\n\n    $scope.url = \"\";\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n    if($scope.showdata.metadata.data){\n        $scope.url = $scope.showdata.metadata.data.url;\n    }\n};\n\nfgpImage.buildFactory = function buildFactory () {\n    fgpImage.instance = new fgpImage();\n    return fgpImage.instance;\n};\n\n/**\n * Created by eric on 28/11/16.\n */\nvar fgpIcon = function fgpIcon() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpIcon.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"{{css.width}}\" style=\"margin-top: 10px;background-color: {{css.background.color}};border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"padding: 5px;\">' +\n        '<i class=\"fa fa-{{icon}}\" style=\"font-size: 60px;\"></i>' +\n        '</div>' +\n        '<div class=\"col-xs-8 col-md-8\">' +\n        '<div style=\"text-align: right;font-size: large;\"><label>{{title}}</label></div>' +\n        '<div style=\"text-align: right;font-size: small;\"><label>{{desc}}</label></div>' +\n        '</div>' +\n        '</div>' +\n        '';\n    return show_dom;\n};\n\nfgpIcon.prototype.controller = function controller ($scope, $element) {\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.icon = configuration.content.icon;\n\n    $scope.desc = configuration.content.desc;\n\n    $scope.title = \"\";\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + configuration.content.f + \"}\");\n            $scope.title = f(deviceData.device);\n        });\n\n    }\n\n};\n\n\nfgpIcon.buildFactory = function buildFactory () {\n    fgpIcon.instance = new fgpIcon();\n    return fgpIcon.instance;\n};\n\n/**\n * Created by eric on 29/11/16.\n */\nvar fgpWidgetAppContainer = function fgpWidgetAppContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetAppContainer.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //<div class=\"alert alert-info\" role=\"alert\">...</div>\n    return '' +\n        '<div ng-show=\"showstyle == \\'list\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-12 col-xs-12  alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px; text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n\n        '<div ng-show=\"showstyle == \\'grid\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-6 col-xs-6 alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px;text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n        '';\n};\n\nfgpWidgetAppContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.containers = [];\n    $scope.containerswithTimeout = [];\n    var metadata = widgetData.data.metadata;\n    // should be a host id\n    var repeat = $scope.$parent.repeat;\n\n    $scope.showstyle = \"list\";\n\n    $scope.host = repeat;\n\n\n    // I'm ready. please give all my children to me~\n    // call stage\n    $scope.$on('LastRepeaterElement', function () {\n        $timeout(function () {\n            $scope.$emit('bindChildRepeatEvent', {\n                id: element_id\n            });\n        });\n    });\n\n    $timeout(function () {\n        var pp = $scope.$emit('listStyleEvent', {\n            id: widgetData.data.parent,\n            callback: function (style) {\n                $scope.showstyle = style;\n            }\n        });\n\n    });\n\n    $scope.gotoContainer = function (container) {\n        // \"device type and device name\" display by a dynamic page!\n        console.info(container);\n        return false;\n    };\n\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n\n        if (data.host == repeat) {\n            //f\n            var labels = [];\n\n            if (metadata.data.datasource.labels) {\n                labels = metadata.data.datasource.labels.split(\" \");\n            }\n            var showLabel = \"\";\n            angular.forEach(labels, function (label) {\n                showLabel += data.config[label] + \" \";\n            });\n\n            var app = {\n                id: data.container,\n                label: showLabel,\n                application: data.application,\n                name: data.deviceName,\n                type: data.deviceType\n            };\n            var flag = false;\n            angular.forEach($scope.containers, function (container) {\n                if (container.id == app.id) {\n                    // update timer\n                    var timer_index = -1;\n                    var timer = $scope.containerswithTimeout.filter(function (item, index) {\n                        if(item.app.id == app.id){\n                            timer_index = index;\n                            return true;\n                        }else{\n                            false;\n                        }\n                    });\n                    $timeout.cancel(timer[0].t);\n                    if (data.stats != \"removed\") {\n                        var newTimer = $timeout(function () {\n                            var index = $scope.containers.indexOf(app);\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }, 30000);\n                        timer[0].t = newTimer;\n                        flag = true;\n                    } else {\n                        var index = -1;\n                        angular.forEach($scope.containers, function (item, itemIndex) {\n                            if (item.id === app.id) {\n                                index = itemIndex;\n                            }\n                        });\n                        if (index != -1 && timer_index != -1) {\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            flag = true;\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }\n                    }\n                }\n            });\n\n            if (!flag) {\n                // add to\n                $scope.containers.push(app);\n                // delete it after 30 seconds!\n                var t = $timeout(function () {\n                    var index = $scope.containers.indexOf(app);\n                    $scope.containers.splice(index, 1);\n                }, 30000);\n                $scope.containerswithTimeout.push({t: t, app: app});\n            }\n        }\n\n    });\n\n};\n\nfgpWidgetAppContainer.buildFactory = function buildFactory () {\n    fgpWidgetAppContainer.instance = new fgpWidgetAppContainer();\n    return fgpWidgetAppContainer.instance;\n};\n\nfgpWidgetAppContainer.$inject = [];\n\n/**\n * Created by ericwang on 21/06/2016.\n */\nvar fgpWidgetChartTable = function fgpWidgetChartTable() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetChartTable.prototype.template = function template (element, attrs) {\n    return '<div style=\"padding:0px;height: {{css.height}}px;position: relative; overflow-y : auto;\">' +\n        '<table st-table=\"rowCollection\" class=\"col-md-12 table table-striped\">' +\n        '<thead>' +\n        '<tr>' +\n        '<th ng-repeat=\"column in sampledata.columns\">{{column.label}}</th>' +\n        '</tr>' +\n        '</thead>' +\n        '<tbody>' +\n        '<tr ng-repeat=\"value in sampledata.values\">' +\n        '<td ng-repeat=\"col in sampledata.columns\">{{value[col.label] | tableformatter: value : col.label : col.formatter}}</td>' +\n        '</tr>' +\n        '</tbody>' +\n        '</table>' +\n        '</div>';\n};\n\nfgpWidgetChartTable.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    //show\n    $scope.showdata = widgetData.data;\n\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n\n\n    $scope.$on('chartDataChangeEvent', function (event, chartData) {\n        var chartId = chartData.id;\n        if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"device\") {\n            $scope.sampledata = {};\n            // make data\n            var collectionName = chartData.data.collection;\n            var groupName = chartData.group;\n            var columns = [];\n            //get group and collection configuration\n            angular$1.forEach($scope.showdata.metadata.data.groups, function (group) {\n                if (group.name == groupName) {\n                    angular$1.forEach(group.collections, function (collection) {\n                        if (collection.name === collectionName) {\n                            columns = collection.rows;\n                        }\n                    });\n                }\n            });\n\n\n            $scope.sampledata.columns = [];\n\n            angular$1.forEach(columns, function (column) {\n                $scope.sampledata.columns.push({label: column.label, formatter: column.formatter});\n            });\n            $scope.sampledata.values = [];\n            angular$1.forEach(columns, function (column) {\n                var f = new Function(\"data\", \"with(data) { if(\" + column.value + \") return \" + column.value + \";return '';}\");\n                angular$1.forEach(chartData.data.data, function (record, index) {\n                    if ($scope.sampledata.values.length < chartData.data.data.length) {\n                        //add new one\n                        var item = {};\n                        item[column.label] = f(record);\n                        $scope.sampledata.values.push(item);\n                    } else {\n                        $scope.sampledata.values[index][column.label] = f(record);\n                    }\n                });\n            });\n\n            var cleanData = [];\n            angular$1.forEach($scope.sampledata.values, function (value, index) {\n                var flag = false;\n                angular$1.forEach(columns, function (column) {\n                    if (value[column.label] && value[column.label] != \"\") {\n                        flag = true;\n                    }\n                });\n\n                if (flag) {\n                    cleanData.push(value);\n                }\n            });\n            $scope.sampledata.values = cleanData;\n\n        } else if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"relation\") {\n            //\n\n\n        }\n\n    });\n\n\n};\n\nfgpWidgetChartTable.buildFactory = function buildFactory () {\n    fgpWidgetChartTable.instance = new fgpWidgetChartTable();\n    return fgpWidgetChartTable.instance;\n};\n\n/**\n * Created by ericwang on 10/06/2016.\n */\n// angular module\nangular$1.module('fgp-kit', ['ngMap','ui.router']).service('dataService', dataAccessApi.buildFactory)\n    .filter('removeSlash', function () {\n        return function (input) {\n            if (input.startsWith(\"/\")) {\n                return input.substring(1, input.length);\n            }\n            return input;\n        }\n    })\n    .factory('$graphstorage', ['$window', function($window) {\n    return {\n        setTree: function(key, value) {\n            $window.localStorage[key] = JSON.stringify(value);\n        },\n        getTree: function(key) {\n            return JSON.parse($window.localStorage[key]) || false;\n        },\n        addTree: function (key,value) {\n            if($window.localStorage[key]){\n                var trees = JSON.parse($window.localStorage[key]);\n                trees.push(value);\n                this.setTree(key,trees);\n            }else{\n                this.setTree(key, [value]);\n            }\n        },\n        clear: function(){\n            $window.localStorage.clear();\n        }\n    }\n    }])\n    .directive('fgpContainer', fgpStage.buildFactory)\n    .directive('widgetContainer', fgpWidgetContainer.buildFactory)\n    .directive('widgetGraph', fgpWidgetGraph.buildFactory)\n    .directive('widgetPageTitle', fgpWidgetPageTitle.buildFactory)\n    .directive('widgetMap', fgpWidgetMap.buildFactory)\n    .directive('widgetStatus', fgpStage.buildFactory)\n    .directive('widgetDeviceDetail', fgpWidgetDeviceDetail.buildFactory)\n    .directive('widgetDeviceSpan', fgpWidgetSpan.buildFactory)\n    .directive('widgetPie', fgpWidgetPie.buildFactory)\n    .directive('widgetDockerButton', fgpDockerButton.buildFactory)\n    .directive('widgetRepeatContainer', fgpWidgetRepeatContainer.buildFactory)\n    .directive('widgetImage', fgpImage.buildFactory)\n    .directive('widgetIcon', fgpIcon.buildFactory)\n    .directive('widgetAppContainer', fgpWidgetAppContainer.buildFactory)\n    .directive('widgetChartTable', fgpWidgetChartTable.buildFactory)\n    .directive('emitLastRepeaterElement', [function () {\n        return function (scope) {\n            if (scope.$last) {\n                scope.$emit('LastRepeaterElement');\n            }\n        };\n    }]).filter('tableformatter', ['$filter', function ($filter) {\n    return function (input, obj, field, formatter) {\n        if (formatter) {\n            if (obj[field]) {\n                if (\"date\" == formatter) {\n                    return $filter('date')(new Date(obj[field]), 'd/M/yy h:mm a');\n                } else {\n                    return input;\n                }\n            }\n        } else {\n            return input;\n        }\n    };\n}]);\nvar index = 'fgp-kit';\n\nreturn index;\n\n})));\n\n//# sourceMappingURL=fgp.kit.bundle.js.map\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["fgp.kit.bundle.js"],"names":["global","factory","exports","module","require","define","amd","fgp_kit","angular","$","Dygraph","ngmap","chartJS","this","angular$1","chart_js","fgpStage","scope","applicationName","deviceName","server","configuration","scatterColors","standalone","replace","restrict","prototype","template","controller","$scope","$element","$timeout","$rootScope","$compile","dataService","$interval","showdata","length","setColors","graphBindingArray","$on","evt","msg","push","forEach","item","id","items","element","find","children","item_new","currentElement","attr","groupItems","dulpItem","findChild4Repeat","param","config","callback","metadata","data","datasource","style","key","from","parentId","parentHtmlObj","arrayItems","newId","i","parent","currentItem","html_render","repeat","append","findChild","sendDeviceData","deviceInfo","then","$broadcast","device","graph","graphs","buildFactory","instance","dataAccessApi","$http","$q","$cacheFactory","_$http","_$q","indexCache","deviceStores","host","deviceKey","deferred","defer","url","ajaxSettings","async","ajax","type","contentType","success","types","Object","defineProperty","name","get","result","field","error","e","reject","console","log","message","resolve","promise","deviceInitInfo","application","storeSchema","rangeLevel","otherLevels","params","cache","response","childrenDeviceInitInfo","relationType","relationDeviceType","fillChildrenTree","buckets","tree","showData","value","array","size","flag","info","fillTree","calTree","start","end","filter","elem","devicesStoreData","store","bucketsData","devicesNullBucket","index","bucketKeys","nullBucket","bucket","post","JSON","stringify","deviceData","currentBucketShowData","deviceStoreData","defaultColors","this$1","colors","co","lor","Math","floor","random","healthcheck","$inject","fgpWidgetContainer","attrs","hasOwnProperty","showTitle","element_id","dom_show","dom_show_notitle","widgetData","$emit","css","color","width","border","background","title","show","source","parse","fgpWidgetGraph","$filter","$location","$stateParams","_dataService","dom_loading","dom_empty_data","link","status","timeOut","getData","numSeries","numRows","labels","initDate","Date","j","getTime","val","sampleData","movePan","event","g","context","side","dragEndX","dragGetX_","dragEndY","dragGetY_","is2DPan","pixelsDragged","dragStartY","axis","axes_","axis_data","axes","unitsDragged","unitsPerPixel","boundedValue","boundedValues","maxValue","initialTopValue","min","minValue","dragValueRange","attributes_","getForAxis","valueWindow","pow","LOG_SCALE","valueRange","minDate","initialLeftmostDate","dragStartX","xUnitsPerPixel","boundedDates","max","maxDate","dateRange","zoomRange","xAxisZoomRange","getOptionForAxis","dateWindow_","drawGraph_","offsetToPercentage","offsetX","offsetY","xOffset","toDomCoords","xAxisRange","yar0","yAxisRange","yOffset","x","y","w","h","xPct","yPct","zoom","zoomInPercentage","xBias","yBias","direction","basicInfo","adjustAxis","bias","delta","increment","foo","yAxes","newYAxes","numAxes","ranges","range","newZoomRange","xAxisExtremes","updateOptions","dateWindow","canScroll","timer","mouseOverHandler","cancel","mouseOutHandler","scroll","normal","WheelEvent","detail","deltaY","wheelDelta","percentage","layerX","target","offsetLeft","layerY","offsetTop","percentages","plotter_","area","cancelEvent","chartDateWindow","firstPoint","mousedownHandler","initializeMouseDown","clientX","startPan","mousemoveHandler","isPanning","currentChart","mouseupHandler","endPan","interactionModel","mousewheel","DOMMouseScroll","wheel","mousedown","mousemove","mouseup","mouseover","mouseout","drawGapEdgePoints","pointSize","labelsKMB","concat","highlightCircleSize","strokeWidth","highlightSeriesOpts","strokeBorderWidth","drawPoints","drawAxesAtZero","labelsDivStyles","text-align","position","display","yRangePad","ylabel","xlabel","series","Device0","Device4","axisLabelWidth","y2","valueFormatter","moment","format","pointClickCallback","p","currentView","showOne","drawCallback","isInit","range_show","rangeSelectorBar","xAxisHeight","drawAxis","showRangeSelector","rangeSelectorHeight","on","finalDateRagne","chartDateTime","begin","finalDateRange","child","synchronize","selection","childrenChart","$window","elementId","emptyDataShow","loadingShow","intevals","height","begin_path","end_path","init_flag","fixInterval","noneFixed","fixGraphWithGap","currentInterval","currentIntervalName","interval","fixed","tempDate","obj","labels_","NaN","file","copy","file_","fixGraphWithGap_click","basic","parent_container","data_from","$watch","nObj","oObj","groups","collections","level","rows","initChart","relation","relation_group","initChildrenChart","newValue","oldValue","expect_points","expectedInterval","conf","preOne","lastOne","cin","currentStore","childTrees","trees","frequency","arr","Array","apply","slice","updateChildrenDetailChart","rangeChildrenData","rangeConfig","rangeSeries","group","collection","ordinalRangeData","timestamp","sort","a","b","updateDetailChart","rangeData","fetchData","values","node","intevalforshow","rangeTree","allData","newData","thePoint","updateChart","deviceDatas","devicesInfo","deviceObj","updateChildrenChart","relationConfig","leftAndRight","left","leftYAxis","right","rightYAxis","allLines","allXLabels","label","yRange","showY2axis","counter","toString","substr","originalData","yaxis","f","Function","realLine","odata","ex","childrenRangeConfig","y2label","newLines","line","axisLabelFormatter","d","newTime","tempData","tempTime","dateTime","indexOf","chartData","nt","timeTicket","lineData","deviceConfig","yRanges","row","yrange","rangeSeriesNumber","rangeBarLabels","series_range","l0","Number","open","lastIndexOf","refersh","fgpWidgetPageTitle","minHeight","subtitle","text","fgpWidgetMap","location","markers","details","$parent","latitude","longitude","center","fgpWidgetDeviceDetail","fgpWidgetSpan","fgpWidgetPie","ctx","chart","Chart","datasets","backgroundColor","options","responsive","maintainAspectRatio","animation","legend","pieData","update","fgpDockerButton","show_dom","stats","confData","repeateId","pageDevice","container","checkShow","button","shown","buttons","split","healthinfo","action","method","func","script","relationship","successCallback","errorCallback","fgpWidgetRepeatContainer","$websocket","labelstyle","listStyle","deviceType","dataStream","port","onMessage","backData","State","Health","Status","fgpImage","fgpIcon","icon","content","desc","fgpWidgetAppContainer","containers","containerswithTimeout","showstyle","pp","gotoContainer","showLabel","app","timer_index","t","newTimer","splice","itemIndex","fgpWidgetChartTable","chartId","sampledata","collectionName","groupName","columns","column","formatter","record","cleanData","service","input","startsWith","substring","directive","$last"],"mappings":"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","file":"fgp.kit.bundle.min.js","sourcesContent":["/**\n * fgp-kit\n * @version 1.0 - Homepage <http://www.future-grid.com.au>\n * @copyright (c) 2013-2016 Eric.Wang <flexdeviser@gmail.com>\n * @license Apache2. \n * @overview fgp.kit.js is a useful toolkit for future-grid's clients.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular'), require('jquery'), require('dygraphs'), require('ngmap'), require('chart.js')) :\n    typeof define === 'function' && define.amd ? define(['angular', 'jquery', 'dygraphs', 'ngmap', 'chart.js'], factory) :\n    (global.fgp_kit = factory(global.angular,global.$,global.Dygraph,global.ngmap,global.chartJS));\n}(this, (function (angular$1,$,Dygraph,ngmap,chart_js) {\n\nangular$1 = 'default' in angular$1 ? angular$1['default'] : angular$1;\n$ = 'default' in $ ? $['default'] : $;\nDygraph = 'default' in Dygraph ? Dygraph['default'] : Dygraph;\n\n/**\n * Created by ericwang on 10/06/2016.\n */\nvar fgpStage = function fgpStage() {\n    this.scope = {\n        applicationName: \"=\",\n        deviceName: \"=\",\n        server: \"=\",\n        configuration: '=',\n        scatterColors: \"=\",\n        standalone: \"=\"\n    };\n    this.replace = true;\n    this.restrict = 'A';\n};\n\nfgpStage.prototype.template = function template () {\n    return '<div id=\"pageStage\" class=\"wrapper col-md-12 col-xl-12\" style=\"background-color: #fff;height:100%;padding: 0px;\">' +\n        '</div>';\n};\n\nfgpStage.prototype.controller = function controller ($scope, $element, $timeout, $rootScope, $compile, dataService, $interval) {\n    $scope.showdata = {};\n\n    if ($scope.scatterColors && $scope.scatterColors.length > 0) {\n        dataService.setColors($scope.scatterColors);\n    }\n\n\n    $rootScope['applicationName'] = $scope.applicationName;\n    $rootScope['host'] = $scope.server;\n    $rootScope['device'] = $scope.deviceName;\n    $rootScope['standalone'] = $scope.standalone;\n\n\n    var graphBindingArray = [];\n\n    $scope.$on('bindChildChartEvent', function (evt, msg) {\n        graphBindingArray.push(msg);\n    });\n\n    $scope.$on('bindChildRepeatEvent', function (evt, msg) {\n        angular$1.forEach($scope.configuration, function (item) {\n            if (item.id == msg.id) {\n                var items = angular$1.element(\"body\").find(\"#\" + item.id).children();\n                angular$1.forEach(items, function (item_new) {\n                    $scope.showdata[item_new.id] = item;\n                    var currentElement = angular$1.element(item_new);\n                    if (currentElement.attr(\"dulp\")) {\n                        var groupItems = angular$1.element(\"body\").find(\"div[dulp='\" + item.id + \"']\");\n                        angular$1.forEach(groupItems, function (dulpItem) {\n                            findChild4Repeat(item.id, angular$1.element(dulpItem), $scope.configuration, item_new.id);\n                        });\n                    }else{\n                        findChild4Repeat(item.id, currentElement, $scope.configuration, item_new.id);\n                    }\n                });\n            }\n        });\n    });\n\n    $scope.$on('listStyleEvent', function (evt, param) {\n        var config = $scope.showdata[param.id.replace(\"edit\", \"\")];\n        param.callback(config.metadata.data.datasource.style);\n    });\n\n\n    $scope.$on('fetchWidgetMetadataEvent', function (evt, msg) {\n        angular$1.forEach($scope.showdata, function (metadata, key) {\n            if (key == msg.id) {\n                msg.callback({data: metadata, from: 'show'});\n                return;\n            }\n        });\n    });\n\n\n    function findChild4Repeat(parentId, parentHtmlObj, arrayItems, newId) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n\n                $scope.showdata[id] = arrayItems[i];\n                if (parentHtmlObj.attr(\"repeat-id\")) {\n                    $scope.repeat = parentHtmlObj.attr(\"repeat-id\");\n                }\n                if (parentHtmlObj.find('#edit' + parentId).find(\"#\" + id).length == 0) {\n                    parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                }\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems);\n            }\n            else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems);\n            }\n        }\n    }\n\n    function findChild(parentId, parentHtmlObj, arrayItems) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                findChild(arrayItems[i].id, currentItem, arrayItems);\n            } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                findChild(arrayItems[i].id, currentItem, arrayItems);\n            }\n        }\n    }\n\n    angular$1\n        .forEach($scope\n\n                .configuration\n            ,\n            function (item) {\n                if ('workingArea' === item.parent) {\n                    var currentItem = angular$1.element(item.html_render);\n                    $scope.showdata[item.id] = item;\n                    $element.append($compile(currentItem)($scope));\n                    findChild(item.id, currentItem, $scope.configuration);\n                }\n            }\n        )\n    ;\n\n    var\n        sendDeviceData = function () {\n            dataService.deviceInfo($scope.server, $scope.deviceName, null, $scope.applicationName).then(function (data) {\n                // send device info to all widget\n                $timeout(function () {\n                    $scope.$broadcast('deviceInfoEvent', {device: data, from: 'application'});\n                });\n            });\n        };\n\n    /**\n     * get device information\n     */\n    if ($scope.deviceName && $scope.deviceName != \"\" && \"undefined\" != $scope.deviceName) {\n        // first time\n        sendDeviceData();\n\n        // after every 30 seconds\n        // $interval(function () {\n        // sendDeviceData();\n        // }, 30000);\n    }\n\n\n// all item created;\n    $timeout(function () {\n        angular$1.forEach(graphBindingArray, function (graph) {\n            $scope.$broadcast('bindFatherGraphEvent', {parent: graph.graphs, children: graph.children});\n        });\n    });\n};\n\n\nfgpStage.buildFactory = function buildFactory () {\n    fgpStage.instance = new fgpStage();\n    return fgpStage.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar dataAccessApi = function dataAccessApi($http, $q, $cacheFactory) {\n    this._$http = $http;\n    this._$q = $q;\n    // get cache\n    this.indexCache = $cacheFactory('indexCache');\n    this.deviceStores = $cacheFactory('deviceStores');\n};\n\n\n/**\n * sync using JQuery\n * @param deviceName\n * @param deviceKey\n * @param applicationName\n * @returns {*}\n */\ndataAccessApi.prototype.deviceInfo = function deviceInfo (host, deviceName, deviceKey, applicationName) {\n    var deferred = this._$q.defer();\n    var url = host + \"/rest/api/\";\n\n    if (applicationName) {\n        url += \"app/\" + applicationName;\n    }\n\n    if (deviceName) {\n        url += '/devices/' + deviceName;\n    } else if (deviceKey) {\n        url += 'devices?key=' + deviceKey;\n    }\n\n    $.ajaxSettings.async = false;\n    $.ajax({\n        type: 'GET',\n        url: url,\n        contentType: \"application/json\",\n        success: function (data) {\n            var url = host + \"/rest/api/\";\n            if (applicationName) {\n                url += \"app/\" + applicationName + \"/devices/extension-types?device_type=\";\n            } else {\n                url += \"devices/extension-types?device_type=\";\n            }\n            $.ajaxSettings.async = false;\n            $.ajax({\n                type: 'GET',\n                url: url + data.type,\n                contentType: \"application/json\",\n                success: function (types) {\n                    angular$1.forEach(types, function (type) {\n                        Object.defineProperty(data, type.name, {\n                            get: function () {\n                                var result = null;\n                                var url = host + \"/rest/api/\";\n                                if (applicationName) {\n                                    url += \"app/\" + applicationName + \"/devices/extensions?device_name=\";\n                                } else {\n                                    url += \"devices/extensions?device_name=\";\n                                }\n                                $.ajaxSettings.async = false;\n                                $.ajax({\n                                    type: 'GET',\n                                    url: url + this.name + '&extension_type=' + type.name,\n                                    contentType: \"application/json\",\n                                    success: function (field) {\n                                        result = field;\n                                    },\n                                    error: function (e) {\n                                        deferred.reject(e);\n                                    }\n                                });\n                                return result;\n                            }\n                        });\n                    });\n                },\n                error: function (e) {\n                    console.log(e.message);\n                }\n            });\n\n            deferred.resolve(data);\n        },\n        error: function (e) {\n            deferred.reject(e);\n        }\n    });\n    return deferred.promise;\n};\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.deviceInitInfo = function deviceInitInfo (host, application, deviceKey, storeSchema, rangeLevel, otherLevels) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {'otherLevels': otherLevels}, cache: this.deviceStores\n    }).then(\n        function (response) {\n            deferred.resolve(response.data);\n        },\n        function (response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.childrenDeviceInitInfo = function childrenDeviceInitInfo (host, application, deviceKey, storeSchema, relationType, relationDeviceType, rangeLevel, otherLevels) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/children/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            relationType: relationType,\n            relationDeviceType: relationDeviceType,\n            otherLevels: otherLevels\n        },\n        cache: this.deviceStores\n    }).then(\n        function (response) {\n            deferred.resolve(response.data);\n        },\n        function (response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\ndataAccessApi.prototype.fillChildrenTree = function fillChildrenTree (buckets, tree, showData) {\n\n    if (tree.children[0] != null) {\n        fillChildrenTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillChildrenTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n\n        angular$1.forEach(buckets, function (value, key) {\n            if (key == tree.id && value != null) {\n                tree.data = value.array;\n                tree['size'] = value.size;\n\n                var flag = false;\n                angular$1.forEach(showData, function (data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        tree['size'] = value.size;\n                        flag = true;\n                    }\n                });\n\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n};\n\n\ndataAccessApi.prototype.fillTree = function fillTree (buckets, tree, showData) {\n    if (tree.children[0] != null) {\n        fillTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        angular$1.forEach(buckets, function (value, key) {\n            if (key == tree.id) {\n                tree.data = value.array;\n                tree['size'] = value.size;\n\n                var flag = false;\n                angular$1.forEach(showData, function (data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        tree['size'] = value.size;\n                        flag = true;\n                    }\n                });\n\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n\n};\n\ndataAccessApi.prototype.calTree = function calTree (buckets, tree, start, end) {\n    if (tree.children[0] != null) {\n        calTree(buckets, tree.children[0], start, end);\n    }\n\n    if (tree.children[1] != null) {\n        calTree(buckets, tree.children[1], start, end);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        // is overlap?\n        if (((start >= tree.start) && start < tree.end)\n            ||\n            ((start > tree.start) && start <= tree.end)\n            ||\n            ((tree.start >= start) && tree.start < end)\n            ||\n            ((tree.start > start) && tree.start <= end)) {\n            if (buckets.filter(function (elem) {\n                    return elem.id == tree.id\n                }).length == 0) {\n                buckets.push(tree);\n            }\n        }\n    }\n};\n\n\n/**\n *\n * @param application\n * @param deviceInfo deviceKey and tree\n * @param storeSchema\n * @param store\n * @param start\n * @param end\n */\ndataAccessApi.prototype.devicesStoreData = function devicesStoreData (host, application, deviceInfo, storeSchema, store, start, end) {\n\n    var bucketsData = [];\n    var devicesNullBucket = [];\n    var calTree = this.calTree;\n    var fillChildrenTree = this.fillChildrenTree;\n    angular$1.forEach(deviceInfo, function (device, index) {\n        var bucketKeys = [];\n        calTree(bucketKeys, device.tree, start, end);\n        var nullBucket = [];\n        // get null buckets\n        angular$1.forEach(bucketKeys, function (bucket) {\n            if (bucket.data == null) {\n                nullBucket.push(bucket.id);\n            }\n        });\n        if (nullBucket.length != 0) {\n            devicesNullBucket.push({device: device.name, nullBucket: nullBucket});\n        }\n        bucketsData.push({device: device.name, data: bucketKeys});\n    });\n\n    if (devicesNullBucket.length == 0) {\n        // get data from rest service\n        var deferred = this._$q.defer();\n        deferred.resolve(bucketsData);\n        return deferred.promise;\n    } else {\n        // get data from rest service\n        var deferred = this._$q.defer();\n        this._$http.post(host + '/rest/api/app/' + application + '/store/index/devices/store/data/' + storeSchema + '/' + store,\n            JSON.stringify(devicesNullBucket)\n        ).then(\n            function (response) {\n                // response.data\n                angular$1.forEach(response.data, function (deviceData) {\n\n                    var currentBucketShowData = null;\n                    angular$1.forEach(bucketsData, function (showData) {\n                        if (showData.device == deviceData.device) {\n                            currentBucketShowData = showData.data; //  bucketKeys\n                            angular$1.forEach(deviceInfo, function (device, index) {\n                                if (deviceData.device == device.name) {\n                                    fillChildrenTree(deviceData.data, device.tree, currentBucketShowData);\n                                }\n                            });\n                        }\n                    });\n\n                });\n                // fill bucketKeys\n                deferred.resolve(bucketsData);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n};\n\n\ndataAccessApi.prototype.deviceStoreData = function deviceStoreData (host, application, deviceKey, storeSchema, store, tree, start, end) {\n    var fillTree = this.fillTree;\n    var calTree = this.calTree;\n    var bucketKeys = [];\n    calTree(bucketKeys, tree, start, end);\n    var nullBucket = [];\n    // get null buckets\n    angular$1.forEach(bucketKeys, function (bucket) {\n        if (bucket.data == null) {\n            nullBucket.push(bucket.id);\n        }\n    });\n\n    if (nullBucket.length == 0) {\n        // send rest request\n        var deferred = this._$q.defer();\n        deferred.resolve(bucketKeys);\n        return deferred.promise;\n    } else {\n        // send rest request\n        var deferred = this._$q.defer();\n        this._$http.get(host + '/rest/api/app/' + application + '/store/index/store/data/' + deviceKey + '/' + storeSchema + '/' + store, {\n            params: {\n                bucketKeys: nullBucket\n            }\n        }).then(\n            function (response) {\n                fillTree(response.data, tree, bucketKeys);\n                // fill bucketKeys\n                deferred.resolve(bucketKeys);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n};\n\ndataAccessApi.prototype.defaultColors = function defaultColors () {\n        var this$1 = this;\n\n    if (!this.colors) {\n        this['colors'] = [];\n        for (var i = 0; i < 300; i++) {\n            this$1.colors.push('#' + (function co(lor) {\n                    return (lor +=\n                        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                    && (lor.length == 6) ? lor : co(lor);\n                })(''));\n        }\n    }\n    return this.colors;\n};\n\ndataAccessApi.prototype.setColors = function setColors (colors) {\n    this.colors = colors;\n};\n\n\n/**\n * device id\n * @param id\n */\ndataAccessApi.prototype.healthcheck = function healthcheck (application, id) {\n\n    if (id = null || id == \"\") {\n        return;\n    }\n    this._$http.get('/rest/api/app/' + application + '/docker/healthcheck/reports?id=' + id)\n        .success(function (response) {\n            console.info(response);\n            return response;\n        });\n\n\n};\n\n\ndataAccessApi.buildFactory = function buildFactory ($http, $q, $cacheFactory) {\n    dataAccessApi.instance = new dataAccessApi($http, $q, $cacheFactory);\n    return dataAccessApi.instance;\n};\n\ndataAccessApi.$inject = ['$http', '$q', '$cacheFactory'];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetContainer = function fgpWidgetContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"padding: 0px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}}\">{{css.title.text}}</div>' +\n        '<div class=\"panel-body\" id=\"edit' + element_id + '\" style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n\n};\n\nfgpWidgetContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n    if (metadata.data) {\n        $scope.data[\"source\"] = metadata.data.source;\n        if ($scope.data && $scope.data.source.device && $scope.data.source.device != -1) {\n\n            if ($scope.data.source.device) {\n                /**\n                 * get device information\n                 */\n                dataService.deviceInfo($rootScope.host, JSON.parse($scope.data.source.device).name, null, $rootScope.applicationName).then(function (data) {\n                    // send device info to all widget\n                    $timeout(function () {\n                        $rootScope.$broadcast('deviceInfoEvent', {device: data, from: element_id});\n                    });\n                });\n            }\n\n        }\n    }\n\n};\n\n\nfgpWidgetContainer.buildFactory = function buildFactory () {\n    fgpWidgetContainer.instance = new fgpWidgetContainer();\n    return fgpWidgetContainer.instance;\n};\n\nfgpWidgetContainer.$inject = [];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetGraph = function fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n    this._dataService = dataService;\n};\n\nfgpWidgetGraph.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    if (flag) {\n        var dom_loading = '<div ng-show=\"loadingShow\" id=\"loading_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\">' +\n            '<div class=\"rect1\"></div>' +\n            '<div class=\"rect2\"></div>' +\n            '<div class=\"rect3\"></div>' +\n            '<div class=\"rect4\"></div>' +\n            '<div class=\"rect5\"></div>' +\n            '</div></div>';\n\n\n        var dom_empty_data = '<div ng-show=\"emptyDataShow\" id=\"emptydata_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\" style=\"width: 100%;\">' +\n            '<h1>Empty Data!</h1>' +\n            '</div></div>';\n\n        return '<div class=\"{{css.width}}\"><div class=\"col-md-12\" style=\"padding:0px;height:{{css.height}}px;-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\"><div class=\"row\"><div class=\"col-md-12\"><a class=\"tooltips\" href=\"javascript:;\" style=\"float: right;margin-right: 10px;\" ng-click=\"currentView = -currentView\"><div class=\"relationBtn\">R</div><span>Scatter View</span></a><div ng-hide=\"true\" class=\"checkbox\" style=\"float: right;margin-right: 10px; margin-bottom: 5px; margin-top: 0;\" ng-model=\"fixInterval\" ng-click=\"fixInterval=!fixInterval\"><label><input type=\"checkbox\" ng-model=\"fixInterval\" ng-clicked=\"fixInterval\" ng-change=\"fixGraphWithGap_click()\">fixed interval</label></div><div style=\"float: right; margin-right: 10px;\"><label class=\"label-inline\" ng-repeat=\"item in intevals.device\"><span class=\"badge\" style=\"background-color: {{ item.name == currentIntervalName ? \\'#009900;\\' : \\'\\'}}\">{{item.name}}</span></label></div></div></div><div class=\"line-chart-graph\" style=\"width: 100%;height: 100%;\"></div></div>' + dom_loading + dom_empty_data + '<div class=\"row\"><div class=\"col-md-12\" style=\"min-height: 30px;\"></div><div class=\"col-md-6\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[0] | date : \\'h:mm a MMMM d, y\\'}}</div><div class=\"col-md-6\" style=\"text-align: right;\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[1] | date : \\'h:mm a MMMM d, y\\'}}</div><div class=\"col-md-12\" style=\"min-height: 40px;\"><div class=\"range-selector-bar\" style=\"height: 0px;margin-top: 30px;\"></div></div></div></div></div>';\n    }\n};\n\nfgpWidgetGraph.prototype.link = function link (scope, element, attrs) {\n    scope['defaultColors'] = this._dataService.defaultColors();\n    scope.status = true;\n    var timeOut = this.$timeout;\n    this.$timeout(function () {\n        var getData = function (numSeries, numRows, name) {\n            var result = {labels: null, data: null};\n            var data = [];\n            var labels = [];\n            //init date\n            var initDate = new Date(\"2014/01/01 00:00:00\");\n            for (var j = 0; j < numRows; ++j) {\n                data[j] = [new Date(initDate.getTime() + 900000)];\n                initDate = new Date(initDate.getTime() + 900000);\n            }\n            for (var i = 0; i < numSeries; ++i) {\n                labels.push(name + i);\n                var val = 0;\n                for (var j = 0; j < numRows; ++j) {\n                    val += Math.random() - 0.5;\n                    data[j][i + 1] = val;\n                }\n            }\n            result.labels = labels;\n            result.data = data;\n            return result;\n        };\n\n\n        var sampleData = getData(1, 10, 'Device');\n\n        function movePan(event, g, context, side) {\n\n            context.dragEndX = Dygraph.dragGetX_(event, context);\n            context.dragEndY = Dygraph.dragGetY_(event, context);\n\n\n            // y-axis scaling is automatic unless this is a full 2D pan.\n            if (context.is2DPan) {\n\n                var pixelsDragged = context.dragEndY - context.dragStartY;\n                // Adjust each axis appropriately.\n                if (side == \"r\") {\n                    var axis = g.axes_[0];\n                    var axis_data = context.axes[0];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[0] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 0)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else if (side == 'l') {\n                    var axis = g.axes_[1];\n                    var axis_data = context.axes[1];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[1] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 1)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else {\n                    var minDate = context.initialLeftmostDate -\n                        (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n                    if (context.boundedDates) {\n                        minDate = Math.max(minDate, context.boundedDates[0]);\n                    }\n                    var maxDate = minDate + context.dateRange;\n                    if (context.boundedDates) {\n                        if (maxDate > context.boundedDates[1]) {\n                            // Adjust minDate, and recompute maxDate.\n                            minDate = minDate - (maxDate - context.boundedDates[1]);\n                            maxDate = minDate + context.dateRange;\n                        }\n                    }\n                    var zoomRange = g.xAxisZoomRange;\n                    if (g.xAxisZoomRange[0] instanceof Date) {\n                        zoomRange[0] = g.xAxisZoomRange[0].getTime();\n                    }\n                    if (g.xAxisZoomRange[1] instanceof Date) {\n                        zoomRange[1] = g.xAxisZoomRange[1].getTime();\n                    }\n\n                    if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                        return;\n                    }\n\n                    if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                        g.dateWindow_ = [Math.pow(Dygraph.LOG_SCALE, minDate),\n                            Math.pow(Dygraph.LOG_SCALE, maxDate)];\n                    } else {\n                        g.dateWindow_ = [minDate, maxDate];\n                    }\n                }\n            }\n            g.drawGraph_(false);\n        }\n\n\n        function offsetToPercentage(g, offsetX, offsetY) {\n            // This is calculating the pixel offset of the leftmost date.\n            var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n            var yar0 = g.yAxisRange(0);\n\n            // This is calculating the pixel of the higest value. (Top pixel)\n            var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n            // x y w and h are relative to the corner of the drawing area,\n            // so that the upper corner of the drawing area is (0, 0).\n            var x = offsetX - xOffset;\n            var y = offsetY - yOffset;\n\n            // This is computing the rightmost pixel, effectively defining the\n            // width.\n            var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n            // This is computing the lowest pixel, effectively defining the height.\n            var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n            // Percentage from the left.\n            var xPct = w == 0 ? 0 : (x / w);\n            // Percentage from the top.\n            var yPct = h == 0 ? 0 : (y / h);\n\n            // The (1-) part below changes it from \"% distance down from the top\"\n            // to \"% distance up from the bottom\".\n            return [xPct, (1 - yPct)];\n        }\n\n\n        function zoom(g, zoomInPercentage, xBias, yBias, direction, side) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n\n            function adjustAxis(axis, zoomInPercentage, bias) {\n                var delta = axis[1] - axis[0];\n                var increment = delta * zoomInPercentage;\n                var foo = [increment * bias, increment * (1 - bias)];\n                return [axis[0] + foo[0], axis[1] - foo[1]];\n            }\n\n            xBias = xBias || 0.5;\n            yBias = yBias || 0.5;\n            var yAxes = g.axes_;\n            var newYAxes = [];\n            for (var i = 0; i < g.numAxes(); i++) {\n                newYAxes[i] = adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n            }\n            if ('v' == direction) {\n                if ('l' == side) {\n                    yAxes[0]['valueRange'] = newYAxes[0];\n                    yAxes[0]['valueWindow'] = newYAxes[0];\n                } else if ('r' == side && g.numAxes() == 2) {\n                    yAxes[1]['valueRange'] = newYAxes[1];\n                    yAxes[1]['valueWindow'] = newYAxes[1];\n                }\n                g.drawGraph_(false);\n            } else {\n\n                var ranges = [];\n                angular$1.forEach(g.xAxisRange(), function (range) {\n                    if (range instanceof Date) {\n                        ranges.push(range.getTime());\n                    } else {\n                        ranges.push(range);\n                    }\n                });\n\n                var newZoomRange = adjustAxis(ranges, zoomInPercentage, xBias);\n                // do not bigger than range data\n                var zoomRange = [];\n                if (g.hasOwnProperty(\"xAxisZoomRange\") && g.xAxisZoomRange) {\n                    zoomRange[0] = g.xAxisZoomRange[0];\n                    zoomRange[1] = g.xAxisZoomRange[1];\n                } else {\n                    zoomRange[0] = g.xAxisExtremes()[0];\n                    zoomRange[1] = g.xAxisExtremes()[1];\n                }\n                if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] >= newZoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [zoomRange[0], newZoomRange[1]]\n                    });\n                } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [newZoomRange[0], zoomRange[1]]\n                    });\n                } else {\n                    g.updateOptions({\n                        dateWindow: newZoomRange\n                    });\n                }\n            }\n        }\n\n\n        var canScroll = false;\n\n        var timer = null;\n        var mouseOverHandler = function (e, g, context) {\n            //\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if(timer!=null){\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function () {\n                canScroll = true;\n            }, 3000);\n        };\n\n        var mouseOutHandler = function (e, g, context) {\n            // set flag to false\n            if(timer!=null){\n                timeOut.cancel(timer);\n            }\n            canScroll = false;\n        };\n\n        var scroll = function (e, g, context) {\n\n            if ((scope.basicInfo && !scope.basicInfo.zoom) || !canScroll) {\n                return;\n            }\n\n            var normal;\n\n            if (e instanceof WheelEvent) {\n                normal = e.detail ? e.detail * -1 : e.deltaY / 40;\n            } else {\n                normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n            }\n\n            // For me the normalized value shows 0.075 for one click. If I took\n            // that verbatim, it would be a 7.5%.\n            var percentage = normal / 50;\n\n            if (!(e.offsetX && e.offsetY)) {\n                e.offsetX = e.layerX - e.target.offsetLeft;\n                e.offsetY = e.layerY - e.target.offsetTop;\n            }\n            var percentages = offsetToPercentage(g, e.offsetX, e.offsetY);\n            var xPct = percentages[0];\n            var yPct = percentages[1];\n            //\n            if (e.offsetX <= (g.plotter_.area.x)) {\n                // console.info(\"v\", \"l\")\n                // left zoom\n                zoom(g, percentage, xPct, yPct, 'v', 'l');\n            } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                // right zoom\n                // console.info(\"v\", \"r\")\n                zoom(g, percentage, xPct, yPct, 'v', 'r');\n            } else {\n                // middle zoom\n                // console.info(\"h\")\n                zoom(g, percentage, xPct, yPct, 'h', null);\n            }\n            Dygraph.cancelEvent(e);\n            timeOut(function () {\n                scope.chartDateWindow = g.xAxisRange();\n            });\n        };\n\n        var firstPoint = null;\n        var mousedownHandler = function (e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            context.initializeMouseDown(e, g, context);\n            firstPoint = e.clientX;\n            Dygraph.startPan(e, g, context);\n        };\n        var mousemoveHandler = function (e, g, context) {\n            if (context.isPanning) {\n                if (e.offsetX <= (g.plotter_.area.x)) {\n                    movePan(e, g, context, 'r');\n                } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                    movePan(e, g, context, 'l');\n                } else {\n                    movePan(e, g, context, 'h');\n                }\n                timeOut(function () {\n                    scope.chartDateWindow = scope.currentChart.xAxisRange();\n                });\n            }\n        };\n\n\n        var mouseupHandler = function (e, g, context) {\n            if (context.isPanning) {\n                Dygraph.endPan(e, g, context);\n            }\n        };\n\n        var interactionModel = {\n            'mousewheel': scroll,\n            'DOMMouseScroll': scroll,\n            'wheel': scroll,\n            'mousedown': mousedownHandler,\n            'mousemove': mousemoveHandler,\n            'mouseup': mouseupHandler,\n            'mouseover': mouseOverHandler,\n            'mouseout': mouseOutHandler\n        };\n\n\n        //init configuration\n        var configuration = {\n            drawGapEdgePoints: true,\n            'pointSize': 3,\n            labelsKMB: true,\n            // data formate\n            labels: ['x'].concat(sampleData.labels),\n            highlightCircleSize: 2,\n            strokeWidth: 1,\n            highlightSeriesOpts: {\n                strokeWidth: 2,\n                strokeBorderWidth: 1,\n                highlightCircleSize: 2\n            },\n            drawPoints: false,\n            drawAxesAtZero: false,\n            labelsDivStyles: {\n                'text-align': 'right',\n                'position': 'relative',\n                'display': 'inline-block'\n            },\n            yRangePad: 10,\n            // x label y label\n            ylabel: 'Value',\n            xlabel: 'Date',\n            colors: scope.defaultColors,\n            // multiple Y axis\n            series: {\n                'Device0': {\n                    axis: 'y2'\n                },\n                'Device4': {\n                    axis: 'y2'\n                }\n            },\n            // showRangeSelector: true,\n            axes: {\n                y: {\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                y2: {\n                    // set axis-related properties here\n                    'labelsKMB': true,\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                x: {\n                    // datetime format\n                    valueFormatter: function (y) {\n                        return moment(y).format('LLLL'); //Hide legend label\n                    }\n                }\n            },\n            pointClickCallback: function (e, p) {\n                if (scope.currentView != -1) {\n                    scope.showOne(p.name);\n                }\n            },\n            drawCallback: function (g, isInit) {\n                // timeOut(function () {\n                // if (scope.refersh) { // make sure \"scope.refersh\" doesn't call when the graph create first time.\n                //     scope.refersh(g);\n                // }\n                // });\n            },\n            'interactionModel': interactionModel\n        };\n\n        scope.currentChart = new Dygraph(element.find(\"div[class='line-chart-graph']\")[0], sampleData.data, configuration);\n        element.find(\"canvas\").css(\"zIndex\", 99);\n\n\n        if (attrs.hasOwnProperty(\"shown\")) {\n\n\n            var basicInfo = scope.basicInfo;\n            if (basicInfo && basicInfo.range_show) {\n                scope.rangeSelectorBar = new Dygraph(element.find(\"div[class='range-selector-bar']\")[0], sampleData.data, {\n                        xAxisHeight: 0,\n                        axes: {\n                            x: {\n                                drawAxis: false\n                            }\n                        },\n                        showRangeSelector: true,\n                        rangeSelectorHeight: 30\n                    }\n                );\n                scope.chartDateWindow = scope.rangeSelectorBar.xAxisRange();\n            }\n\n\n            var status = false;\n            // add mouse up event to range select\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mouseup', function (event) {\n                status = false;\n                timeOut(function () {\n                    var finalDateRagne = scope.currentChart.xAxisRange();\n                    scope.chartDateTime = {begin: finalDateRagne[0], end: finalDateRagne[1]};\n                });\n            });\n\n            scope.$on('mouseUpMessage', function ($scope, e) {\n                if (\"mouseup\" === e.type && status) {\n                    status = false;\n                    timeOut(function () {\n                        var finalDateRange = scope.currentChart.xAxisRange();\n                        scope.chartDateTime = {begin: finalDateRange[0], end: finalDateRange[1]};\n                    });\n                }\n            });\n\n            scope.$on('bindFatherGraphEvent', function (event, data) {\n                angular$1.forEach(data.children, function (child) {\n                    if (child == attrs.id) {\n                        Dygraph.synchronize([scope.currentChart].concat(data.parent), {\n                            zoom: true,\n                            selection: false,\n                            range: false\n                        });\n                        scope.currentChart.updateOptions({\n                            drawCallback: function (g, isInit) {\n                                // timeOut(function () {\n                                // scope.refersh(g);\n                                // });\n                            }\n                        });\n                    }\n                });\n\n\n            });\n\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousemove', function (event) {\n                if (status) {\n                    timeOut(function () {\n                        scope.chartDateWindow = scope.currentChart.xAxisRange();\n                    });\n                }\n            });\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousedown', function (event) {\n                status = true;\n            });\n\n            //bind chart\n            if (basicInfo && basicInfo.childrenChart.length > 0) {\n                var param = {'graphs': [scope.currentChart], children: basicInfo.childrenChart};\n                if (scope.rangeSelectorBar) {\n                    param.graphs.push(scope.rangeSelectorBar);\n                }\n                scope.$emit('bindChildChartEvent', param);\n            }\n        }\n    }, 0);\n};\n\n//controller: ['$scope', '$element', '$window', '$interval', '$timeout', '$filter', '$location', function ($scope, $element, $window, $interval, $timeout, $filter, $location) {\nfgpWidgetGraph.prototype.controller = function controller ($scope, $element, $window, $interval, $timeout, $filter, $location, dataService, $rootScope, $stateParams) {\n    var element_id = $element.attr(\"id\");\n    $scope.elementId = element_id;\n\n    $scope['defaultColors'] = dataService.defaultColors();\n    var metadata = null;\n    var widgetData = null;\n    $scope.emptyDataShow = false;\n    // attributes----------------------\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.loadingShow = false;\n\n        $scope.intevals = {device: []};\n\n\n        // update chart\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if (widgetData.data.metadata.css) {\n            $scope.css = widgetData.data.metadata.css;\n        }\n\n        // get start and end from url\n        var begin_path = $stateParams.begin;\n        var end_path = $stateParams.end;\n        var init_flag = false;\n\n\n        //fix interval\n        $scope.fixInterval = false;\n        var noneFixed = [];\n        $scope.fixGraphWithGap = function () {\n            if ($scope.currentChart && $scope.fixInterval) {\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function (item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({file: fixed});\n                }\n            } else if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                $scope.currentChart.updateOptions({file: noneFixed});\n            }\n\n        };\n        $scope.fixGraphWithGap_click = function () {\n            if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function (item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({file: fixed});\n                }\n            } else if ($scope.currentChart && $scope.fixInterval) {\n                $scope.currentChart.updateOptions({file: noneFixed});\n            }\n\n        };\n\n\n        metadata = widgetData.data.metadata;\n        $scope.basicInfo = metadata.data.basic;\n        $scope.currentView = -1; // -1 is device view and 1 is scatter view\n\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.data_from = \"application\";\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            $scope.$watch('currentView', function (nObj, oObj) {\n                // change\n                if (nObj != oObj) {\n                    if (nObj == -1) {\n                        var rangeLevel = null;\n                        var otherLevels = [];\n                        angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                            if (level.rows.length > 0) {\n                                if (rangeLevel != null) {\n                                    otherLevels.push(rangeLevel);\n                                }\n                                rangeLevel = level.name;\n                            }\n                        });\n                        if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                            // show device view\n                            dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels).then(function (data) {\n                                initChart(data);\n                            }, function (error) {\n                                console.error(error);\n                            });\n                        }\n\n                    } else {\n                        //get relation config\n                        if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                            return;\n                        } else {\n                            var rangeLevel = null;\n                            var otherLevels = [];\n                            angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                if (level.rows.length > 0) {\n                                    if (rangeLevel != null) {\n                                        otherLevels.push(rangeLevel);\n                                    }\n                                    rangeLevel = level.name;\n                                }\n                            });\n                            if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                                // show children view\n                                dataService.childrenDeviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, metadata.data.source.relation, metadata.data.source.relation_group, rangeLevel, otherLevels).then(function (data) {\n                                    // get all device trees\n                                    if (data != null && data.length > 0) {\n                                        initChildrenChart(data);\n                                    } else {\n                                        return;\n                                    }\n\n                                }, function (error) {\n                                    console.error(error);\n                                });\n\n                            }\n                        }\n                    }\n                }\n                $scope.fixInterval = false;\n\n            });\n            // first time of showing chart\n            $scope.$watch('currentChart', function (newValue) {\n                if (newValue) {\n                    //device first level\n                    var rangeLevel = null;\n                    var otherLevels = [];\n                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                        if (level.rows.length > 0) {\n                            if (rangeLevel != null) {\n                                otherLevels.push(rangeLevel);\n                            }\n                            rangeLevel = level.name;\n                        }\n                    });\n                    //send a rest request\n                    dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels).then(function (data) {\n                        initChart(data);\n                    }, function (error) {\n                        console.error(error);\n                    });\n                }\n            });\n            $scope.$watch(\"chartDateTime\", function (newValue, oldValue) {\n                if (newValue.begin != null && newValue.end != null) {\n                    var expect_points = Math.floor($element.parent().width() / 2);\n                    // find a interval\n                    var expectedInterval = (newValue.end - newValue.begin) / expect_points;\n                    var conf = $scope.intevals.device;\n                    // device detail view\n                    var preOne = conf[0].interval;\n                    var lastOne = conf[conf.length - 1].interval;\n                    var cin = \"\";\n                    if (expectedInterval >= preOne) {\n                        expectedInterval = preOne;\n                    } else if (expectedInterval <= lastOne) {\n                        expectedInterval = lastOne;\n                    } else {\n                        for (var i = 1; i < conf.length; i++) {\n                            if (expectedInterval <= preOne && expectedInterval > conf[i].interval) {\n                                expectedInterval = preOne;\n                            } else {\n                                preOne = conf[i].interval;\n                                cin = conf[i].name;\n                            }\n                        }\n                    }\n                    $scope.currentIntervalName = \"\";\n\n                    angular$1.forEach(conf, function (config) {\n                        if (config.interval == expectedInterval) {\n                            $scope.currentIntervalName = config.name;\n                        }\n                    });\n                    $scope.loadingShow = true;\n                    if ($scope.currentView == 1) {\n                        // scatter detail view\n                        if (expectedInterval == conf[0].interval) {\n                            // set valueRange;\n                            // re cal max and min\n                            // $scope.childrenRangeConfig[\"dateWindow\"] = $scope.chartDateWindow;\n                            $scope.currentChart.updateOptions({dateWindow: $scope.chartDateWindow});\n                            // if ($scope.rangeSelectorBar) {\n                            // $scope.rangeSelectorBar.updateOptions({series: $scope.childRangeSeries});\n                            // }\n                            $scope.loadingShow = false;\n                        } else {\n                            var deviceInfo = [];\n                            var currentStore = \"\";\n                            // has problem....\n                            angular$1.forEach($scope.childTrees, function (device) {\n                                angular$1.forEach(device.trees, function (tree, index) {\n                                    if (expectedInterval == tree.frequency && index != 0) {\n                                        currentStore = tree.store;\n                                        deviceInfo.push({name: device.name, tree: tree.tree});\n                                    }\n                                });\n                            });\n\n                            dataService.devicesStoreData($rootScope.host, $rootScope.applicationName, deviceInfo, metadata.data.source.store, currentStore, newValue.begin, newValue.end).then(function (data) {\n                                var showData = [];\n                                angular$1.forEach(data, function (arr) {\n                                    var deviceData = [];\n                                    angular$1.forEach(arr.data, function (bucket) {\n                                        if (bucket.data != null) {\n                                            Array.prototype.push.apply(deviceData, bucket.data.slice(0, bucket.size));\n                                        }\n                                    });\n                                    showData.push({device: arr.device, data: deviceData});\n                                });\n                                //get configuration\n                                updateChildrenDetailChart(metadata, currentStore, $scope.rangeChildrenData, showData);\n\n                            }, function (data) {\n                                console.info(data);\n                            });\n                        }\n                        $scope.fixGraphWithGap();\n                    } else {\n                        // if expected interval is the biggest, show range data\n                        if (expectedInterval == conf[0].interval) {\n                            if (!($scope.chartDateWindow[0] instanceof Date)) {\n                                $scope.chartDateWindow[0] = new Date($scope.chartDateWindow[0]);\n                            }\n\n                            if (!($scope.chartDateWindow[1] instanceof Date)) {\n                                $scope.chartDateWindow[1] = new Date($scope.chartDateWindow[1]);\n                            }\n                            $scope.rangeConfig[\"dateWindow\"] = $scope.chartDateWindow;\n                            // set valueRange\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            if ($scope.rangeSelectorBar && $scope.rangeSeries) {\n                                $scope.rangeSelectorBar.updateOptions({series: $scope.rangeSeries});\n                            }\n                            // tell some other widgets, the graph is changed.\n                            $timeout(function () {\n                                $rootScope.$broadcast('chartDataChangeEvent', {\n                                    'id': element_id,\n                                    'group': 'device',\n                                    'data': {\n                                        'collection': conf[0].name,\n                                        'group': 'device',\n                                        'data': $scope.ordinalRangeData.filter(function (obj) {\n                                            return obj.timestamp >= $scope.rangeConfig[\"dateWindow\"][0].getTime() && obj.timestamp <= $scope.rangeConfig[\"dateWindow\"][1].getTime();\n                                        })\n                                    }\n                                });\n                            });\n\n                            $scope.loadingShow = false;\n                        } else {\n                            // cal tree\n                            angular$1.forEach($scope.trees, function (tree, index) {\n                                if (expectedInterval == tree.frequency && index != 0) {\n                                    // send request\n                                    dataService.deviceStoreData($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, newValue.begin, newValue.end).then(function (data) {\n                                        // udpate chart\n                                        var showData = [];\n                                        angular$1.forEach(data, function (arr) {\n                                            Array.prototype.push.apply(showData, arr.data.slice(0, arr.size));\n                                        });\n                                        showData = showData.filter(function (obj) {\n                                            return obj != null;\n                                        });\n                                        showData.sort(function (a, b) {\n                                            return a.timestamp > b.timestamp ? 1 : -1;\n                                        });\n                                        //get configuration\n                                        updateDetailChart(metadata, tree.store, $scope.rangeData, showData);\n\n                                        // tell some other widgets, the graph is changed.\n                                        $timeout(function () {\n                                            $rootScope.$broadcast('chartDataChangeEvent', {\n                                                'id': element_id,\n                                                'group': 'device',\n                                                'data': {\n                                                    'collection': tree.store,\n                                                    'group': 'device',\n                                                    'data': showData\n                                                }\n                                            });\n                                        });\n\n                                    }, function (data) {\n                                        console.info(data);\n                                    });\n                                }\n                            });\n                        }\n                        $scope.fixGraphWithGap();\n                    }\n                    $scope.status = false;\n                }\n            });// not working.....\n\n        });\n\n\n        var fetchData = function (values, node) {\n            if (node.children[0] != null) {\n                fetchData(values, node.children[0]);\n            }\n\n            if (node.children[1] != null) {\n                fetchData(values, node.children[1]);\n            }\n\n            if (node.children[0] == null && node.children[1] == null) {\n                Array.prototype.push.apply(values, node.data.array.slice(0, node.data.size));\n            }\n\n        };\n\n\n        $scope.trees = [];\n\n        $scope.rangeData = [];\n\n        $scope.ordinalRangeData = [];\n\n        var initChart = function (data) {\n            $scope.intevalforshow = [];\n            //\n            $scope.intevals.device = [];\n            var trees = data.trees;\n            $scope.trees = trees;\n            var rangeTree = null;\n            angular$1.forEach(trees, function (tree) {\n                if (tree.range) {\n                    rangeTree = tree;\n                }\n                $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n            });\n\n\n            // init chart with range data\n            var store = rangeTree.store;\n\n            // get all data\n            var allData = [];\n            fetchData(allData, rangeTree.tree);\n            allData = allData.filter(function (obj) {\n                return obj != null;\n            });\n            allData.sort(function (a, b) {\n                return a.timestamp > b.timestamp ? 1 : -1;\n            });\n\n\n            if ($scope.trees.length == 0 || allData.length == 0) {\n                $scope.emptyDataShow = true;\n                return;\n            }\n\n            // if the data only has one point. change the data range to bigger\n            if (allData.length == 1) { //  means only one point.\n                var newData = [];\n                // add 1 points into both side\n                var thePoint = allData[0];\n                var timestamp = thePoint.timestamp;\n                var currentInterval = $scope.intevals.device[0].interval;\n                newData.push({timestamp: timestamp - currentInterval});\n                Array.prototype.push.apply(newData, allData);\n                newData.push({timestamp: timestamp + currentInterval});\n                allData = newData;\n            }\n            $scope.ordinalRangeData = allData;\n            // get configuration and make real data\n            updateChart(metadata, store, allData);\n        };\n\n        var initChildrenChart = function (deviceDatas) {\n            var devicesInfo = {};\n            $scope.intevals.device = [];\n            //range data with all device\n            $scope.childTrees = [];\n            angular$1.forEach(deviceDatas, function (deviceData) {\n                var device = deviceData.device;\n                var trees = deviceData.trees;\n                $scope.childTrees.push({name: device.name, trees: trees});\n                var rangeTree = null;\n                angular$1.forEach(trees, function (tree) {\n                    if (tree.range) {\n                        rangeTree = tree;\n                    }\n\n                    var flag = false;\n                    angular$1.forEach($scope.intevals.device, function (interval) {\n                        if (interval.name == tree.store && interval.interval == tree.frequency) {\n                            // has same one\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n                    }\n\n                });\n\n                if (rangeTree != null) {\n                    var deviceObj = devicesInfo[device.name] = {};\n                    // get all data\n                    var allData = [];\n                    fetchData(allData, rangeTree.tree);\n                    allData = allData.filter(function (obj) {\n                        return obj != null;\n                    });\n                    allData.sort(function (a, b) {\n                        return a.timestamp > b.timestamp ? 1 : -1;\n                    });\n                    //\n                    deviceObj[\"range\"] = rangeTree;\n                    deviceObj[\"data\"] = allData;\n                } else {\n                    console.info(device.name + \" has none data.\");\n                }\n\n            });\n\n            updateChildrenChart(metadata, devicesInfo);\n        };\n\n\n        var updateChildrenChart = function (metadata, devicesInfo) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n            var allLines = [];\n            var allXLabels = [];\n            angular$1.forEach(devicesInfo, function (device, key) {\n                angular$1.forEach(device.data, function (item) {\n                    var flag = false;\n                    angular$1.forEach(allXLabels, function (label) {\n                        if (label.getTime() == item.timestamp) {\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        allXLabels.push(new Date(item.timestamp));\n                    }\n\n\n                });\n            });\n            // order\n            allXLabels.sort(function (a, b) {\n                return a > b ? 1 : -1;\n            });\n\n            // make all line\n            angular$1.forEach(allXLabels, function (label) {\n                allLines.push([label]);\n            });\n\n\n            var yRange = {min: null, max: null};\n            var showY2axis = false;\n            var counter = 0;\n            angular$1.forEach(devicesInfo, function (device, key) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                angular$1.forEach(collections, function (collection) {\n                    if (collection.name == device.range.store) {\n                        $scope.currentIntervalName = device.range.store;\n                        var originalData = device.data;\n\n                        // always same for each device\n                        if (collection.rows[0].yaxis == 0) {\n                            series[collection.rows[0].label] = {'axis': 'y1'};\n                        } else {\n                            series[collection.rows[0].label] = {'axis': 'y2'};\n                            showY2axis = true;\n                        }\n                        labels.push(key);\n                        // make a line\n                        var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                        // add value\n                        angular$1.forEach(allLines, function (realLine, index) {\n\n                            var flag = false;\n                            angular$1.forEach(originalData, function (odata) {\n                                if (realLine[0].getTime() == odata.timestamp) {\n                                    try {\n                                        var value = f(odata);\n                                        realLine.push(value);\n                                        if (yRange.min == null) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max == null) {\n                                            yRange.max = value;\n                                        }\n\n                                        if (yRange.min > value) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max < value) {\n                                            yRange.max = value;\n                                        }\n                                    } catch (ex) {\n                                        realLine.push(null);\n                                    }\n                                    flag = true;\n                                }\n                            });\n\n                            if (!flag) {\n                                realLine.push(null);\n                            }\n                        });\n\n\n                    }\n                });\n            });\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n            //update chart\n\n            if ($scope.currentChart) {\n                $scope.rangeChildrenData = allLines;\n\n                if (showY2axis) {\n                    $scope.childrenRangeConfig = {\n                        'labelsKMB': true,\n                        'file': allLines,\n                        'labels': ['x'].concat(labels),\n                        'ylabel': leftAndRight.left,\n                        'y2label': leftAndRight.right,\n                        'series': series,\n                        'colors': colors,\n                        'axes': {\n                            'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                            'y2': {}\n                        }\n                        // showRangeSelector: true\n                    };\n                } else {\n                    var newLines = [];\n                    angular$1.copy(allLines, newLines);\n                    angular$1.forEach(newLines, function (line) {\n                        line.push(NaN);\n                    });\n                    series[\"span_y2\"] = {'axis': 'y2'};\n                    $scope.childrenRangeConfig = {\n                        'drawGapEdgePoints': true,\n                        'pointSize': 3,\n                        'labelsKMB': true,\n                        'file': newLines,\n                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                        'ylabel': leftAndRight.left,\n                        'y2label': \"\",\n                        'series': series,\n                        'colors': colors,\n                        'axes': {\n                            'y': {valueRange: [yRange.min, yRange.max]},\n                            'y2': {\n                                axisLabelFormatter: function (d) {\n                                    return '';\n                                }\n                            }\n                        }\n                        // showRangeSelector: true\n                    };\n                }\n                $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n                $scope.loadingShow = false;\n            }\n\n\n        };\n\n\n        var updateChildrenDetailChart = function (metadata, store, rangeData, allData) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var newLines = [];\n            var newTime = [];\n            var series = {};\n            var labels = [];\n            var colors = [];\n            var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n            var yRange = {min: null, max: null};\n            var counter = 0;\n            var showY2axis = null;\n            angular$1.forEach(allData, function (device) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                if (device.data.length > 0) {\n                    labels.push(device.device);\n                    angular$1.forEach(collections, function (collection) {\n                        if (collection.name == store) {\n                            $scope.currentIntervalName = store;\n                            if (collection.rows[0].yaxis == 0) {\n                                series[collection.rows[0].label] = {'axis': 'y1'};\n                            } else {\n                                series[collection.rows[0].label] = {'axis': 'y2'};\n                                showY2axis = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \")return \" + collection.rows[0].value + \";return null;}\");\n                            var tempData = [];\n                            var tempTime = [];\n                            // make data\n                            angular$1.forEach(device.data, function (data) {\n                                var dateTime = new Date(data.timestamp);\n                                try {\n                                    var value = f(data);\n                                    tempData.push({timestamp: dateTime, value: value});\n\n                                    if (yRange.min == null) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max == null) {\n                                        yRange.max = value;\n                                    }\n\n                                    if (yRange.min > value) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max < value) {\n                                        yRange.max = value;\n                                    }\n\n                                } catch (e) {\n                                    tempData.push({timestamp: dateTime, value: null});\n                                }\n                                tempTime.push(dateTime.getTime());\n                            });\n                            newTime = newTime.concat(tempTime.filter(function (item) {\n                                return newTime.indexOf(item) < 0;\n                            }));\n                            newLines.push({device: device.device, data: tempData});\n                        }\n                    });\n                }\n            });\n\n            var chartData = [];\n            // time needs sort!!!\n            newTime = newTime.sort();\n            angular$1.forEach(newTime, function (nt) {\n                chartData.push([new Date(nt)]);\n            });\n\n\n            angular$1.forEach(newLines, function (line) {\n                angular$1.forEach(chartData, function (timeTicket) {\n                    // line data\n                    var flag = false;\n                    var lineData = line.data;\n                    for (var i = 0; i < lineData.length; i++) {\n                        if (lineData[i].timestamp.getTime() == timeTicket[0].getTime()) {\n                            timeTicket.push(lineData[i].value);\n                            flag = true;\n                            break;\n                        }\n                    }\n                    if (flag != true) {\n                        // we should use \"NaN\"\n                        timeTicket.push(NaN);\n                    }\n                });\n            });\n\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n\n\n            if (chartData.length == 0) {\n                $scope.currentChart.updateOptions({\n                    'file': []\n                });\n                $scope.loadingShow = false;\n            } else {\n                if ($scope.currentChart) {\n\n                    if (showY2axis) {\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'labelsKMB': true,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80}\n                            }\n                            // showRangeSelector: true\n                        });\n                    } else {\n                        var newLines = [];\n                        angular$1.copy(chartData, newLines);\n                        angular$1.forEach(newLines, function (line) {\n                            line.push(NaN);\n                        });\n                        series[\"span_y2\"] = {axis: 'y2'};\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'labelsKMB': true,\n                            'file': newLines,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                                \"y2\": {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    }\n                    $scope.loadingShow = false;\n                }\n            }\n\n\n        };\n\n\n        /**\n         * update detail chart\n         * @param metadata\n         * @param store\n         * @param rangeData\n         * @param allData\n         */\n        var updateDetailChart = function (metadata, store, rangeData, allData) {\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{min: null, max: null}, {min: null, max: null}];\n            angular$1.forEach(collections, function (collection) {\n                if (collection.name == store) {\n                    angular$1.forEach(allData, function (line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    // var yRange = {'min': null, 'max': null};\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function (row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {'axis': 'y1'};\n                        } else {\n                            series[row.label] = {'axis': 'y2'};\n                            showY2axis = true;\n                        }\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \")return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function (realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    angular$1.forEach(yRanges, function (yrange) {\n                        if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                            yrange.min = yrange.min - (yrange.min) * 0.10;\n                            yrange.max = yrange.max + (yrange.max) * 0.10;\n                        }\n                    });\n\n\n                    if (allLines.length == 0) {\n                        $scope.currentChart.updateOptions({\n                            'file': []\n                        });\n                        if ($scope.rangeSelectorBar) {\n                            $scope.currentChart[\"xAxisZoomRange\"] = $scope.rangeSelectorBar.xAxisExtremes();\n                        }\n                        $scope.loadingShow = false;\n                    } else {\n                        if ($scope.currentChart) {\n\n                            if (showY2axis) {\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n                            } else {\n\n                                var newLines = [];\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function (line) {\n                                    line.push(NaN);\n                                });\n\n                                series[\"span-Y2\"] = {axis: 'y2'};\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            axisLabelFormatter: function (d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n\n                            }\n\n                            $scope.loadingShow = false;\n                        }\n                    }\n\n\n                }\n            });\n\n\n        };\n\n        /**\n         * update range chart\n         * @param metadata\n         * @param store\n         * @param allData\n         */\n        var updateChart = function (metadata, store, allData) {\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{min: null, max: null}, {min: null, max: null}];\n            angular$1.forEach(collections, function (collection) {\n                if (collection.name == store) {\n                    $scope.currentIntervalName = store;\n                    angular$1.forEach(allData, function (line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    $scope.rangeSeriesNumber = collection.rows.length;\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function (row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {'axis': 'y1'};\n                        } else {\n                            series[row.label] = {'axis': 'y2'};\n                            showY2axis = true;\n                        }\n\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function (realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    if ($scope.currentChart) {\n                        $scope.rangeData = allLines;\n                        var basicInfo = $scope.basicInfo;\n                        if (basicInfo && basicInfo.range_show) {\n                            var rangeBarLabels = [];\n                            for (var i = 0; i < labels.length; i++) {\n                                rangeBarLabels.push(\"l\" + i);\n                            }\n                            var series_range = {'l0': {axis: 'y1'}};\n                            if (showY2axis) {\n                                //noinspection JSDuplicatedDeclaration\n                                series_range = {\n                                    'l0': {axis: 'y1'},\n                                    'l0': {axis: 'y2'}\n                                };\n                                $scope.rangeSeries = series_range;\n\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': allLines,\n                                    'labels': ['x'].concat(rangeBarLabels),\n                                    'series': series_range\n                                });\n                            } else {\n                                series_range[\"span_y2\"] = {axis: 'y2'};\n                                $scope.rangeSeries = series_range;\n                                var newLines = [];\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function (line) {\n                                    line.push(NaN);\n                                });\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': newLines,\n                                    'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                    'series': series_range\n                                });\n                            }\n\n\n                        }\n\n                        angular$1.forEach(yRanges, function (yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max) * 0.10;\n                            }\n                        });\n\n\n                        // if graph has 2 yAxis or a yAxis\n\n\n                        if (showY2axis) {\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'labelsKMB': true,\n                                'file': allLines,\n                                'labels': ['x'].concat(labels),\n                                'ylabel': leftAndRight.left,\n                                'y2label': leftAndRight.right,\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                    'y2': {\n                                        'labelsKMB': true,\n                                        valueRange: [yRanges[1].min, yRanges[1].max],\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        } else {\n                            series['span_y2'] = {axis: 'y2'};\n                            var newLines = [];\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function (line) {\n                                line.push(NaN);\n                            });\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'labelsKMB': true,\n                                'file': newLines,\n                                'labels': ['x'].concat(labels).concat(['span_y2']),\n                                'ylabel': leftAndRight.left,\n                                'y2label': \"\",\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                    'y2': {\n                                        axisLabelFormatter: function (d) {\n                                            return '';\n                                        },\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        }\n\n\n                        if (basicInfo && basicInfo.range_show) {\n                            Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                zoom: true,\n                                selection: false,\n                                range: false\n                            });\n                        }\n\n\n                        if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                            // keep the current range bar\n\n                        } else {\n\n                            $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            if (begin_path && end_path && !init_flag) {\n                                // $scope.chartDateTime = {\n                                // \"begin\": new Date(new Number(begin_path)),\n                                // \"end\": new Date(new Number(end_path))\n                                // };\n                                $scope.chartDateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                init_flag = true;\n                            } else {\n                                $scope.chartDateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                $scope.rangeConfig.dateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            }\n\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n\n                        }\n\n\n                        //bind\n                        $scope.loadingShow = false;\n                    }\n\n                }\n            });\n        };\n\n        $scope.chartDateTime = {begin: null, end: null};\n\n        // function for show one\n        $scope.showOne = function (deviceName) {\n\n            if ($rootScope['standalone'] && $rootScope['standalone'] == true) {\n                return false;\n            }\n\n\n            // device type is\n            if ($location.url().indexOf('/app/page/param/') != -1) {\n                //open window\n                $window.open(\"/#/app/page/param/\" + $rootScope.applicationName + \"/\" + metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1]));\n            } else {\n                //open window\n                $window.open(\"/#\" + $location.url().replace(\"show\", \"param\").replace($location.url().substr($location.url().lastIndexOf('/', $location.url().lastIndexOf('/') - 1) + 1), metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1])));\n            }\n\n        };\n\n        var timer = null;\n        $scope.refersh = function (g) {\n            if (timer) {\n                $timeout.cancel(timer);\n            }\n            timer = $timeout(function () {\n                $scope.chartDateTime = {begin: g.xAxisRange()[0], end: g.xAxisRange()[1]};\n                $scope.chartDateWindow = g.xAxisRange();\n            }, 600);\n        };\n\n\n    }\n\n};\n\n\nfgpWidgetGraph.buildFactory = function buildFactory ($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    fgpWidgetGraph.instance = new fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams);\n    return fgpWidgetGraph.instance;\n};\n\nfgpWidgetGraph.$inject = ['$timeout', 'dataService', '$rootScope', '$interval', '$filter', '$location', '$stateParams'];\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPageTitle = function fgpWidgetPageTitle() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetPageTitle.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //drag-channel  item means this widget accepts items\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"\">' +\n        '<h1>{{css.title.text}}</h1>' +\n        '<h3>{{css.subtitle.text}}</h3>' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div>';\n    return dom_show;\n};\n\n\nfgpWidgetPageTitle.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"minHeight\"] = metadata.css.minHeight;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n        $scope.css[\"title\"] = metadata.css.title;\n        $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n        $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n        $scope.css[\"subtitle\"] = metadata.css.subtitle;\n        $scope.css[\"subtitle\"][\"color\"] = metadata.css.subtitle.color;\n        $scope.css[\"subtitle\"][\"show\"] = metadata.css.subtitle.show;\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"title\"].text + \"}\");\n            $scope.css[\"title\"].text = f(deviceData.device);\n            f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"subtitle\"].text + \"}\");\n            $scope.css[\"subtitle\"].text = f(deviceData.device);\n        });\n    }\n\n\n\n\n};\n\nfgpWidgetPageTitle.buildFactory = function buildFactory () {\n    fgpWidgetPageTitle.instance = new fgpWidgetPageTitle();\n    return fgpWidgetPageTitle.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetMap = function fgpWidgetMap() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetMap.prototype.template = function template (element, attrs) {\n    var dom_show = '<div class = \"{{css.width}}\" style=\"padding:0px;height:{{css.height}}px;\" map-lazy-load=\"https://maps.google.com/maps/api/js\">' +\n        '<ng-map style=\"height: 100%;width: 100%;\" center=\"{{center}}\" zoom=\"15\">' +\n        '<marker on-click=\"map.showInfoWindow(\\'info_' + attrs.id + '\\')\" id=\"marker_' + attrs.id + '\" ng-repeat=\"item in markers\" icon=\"{{item.image}}\" position=\"{{item.latitude}},{{item.longitude}}\" title=\"{{item.name}}\" animation=\"Animation.DROP\" ></marker>' +\n        '</ng-map>' +\n        '</div>' +\n        '';\n    return dom_show;\n};\n\n\nfgpWidgetMap.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n            var location = {};\n            $scope.markers = [];\n            $scope.details = $scope.$parent.device;\n\n\n            // show one point.\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { return \" + item.value + \";}\");\n                    var result = f(deviceData.device);\n                    if (result) {\n                        location[item.label] = result;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n                } catch (error) {\n                    // show image\n                    if (\"image\" == item.label) {\n                        location[item.label] = item.value;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n\n                }\n            });\n\n\n            //do not show\n            if (location.latitude == \"\" || location.longitude == \"\") {\n                //hard code. the location is Melbourne\n                location.latitude = \"-37.810000\";\n                location.longitude = \"144.950000\";\n                $scope.center = [location.latitude, location.longitude];\n                // $scope.markers.push(location);\n            } else {\n                $scope.center = [location.latitude, location.longitude];\n                $scope.markers.push(location);\n            }\n\n        });\n    }\n\n};\n\nfgpWidgetMap.buildFactory = function buildFactory () {\n    fgpWidgetMap.instance = new fgpWidgetMap();\n    return fgpWidgetMap.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetDeviceDetail = function fgpWidgetDeviceDetail() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetDeviceDetail.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '<div class=\"row\" ng-repeat=\"item in data\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"text-align: right; font-weight: bold;line-height: 30px;\">{{item.label}}</div><div class=\"col-xs-8 col-md-8\" style=\"text-align: left;line-height: 30px;\">{{item.value}}</div>' +\n        '</div>' +\n        '</div>' +\n        '<div id=\"detail_status_' + attrs.id + '\" class=\"row\" style=\"min-height: 50px;\">' +\n        '</div>' +\n        '</div>';\n};\n\n\nfgpWidgetDeviceDetail.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n\n            $scope.data = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = \"\";\n                    $scope.data.push(item);\n                }\n            });\n\n\n        });\n\n    }\n\n};\n\n\nfgpWidgetDeviceDetail.buildFactory = function buildFactory () {\n    fgpWidgetDeviceDetail.instance = new fgpWidgetDeviceDetail();\n    return fgpWidgetDeviceDetail.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetSpan = function fgpWidgetSpan() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetSpan.prototype.template = function template (scope, element) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '</div>';\n};\n\nfgpWidgetSpan.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n};\n\nfgpWidgetSpan.buildFactory = function buildFactory () {\n    fgpWidgetSpan.instance = new fgpWidgetSpan();\n    return fgpWidgetSpan.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPie = function fgpWidgetPie($timeout) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n};\n\n\nfgpWidgetPie.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" ><div style=\"height: {{css.height}}px;\">' +\n        '<canvas class=\"fgpPieChart\"></canvas>' +\n        '</div>' +\n        '</div>';\n};\n\nfgpWidgetPie.prototype.link = function link (scope, element) {\n\n    this.$timeout(function () {\n        var ctx = element.find(\"canvas\")[0];\n        scope.chart = new Chart(ctx, {\n            type: 'pie',\n            data: {\n                labels: ['1'],\n                datasets: [\n                    {\n                        data: [1],\n                        backgroundColor: []\n                    }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                animation: false,\n                legend: {display: true}\n            }\n        });\n    });\n};\n\n\nfgpWidgetPie.prototype.controller = function controller ($scope, $element, $timeout) {\n\n    var id = $element.attr(\"id\");\n    var metadata = null;\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n            $scope.showdata = widgetData.data;\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n            $scope.data = [];\n            var colors = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = item.value;\n                    $scope.data.push(item);\n                }\n                if (item.color) {\n                    colors.push(item.color);\n                } else {\n                    colors.push('#' + (function co(lor) {\n                            return (lor +=\n                                [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                            && (lor.length == 6) ? lor : co(lor);\n                        })(''));\n                }\n            });\n            // timeout\n            $scope.pieData = {labels: [], value: []};\n            $timeout(function () {\n                // create data\n                angular$1.forEach($scope.data, function (item) {\n                    $scope.pieData.labels.push(item.label);\n                    $scope.pieData.value.push(item.value);\n                });\n\n                $scope.chart.data.labels = $scope.pieData.labels;\n                $scope.chart.data.datasets[0].data = $scope.pieData.value;\n                $scope.chart.data.datasets[0].backgroundColor = colors;\n                // update chart\n                $scope.chart.update();\n            });\n\n        });\n\n\n    }\n\n\n};\n\nfgpWidgetPie.buildFactory = function buildFactory ($timeout) {\n    fgpWidgetPie.instance = new fgpWidgetPie($timeout);\n    return fgpWidgetPie.instance;\n};\nfgpWidgetPie.$inject = ['$timeout'];\n\n/**\n * Created by eric on 22/11/16.\n */\n\nvar fgpDockerButton = function fgpDockerButton() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\n\nfgpDockerButton.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"col-xs-12 btn-group\" role=\"group\" style=\"padding: 2px;\" aria-label=\"...\">' +\n        '<div style=\"float: right;\">' +\n        '<button type=\"button\" class=\"btn btn-{{button.color}} btn-xs\" ' +\n        ' ng-click=\"action(button)\" ng-repeat=\"button in buttons\" ng-show=\"checkShow(button)\"><i class=\"fa {{button.icon}}\"' +\n        ' aria-hidden=\"true\"></i>' +\n        '</button>' +\n        '</div>' +\n        '</div>';\n    return show_dom;\n};\n\n\nfgpDockerButton.prototype.controller = function controller ($scope, $element, $http, $timeout) {\n\n    $scope.stats = \"\";\n\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var confData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                confData = data.data;\n            }\n        }\n    });\n\n    var repeateId = [];\n\n    var pageDevice = null;\n    $scope.$on('deviceInfoEvent', function (event, data) {\n        pageDevice = data.device;\n    });\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n        if (data.application === repeateId[2] && data.container === repeateId[0] && data.host === repeateId[1]) {\n            $scope.stats = data.stats;\n        }\n    });\n\n    $scope.checkShow = function (button) {\n\n\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            return true;\n        }\n\n\n        if (button.type === \"stop\") {\n            if ($scope.stats === \"running\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"start\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"delete\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    // how many buttons?\n    $scope.buttons = [];\n\n    if ($scope.$parent.repeat) {\n        repeateId = $scope.$parent.repeat.split(\",\");\n    }\n\n    angular.forEach(configuration, function (item) {\n        if (item.label == \"buttons\") {\n            $scope.buttons = item.value;\n        }\n    });\n\n    $scope.healthinfo = \"\";\n\n\n    // submit \"action\" to rest api\n    $scope.action = function (button) {\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/exec',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    deviceName: pageDevice.name,\n                    deviceKey: pageDevice.key.id,\n                    relationship: 'node_application'\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        } else {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/hosts/action',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    container: repeateId[0],\n                    host: repeateId[1],\n                    application: repeateId[2]\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        }\n\n    };\n};\n\n\nfgpDockerButton.buildFactory = function buildFactory () {\n    fgpDockerButton.instance = new fgpDockerButton();\n    return fgpDockerButton.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetRepeatContainer = function fgpWidgetRepeatContainer($http) {\n    this.restrict = 'E';\n    this.scope = {};\n    this._$http = $http;\n};\n\nfgpWidgetRepeatContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{item.device.key.id}}\" ng-repeat=\"item in items\" emit-last-repeater-element style=\"padding-left: 2px; padding-right: 2px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding-left: 1px; padding-right: 1px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}};\"><i class=\"fa fa-desktop\" aria-hidden=\"true\" style=\"margin-right: 5px;\"></i>{{item.device.name}}</div>' +\n        '<div class=\"panel-body\"  style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\'}};\">' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" ng-repeat=\"item in items\" repeat-id=\"{{item.device.key.id}}\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;padding-left: 2px; padding-right: 2px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n};\n\nfgpWidgetRepeatContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout, $http, $location, $stateParams, $websocket) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    // all items\n    $scope.items = [];\n\n    $scope.labelstyle = [\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"];\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n\n    $scope.listStyle = \"list\";\n\n    $scope.labels = [];\n\n    var deviceType = $stateParams.type;\n    var deviceName = $stateParams.device;\n\n    if (metadata.data) {\n\n\n        $scope.labels = [];\n\n\n        if (metadata.data.datasource.labels) {\n            $scope.labels = metadata.data.datasource.labels.split(\" \");\n        }\n\n        if (metadata.data.datasource.style) {\n            $scope.listStyle = metadata.data.datasource.style;\n        }\n\n        // show different type\n        var relation = metadata.data.datasource.type;\n        $scope.items = [];\n        $http({\n            method: 'GET',\n            url: 'api/docker/repeat/' + deviceType + '/' + deviceName + '/' + relation\n        }).then(function (data) {\n            $scope.items = data.data;\n        }, function (error) {\n            console.error(error);\n        });\n\n        // I'm ready. please give all my children to me~\n        // call stage\n        $scope.$on('LastRepeaterElement', function () {\n            $timeout(function () {\n                $scope.$emit('bindChildRepeatEvent', {\n                    id: element_id\n                });\n            });\n        });\n\n\n    }\n    //establish a connection with websocket\n    var dataStream = $websocket('ws://' + $location.host() + \":\" + $location.port() + '/ws/hosts');\n    dataStream.onMessage(function (message) {\n        try {\n            var backData = JSON.parse(message.data);\n            if (backData.hasOwnProperty(\"container\")) {\n                // tell children\n                $scope.$parent.$broadcast('containerStatusEvent', backData);\n                // update health-check status\n                angular.forEach($scope.items, function (item) {\n                    if (backData.application == item.device.key.id) {\n                        if (backData.config.State.Health) {\n                            item[\"health\"] = backData.config.State.Health.Status;\n                        } else {\n                            item[\"health\"] = null;\n                        }\n\n                        if (backData.stats == \"exited\") {\n                            item[\"health\"] = null;\n                        }\n                    }\n                });\n            }\n        } catch (e) {\n        }\n    });\n\n    $scope.healthcheck = function (item) {\n        // call server and get the exception.\n        dataService.healthcheck(item.name, item.device.key.id);\n    };\n\n\n};\n\n\nfgpWidgetRepeatContainer.buildFactory = function buildFactory ($http) {\n    fgpWidgetRepeatContainer.instance = new fgpWidgetRepeatContainer($http);\n    return fgpWidgetRepeatContainer.instance;\n};\n\nfgpWidgetRepeatContainer.$inject = ['$http'];\n\n/**\n * Created by eric on 25/11/16.\n */\nvar fgpImage = function fgpImage() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpImage.prototype.template = function template (scope, element) {\n    return '' +\n        '<img src=\"{{url}}\" style=\"width:{{css.width}}px;height:{{css.height}}px;\">' +\n        '';\n};\n\nfgpImage.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"0\",\n        height: \"0\"\n    };\n\n    $scope.url = \"\";\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n    if($scope.showdata.metadata.data){\n        $scope.url = $scope.showdata.metadata.data.url;\n    }\n};\n\nfgpImage.buildFactory = function buildFactory () {\n    fgpImage.instance = new fgpImage();\n    return fgpImage.instance;\n};\n\n/**\n * Created by eric on 28/11/16.\n */\nvar fgpIcon = function fgpIcon() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpIcon.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"{{css.width}}\" style=\"margin-top: 10px;background-color: {{css.background.color}};border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"padding: 5px;\">' +\n        '<i class=\"fa fa-{{icon}}\" style=\"font-size: 60px;\"></i>' +\n        '</div>' +\n        '<div class=\"col-xs-8 col-md-8\">' +\n        '<div style=\"text-align: right;font-size: large;\"><label>{{title}}</label></div>' +\n        '<div style=\"text-align: right;font-size: small;\"><label>{{desc}}</label></div>' +\n        '</div>' +\n        '</div>' +\n        '';\n    return show_dom;\n};\n\nfgpIcon.prototype.controller = function controller ($scope, $element) {\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.icon = configuration.content.icon;\n\n    $scope.desc = configuration.content.desc;\n\n    $scope.title = \"\";\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + configuration.content.f + \"}\");\n            $scope.title = f(deviceData.device);\n        });\n\n    }\n\n};\n\n\nfgpIcon.buildFactory = function buildFactory () {\n    fgpIcon.instance = new fgpIcon();\n    return fgpIcon.instance;\n};\n\n/**\n * Created by eric on 29/11/16.\n */\nvar fgpWidgetAppContainer = function fgpWidgetAppContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetAppContainer.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //<div class=\"alert alert-info\" role=\"alert\">...</div>\n    return '' +\n        '<div ng-show=\"showstyle == \\'list\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-12 col-xs-12  alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px; text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n\n        '<div ng-show=\"showstyle == \\'grid\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-6 col-xs-6 alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px;text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n        '';\n};\n\nfgpWidgetAppContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.containers = [];\n    $scope.containerswithTimeout = [];\n    var metadata = widgetData.data.metadata;\n    // should be a host id\n    var repeat = $scope.$parent.repeat;\n\n    $scope.showstyle = \"list\";\n\n    $scope.host = repeat;\n\n\n    // I'm ready. please give all my children to me~\n    // call stage\n    $scope.$on('LastRepeaterElement', function () {\n        $timeout(function () {\n            $scope.$emit('bindChildRepeatEvent', {\n                id: element_id\n            });\n        });\n    });\n\n    $timeout(function () {\n        var pp = $scope.$emit('listStyleEvent', {\n            id: widgetData.data.parent,\n            callback: function (style) {\n                $scope.showstyle = style;\n            }\n        });\n\n    });\n\n    $scope.gotoContainer = function (container) {\n        // \"device type and device name\" display by a dynamic page!\n        console.info(container);\n        return false;\n    };\n\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n\n        if (data.host == repeat) {\n            //f\n            var labels = [];\n\n            if (metadata.data.datasource.labels) {\n                labels = metadata.data.datasource.labels.split(\" \");\n            }\n            var showLabel = \"\";\n            angular.forEach(labels, function (label) {\n                showLabel += data.config[label] + \" \";\n            });\n\n            var app = {\n                id: data.container,\n                label: showLabel,\n                application: data.application,\n                name: data.deviceName,\n                type: data.deviceType\n            };\n            var flag = false;\n            angular.forEach($scope.containers, function (container) {\n                if (container.id == app.id) {\n                    // update timer\n                    var timer_index = -1;\n                    var timer = $scope.containerswithTimeout.filter(function (item, index) {\n                        if(item.app.id == app.id){\n                            timer_index = index;\n                            return true;\n                        }else{\n                            false;\n                        }\n                    });\n                    $timeout.cancel(timer[0].t);\n                    if (data.stats != \"removed\") {\n                        var newTimer = $timeout(function () {\n                            var index = $scope.containers.indexOf(app);\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }, 30000);\n                        timer[0].t = newTimer;\n                        flag = true;\n                    } else {\n                        var index = -1;\n                        angular.forEach($scope.containers, function (item, itemIndex) {\n                            if (item.id === app.id) {\n                                index = itemIndex;\n                            }\n                        });\n                        if (index != -1 && timer_index != -1) {\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            flag = true;\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }\n                    }\n                }\n            });\n\n            if (!flag) {\n                // add to\n                $scope.containers.push(app);\n                // delete it after 30 seconds!\n                var t = $timeout(function () {\n                    var index = $scope.containers.indexOf(app);\n                    $scope.containers.splice(index, 1);\n                }, 30000);\n                $scope.containerswithTimeout.push({t: t, app: app});\n            }\n        }\n\n    });\n\n};\n\nfgpWidgetAppContainer.buildFactory = function buildFactory () {\n    fgpWidgetAppContainer.instance = new fgpWidgetAppContainer();\n    return fgpWidgetAppContainer.instance;\n};\n\nfgpWidgetAppContainer.$inject = [];\n\n/**\n * Created by ericwang on 21/06/2016.\n */\nvar fgpWidgetChartTable = function fgpWidgetChartTable() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetChartTable.prototype.template = function template (element, attrs) {\n    return '<div style=\"padding:0px;height: {{css.height}}px;position: relative; overflow-y : auto;\">' +\n        '<table st-table=\"rowCollection\" class=\"col-md-12 table table-striped\">' +\n        '<thead>' +\n        '<tr>' +\n        '<th ng-repeat=\"column in sampledata.columns\">{{column.label}}</th>' +\n        '</tr>' +\n        '</thead>' +\n        '<tbody>' +\n        '<tr ng-repeat=\"value in sampledata.values\">' +\n        '<td ng-repeat=\"col in sampledata.columns\">{{value[col.label] | tableformatter: value : col.label : col.formatter}}</td>' +\n        '</tr>' +\n        '</tbody>' +\n        '</table>' +\n        '</div>';\n};\n\nfgpWidgetChartTable.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    //show\n    $scope.showdata = widgetData.data;\n\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n\n\n    $scope.$on('chartDataChangeEvent', function (event, chartData) {\n        var chartId = chartData.id;\n        if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"device\") {\n            $scope.sampledata = {};\n            // make data\n            var collectionName = chartData.data.collection;\n            var groupName = chartData.group;\n            var columns = [];\n            //get group and collection configuration\n            angular$1.forEach($scope.showdata.metadata.data.groups, function (group) {\n                if (group.name == groupName) {\n                    angular$1.forEach(group.collections, function (collection) {\n                        if (collection.name === collectionName) {\n                            columns = collection.rows;\n                        }\n                    });\n                }\n            });\n\n\n            $scope.sampledata.columns = [];\n\n            angular$1.forEach(columns, function (column) {\n                $scope.sampledata.columns.push({label: column.label, formatter: column.formatter});\n            });\n            $scope.sampledata.values = [];\n            angular$1.forEach(columns, function (column) {\n                var f = new Function(\"data\", \"with(data) { if(\" + column.value + \") return \" + column.value + \";return '';}\");\n                angular$1.forEach(chartData.data.data, function (record, index) {\n                    if ($scope.sampledata.values.length < chartData.data.data.length) {\n                        //add new one\n                        var item = {};\n                        item[column.label] = f(record);\n                        $scope.sampledata.values.push(item);\n                    } else {\n                        $scope.sampledata.values[index][column.label] = f(record);\n                    }\n                });\n            });\n\n            var cleanData = [];\n            angular$1.forEach($scope.sampledata.values, function (value, index) {\n                var flag = false;\n                angular$1.forEach(columns, function (column) {\n                    if (value[column.label] && value[column.label] != \"\") {\n                        flag = true;\n                    }\n                });\n\n                if (flag) {\n                    cleanData.push(value);\n                }\n            });\n            $scope.sampledata.values = cleanData;\n\n        } else if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"relation\") {\n            //\n\n\n        }\n\n    });\n\n\n};\n\nfgpWidgetChartTable.buildFactory = function buildFactory () {\n    fgpWidgetChartTable.instance = new fgpWidgetChartTable();\n    return fgpWidgetChartTable.instance;\n};\n\n/**\n * Created by ericwang on 10/06/2016.\n */\n// angular module\nangular$1.module('fgp-kit', ['ngMap','ui.router']).service('dataService', dataAccessApi.buildFactory)\n    .filter('removeSlash', function () {\n        return function (input) {\n            if (input.startsWith(\"/\")) {\n                return input.substring(1, input.length);\n            }\n            return input;\n        }\n    })\n    .directive('fgpContainer', fgpStage.buildFactory)\n    .directive('widgetContainer', fgpWidgetContainer.buildFactory)\n    .directive('widgetGraph', fgpWidgetGraph.buildFactory)\n    .directive('widgetPageTitle', fgpWidgetPageTitle.buildFactory)\n    .directive('widgetMap', fgpWidgetMap.buildFactory)\n    .directive('widgetStatus', fgpStage.buildFactory)\n    .directive('widgetDeviceDetail', fgpWidgetDeviceDetail.buildFactory)\n    .directive('widgetDeviceSpan', fgpWidgetSpan.buildFactory)\n    .directive('widgetPie', fgpWidgetPie.buildFactory)\n    .directive('widgetDockerButton', fgpDockerButton.buildFactory)\n    .directive('widgetRepeatContainer', fgpWidgetRepeatContainer.buildFactory)\n    .directive('widgetImage', fgpImage.buildFactory)\n    .directive('widgetIcon', fgpIcon.buildFactory)\n    .directive('widgetAppContainer', fgpWidgetAppContainer.buildFactory)\n    .directive('widgetChartTable', fgpWidgetChartTable.buildFactory)\n    .directive('emitLastRepeaterElement', [function () {\n        return function (scope) {\n            if (scope.$last) {\n                scope.$emit('LastRepeaterElement');\n            }\n        };\n    }]).filter('tableformatter', ['$filter', function ($filter) {\n    return function (input, obj, field, formatter) {\n        if (formatter) {\n            if (obj[field]) {\n                if (\"date\" == formatter) {\n                    return $filter('date')(new Date(obj[field]), 'd/M/yy h:mm a');\n                } else {\n                    return input;\n                }\n            }\n        } else {\n            return input;\n        }\n    };\n}]);\nvar index = 'fgp-kit';\n\nreturn index;\n\n})));\n\n//# sourceMappingURL=fgp.kit.bundle.js.map\n"]}
{"version":3,"sources":["fgp.kit.bundle.js"],"names":["global","factory","exports","module","require","define","amd","fgp_kit","angular","$","Dygraph","ngmap","chartJS","this","angular$1","chart_js","fgpStage","scope","applicationName","deviceName","server","configuration","scatterColors","standalone","replace","restrict","prototype","template","controller","$scope","$element","$timeout","$rootScope","$compile","dataService","$interval","showdata","length","setColors","graphBindingArray","$on","evt","msg","push","forEach","item","id","items","element","find","children","item_new","currentElement","attr","groupItems","dulpItem","findChild4Repeat","param","config","callback","metadata","data","datasource","style","key","from","parentId","parentHtmlObj","arrayItems","newId","i","parent","currentItem","html_render","repeat","append","findChild","sendDeviceData","deviceInfo","then","$broadcast","device","graph","graphs","buildFactory","instance","dataAccessApi","$http","$q","$cacheFactory","_$http","_$q","indexCache","deviceStores","host","deviceKey","deferred","defer","url","ajaxSettings","async","ajax","type","contentType","success","types","Object","defineProperty","name","get","result","field","error","e","reject","console","log","message","resolve","promise","deviceInitInfo","application","storeSchema","rangeLevel","otherLevels","fields","params","concat","cache","response","childrenDeviceInitInfo","relationType","relationDeviceType","fillChildrenTree","buckets","tree","showData","value","flag","info","fillTree","size","calTree","start","end","filter","elem","devicesStoreData","store","bucketsData","devicesNullBucket","index","bucketKeys","nullBucket","bucket","post","JSON","stringify","deviceData","currentBucketShowData","deviceStoreData","defaultColors","this$1","colors","co","lor","Math","floor","random","healthcheck","$inject","fgpWidgetContainer","attrs","hasOwnProperty","showTitle","element_id","dom_show","dom_show_notitle","widgetData","$emit","css","color","width","border","background","title","show","source","parse","fgpWidgetGraph","$filter","$location","$stateParams","_dataService","dom_loading","dom_legend","dom_empty_data","dom_series_list","link","status","timeOut","getData","numSeries","numRows","labels","initDate","Date","j","getTime","val","sampleData","movePan","event","g","context","side","dragEndX","dragGetX_","dragEndY","dragGetY_","is2DPan","pixelsDragged","dragStartY","axis","axes_","axis_data","axes","unitsDragged","unitsPerPixel","boundedValue","boundedValues","maxValue","initialTopValue","min","minValue","dragValueRange","attributes_","getForAxis","valueWindow","pow","LOG_SCALE","valueRange","minDate","initialLeftmostDate","dragStartX","xUnitsPerPixel","boundedDates","max","maxDate","dateRange","zoomRange","xAxisZoomRange","getOptionForAxis","dateWindow_","drawGraph_","offsetToPercentage","offsetX","offsetY","xOffset","toDomCoords","xAxisRange","yar0","yAxisRange","yOffset","x","y","w","h","xPct","yPct","zoom","zoomInPercentage","xBias","yBias","direction","basicInfo","adjustAxis","bias","delta","increment","foo","yAxes","newYAxes","numAxes","ranges","range","newZoomRange","xAxisExtremes","updateOptions","dateWindow","canScroll","timer","mouseOverHandler","cancel","mouseEnterHandler","mouseOutHandler","scroll","normal","WheelEvent","detail","deltaY","wheelDelta","percentage","layerX","target","offsetLeft","layerY","offsetTop","percentages","plotter_","area","cancelEvent","chartDateWindow","firstPoint","mousedownHandler","initializeMouseDown","clientX","startPan","mousemoveHandler","isPanning","currentChart","mouseupHandler","endPan","interactionModel","mousewheel","DOMMouseScroll","wheel","mousedown","mousemove","mouseenter","mouseup","mouseout","drawGapEdgePoints","pointSize","legend","labelsKMB","labelsSeparateLines","drawPoints","drawAxesAtZero","labelsDivStyles","text-align","position","display","yRangePad","ylabel","xlabel","series","Device0","Device4","axisLabelWidth","y2","valueFormatter","moment","format","pointClickCallback","p","currentView","showOne","drawCallback","isInit","refersh","range_show","rangeSelectorBar","xAxisHeight","drawAxis","showRangeSelector","rangeSelectorHeight","on","finalDateRagne","chartDateTime","begin","finalDateRange","child","synchronize","selection","childrenChart","$window","elementId","emptyDataShow","showY2Btns","legendText","legendText_device","legendText_datetime","legendText_column","legendText_value","legendColor","loadingShow","intevals","height","begin_path","end_path","init_flag","fixInterval","noneFixed","fixGraphWithGap","currentInterval","currentIntervalName","interval","fixed","tempDate","obj","labels_","NaN","file","copy","file_","showOrHideDevice","childrenDevices","setVisibility","fixGraphWithGap_click","basic","parent_container","data_from","checkY2Btns","$watch","nObj","oObj","groups","collections","level","rows","patt","RegExp","lines","line","columns","match","column","startsWith","initChart","relation","relation_group","initChildrenChart","newValue","oldValue","expect_points","expectedInterval","conf","preOne","lastOne","cin","currentStore","childTrees","trees","frequency","arr","Array","apply","slice","updateChildrenDetailChart","rangeChildrenData","rangeConfig","rangeSeries","group","collection","ordinalRangeData","timestamp","sort","a","b","updateDetailChart","rangeData","fetchData","values","node","array","intevalforshow","rangeTree","allData","newData","thePoint","updateChart","deviceDatas","devicesInfo","deviceObj","updateChildrenChart","relationConfig","leftAndRight","left","leftYAxis","right","rightYAxis","allLines","allXLabels","label","yRange","showY2axis","counter","toString","substr","originalData","yaxis","f","Function","realLine","odata","ex","childrenRangeConfig","highlightSeriesOpts","strokeWidth","strokeBorderWidth","highlightCircleSize","y2label","highlightCallback","pts","row","seriesName","sn","point_show","xval","yval","point","canvasy","canvasx","legendbox","$apply","legendTop","legendLeft","unhighlightCallback","newLines","axisLabelFormatter","d","newTime","tempData","tempTime","dateTime","indexOf","chartData","nt","timeTicket","lineData","deviceConfig","yRanges","yrange","rangeSeriesNumber","rangeBarLabels","series_range","l0","Number","open","lastIndexOf","btntimer","btnPanVULeft","btnZoomInVLeft","btnZoomOutVLeft","btnZoomInVRight","btnZoomOutVRight","btnPanVDLeft","btnPanVURight","btnPanVDRight","btnpanleft","panRange","pan_delta","startDate","endDate","btnpanright","btnzoomin","rangeStart","rangeEnd","btnzoomout","init","fgpWidgetPageTitle","minHeight","subtitle","text","fgpWidgetMap","location","markers","details","$parent","latitude","longitude","center","fgpWidgetDeviceDetail","fgpWidgetSpan","fgpWidgetPie","ctx","chart","Chart","datasets","backgroundColor","options","responsive","maintainAspectRatio","animation","pieData","update","fgpDockerButton","show_dom","stats","confData","repeateId","pageDevice","container","checkShow","button","shown","buttons","split","healthinfo","action","method","func","script","relationship","successCallback","errorCallback","fgpWidgetRepeatContainer","$websocket","labelstyle","listStyle","deviceType","dataStream","port","onMessage","backData","State","Health","Status","fgpImage","fgpIcon","icon","content","desc","fgpWidgetAppContainer","containers","containerswithTimeout","showstyle","pp","gotoContainer","showLabel","app","timer_index","t","newTimer","splice","itemIndex","fgpWidgetChartTable","chartId","sampledata","collectionName","groupName","formatter","record","cleanData","service","input","substring","setTree","localStorage","getTree","addTree","clear","directive","$last"],"mappings":"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","file":"fgp.kit.bundle.min.js","sourcesContent":["/**\n * fgp-kit\n * @version 1.0 - Homepage <http://www.future-grid.com.au>\n * @copyright (c) 2013-2016 Eric.Wang <flexdeviser@gmail.com>\n * @license Apache2. \n * @overview fgp.kit.js is a useful toolkit for future-grid's clients.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular'), require('jquery'), require('dygraphs'), require('ngmap'), require('chart.js')) :\n    typeof define === 'function' && define.amd ? define(['angular', 'jquery', 'dygraphs', 'ngmap', 'chart.js'], factory) :\n    (global.fgp_kit = factory(global.angular,global.$,global.Dygraph,global.ngmap,global.chartJS));\n}(this, (function (angular$1,$,Dygraph,ngmap,chart_js) {\n\nangular$1 = 'default' in angular$1 ? angular$1['default'] : angular$1;\n$ = 'default' in $ ? $['default'] : $;\nDygraph = 'default' in Dygraph ? Dygraph['default'] : Dygraph;\n\n/**\n * Created by ericwang on 10/06/2016.\n */\nvar fgpStage = function fgpStage() {\n    this.scope = {\n        applicationName: \"=\",\n        deviceName: \"=\",\n        server: \"=\",\n        configuration: '=',\n        scatterColors: \"=\",\n        standalone: \"=\"\n    };\n    this.replace = true;\n    this.restrict = 'A';\n};\n\nfgpStage.prototype.template = function template () {\n    return '<div id=\"pageStage\" class=\"wrapper col-md-12 col-xl-12\" style=\"background-color: #fff;height:100%;padding: 0px;\">' +\n        '</div>';\n};\n\nfgpStage.prototype.controller = function controller ($scope, $element, $timeout, $rootScope, $compile, dataService, $interval) {\n    $scope.showdata = {};\n\n    if ($scope.scatterColors && $scope.scatterColors.length > 0) {\n        dataService.setColors($scope.scatterColors);\n    }\n\n\n    $rootScope['applicationName'] = $scope.applicationName;\n    $rootScope['host'] = $scope.server;\n    $rootScope['device'] = $scope.deviceName;\n    $rootScope['standalone'] = $scope.standalone;\n\n\n    var graphBindingArray = [];\n\n    $scope.$on('bindChildChartEvent', function (evt, msg) {\n        graphBindingArray.push(msg);\n    });\n\n    $scope.$on('bindChildRepeatEvent', function (evt, msg) {\n        angular$1.forEach($scope.configuration, function (item) {\n            if (item.id == msg.id) {\n                var items = angular$1.element(\"body\").find(\"#\" + item.id).children();\n                angular$1.forEach(items, function (item_new) {\n                    $scope.showdata[item_new.id] = item;\n                    var currentElement = angular$1.element(item_new);\n                    if (currentElement.attr(\"dulp\")) {\n                        var groupItems = angular$1.element(\"body\").find(\"div[dulp='\" + item.id + \"']\");\n                        angular$1.forEach(groupItems, function (dulpItem) {\n                            findChild4Repeat(item.id, angular$1.element(dulpItem), $scope.configuration, item_new.id);\n                        });\n                    }else{\n                        findChild4Repeat(item.id, currentElement, $scope.configuration, item_new.id);\n                    }\n                });\n            }\n        });\n    });\n\n    $scope.$on('listStyleEvent', function (evt, param) {\n        var config = $scope.showdata[param.id.replace(\"edit\", \"\")];\n        param.callback(config.metadata.data.datasource.style);\n    });\n\n\n    $scope.$on('fetchWidgetMetadataEvent', function (evt, msg) {\n        angular$1.forEach($scope.showdata, function (metadata, key) {\n            if (key == msg.id) {\n                msg.callback({data: metadata, from: 'show'});\n                return;\n            }\n        });\n    });\n\n\n    function findChild4Repeat(parentId, parentHtmlObj, arrayItems, newId) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n\n                $scope.showdata[id] = arrayItems[i];\n                if (parentHtmlObj.attr(\"repeat-id\")) {\n                    $scope.repeat = parentHtmlObj.attr(\"repeat-id\");\n                }\n                if (parentHtmlObj.find('#edit' + parentId).find(\"#\" + id).length == 0) {\n                    parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                }\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems);\n            }\n            else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems);\n            }\n        }\n    }\n\n    function findChild(parentId, parentHtmlObj, arrayItems) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                findChild(arrayItems[i].id, currentItem, arrayItems);\n            } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                findChild(arrayItems[i].id, currentItem, arrayItems);\n            }\n        }\n    }\n\n    angular$1\n        .forEach($scope\n\n                .configuration\n            ,\n            function (item) {\n                if ('workingArea' === item.parent) {\n                    var currentItem = angular$1.element(item.html_render);\n                    $scope.showdata[item.id] = item;\n                    $element.append($compile(currentItem)($scope));\n                    findChild(item.id, currentItem, $scope.configuration);\n                }\n            }\n        )\n    ;\n\n    var\n        sendDeviceData = function () {\n            dataService.deviceInfo($scope.server, $scope.deviceName, null, $scope.applicationName).then(function (data) {\n                // send device info to all widget\n                $timeout(function () {\n                    $scope.$broadcast('deviceInfoEvent', {device: data, from: 'application'});\n                });\n            });\n        };\n\n    /**\n     * get device information\n     */\n    if ($scope.deviceName && $scope.deviceName != \"\" && \"undefined\" != $scope.deviceName) {\n        // first time\n        sendDeviceData();\n\n        // after every 30 seconds\n        // $interval(function () {\n        // sendDeviceData();\n        // }, 30000);\n    }\n\n\n// all item created;\n    $timeout(function () {\n        angular$1.forEach(graphBindingArray, function (graph) {\n            $scope.$broadcast('bindFatherGraphEvent', {parent: graph.graphs, children: graph.children});\n        });\n    });\n};\n\n\nfgpStage.buildFactory = function buildFactory () {\n    fgpStage.instance = new fgpStage();\n    return fgpStage.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar dataAccessApi = function dataAccessApi($http, $q, $cacheFactory) {\n    this._$http = $http;\n    this._$q = $q;\n    // get cache\n    this.indexCache = $cacheFactory('indexCache');\n    this.deviceStores = $cacheFactory('deviceStores');\n};\n\n\n/**\n * sync using JQuery\n * @param deviceName\n * @param deviceKey\n * @param applicationName\n * @returns {*}\n */\ndataAccessApi.prototype.deviceInfo = function deviceInfo (host, deviceName, deviceKey, applicationName) {\n    var deferred = this._$q.defer();\n    var url = host + \"/rest/api/\";\n\n    if (applicationName) {\n        url += \"app/\" + applicationName;\n    }\n\n    if (deviceName) {\n        url += '/devices/' + deviceName;\n    } else if (deviceKey) {\n        url += 'devices?key=' + deviceKey;\n    }\n\n    $.ajaxSettings.async = false;\n    $.ajax({\n        type: 'GET',\n        url: url,\n        contentType: \"application/json\",\n        success: function (data) {\n            var url = host + \"/rest/api/\";\n            if (applicationName) {\n                url += \"app/\" + applicationName + \"/devices/extension-types?device_type=\";\n            } else {\n                url += \"devices/extension-types?device_type=\";\n            }\n            $.ajaxSettings.async = false;\n            $.ajax({\n                type: 'GET',\n                url: url + data.type,\n                contentType: \"application/json\",\n                success: function (types) {\n                    angular$1.forEach(types, function (type) {\n                        Object.defineProperty(data, type.name, {\n                            get: function () {\n                                var result = null;\n                                var url = host + \"/rest/api/\";\n                                if (applicationName) {\n                                    url += \"app/\" + applicationName + \"/devices/extensions?device_name=\";\n                                } else {\n                                    url += \"devices/extensions?device_name=\";\n                                }\n                                $.ajaxSettings.async = false;\n                                $.ajax({\n                                    type: 'GET',\n                                    url: url + this.name + '&extension_type=' + type.name,\n                                    contentType: \"application/json\",\n                                    success: function (field) {\n                                        result = field;\n                                    },\n                                    error: function (e) {\n                                        deferred.reject(e);\n                                    }\n                                });\n                                return result;\n                            }\n                        });\n                    });\n                },\n                error: function (e) {\n                    console.log(e.message);\n                }\n            });\n\n            deferred.resolve(data);\n        },\n        error: function (e) {\n            deferred.reject(e);\n        }\n    });\n    return deferred.promise;\n};\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.deviceInitInfo = function deviceInitInfo (host, application, deviceKey, storeSchema, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {'otherLevels': otherLevels, 'fields': [].concat(fields)}, cache: this.deviceStores\n    }).then(\n        function (response) {\n            deferred.resolve(response.data);\n        },\n        function (response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.childrenDeviceInitInfo = function childrenDeviceInitInfo (host, application, deviceKey, storeSchema, relationType, relationDeviceType, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/children/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            relationType: relationType,\n            relationDeviceType: relationDeviceType,\n            otherLevels: otherLevels,\n            fields:[].concat(fields)\n        },\n        cache: this.deviceStores\n    }).then(\n        function (response) {\n            deferred.resolve(response.data);\n        },\n        function (response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\ndataAccessApi.prototype.fillChildrenTree = function fillChildrenTree (buckets, tree, showData) {\n\n    if (tree.children[0] != null) {\n        fillChildrenTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillChildrenTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n\n        angular$1.forEach(buckets, function (value, key) {\n            if (key == tree.id && value != null) {\n                tree.data = value;\n                tree['size'] = value.length;\n\n                var flag = false;\n                angular$1.forEach(showData, function (data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        tree['size'] = value.length;\n                        flag = true;\n                    }\n                });\n\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n};\n\n\ndataAccessApi.prototype.fillTree = function fillTree (buckets, tree, showData) {\n    if (tree.children[0] != null) {\n        fillTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        angular$1.forEach(buckets, function (value, key) {\n            if (key == tree.id) {\n                tree.data = value;\n                tree['size'] = value.size;\n                var flag = false;\n                angular$1.forEach(showData, function (data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        data['size'] = tree.size;\n                        flag = true;\n                    }\n                });\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n\n};\n\ndataAccessApi.prototype.calTree = function calTree (buckets, tree, start, end) {\n    if (tree.children[0] != null) {\n        calTree(buckets, tree.children[0], start, end);\n    }\n\n    if (tree.children[1] != null) {\n        calTree(buckets, tree.children[1], start, end);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        // is overlap?\n        if (((start >= tree.start) && start < tree.end)\n            ||\n            ((start > tree.start) && start <= tree.end)\n            ||\n            ((tree.start >= start) && tree.start < end)\n            ||\n            ((tree.start > start) && tree.start <= end)) {\n            if (buckets.filter(function (elem) {\n                    return elem.id == tree.id\n                }).length == 0) {\n                buckets.push(tree);\n            }\n        }\n    }\n};\n\n\n/**\n *\n * @param application\n * @param deviceInfo deviceKey and tree\n * @param storeSchema\n * @param store\n * @param start\n * @param end\n */\ndataAccessApi.prototype.devicesStoreData = function devicesStoreData (host, application, deviceInfo, storeSchema, store, start, end, fields) {\n\n    var bucketsData = [];\n    var devicesNullBucket = [];\n    var calTree = this.calTree;\n    var fillChildrenTree = this.fillChildrenTree;\n    angular$1.forEach(deviceInfo, function (device, index) {\n        var bucketKeys = [];\n        calTree(bucketKeys, device.tree, start, end);\n        var nullBucket = [];\n        // get null buckets\n        angular$1.forEach(bucketKeys, function (bucket) {\n            if (bucket.data == null) {\n                nullBucket.push(bucket.id);\n            }\n        });\n        if (nullBucket.length != 0) {\n            devicesNullBucket.push({device: device.name, nullBucket: nullBucket});\n        }\n        bucketsData.push({device: device.name, data: bucketKeys});\n    });\n\n    if (devicesNullBucket.length == 0) {\n        // get data from rest service\n        var deferred = this._$q.defer();\n        deferred.resolve(bucketsData);\n        return deferred.promise;\n    } else {\n        // get data from rest service\n        var deferred = this._$q.defer();\n        this._$http.post(host + '/rest/api/app/' + application + '/store/index/devices/store/data/' + storeSchema + '/' + store,\n            {'bucketKeys':JSON.stringify(devicesNullBucket),'fields': JSON.stringify(fields)}\n        ).then(\n            function (response) {\n                // response.data\n                angular$1.forEach(response.data, function (deviceData) {\n\n                    var currentBucketShowData = null;\n                    angular$1.forEach(bucketsData, function (showData) {\n                        if (showData.device == deviceData.device) {\n                            currentBucketShowData = showData.data; //  bucketKeys\n                            angular$1.forEach(deviceInfo, function (device, index) {\n                                if (deviceData.device == device.name) {\n                                    fillChildrenTree(deviceData.data, device.tree, currentBucketShowData);\n                                }\n                            });\n                        }\n                    });\n\n                });\n                // fill bucketKeys\n                deferred.resolve(bucketsData);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n};\n\n\ndataAccessApi.prototype.deviceStoreData = function deviceStoreData (host, application, deviceKey, storeSchema, store, tree, start, end, fields) {\n    var fillTree = this.fillTree;\n    var calTree = this.calTree;\n    var bucketKeys = [];\n    calTree(bucketKeys, tree, start, end);\n    var nullBucket = [];\n    // get null buckets\n    angular$1.forEach(bucketKeys, function (bucket) {\n        if (bucket.data == null) {\n            nullBucket.push(bucket.id);\n        }\n    });\n\n    if (nullBucket.length == 0) {\n        // send rest request\n        var deferred = this._$q.defer();\n        deferred.resolve(bucketKeys);\n        return deferred.promise;\n    } else {\n        // send rest request\n        var deferred = this._$q.defer();\n        this._$http.get(host + '/rest/api/app/' + application + '/store/index/store/data/' + deviceKey + '/' + storeSchema + '/' + store, {\n            params: {\n                bucketKeys: nullBucket,\n                fields:[].concat(fields)\n            }\n        }).then(\n            function (response) {\n                fillTree(response.data, tree, bucketKeys);\n                // fill bucketKeys\n                deferred.resolve(bucketKeys);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n};\n\ndataAccessApi.prototype.defaultColors = function defaultColors () {\n        var this$1 = this;\n\n    if (!this.colors) {\n        this['colors'] = [];\n        for (var i = 0; i < 300; i++) {\n            this$1.colors.push('#' + (function co(lor) {\n                    return (lor +=\n                        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                    && (lor.length == 6) ? lor : co(lor);\n                })(''));\n        }\n    }\n    return this.colors;\n};\n\ndataAccessApi.prototype.setColors = function setColors (colors) {\n    this.colors = colors;\n};\n\n\n/**\n * device id\n * @param id\n */\ndataAccessApi.prototype.healthcheck = function healthcheck (application, id) {\n\n    if (id = null || id == \"\") {\n        return;\n    }\n    this._$http.get('/rest/api/app/' + application + '/docker/healthcheck/reports?id=' + id)\n        .success(function (response) {\n            console.info(response);\n            return response;\n        });\n\n\n};\n\n\ndataAccessApi.buildFactory = function buildFactory ($http, $q, $cacheFactory) {\n    dataAccessApi.instance = new dataAccessApi($http, $q, $cacheFactory);\n    return dataAccessApi.instance;\n};\n\ndataAccessApi.$inject = ['$http', '$q', '$cacheFactory'];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetContainer = function fgpWidgetContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"padding: 0px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}}\">{{css.title.text}}</div>' +\n        '<div class=\"panel-body\" id=\"edit' + element_id + '\" style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n\n};\n\nfgpWidgetContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n    if (metadata.data) {\n        $scope.data[\"source\"] = metadata.data.source;\n        if ($scope.data && $scope.data.source.device && $scope.data.source.device != -1) {\n\n            if ($scope.data.source.device) {\n                /**\n                 * get device information\n                 */\n                dataService.deviceInfo($rootScope.host, JSON.parse($scope.data.source.device).name, null, $rootScope.applicationName).then(function (data) {\n                    // send device info to all widget\n                    $timeout(function () {\n                        $rootScope.$broadcast('deviceInfoEvent', {device: data, from: element_id});\n                    });\n                });\n            }\n\n        }\n    }\n\n};\n\n\nfgpWidgetContainer.buildFactory = function buildFactory () {\n    fgpWidgetContainer.instance = new fgpWidgetContainer();\n    return fgpWidgetContainer.instance;\n};\n\nfgpWidgetContainer.$inject = [];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetGraph = function fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n    this._dataService = dataService;\n};\n\nfgpWidgetGraph.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    if (flag) {\n        var dom_loading = '<div ng-show=\"loadingShow\" id=\"loading_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\">' +\n            '<div class=\"rect1\"></div>' +\n            '<div class=\"rect2\"></div>' +\n            '<div class=\"rect3\"></div>' +\n            '<div class=\"rect4\"></div>' +\n            '<div class=\"rect5\"></div>' +\n            '</div></div>';\n\n\n        var dom_legend = '<li>{{legendText_device}}</li><li>{{legendText_datetime}}</li><li><label style=\"color: {{legendColor}}\">{{legendText_column}}</label>:{{legendText_value}}</li>';\n\n        var dom_empty_data = '<div ng-show=\"emptyDataShow\" id=\"emptydata_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\" style=\"width: 100%;\">' +\n            '<h1>Empty Data!</h1>' +\n            '</div></div>';\n\n\n        var dom_series_list = '<div ng-show=\"currentView === 1\" class=\"dropdown\"> <button class=\"btn btn-primary dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">Devices<span class=\"caret\"></span></button> <ul class=\"dropdown-menu\" style=\"font-size:12px;\"><li ng-repeat=\"device in childrenDevices\"><input type=\"checkbox\" ng-click=\"showOrHideDevice(device)\" ng-checked=\"device.show\"/>{{device.name}}</li></ul> </div>';\n\n        return '<div id=\"legendbox' + attrs.id + '\" ng-show=\"legendText\" ng-style=\"{top:legendTop,left:legendLeft}\" style=\"border-radius:10px;background-color:#ffffff;position: absolute;border: 1px solid {{legendColor}};-moz-box-shadow: 5px 5px 5px #888888;box-shadow: 5px 5px 5px #888888;z-index: 99999999;margin-right: 5px;\"><ul style=\"list-style: none;list-style-position: inside;text-align: right;\">' + dom_legend + '</ul></div><div class=\"{{css.width}}\"><div class=\"col-md-12\" style=\"padding:0px;height:{{css.height}}px;-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\"><div class=\"row\"><div class=\"col-md-12\"><a class=\"tooltips\" href=\"javascript:;\" style=\"float: right;margin-right: 10px;\" ng-click=\"currentView = -currentView\"><div class=\"relationBtn\">R</div><span>Scatter View</span></a><div ng-hide=\"true\" class=\"checkbox\" style=\"float: right;margin-right: 10px; margin-bottom: 5px; margin-top: 0;\" ng-model=\"fixInterval\" ng-click=\"fixInterval=!fixInterval\"><label><input type=\"checkbox\" ng-model=\"fixInterval\" ng-clicked=\"fixInterval\" ng-change=\"fixGraphWithGap_click()\">fixed interval</label></div><div style=\"float: right; margin-right: 10px;\"><label class=\"label-inline\" ng-repeat=\"item in intevals.device\"><span class=\"badge\" style=\"background-color: {{ item.name == currentIntervalName ? \\'#009900;\\' : \\'\\'}}\">{{item.name}}</span></label></div><div style=\"float: right; margin-right: 10px;\">' + dom_series_list + '</div></div></div><div style=\"position: relative;width: 100%;height:100%;\"><div style=\"position: absolute;left:25px;z-index: 999;\" ng-show=\"basicInfo.zoom\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVULeft()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDLeft()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVLeft()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVLeft()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div><div class=\"line-chart-graph\" style=\"width: 100%;height:100%;\"></div><div style=\"position: absolute;right:-15px;top:0px;z-index: 999;\" ng-show=\"checkY2Btns()\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVURight()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDRight()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVRight()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVRight()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div>' + dom_loading + dom_empty_data + '<div class=\"row\"><div class=\"col-md-12\" style=\"min-height: 30px;\"></div><div class=\"col-md-6\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[0] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-6\" style=\"text-align: right;\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[1] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-12\" style=\"min-height: 40px;position: relative\"><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;left: 20px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanleft()\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanright()\"><i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></div><div class=\"range-selector-bar\" style=\"height: 0px;margin-top: 30px;width: 100%;position: absolute;\"></div><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;right: -5px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomin()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomout()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div></div></div>';\n    }\n};\n\nfgpWidgetGraph.prototype.link = function link (scope, element, attrs) {\n    scope['defaultColors'] = this._dataService.defaultColors();\n    scope.status = true;\n    var timeOut = this.$timeout;\n    this.$timeout(function () {\n        var getData = function (numSeries, numRows, name) {\n            var result = {labels: null, data: null};\n            var data = [];\n            var labels = [];\n            //init date\n            var initDate = new Date(\"2014/01/01 00:00:00\");\n            for (var j = 0; j < numRows; ++j) {\n                data[j] = [new Date(initDate.getTime() + 900000)];\n                initDate = new Date(initDate.getTime() + 900000);\n            }\n            for (var i = 0; i < numSeries; ++i) {\n                labels.push(name + i);\n                var val = 0;\n                for (var j = 0; j < numRows; ++j) {\n                    val += Math.random() - 0.5;\n                    data[j][i + 1] = val;\n                }\n            }\n            result.labels = labels;\n            result.data = data;\n            return result;\n        };\n\n\n        var sampleData = getData(1, 10, 'Device');\n\n        function movePan(event, g, context, side) {\n\n            context.dragEndX = Dygraph.dragGetX_(event, context);\n            context.dragEndY = Dygraph.dragGetY_(event, context);\n\n\n            // y-axis scaling is automatic unless this is a full 2D pan.\n            if (context.is2DPan) {\n\n                var pixelsDragged = context.dragEndY - context.dragStartY;\n                // Adjust each axis appropriately.\n                if (side == \"r\") {\n                    var axis = g.axes_[0];\n                    var axis_data = context.axes[0];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[0] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 0)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else if (side == 'l') {\n                    var axis = g.axes_[1];\n                    var axis_data = context.axes[1];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[1] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 1)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else {\n                    var minDate = context.initialLeftmostDate -\n                        (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n                    if (context.boundedDates) {\n                        minDate = Math.max(minDate, context.boundedDates[0]);\n                    }\n                    var maxDate = minDate + context.dateRange;\n                    if (context.boundedDates) {\n                        if (maxDate > context.boundedDates[1]) {\n                            // Adjust minDate, and recompute maxDate.\n                            minDate = minDate - (maxDate - context.boundedDates[1]);\n                            maxDate = minDate + context.dateRange;\n                        }\n                    }\n                    var zoomRange = g.xAxisZoomRange;\n                    if (g.xAxisZoomRange[0] instanceof Date) {\n                        zoomRange[0] = g.xAxisZoomRange[0].getTime();\n                    }\n                    if (g.xAxisZoomRange[1] instanceof Date) {\n                        zoomRange[1] = g.xAxisZoomRange[1].getTime();\n                    }\n\n                    if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                        return;\n                    }\n\n                    if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                        g.dateWindow_ = [Math.pow(Dygraph.LOG_SCALE, minDate),\n                            Math.pow(Dygraph.LOG_SCALE, maxDate)];\n                    } else {\n                        g.dateWindow_ = [minDate, maxDate];\n                    }\n                }\n            }\n            g.drawGraph_(false);\n        }\n\n\n        function offsetToPercentage(g, offsetX, offsetY) {\n            // This is calculating the pixel offset of the leftmost date.\n            var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n            var yar0 = g.yAxisRange(0);\n\n            // This is calculating the pixel of the higest value. (Top pixel)\n            var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n            // x y w and h are relative to the corner of the drawing area,\n            // so that the upper corner of the drawing area is (0, 0).\n            var x = offsetX - xOffset;\n            var y = offsetY - yOffset;\n\n            // This is computing the rightmost pixel, effectively defining the\n            // width.\n            var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n            // This is computing the lowest pixel, effectively defining the height.\n            var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n            // Percentage from the left.\n            var xPct = w == 0 ? 0 : (x / w);\n            // Percentage from the top.\n            var yPct = h == 0 ? 0 : (y / h);\n\n            // The (1-) part below changes it from \"% distance down from the top\"\n            // to \"% distance up from the bottom\".\n            return [xPct, (1 - yPct)];\n        }\n\n\n        function zoom(g, zoomInPercentage, xBias, yBias, direction, side) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n\n            function adjustAxis(axis, zoomInPercentage, bias) {\n                var delta = axis[1] - axis[0];\n                var increment = delta * zoomInPercentage;\n                var foo = [increment * bias, increment * (1 - bias)];\n                return [axis[0] + foo[0], axis[1] - foo[1]];\n            }\n\n            xBias = xBias || 0.5;\n            yBias = yBias || 0.5;\n            var yAxes = g.axes_;\n            var newYAxes = [];\n            for (var i = 0; i < g.numAxes(); i++) {\n                newYAxes[i] = adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n            }\n            if ('v' == direction) {\n                if ('l' == side) {\n                    yAxes[0]['valueRange'] = newYAxes[0];\n                    yAxes[0]['valueWindow'] = newYAxes[0];\n                } else if ('r' == side && g.numAxes() == 2) {\n                    yAxes[1]['valueRange'] = newYAxes[1];\n                    yAxes[1]['valueWindow'] = newYAxes[1];\n                }\n                g.drawGraph_(false);\n            } else {\n\n                var ranges = [];\n                angular$1.forEach(g.xAxisRange(), function (range) {\n                    if (range instanceof Date) {\n                        ranges.push(range.getTime());\n                    } else {\n                        ranges.push(range);\n                    }\n                });\n\n                var newZoomRange = adjustAxis(ranges, zoomInPercentage, xBias);\n                // do not bigger than range data\n                var zoomRange = [];\n                if (g.hasOwnProperty(\"xAxisZoomRange\") && g.xAxisZoomRange) {\n                    zoomRange[0] = g.xAxisZoomRange[0];\n                    zoomRange[1] = g.xAxisZoomRange[1];\n                } else {\n                    zoomRange[0] = g.xAxisExtremes()[0];\n                    zoomRange[1] = g.xAxisExtremes()[1];\n                }\n                if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] >= newZoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [zoomRange[0], newZoomRange[1]]\n                    });\n                } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [newZoomRange[0], zoomRange[1]]\n                    });\n                } else {\n                    g.updateOptions({\n                        dateWindow: newZoomRange\n                    });\n                }\n            }\n        }\n\n\n        var canScroll = false;\n\n        var timer = null;\n        var mouseOverHandler = function (e, g, context) {\n            //\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function () {\n                canScroll = true;\n            }, 1000);\n        };\n\n\n        var mouseEnterHandler = function (e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function () {\n                canScroll = true;\n            }, 1000);\n        };\n\n        var mouseOutHandler = function (e, g, context) {\n            // set flag to false\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            canScroll = false;\n        };\n\n        var scroll = function (e, g, context) {\n\n            if ((scope.basicInfo && !scope.basicInfo.zoom) || !canScroll) {\n                return;\n            }\n\n            var normal;\n\n            if (e instanceof WheelEvent) {\n                normal = e.detail ? e.detail * -1 : e.deltaY / 40;\n            } else {\n                normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n            }\n\n            // For me the normalized value shows 0.075 for one click. If I took\n            // that verbatim, it would be a 7.5%.\n            var percentage = normal / 50;\n\n            if (!(e.offsetX && e.offsetY)) {\n                e.offsetX = e.layerX - e.target.offsetLeft;\n                e.offsetY = e.layerY - e.target.offsetTop;\n            }\n            var percentages = offsetToPercentage(g, e.offsetX, e.offsetY);\n            var xPct = percentages[0];\n            var yPct = percentages[1];\n            //\n            if (e.offsetX <= (g.plotter_.area.x)) {\n                // console.info(\"v\", \"l\")\n                // left zoom\n                zoom(g, percentage, xPct, yPct, 'v', 'l');\n            } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                // right zoom\n                // console.info(\"v\", \"r\")\n                zoom(g, percentage, xPct, yPct, 'v', 'r');\n            } else {\n                // middle zoom\n                // console.info(\"h\")\n                zoom(g, percentage, xPct, yPct, 'h', null);\n            }\n            Dygraph.cancelEvent(e);\n            timeOut(function () {\n                scope.chartDateWindow = g.xAxisRange();\n            });\n        };\n\n        var firstPoint = null;\n        var mousedownHandler = function (e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            context.initializeMouseDown(e, g, context);\n            firstPoint = e.clientX;\n            Dygraph.startPan(e, g, context);\n        };\n        var mousemoveHandler = function (e, g, context) {\n            if (context.isPanning) {\n                if (e.offsetX <= (g.plotter_.area.x)) {\n                    movePan(e, g, context, 'r');\n                } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                    movePan(e, g, context, 'l');\n                } else {\n                    movePan(e, g, context, 'h');\n                }\n                timeOut(function () {\n                    scope.chartDateWindow = scope.currentChart.xAxisRange();\n                });\n            }\n        };\n\n\n        var mouseupHandler = function (e, g, context) {\n            if (context.isPanning) {\n                Dygraph.endPan(e, g, context);\n            }\n\n            canScroll = true;\n        };\n\n        var interactionModel = {\n            'mousewheel': scroll,\n            'DOMMouseScroll': scroll,\n            'wheel': scroll,\n            'mousedown': mousedownHandler,\n            'mousemove': mousemoveHandler,\n            'mouseenter': mouseEnterHandler,\n            'mouseup': mouseupHandler,\n            // 'mouseover': mouseOverHandler,\n            'mouseout': mouseOutHandler\n        };\n\n\n        //init configuration\n        var configuration = {\n            drawGapEdgePoints: true,\n            'pointSize': 3,\n            legend: 'follow',\n            labelsKMB: true,\n            labelsSeparateLines: true,\n            // data formate\n            labels: ['x'].concat(sampleData.labels),\n            // highlightSeriesOpts: {\n            // strokeWidth: 2,\n            // strokeBorderWidth: 1,\n            // highlightCircleSize: 2\n            // },\n            drawPoints: false,\n            drawAxesAtZero: false,\n            labelsDivStyles: {\n                'text-align': 'right',\n                'position': 'relative',\n                'display': 'inline-block'\n            },\n            yRangePad: 10,\n            // x label y label\n            ylabel: 'Value',\n            xlabel: 'Date',\n            colors: scope.defaultColors,\n            // multiple Y axis\n            series: {\n                'Device0': {\n                    axis: 'y2'\n                },\n                'Device4': {\n                    axis: 'y2'\n                }\n            },\n            // showRangeSelector: true,\n            axes: {\n                y: {\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                y2: {\n                    // set axis-related properties here\n                    'labelsKMB': true,\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                x: {\n                    // datetime format\n                    valueFormatter: function (y) {\n                        return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                    }\n                }\n            },\n            pointClickCallback: function (e, p) {\n                if (scope.currentView != -1) {\n                    scope.showOne(p.name);\n                }\n            },\n            drawCallback: function (g, isInit) {\n                if (scope.refersh) { // make sure \"scope.refersh\" doesn't call when the graph create first time.\n                    scope.refersh(g, isInit);\n                }\n            },\n            'interactionModel': interactionModel\n        };\n\n        scope.currentChart = new Dygraph(element.find(\"div[class='line-chart-graph']\")[0], sampleData.data, configuration);\n        element.find(\"canvas\").css(\"zIndex\", 99);\n\n\n        if (attrs.hasOwnProperty(\"shown\")) {\n\n\n            var basicInfo = scope.basicInfo;\n            if (basicInfo && basicInfo.range_show) {\n                scope.rangeSelectorBar = new Dygraph(element.find(\"div[class='range-selector-bar']\")[0], sampleData.data, {\n                        xAxisHeight: 0,\n                        axes: {\n                            x: {\n                                drawAxis: false\n                            }\n                        },\n                        showRangeSelector: true,\n                        rangeSelectorHeight: 30\n                    }\n                );\n                scope.chartDateWindow = scope.rangeSelectorBar.xAxisRange();\n            }\n\n\n            var status = false;\n            // add mouse up event to range select\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mouseup', function (event) {\n                status = false;\n                timeOut(function () {\n                    var finalDateRagne = scope.currentChart.xAxisRange();\n                    scope.chartDateTime = {begin: finalDateRagne[0], end: finalDateRagne[1]};\n                });\n            });\n\n            scope.$on('mouseUpMessage', function ($scope, e) {\n                if (\"mouseup\" === e.type && status) {\n                    status = false;\n                    timeOut(function () {\n                        var finalDateRange = scope.currentChart.xAxisRange();\n                        scope.chartDateTime = {begin: finalDateRange[0], end: finalDateRange[1]};\n                    });\n                }\n            });\n\n            scope.$on('bindFatherGraphEvent', function (event, data) {\n                angular$1.forEach(data.children, function (child) {\n                    if (child == attrs.id) {\n                        Dygraph.synchronize([scope.currentChart].concat(data.parent), {\n                            zoom: true,\n                            selection: false,\n                            range: false\n                        });\n                        scope.currentChart.updateOptions({\n                            drawCallback: function (g, isInit) {\n                                // console.info(\"refersh running!\" + \" is  Init?\"+ isInit);\n                                scope.refersh(g, isInit);\n                            }\n                        });\n\n                    }\n                });\n\n\n            });\n\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousemove', function (event) {\n                if (status) {\n                    timeOut(function () {\n                        scope.chartDateWindow = scope.currentChart.xAxisRange();\n                    });\n                }\n            });\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousedown', function (event) {\n                status = true;\n            });\n\n            //bind chart\n            if (basicInfo && basicInfo.childrenChart.length > 0) {\n                var param = {'graphs': [scope.currentChart], children: basicInfo.childrenChart};\n                if (scope.rangeSelectorBar) {\n                    param.graphs.push(scope.rangeSelectorBar);\n                }\n                scope.$emit('bindChildChartEvent', param);\n            }\n        }\n    }, 0);\n};\n\n//controller: ['$scope', '$element', '$window', '$interval', '$timeout', '$filter', '$location', function ($scope, $element, $window, $interval, $timeout, $filter, $location) {\nfgpWidgetGraph.prototype.controller = function controller ($scope, $element, $window, $interval, $timeout, $filter, $location, dataService, $rootScope, $stateParams) {\n    var element_id = $element.attr(\"id\");\n    $scope.elementId = element_id;\n\n    $scope['defaultColors'] = dataService.defaultColors();\n    var metadata = null;\n    var widgetData = null;\n    $scope.emptyDataShow = false;\n    // attributes----------------------\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    $scope.showY2Btns = false;\n\n    $scope.legendText = null;\n    $scope.legendText_device = null;\n    $scope.legendText_datetime = null;\n    $scope.legendText_column = null;\n    $scope.legendText_value = null;\n    $scope.legendColor = null;\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.loadingShow = false;\n\n        $scope.intevals = {device: []};\n\n\n        // update chart\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if (widgetData.data.metadata.css) {\n            $scope.css = widgetData.data.metadata.css;\n        }\n\n        // get start and end from url\n        var begin_path = $stateParams.begin;\n        var end_path = $stateParams.end;\n        var init_flag = false;\n\n\n        //fix interval\n        $scope.fixInterval = false;\n        var noneFixed = [];\n        $scope.fixGraphWithGap = function () {\n            if ($scope.currentChart && $scope.fixInterval) {\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function (item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({file: fixed});\n                }\n            } else if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                $scope.currentChart.updateOptions({file: noneFixed});\n            }\n\n        };\n\n\n        $scope.showOrHideDevice = function (device) {\n            angular$1.forEach($scope.childrenDevices, function (item, index) {\n                if (item.name === device.name) {\n                    var graph = $scope.currentChart;\n\n                    if (device.show == true) {\n                        graph.setVisibility(index, false);\n                        device.show = false;\n                    } else {\n                        graph.setVisibility(index, true);\n                        device.show = true;\n                    }\n\n                }\n            });\n        };\n\n        $scope.fixGraphWithGap_click = function () {\n            if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function (item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({file: fixed});\n                }\n            } else if ($scope.currentChart && $scope.fixInterval) {\n                $scope.currentChart.updateOptions({file: noneFixed});\n            }\n\n        };\n\n\n        metadata = widgetData.data.metadata;\n        $scope.basicInfo = metadata.data.basic;\n        $scope.currentView = -1; // -1 is device view and 1 is scatter view\n\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.data_from = \"application\";\n\n\n        $scope.checkY2Btns = function () {\n            return $scope.basicInfo.zoom === true && $scope.showY2Btns === true;\n        };\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            $scope.$watch('currentView', function (nObj, oObj) {\n                // change\n                if (nObj != oObj) {\n                    if (nObj == -1) {\n                        var rangeLevel = null;\n                        var otherLevels = [];\n                        angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                            if (level.rows.length > 0) {\n                                if (rangeLevel != null) {\n                                    otherLevels.push(rangeLevel);\n                                }\n                                rangeLevel = level.name;\n                            }\n                        });\n                        if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                            // show device view\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                            angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                if (level.rows.length > 0 && level.name === rangeLevel) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function (line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function (column) {\n                                                    if (column.startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n\n                            dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function (data) {\n                                initChart(data);\n                            }, function (error) {\n                                console.error(error);\n                            });\n                        }\n\n                    } else {\n                        //get relation config\n                        if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                            return;\n                        } else {\n                            var rangeLevel = null;\n                            var otherLevels = [];\n                            angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                if (level.rows.length > 0) {\n                                    if (rangeLevel != null) {\n                                        otherLevels.push(rangeLevel);\n                                    }\n                                    rangeLevel = level.name;\n                                }\n                            });\n                            if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                    if (level.rows.length > 0 && level.name === rangeLevel) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function (line) {\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function (column) {\n                                                        if (column.startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n                                                }\n                                            });\n                                        }\n                                    }\n                                });\n\n                                // show children view\n                                dataService.childrenDeviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, metadata.data.source.relation, metadata.data.source.relation_group, rangeLevel, otherLevels, fields).then(function (data) {\n                                    // get all device trees\n                                    if (data != null && data.length > 0) {\n                                        initChildrenChart(data);\n                                    } else {\n                                        return;\n                                    }\n\n                                }, function (error) {\n                                    console.error(error);\n                                });\n\n                            }\n                        }\n                    }\n                }\n                $scope.fixInterval = false;\n\n            });\n            // first time of showing chart\n            $scope.$watch('currentChart', function (newValue) {\n                if (newValue) {\n                    //device first level\n                    var rangeLevel = null;\n                    var otherLevels = [];\n                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                        if (level.rows.length > 0) {\n                            if (rangeLevel != null) {\n                                otherLevels.push(rangeLevel);\n                            }\n                            rangeLevel = level.name;\n                        }\n                    });\n\n                    // fields of range level\n                    var fields = [];\n                    var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                        if (level.rows.length > 0 && level.name === rangeLevel) {\n                            var lines = level.rows;\n                            if (lines) {\n                                angular$1.forEach(lines, function (line) {\n                                    //\n                                    if (line.value) {\n                                        var columns = (line.value).match(patt);\n                                        angular$1.forEach(columns, function (column) {\n                                            if ((column).startsWith('data.')) {\n                                                fields.push(column.replace('data.', ''));\n                                            }\n                                        });\n                                    }\n                                });\n                            }\n                        }\n                    });\n\n\n                    //send a rest request\n                    dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function (data) {\n                        initChart(data);\n                    }, function (error) {\n                        console.error(error);\n                    });\n                }\n            });\n            $scope.$watch(\"chartDateTime\", function (newValue, oldValue) {\n                if (newValue.begin != null && newValue.end != null) {\n                    var expect_points = Math.floor($element.parent().width() / 2);\n                    // find a interval\n                    var expectedInterval = (newValue.end - newValue.begin) / expect_points;\n                    var conf = $scope.intevals.device;\n                    // device detail view\n                    var preOne = conf[0].interval;\n                    var lastOne = conf[conf.length - 1].interval;\n                    var cin = \"\";\n                    if (expectedInterval >= preOne) {\n                        expectedInterval = preOne;\n                    } else if (expectedInterval <= lastOne) {\n                        expectedInterval = lastOne;\n                    } else {\n                        for (var i = 1; i < conf.length; i++) {\n                            if (expectedInterval <= preOne && expectedInterval > conf[i].interval) {\n                                expectedInterval = preOne;\n                            } else {\n                                preOne = conf[i].interval;\n                                cin = conf[i].name;\n                            }\n                        }\n                    }\n                    $scope.currentIntervalName = \"\";\n\n                    angular$1.forEach(conf, function (config) {\n                        if (config.interval == expectedInterval) {\n                            $scope.currentIntervalName = config.name;\n                        }\n                    });\n                    $scope.loadingShow = true;\n                    if ($scope.currentView == 1) {\n                        // scatter detail view\n                        if (expectedInterval == conf[0].interval) {\n                            // set valueRange;\n                            // re cal max and min\n                            // $scope.childrenRangeConfig[\"dateWindow\"] = $scope.chartDateWindow;\n                            $scope.currentChart.updateOptions({dateWindow: $scope.chartDateWindow});\n                            // if ($scope.rangeSelectorBar) {\n                            // $scope.rangeSelectorBar.updateOptions({series: $scope.childRangeSeries});\n                            // }\n                            $scope.loadingShow = false;\n                        } else {\n                            $scope.legendText = null;\n                            var deviceInfo = [];\n                            var currentStore = \"\";\n\n                            $scope.childrenDevices = [];\n\n                            // has problem....\n                            angular$1.forEach($scope.childTrees, function (device) {\n                                angular$1.forEach(device.trees, function (tree, index) {\n                                    if (expectedInterval == tree.frequency && index != 0) {\n                                        currentStore = tree.store;\n                                        deviceInfo.push({name: device.name, tree: tree.tree});\n                                        device[\"show\"] = true;\n                                        $scope.childrenDevices.push(device);\n                                    }\n                                });\n                            });\n\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                            angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function (line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function (column) {\n                                                    if (column && (column).startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n\n\n                            dataService.devicesStoreData($rootScope.host, $rootScope.applicationName, deviceInfo, metadata.data.source.store, currentStore, newValue.begin, newValue.end, fields).then(function (data) {\n                                var showData = [];\n                                angular$1.forEach(data, function (arr) {\n                                    var deviceData = [];\n                                    angular$1.forEach(arr.data, function (bucket) {\n                                        if (bucket.data != null) {\n                                            Array.prototype.push.apply(deviceData, bucket.data.slice(0, bucket.size));\n                                        }\n                                    });\n                                    showData.push({device: arr.device, data: deviceData});\n                                });\n                                //get configuration\n                                updateChildrenDetailChart(metadata, currentStore, $scope.rangeChildrenData, showData);\n\n                            }, function (data) {\n                                console.info(data);\n                            });\n                        }\n                        $scope.fixGraphWithGap();\n                    } else {\n                        // if expected interval is the biggest, show range data\n                        if (expectedInterval == conf[0].interval) {\n                            if (!($scope.chartDateWindow[0] instanceof Date)) {\n                                $scope.chartDateWindow[0] = new Date($scope.chartDateWindow[0]);\n                            }\n\n                            if (!($scope.chartDateWindow[1] instanceof Date)) {\n                                $scope.chartDateWindow[1] = new Date($scope.chartDateWindow[1]);\n                            }\n                            $scope.rangeConfig[\"dateWindow\"] = $scope.chartDateWindow;\n                            // set valueRange\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            if ($scope.rangeSelectorBar && $scope.rangeSeries) {\n                                $scope.rangeSelectorBar.updateOptions({series: $scope.rangeSeries});\n                            }\n                            // tell some other widgets, the graph is changed.\n                            $timeout(function () {\n                                $rootScope.$broadcast('chartDataChangeEvent', {\n                                    'id': element_id,\n                                    'group': 'device',\n                                    'data': {\n                                        'collection': conf[0].name,\n                                        'group': 'device',\n                                        'data': $scope.ordinalRangeData.filter(function (obj) {\n                                            return obj.timestamp >= $scope.rangeConfig[\"dateWindow\"][0].getTime() && obj.timestamp <= $scope.rangeConfig[\"dateWindow\"][1].getTime();\n                                        })\n                                    }\n                                });\n                            });\n\n                            $scope.loadingShow = false;\n                        } else {\n                            // cal tree\n                            angular$1.forEach($scope.trees, function (tree, index) {\n                                if (expectedInterval == tree.frequency && index != 0) {\n                                    // send request\n                                    var fields = [];\n                                    var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                        if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                            var lines = level.rows;\n                                            if (lines) {\n                                                angular$1.forEach(lines, function (line) {\n                                                    //\n                                                    if (line.value) {\n                                                        var columns = (line.value).match(patt);\n                                                        angular$1.forEach(columns, function (column) {\n                                                            if ((column).startsWith('data.')) {\n                                                                fields.push(column.replace('data.', ''));\n                                                            }\n                                                        });\n\n                                                    }\n\n                                                });\n                                            }\n                                        }\n                                    });\n\n\n                                    dataService.deviceStoreData($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, newValue.begin, newValue.end, fields).then(function (data) {\n                                        // udpate chart\n                                        var showData = [];\n                                        angular$1.forEach(data, function (arr) {\n                                            Array.prototype.push.apply(showData, arr.data.slice(0, arr.size));\n                                        });\n                                        showData = showData.filter(function (obj) {\n                                            return obj != null;\n                                        });\n                                        showData.sort(function (a, b) {\n                                            return a.timestamp > b.timestamp ? 1 : -1;\n                                        });\n                                        //get configuration\n                                        updateDetailChart(metadata, tree.store, $scope.rangeData, showData);\n\n                                        // tell some other widgets, the graph is changed.\n                                        $timeout(function () {\n                                            $rootScope.$broadcast('chartDataChangeEvent', {\n                                                'id': element_id,\n                                                'group': 'device',\n                                                'data': {\n                                                    'collection': tree.store,\n                                                    'group': 'device',\n                                                    'data': showData\n                                                }\n                                            });\n                                        });\n\n                                    }, function (data) {\n                                        console.info(data);\n                                    });\n                                }\n                            });\n                        }\n                        $scope.fixGraphWithGap();\n                    }\n                    $scope.status = false;\n                }\n            });// not working.....\n\n        });\n\n\n        var fetchData = function (values, node) {\n            if (node.children[0] != null) {\n                fetchData(values, node.children[0]);\n            }\n\n            if (node.children[1] != null) {\n                fetchData(values, node.children[1]);\n            }\n\n            if (node.children[0] == null && node.children[1] == null) {\n                if (node.data.array) {\n                    Array.prototype.push.apply(values, node.data.array.slice(0, node.data.size));\n                } else {\n                    Array.prototype.push.apply(values, node.data.slice(0, node.data.length));\n                }\n\n            }\n\n        };\n\n\n        $scope.trees = [];\n        $scope.rangeData = [];\n\n        $scope.ordinalRangeData = [];\n\n        var initChart = function (data) {\n            $scope.intevalforshow = [];\n            //\n            $scope.intevals.device = [];\n            var trees = data.trees;\n            $scope.trees = trees;\n            var rangeTree = null;\n            angular$1.forEach(trees, function (tree) {\n                if (tree.range) {\n                    rangeTree = tree;\n                }\n                $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n            });\n\n\n            // init chart with range data\n            var store = rangeTree.store;\n\n            // get all data\n            var allData = [];\n            fetchData(allData, rangeTree.tree);\n            allData = allData.filter(function (obj) {\n                return obj != null;\n            });\n            allData.sort(function (a, b) {\n                return a.timestamp > b.timestamp ? 1 : -1;\n            });\n\n\n            if ($scope.trees.length == 0 || allData.length == 0) {\n                $scope.emptyDataShow = true;\n                return;\n            }\n\n            // if the data only has one point. change the data range to bigger\n            if (allData.length == 1) { //  means only one point.\n                var newData = [];\n                // add 1 points into both side\n                var thePoint = allData[0];\n                var timestamp = thePoint.timestamp;\n                var currentInterval = $scope.intevals.device[0].interval;\n                newData.push({timestamp: timestamp - currentInterval});\n                Array.prototype.push.apply(newData, allData);\n                newData.push({timestamp: timestamp + currentInterval});\n                allData = newData;\n            }\n            $scope.ordinalRangeData = allData;\n            // get configuration and make real data\n            updateChart(metadata, store, allData);\n        };\n\n        var initChildrenChart = function (deviceDatas) {\n            var devicesInfo = {};\n            $scope.intevals.device = [];\n            //range data with all device\n            $scope.childTrees = [];\n            $scope.childrenDevices = [];\n\n            angular$1.forEach(deviceDatas, function (deviceData) {\n                var device = deviceData.device;\n                device[\"show\"] = true;\n                $scope.childrenDevices.push(device);\n                var trees = deviceData.trees;\n                $scope.childTrees.push({name: device.name, trees: trees});\n                var rangeTree = null;\n                angular$1.forEach(trees, function (tree) {\n                    if (tree.range) {\n                        rangeTree = tree;\n                    }\n\n                    var flag = false;\n                    angular$1.forEach($scope.intevals.device, function (interval) {\n                        if (interval.name == tree.store && interval.interval == tree.frequency) {\n                            // has same one\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n                    }\n\n                });\n\n                if (rangeTree != null) {\n                    var deviceObj = devicesInfo[device.name] = {};\n                    // get all data\n                    var allData = [];\n                    fetchData(allData, rangeTree.tree);\n                    allData = allData.filter(function (obj) {\n                        return obj != null;\n                    });\n                    allData.sort(function (a, b) {\n                        return a.timestamp > b.timestamp ? 1 : -1;\n                    });\n                    //\n                    deviceObj[\"range\"] = rangeTree;\n                    deviceObj[\"data\"] = allData;\n                } else {\n                    console.info(device.name + \" has none data.\");\n                }\n\n            });\n\n            updateChildrenChart(metadata, devicesInfo);\n        };\n\n\n        var updateChildrenChart = function (metadata, devicesInfo) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n            var allLines = [];\n            var allXLabels = [];\n            angular$1.forEach(devicesInfo, function (device, key) {\n                angular$1.forEach(device.data, function (item) {\n                    var flag = false;\n                    angular$1.forEach(allXLabels, function (label) {\n                        if (label.getTime() == item.timestamp) {\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        allXLabels.push(new Date(item.timestamp));\n                    }\n\n\n                });\n            });\n            // order\n            allXLabels.sort(function (a, b) {\n                return a > b ? 1 : -1;\n            });\n\n            // make all line\n            angular$1.forEach(allXLabels, function (label) {\n                allLines.push([label]);\n            });\n\n\n            var yRange = {min: null, max: null};\n            var showY2axis = false;\n            var counter = 0;\n            angular$1.forEach(devicesInfo, function (device, key) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                angular$1.forEach(collections, function (collection) {\n                    if (collection.name == device.range.store) {\n                        $scope.currentIntervalName = device.range.store;\n                        var originalData = device.data;\n\n                        // always same for each device\n                        if (collection.rows[0].yaxis == 0) {\n                            series[collection.rows[0].label] = {'axis': 'y1'};\n                        } else {\n                            series[collection.rows[0].label] = {'axis': 'y2'};\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        labels.push(key);\n                        // make a line\n                        var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                        // add value\n                        angular$1.forEach(allLines, function (realLine, index) {\n\n                            var flag = false;\n                            angular$1.forEach(originalData, function (odata) {\n                                if (realLine[0].getTime() == odata.timestamp) {\n                                    try {\n                                        var value = f(odata);\n                                        realLine.push(value);\n                                        if (yRange.min == null) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max == null) {\n                                            yRange.max = value;\n                                        }\n\n                                        if (yRange.min > value) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max < value) {\n                                            yRange.max = value;\n                                        }\n                                    } catch (ex) {\n                                        realLine.push(null);\n                                    }\n                                    flag = true;\n                                }\n                            });\n\n                            if (!flag) {\n                                realLine.push(null);\n                            }\n                        });\n\n\n                    }\n                });\n            });\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n            //update chart\n            if ($scope.currentChart) {\n                $scope.rangeChildrenData = allLines;\n\n                if (showY2axis) {\n                    $scope.childrenRangeConfig = {\n                        'labelsKMB': true,\n                        'file': allLines,\n                        legend: 'never',\n                        labelsKMB: true,\n                        labelsSeparateLines: false,\n                        // data formate\n                        labels: ['x'].concat(sampleData.labels),\n                        highlightSeriesOpts: {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        'labels': ['x'].concat(labels),\n                        'ylabel': leftAndRight.left,\n                        'y2label': leftAndRight.right,\n                        'series': series,\n                        'colors': colors,\n                        highlightCallback: function (e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            angular$1.forEach(series, function (value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {x: 0, y: 0};\n                            angular$1.forEach(pts, function (item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function (point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n                            var legendbox = angular$1.element(\"#legendbox\" + element_id);\n\n\n                            $scope.$apply(function () {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n\n                        },\n\n                        unhighlightCallback: function (e) {\n                            $scope.$apply(function () {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'axes': {\n                            'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                            'y2': {}\n                        }\n                        // showRangeSelector: true\n                    };\n                } else {\n                    $scope.showY2Btns = false;\n                    var newLines = [];\n                    angular$1.copy(allLines, newLines);\n                    angular$1.forEach(newLines, function (line) {\n                        line.push(NaN);\n                    });\n                    series[\"span_y2\"] = {'axis': 'y2'};\n                    $scope.childrenRangeConfig = {\n                        'drawGapEdgePoints': true,\n                        'pointSize': 3,\n                        'legend': 'never',\n                        'labelsKMB': true,\n                        'file': newLines,\n                        'labelsSeparateLines': false,\n                        'highlightSeriesOpts': {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        highlightCallback: function (e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            angular$1.forEach(series, function (value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {x: 0, y: 0};\n                            angular$1.forEach(pts, function (item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function (point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n                            var legendbox = angular$1.element(\"#legendbox\" + element_id);\n                            $scope.$apply(function () {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n                        },\n\n                        unhighlightCallback: function (e) {\n                            $scope.$apply(function () {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                        'ylabel': leftAndRight.left,\n                        'y2label': \"\",\n                        'series': series,\n                        'colors': colors,\n                        'axes': {\n                            'y': {valueRange: [yRange.min, yRange.max]},\n                            'y2': {\n                                axisLabelFormatter: function (d) {\n                                    return '';\n                                }\n                            }\n                        }\n                        // showRangeSelector: true\n                    };\n                }\n                //\n                $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n                //  keep the same time window and refersh\n                $scope.chartDateTime = {begin: $scope.chartDateTime.begin, end: $scope.chartDateTime.end};\n                $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                $scope.loadingShow = false;\n            }\n\n\n        };\n\n\n        var updateChildrenDetailChart = function (metadata, store, rangeData, allData) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var newLines = [];\n            var newTime = [];\n            var series = {};\n            var labels = [];\n            var colors = [];\n            var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n            var yRange = {min: null, max: null};\n            var counter = 0;\n            var showY2axis = null;\n            angular$1.forEach(allData, function (device) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                if (device.data.length > 0) {\n                    labels.push(device.device);\n                    angular$1.forEach(collections, function (collection) {\n                        if (collection.name == store) {\n                            $scope.currentIntervalName = store;\n                            if (collection.rows[0].yaxis == 0) {\n                                series[collection.rows[0].label] = {'axis': 'y1'};\n                            } else {\n                                series[collection.rows[0].label] = {'axis': 'y2'};\n                                showY2axis = true;\n                                $scope.showY2Btns = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \")return \" + collection.rows[0].value + \";return null;}\");\n                            var tempData = [];\n                            var tempTime = [];\n                            // make data\n                            angular$1.forEach(device.data, function (data) {\n                                var dateTime = new Date(data.timestamp);\n                                try {\n                                    var value = f(data);\n                                    tempData.push({timestamp: dateTime, value: value});\n\n                                    if (yRange.min == null) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max == null) {\n                                        yRange.max = value;\n                                    }\n\n                                    if (yRange.min > value) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max < value) {\n                                        yRange.max = value;\n                                    }\n\n                                } catch (e) {\n                                    tempData.push({timestamp: dateTime, value: null});\n                                }\n                                tempTime.push(dateTime.getTime());\n                            });\n                            newTime = newTime.concat(tempTime.filter(function (item) {\n                                return newTime.indexOf(item) < 0;\n                            }));\n                            newLines.push({device: device.device, data: tempData});\n                        }\n                    });\n                }\n            });\n\n            var chartData = [];\n            // time needs sort!!!\n            newTime = newTime.sort();\n            angular$1.forEach(newTime, function (nt) {\n                chartData.push([new Date(nt)]);\n            });\n\n\n            angular$1.forEach(newLines, function (line) {\n                angular$1.forEach(chartData, function (timeTicket) {\n                    // line data\n                    var flag = false;\n                    var lineData = line.data;\n                    for (var i = 0; i < lineData.length; i++) {\n                        if (lineData[i].timestamp.getTime() == timeTicket[0].getTime()) {\n                            timeTicket.push(lineData[i].value);\n                            flag = true;\n                            break;\n                        }\n                    }\n                    if (flag != true) {\n                        // we should use \"NaN\"\n                        timeTicket.push(NaN);\n                    }\n                });\n            });\n\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n\n\n            if (chartData.length == 0) {\n                $scope.currentChart.updateOptions({\n                    'file': []\n                });\n                $scope.loadingShow = false;\n            } else {\n                if ($scope.currentChart) {\n\n                    if (showY2axis) {\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function (e, x, pts, row, seriesName) {\n                                var sn = \"\";\n                                angular$1.forEach(series, function (value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {x: 0, y: 0};\n                                angular$1.forEach(pts, function (item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function (point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n                                var legendbox = angular$1.element(\"#legendbox\" + element_id);\n                                $scope.$apply(function () {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n                            },\n\n                            unhighlightCallback: function (e) {\n                                $scope.$apply(function () {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80}\n                            }\n                            // showRangeSelector: true\n                        });\n                    } else {\n                        var newLines = [];\n                        $scope.showY2Btns = false;\n                        angular$1.copy(chartData, newLines);\n                        angular$1.forEach(newLines, function (line) {\n                            line.push(NaN);\n                        });\n                        series[\"span_y2\"] = {axis: 'y2'};\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function (e, x, pts, row, seriesName) {\n\n                                var sn = \"\";\n                                angular$1.forEach(series, function (value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {x: 0, y: 0};\n                                angular$1.forEach(pts, function (item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function (point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n                                var legendbox = angular$1.element(\"#legendbox\" + element_id);\n\n                                $scope.$apply(function () {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n\n                            },\n\n                            unhighlightCallback: function (e) {\n                                $scope.$apply(function () {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                                \"y2\": {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    }\n                    $scope.loadingShow = false;\n                }\n            }\n\n\n        };\n\n\n        /**\n         * update detail chart\n         * @param metadata\n         * @param store\n         * @param rangeData\n         * @param allData\n         */\n        var updateDetailChart = function (metadata, store, rangeData, allData) {\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{min: null, max: null}, {min: null, max: null}];\n            angular$1.forEach(collections, function (collection) {\n                if (collection.name == store) {\n                    angular$1.forEach(allData, function (line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    // var yRange = {'min': null, 'max': null};\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function (row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {'axis': 'y1'};\n                        } else {\n                            series[row.label] = {'axis': 'y2'};\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \")return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function (realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    angular$1.forEach(yRanges, function (yrange) {\n                        if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                            yrange.min = yrange.min - (yrange.min) * 0.10;\n                            yrange.max = yrange.max + (yrange.max) * 0.10;\n                        }\n                    });\n\n\n                    if (allLines.length == 0) {\n                        $scope.currentChart.updateOptions({\n                            'file': []\n                        });\n                        if ($scope.rangeSelectorBar) {\n                            $scope.currentChart[\"xAxisZoomRange\"] = $scope.rangeSelectorBar.xAxisExtremes();\n                        }\n                        $scope.loadingShow = false;\n                    } else {\n                        if ($scope.currentChart) {\n\n                            if (showY2axis) {\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n                            } else {\n\n                                var newLines = [];\n                                $scope.showY2Btns = false;\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function (line) {\n                                    line.push(NaN);\n                                });\n\n                                series[\"span-Y2\"] = {axis: 'y2'};\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            axisLabelFormatter: function (d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n\n                            }\n\n                            $scope.loadingShow = false;\n                        }\n                    }\n\n\n                }\n            });\n\n\n        };\n\n        /**\n         * update range chart\n         * @param metadata\n         * @param store\n         * @param allData\n         */\n        var updateChart = function (metadata, store, allData) {\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{min: null, max: null}, {min: null, max: null}];\n            angular$1.forEach(collections, function (collection) {\n                if (collection.name == store) {\n                    $scope.currentIntervalName = store;\n                    angular$1.forEach(allData, function (line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    $scope.rangeSeriesNumber = collection.rows.length;\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function (row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {'axis': 'y1'};\n                        } else {\n                            series[row.label] = {'axis': 'y2'};\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function (realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    if ($scope.currentChart) {\n                        $scope.rangeData = allLines;\n                        var basicInfo = $scope.basicInfo;\n                        if (basicInfo && basicInfo.range_show) {\n                            var rangeBarLabels = [];\n                            for (var i = 0; i < labels.length; i++) {\n                                rangeBarLabels.push(\"l\" + i);\n                            }\n                            var series_range = {'l0': {axis: 'y1'}};\n                            if (showY2axis) {\n                                //noinspection JSDuplicatedDeclaration\n                                series_range = {\n                                    'l0': {axis: 'y1'},\n                                    'l0': {axis: 'y2'}\n                                };\n                                $scope.rangeSeries = series_range;\n\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': allLines,\n                                    'labels': ['x'].concat(rangeBarLabels),\n                                    'series': series_range\n                                });\n                            } else {\n                                series_range[\"span_y2\"] = {axis: 'y2'};\n                                $scope.showY2Btns = false;\n                                $scope.rangeSeries = series_range;\n                                var newLines = [];\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function (line) {\n                                    line.push(NaN);\n                                });\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': newLines,\n                                    'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                    'series': series_range\n                                });\n                            }\n\n\n                        }\n\n                        angular$1.forEach(yRanges, function (yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max) * 0.10;\n                            }\n                        });\n\n\n                        // if graph has 2 yAxis or a yAxis\n\n\n                        if (showY2axis) {\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: null,\n                                'labelsKMB': true,\n                                'file': allLines,\n                                'labels': ['x'].concat(labels),\n                                'ylabel': leftAndRight.left,\n                                'y2label': leftAndRight.right,\n\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                    'y2': {\n                                        'labelsKMB': true,\n                                        valueRange: [yRanges[1].min, yRanges[1].max],\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        } else {\n                            series['span_y2'] = {axis: 'y2'};\n                            $scope.showY2Btns = false;\n                            var newLines = [];\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function (line) {\n                                line.push(NaN);\n                            });\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: null,\n                                'labelsKMB': true,\n                                'file': newLines,\n                                'labels': ['x'].concat(labels).concat(['span_y2']),\n                                'ylabel': leftAndRight.left,\n                                'y2label': \"\",\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                    'y2': {\n                                        axisLabelFormatter: function (d) {\n                                            return '';\n                                        },\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        }\n\n\n                        if (basicInfo && basicInfo.range_show) {\n                            Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                zoom: true,\n                                selection: false,\n                                range: false\n                            });\n                        }\n\n\n                        if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                            // keep the current range bar refresh once.\n                            $scope.chartDateTime = {\n                                begin: $scope.chartDateTime.begin,\n                                end: $scope.chartDateTime.end\n                            };\n                            $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                        } else {\n\n                            $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            if (begin_path && end_path && !init_flag) {\n                                // $scope.chartDateTime = {\n                                // \"begin\": new Date(new Number(begin_path)),\n                                // \"end\": new Date(new Number(end_path))\n                                // };\n                                $scope.chartDateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                init_flag = true;\n                            } else {\n                                $scope.chartDateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                $scope.rangeConfig.dateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            }\n\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n\n                        }\n\n\n                        //bind\n                        $scope.loadingShow = false;\n                    }\n\n                }\n            });\n        };\n\n        $scope.chartDateTime = {begin: null, end: null};\n\n        // function for show one\n        $scope.showOne = function (deviceName) {\n\n            if ($rootScope['standalone'] && $rootScope['standalone'] == true) {\n                return false;\n            }\n\n\n            // device type is\n            if ($location.url().indexOf('/app/page/param/') != -1) {\n                //open window\n                $window.open(\"/#/app/page/param/\" + $rootScope.applicationName + \"/\" + metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1]));\n            } else {\n                //open window\n                $window.open(\"/#\" + $location.url().replace(\"show\", \"param\").replace($location.url().substr($location.url().lastIndexOf('/', $location.url().lastIndexOf('/') - 1) + 1), metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1])));\n            }\n\n        };\n\n\n        var btntimer = null;\n\n\n        $scope.btnPanVULeft = function () {\n\n        };\n\n\n        $scope.btnZoomInVLeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVLeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomInVRight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVRight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVULeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVDLeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n\n        $scope.btnPanVURight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVDRight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        // functions for buttons\n        $scope.btnpanleft = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[0] - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0] - pan_delta;\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[1] - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1] - pan_delta;\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {begin: new Date(new Number(startDate)), end: new Date(new Number(endDate))};\n            }, 600);\n        };\n\n        $scope.btnpanright = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = $scope.chartDateWindow[0].getTime() + pan_delta;\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            } else {\n                if (($scope.chartDateWindow[0] + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = ($scope.chartDateWindow[0] + pan_delta);\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1].getTime() + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            } else {\n                if (($scope.chartDateWindow[1] + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1] + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {begin: new Date(new Number(startDate)), end: new Date(new Number(endDate))};\n            }, 600);\n        };\n\n\n        $scope.btnzoomin = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            startDate = rangeStart + (delta * 2);\n            endDate = rangeEnd - (delta * 2);\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            //\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {begin: new Date(new Number(startDate)), end: new Date(new Number(endDate))};\n            }, 600);\n        };\n\n        $scope.btnzoomout = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            if ((rangeStart - (delta * 2)) > panRange[0]) {\n                startDate = rangeStart - (delta * 2);\n            } else {\n                startDate = panRange[0];\n            }\n\n            if ((rangeEnd + (delta * 2)) < panRange[1]) {\n                endDate = rangeEnd + (delta * 2);\n            } else {\n                endDate = panRange[1];\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {begin: new Date(new Number(startDate)), end: new Date(new Number(endDate))};\n            }, 600);\n        };\n\n\n        var timer = null;\n        $scope.refersh = function (g, init) {\n            if (timer) {\n                $timeout.cancel(timer);\n            }\n            timer = $timeout(function () {\n                if (init || g.xAxisRange()[0] != $scope.chartDateTime.begin || g.xAxisRange()[1] != $scope.chartDateTime.end) {\n                    $scope.chartDateTime = {begin: g.xAxisRange()[0], end: g.xAxisRange()[1]};\n                    $scope.chartDateWindow = g.xAxisRange();\n                }\n            }, 600);\n        };\n    }\n\n};\n\n\nfgpWidgetGraph.buildFactory = function buildFactory ($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    fgpWidgetGraph.instance = new fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams);\n    return fgpWidgetGraph.instance;\n};\n\nfgpWidgetGraph.$inject = ['$timeout', 'dataService', '$rootScope', '$interval', '$filter', '$location', '$stateParams'];\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPageTitle = function fgpWidgetPageTitle() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetPageTitle.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //drag-channel  item means this widget accepts items\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"\">' +\n        '<h1>{{css.title.text}}</h1>' +\n        '<h3>{{css.subtitle.text}}</h3>' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div>';\n    return dom_show;\n};\n\n\nfgpWidgetPageTitle.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"minHeight\"] = metadata.css.minHeight;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n        $scope.css[\"title\"] = metadata.css.title;\n        $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n        $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n        $scope.css[\"subtitle\"] = metadata.css.subtitle;\n        $scope.css[\"subtitle\"][\"color\"] = metadata.css.subtitle.color;\n        $scope.css[\"subtitle\"][\"show\"] = metadata.css.subtitle.show;\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"title\"].text + \"}\");\n            $scope.css[\"title\"].text = f(deviceData.device);\n            f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"subtitle\"].text + \"}\");\n            $scope.css[\"subtitle\"].text = f(deviceData.device);\n        });\n    }\n\n\n\n\n};\n\nfgpWidgetPageTitle.buildFactory = function buildFactory () {\n    fgpWidgetPageTitle.instance = new fgpWidgetPageTitle();\n    return fgpWidgetPageTitle.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetMap = function fgpWidgetMap() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetMap.prototype.template = function template (element, attrs) {\n    var dom_show = '<div class = \"{{css.width}}\" style=\"padding:0px;height:{{css.height}}px;\" map-lazy-load=\"https://maps.google.com/maps/api/js\">' +\n        '<ng-map style=\"height: 100%;width: 100%;\" center=\"{{center}}\" zoom=\"15\">' +\n        '<marker on-click=\"map.showInfoWindow(\\'info_' + attrs.id + '\\')\" id=\"marker_' + attrs.id + '\" ng-repeat=\"item in markers\" icon=\"{{item.image}}\" position=\"{{item.latitude}},{{item.longitude}}\" title=\"{{item.name}}\" animation=\"Animation.DROP\" ></marker>' +\n        '</ng-map>' +\n        '</div>' +\n        '';\n    return dom_show;\n};\n\n\nfgpWidgetMap.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n            var location = {};\n            $scope.markers = [];\n            $scope.details = $scope.$parent.device;\n\n\n            // show one point.\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { return \" + item.value + \";}\");\n                    var result = f(deviceData.device);\n                    if (result) {\n                        location[item.label] = result;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n                } catch (error) {\n                    // show image\n                    if (\"image\" == item.label) {\n                        location[item.label] = item.value;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n\n                }\n            });\n\n\n            //do not show\n            if (location.latitude == \"\" || location.longitude == \"\") {\n                //hard code. the location is Melbourne\n                location.latitude = \"-37.810000\";\n                location.longitude = \"144.950000\";\n                $scope.center = [location.latitude, location.longitude];\n                // $scope.markers.push(location);\n            } else {\n                $scope.center = [location.latitude, location.longitude];\n                $scope.markers.push(location);\n            }\n\n        });\n    }\n\n};\n\nfgpWidgetMap.buildFactory = function buildFactory () {\n    fgpWidgetMap.instance = new fgpWidgetMap();\n    return fgpWidgetMap.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetDeviceDetail = function fgpWidgetDeviceDetail() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetDeviceDetail.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '<div class=\"row\" ng-repeat=\"item in data\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"text-align: right; font-weight: bold;line-height: 30px;\">{{item.label}}</div><div class=\"col-xs-8 col-md-8\" style=\"text-align: left;line-height: 30px;\">{{item.value}}</div>' +\n        '</div>' +\n        '</div>' +\n        '<div id=\"detail_status_' + attrs.id + '\" class=\"row\" style=\"min-height: 50px;\">' +\n        '</div>' +\n        '</div>';\n};\n\n\nfgpWidgetDeviceDetail.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n\n            $scope.data = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = \"\";\n                    $scope.data.push(item);\n                }\n            });\n\n\n        });\n\n    }\n\n};\n\n\nfgpWidgetDeviceDetail.buildFactory = function buildFactory () {\n    fgpWidgetDeviceDetail.instance = new fgpWidgetDeviceDetail();\n    return fgpWidgetDeviceDetail.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetSpan = function fgpWidgetSpan() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetSpan.prototype.template = function template (scope, element) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '</div>';\n};\n\nfgpWidgetSpan.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n};\n\nfgpWidgetSpan.buildFactory = function buildFactory () {\n    fgpWidgetSpan.instance = new fgpWidgetSpan();\n    return fgpWidgetSpan.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPie = function fgpWidgetPie($timeout) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n};\n\n\nfgpWidgetPie.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" ><div style=\"height: {{css.height}}px;\">' +\n        '<canvas class=\"fgpPieChart\"></canvas>' +\n        '</div>' +\n        '</div>';\n};\n\nfgpWidgetPie.prototype.link = function link (scope, element) {\n\n    this.$timeout(function () {\n        var ctx = element.find(\"canvas\")[0];\n        scope.chart = new Chart(ctx, {\n            type: 'pie',\n            data: {\n                labels: ['1'],\n                datasets: [\n                    {\n                        data: [1],\n                        backgroundColor: []\n                    }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                animation: false,\n                legend: {display: true}\n            }\n        });\n    });\n};\n\n\nfgpWidgetPie.prototype.controller = function controller ($scope, $element, $timeout) {\n\n    var id = $element.attr(\"id\");\n    var metadata = null;\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n            $scope.showdata = widgetData.data;\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n            $scope.data = [];\n            var colors = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = item.value;\n                    $scope.data.push(item);\n                }\n                if (item.color) {\n                    colors.push(item.color);\n                } else {\n                    colors.push('#' + (function co(lor) {\n                            return (lor +=\n                                [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                            && (lor.length == 6) ? lor : co(lor);\n                        })(''));\n                }\n            });\n            // timeout\n            $scope.pieData = {labels: [], value: []};\n            $timeout(function () {\n                // create data\n                angular$1.forEach($scope.data, function (item) {\n                    $scope.pieData.labels.push(item.label);\n                    $scope.pieData.value.push(item.value);\n                });\n\n                $scope.chart.data.labels = $scope.pieData.labels;\n                $scope.chart.data.datasets[0].data = $scope.pieData.value;\n                $scope.chart.data.datasets[0].backgroundColor = colors;\n                // update chart\n                $scope.chart.update();\n            });\n\n        });\n\n\n    }\n\n\n};\n\nfgpWidgetPie.buildFactory = function buildFactory ($timeout) {\n    fgpWidgetPie.instance = new fgpWidgetPie($timeout);\n    return fgpWidgetPie.instance;\n};\nfgpWidgetPie.$inject = ['$timeout'];\n\n/**\n * Created by eric on 22/11/16.\n */\n\nvar fgpDockerButton = function fgpDockerButton() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\n\nfgpDockerButton.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"col-xs-12 btn-group\" role=\"group\" style=\"padding: 2px;\" aria-label=\"...\">' +\n        '<div style=\"float: right;\">' +\n        '<button type=\"button\" class=\"btn btn-{{button.color}} btn-xs\" ' +\n        ' ng-click=\"action(button)\" ng-repeat=\"button in buttons\" ng-show=\"checkShow(button)\"><i class=\"fa {{button.icon}}\"' +\n        ' aria-hidden=\"true\"></i>' +\n        '</button>' +\n        '</div>' +\n        '</div>';\n    return show_dom;\n};\n\n\nfgpDockerButton.prototype.controller = function controller ($scope, $element, $http, $timeout) {\n\n    $scope.stats = \"\";\n\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var confData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                confData = data.data;\n            }\n        }\n    });\n\n    var repeateId = [];\n\n    var pageDevice = null;\n    $scope.$on('deviceInfoEvent', function (event, data) {\n        pageDevice = data.device;\n    });\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n        if (data.application === repeateId[2] && data.container === repeateId[0] && data.host === repeateId[1]) {\n            $scope.stats = data.stats;\n        }\n    });\n\n    $scope.checkShow = function (button) {\n\n\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            return true;\n        }\n\n\n        if (button.type === \"stop\") {\n            if ($scope.stats === \"running\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"start\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"delete\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    // how many buttons?\n    $scope.buttons = [];\n\n    if ($scope.$parent.repeat) {\n        repeateId = $scope.$parent.repeat.split(\",\");\n    }\n\n    angular.forEach(configuration, function (item) {\n        if (item.label == \"buttons\") {\n            $scope.buttons = item.value;\n        }\n    });\n\n    $scope.healthinfo = \"\";\n\n\n    // submit \"action\" to rest api\n    $scope.action = function (button) {\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/exec',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    deviceName: pageDevice.name,\n                    deviceKey: pageDevice.key.id,\n                    relationship: 'node_application'\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        } else {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/hosts/action',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    container: repeateId[0],\n                    host: repeateId[1],\n                    application: repeateId[2]\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        }\n\n    };\n};\n\n\nfgpDockerButton.buildFactory = function buildFactory () {\n    fgpDockerButton.instance = new fgpDockerButton();\n    return fgpDockerButton.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetRepeatContainer = function fgpWidgetRepeatContainer($http) {\n    this.restrict = 'E';\n    this.scope = {};\n    this._$http = $http;\n};\n\nfgpWidgetRepeatContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{item.device.key.id}}\" ng-repeat=\"item in items\" emit-last-repeater-element style=\"padding-left: 2px; padding-right: 2px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding-left: 1px; padding-right: 1px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}};\"><i class=\"fa fa-desktop\" aria-hidden=\"true\" style=\"margin-right: 5px;\"></i>{{item.device.name}}</div>' +\n        '<div class=\"panel-body\"  style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\'}};\">' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" ng-repeat=\"item in items\" repeat-id=\"{{item.device.key.id}}\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;padding-left: 2px; padding-right: 2px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n};\n\nfgpWidgetRepeatContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout, $http, $location, $stateParams, $websocket) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    // all items\n    $scope.items = [];\n\n    $scope.labelstyle = [\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"];\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n\n    $scope.listStyle = \"list\";\n\n    $scope.labels = [];\n\n    var deviceType = $stateParams.type;\n    var deviceName = $stateParams.device;\n\n    if (metadata.data) {\n\n\n        $scope.labels = [];\n\n\n        if (metadata.data.datasource.labels) {\n            $scope.labels = metadata.data.datasource.labels.split(\" \");\n        }\n\n        if (metadata.data.datasource.style) {\n            $scope.listStyle = metadata.data.datasource.style;\n        }\n\n        // show different type\n        var relation = metadata.data.datasource.type;\n        $scope.items = [];\n        $http({\n            method: 'GET',\n            url: 'api/docker/repeat/' + deviceType + '/' + deviceName + '/' + relation\n        }).then(function (data) {\n            $scope.items = data.data;\n        }, function (error) {\n            console.error(error);\n        });\n\n        // I'm ready. please give all my children to me~\n        // call stage\n        $scope.$on('LastRepeaterElement', function () {\n            $timeout(function () {\n                $scope.$emit('bindChildRepeatEvent', {\n                    id: element_id\n                });\n            });\n        });\n\n\n    }\n    //establish a connection with websocket\n    var dataStream = $websocket('ws://' + $location.host() + \":\" + $location.port() + '/ws/hosts');\n    dataStream.onMessage(function (message) {\n        try {\n            var backData = JSON.parse(message.data);\n            if (backData.hasOwnProperty(\"container\")) {\n                // tell children\n                $scope.$parent.$broadcast('containerStatusEvent', backData);\n                // update health-check status\n                angular.forEach($scope.items, function (item) {\n                    if (backData.application == item.device.key.id) {\n                        if (backData.config.State.Health) {\n                            item[\"health\"] = backData.config.State.Health.Status;\n                        } else {\n                            item[\"health\"] = null;\n                        }\n\n                        if (backData.stats == \"exited\") {\n                            item[\"health\"] = null;\n                        }\n                    }\n                });\n            }\n        } catch (e) {\n        }\n    });\n\n    $scope.healthcheck = function (item) {\n        // call server and get the exception.\n        dataService.healthcheck(item.name, item.device.key.id);\n    };\n\n\n};\n\n\nfgpWidgetRepeatContainer.buildFactory = function buildFactory ($http) {\n    fgpWidgetRepeatContainer.instance = new fgpWidgetRepeatContainer($http);\n    return fgpWidgetRepeatContainer.instance;\n};\n\nfgpWidgetRepeatContainer.$inject = ['$http'];\n\n/**\n * Created by eric on 25/11/16.\n */\nvar fgpImage = function fgpImage() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpImage.prototype.template = function template (scope, element) {\n    return '' +\n        '<img src=\"{{url}}\" style=\"width:{{css.width}}px;height:{{css.height}}px;\">' +\n        '';\n};\n\nfgpImage.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"0\",\n        height: \"0\"\n    };\n\n    $scope.url = \"\";\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n    if($scope.showdata.metadata.data){\n        $scope.url = $scope.showdata.metadata.data.url;\n    }\n};\n\nfgpImage.buildFactory = function buildFactory () {\n    fgpImage.instance = new fgpImage();\n    return fgpImage.instance;\n};\n\n/**\n * Created by eric on 28/11/16.\n */\nvar fgpIcon = function fgpIcon() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpIcon.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"{{css.width}}\" style=\"margin-top: 10px;background-color: {{css.background.color}};border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"padding: 5px;\">' +\n        '<i class=\"fa fa-{{icon}}\" style=\"font-size: 60px;\"></i>' +\n        '</div>' +\n        '<div class=\"col-xs-8 col-md-8\">' +\n        '<div style=\"text-align: right;font-size: large;\"><label>{{title}}</label></div>' +\n        '<div style=\"text-align: right;font-size: small;\"><label>{{desc}}</label></div>' +\n        '</div>' +\n        '</div>' +\n        '';\n    return show_dom;\n};\n\nfgpIcon.prototype.controller = function controller ($scope, $element) {\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.icon = configuration.content.icon;\n\n    $scope.desc = configuration.content.desc;\n\n    $scope.title = \"\";\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + configuration.content.f + \"}\");\n            $scope.title = f(deviceData.device);\n        });\n\n    }\n\n};\n\n\nfgpIcon.buildFactory = function buildFactory () {\n    fgpIcon.instance = new fgpIcon();\n    return fgpIcon.instance;\n};\n\n/**\n * Created by eric on 29/11/16.\n */\nvar fgpWidgetAppContainer = function fgpWidgetAppContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetAppContainer.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //<div class=\"alert alert-info\" role=\"alert\">...</div>\n    return '' +\n        '<div ng-show=\"showstyle == \\'list\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-12 col-xs-12  alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px; text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n\n        '<div ng-show=\"showstyle == \\'grid\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-6 col-xs-6 alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px;text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n        '';\n};\n\nfgpWidgetAppContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.containers = [];\n    $scope.containerswithTimeout = [];\n    var metadata = widgetData.data.metadata;\n    // should be a host id\n    var repeat = $scope.$parent.repeat;\n\n    $scope.showstyle = \"list\";\n\n    $scope.host = repeat;\n\n\n    // I'm ready. please give all my children to me~\n    // call stage\n    $scope.$on('LastRepeaterElement', function () {\n        $timeout(function () {\n            $scope.$emit('bindChildRepeatEvent', {\n                id: element_id\n            });\n        });\n    });\n\n    $timeout(function () {\n        var pp = $scope.$emit('listStyleEvent', {\n            id: widgetData.data.parent,\n            callback: function (style) {\n                $scope.showstyle = style;\n            }\n        });\n\n    });\n\n    $scope.gotoContainer = function (container) {\n        // \"device type and device name\" display by a dynamic page!\n        console.info(container);\n        return false;\n    };\n\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n\n        if (data.host == repeat) {\n            //f\n            var labels = [];\n\n            if (metadata.data.datasource.labels) {\n                labels = metadata.data.datasource.labels.split(\" \");\n            }\n            var showLabel = \"\";\n            angular.forEach(labels, function (label) {\n                showLabel += data.config[label] + \" \";\n            });\n\n            var app = {\n                id: data.container,\n                label: showLabel,\n                application: data.application,\n                name: data.deviceName,\n                type: data.deviceType\n            };\n            var flag = false;\n            angular.forEach($scope.containers, function (container) {\n                if (container.id == app.id) {\n                    // update timer\n                    var timer_index = -1;\n                    var timer = $scope.containerswithTimeout.filter(function (item, index) {\n                        if(item.app.id == app.id){\n                            timer_index = index;\n                            return true;\n                        }else{\n                            false;\n                        }\n                    });\n                    $timeout.cancel(timer[0].t);\n                    if (data.stats != \"removed\") {\n                        var newTimer = $timeout(function () {\n                            var index = $scope.containers.indexOf(app);\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }, 30000);\n                        timer[0].t = newTimer;\n                        flag = true;\n                    } else {\n                        var index = -1;\n                        angular.forEach($scope.containers, function (item, itemIndex) {\n                            if (item.id === app.id) {\n                                index = itemIndex;\n                            }\n                        });\n                        if (index != -1 && timer_index != -1) {\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            flag = true;\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }\n                    }\n                }\n            });\n\n            if (!flag) {\n                // add to\n                $scope.containers.push(app);\n                // delete it after 30 seconds!\n                var t = $timeout(function () {\n                    var index = $scope.containers.indexOf(app);\n                    $scope.containers.splice(index, 1);\n                }, 30000);\n                $scope.containerswithTimeout.push({t: t, app: app});\n            }\n        }\n\n    });\n\n};\n\nfgpWidgetAppContainer.buildFactory = function buildFactory () {\n    fgpWidgetAppContainer.instance = new fgpWidgetAppContainer();\n    return fgpWidgetAppContainer.instance;\n};\n\nfgpWidgetAppContainer.$inject = [];\n\n/**\n * Created by ericwang on 21/06/2016.\n */\nvar fgpWidgetChartTable = function fgpWidgetChartTable() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetChartTable.prototype.template = function template (element, attrs) {\n    return '<div style=\"padding:0px;height: {{css.height}}px;position: relative; overflow-y : auto;\">' +\n        '<table st-table=\"rowCollection\" class=\"col-md-12 table table-striped\">' +\n        '<thead>' +\n        '<tr>' +\n        '<th ng-repeat=\"column in sampledata.columns\">{{column.label}}</th>' +\n        '</tr>' +\n        '</thead>' +\n        '<tbody>' +\n        '<tr ng-repeat=\"value in sampledata.values\">' +\n        '<td ng-repeat=\"col in sampledata.columns\">{{value[col.label] | tableformatter: value : col.label : col.formatter}}</td>' +\n        '</tr>' +\n        '</tbody>' +\n        '</table>' +\n        '</div>';\n};\n\nfgpWidgetChartTable.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    //show\n    $scope.showdata = widgetData.data;\n\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n\n\n    $scope.$on('chartDataChangeEvent', function (event, chartData) {\n        var chartId = chartData.id;\n        if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"device\") {\n            $scope.sampledata = {};\n            // make data\n            var collectionName = chartData.data.collection;\n            var groupName = chartData.group;\n            var columns = [];\n            //get group and collection configuration\n            angular$1.forEach($scope.showdata.metadata.data.groups, function (group) {\n                if (group.name == groupName) {\n                    angular$1.forEach(group.collections, function (collection) {\n                        if (collection.name === collectionName) {\n                            columns = collection.rows;\n                        }\n                    });\n                }\n            });\n\n\n            $scope.sampledata.columns = [];\n\n            angular$1.forEach(columns, function (column) {\n                $scope.sampledata.columns.push({label: column.label, formatter: column.formatter});\n            });\n            $scope.sampledata.values = [];\n            angular$1.forEach(columns, function (column) {\n                var f = new Function(\"data\", \"with(data) { if(\" + column.value + \") return \" + column.value + \";return '';}\");\n                angular$1.forEach(chartData.data.data, function (record, index) {\n                    if ($scope.sampledata.values.length < chartData.data.data.length) {\n                        //add new one\n                        var item = {};\n                        item[column.label] = f(record);\n                        $scope.sampledata.values.push(item);\n                    } else {\n                        $scope.sampledata.values[index][column.label] = f(record);\n                    }\n                });\n            });\n\n            var cleanData = [];\n            angular$1.forEach($scope.sampledata.values, function (value, index) {\n                var flag = false;\n                angular$1.forEach(columns, function (column) {\n                    if (value[column.label] && value[column.label] != \"\") {\n                        flag = true;\n                    }\n                });\n\n                if (flag) {\n                    cleanData.push(value);\n                }\n            });\n            $scope.sampledata.values = cleanData;\n\n        } else if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"relation\") {\n            //\n\n\n        }\n\n    });\n\n\n};\n\nfgpWidgetChartTable.buildFactory = function buildFactory () {\n    fgpWidgetChartTable.instance = new fgpWidgetChartTable();\n    return fgpWidgetChartTable.instance;\n};\n\n/**\n * Created by ericwang on 10/06/2016.\n */\n// angular module\nangular$1.module('fgp-kit', ['ngMap','ui.router']).service('dataService', dataAccessApi.buildFactory)\n    .filter('removeSlash', function () {\n        return function (input) {\n            if (input.startsWith(\"/\")) {\n                return input.substring(1, input.length);\n            }\n            return input;\n        }\n    })\n    .factory('$graphstorage', ['$window', function($window) {\n    return {\n        setTree: function(key, value) {\n            $window.localStorage[key] = JSON.stringify(value);\n        },\n        getTree: function(key) {\n            return JSON.parse($window.localStorage[key]) || false;\n        },\n        addTree: function (key,value) {\n            if($window.localStorage[key]){\n                var trees = JSON.parse($window.localStorage[key]);\n                trees.push(value);\n                this.setTree(key,trees);\n            }else{\n                this.setTree(key, [value]);\n            }\n        },\n        clear: function(){\n            $window.localStorage.clear();\n        }\n    }\n    }])\n    .directive('fgpContainer', fgpStage.buildFactory)\n    .directive('widgetContainer', fgpWidgetContainer.buildFactory)\n    .directive('widgetGraph', fgpWidgetGraph.buildFactory)\n    .directive('widgetPageTitle', fgpWidgetPageTitle.buildFactory)\n    .directive('widgetMap', fgpWidgetMap.buildFactory)\n    .directive('widgetStatus', fgpStage.buildFactory)\n    .directive('widgetDeviceDetail', fgpWidgetDeviceDetail.buildFactory)\n    .directive('widgetDeviceSpan', fgpWidgetSpan.buildFactory)\n    .directive('widgetPie', fgpWidgetPie.buildFactory)\n    .directive('widgetDockerButton', fgpDockerButton.buildFactory)\n    .directive('widgetRepeatContainer', fgpWidgetRepeatContainer.buildFactory)\n    .directive('widgetImage', fgpImage.buildFactory)\n    .directive('widgetIcon', fgpIcon.buildFactory)\n    .directive('widgetAppContainer', fgpWidgetAppContainer.buildFactory)\n    .directive('widgetChartTable', fgpWidgetChartTable.buildFactory)\n    .directive('emitLastRepeaterElement', [function () {\n        return function (scope) {\n            if (scope.$last) {\n                scope.$emit('LastRepeaterElement');\n            }\n        };\n    }]).filter('tableformatter', ['$filter', function ($filter) {\n    return function (input, obj, field, formatter) {\n        if (formatter) {\n            if (obj[field]) {\n                if (\"date\" == formatter) {\n                    return $filter('date')(new Date(obj[field]), 'd/M/yy h:mm a');\n                } else {\n                    return input;\n                }\n            }\n        } else {\n            return input;\n        }\n    };\n}]);\nvar index = 'fgp-kit';\n\nreturn index;\n\n})));\n\n//# sourceMappingURL=fgp.kit.bundle.js.map\n"]}
{"version":3,"sources":["fgp.kit.bundle.js"],"names":["global","factory","exports","module","require","define","amd","fgp_kit","angular","$","Dygraph","ngmap","chartJS","this","angular$1","chart_js","fgpStage","scope","applicationName","deviceName","server","configuration","scatterColors","standalone","replace","restrict","prototype","template","controller","$scope","$element","$timeout","$rootScope","$compile","dataService","$interval","showdata","length","setColors","graphBindingArray","$on","evt","msg","push","forEach","item","id","items","element","find","children","item_new","currentElement","attr","groupItems","dulpItem","findChild4Repeat","param","config","callback","metadata","data","datasource","style","key","from","parentId","parentHtmlObj","arrayItems","newId","i","parent","currentItem","html_render","repeat","append","findChild","sendDeviceData","deviceInfo","then","$broadcast","device","graph","graphs","buildFactory","instance","dataAccessApi","$http","$q","$cacheFactory","_$http","_$q","indexCache","deviceStores","_$interval","host","deviceKey","deferred","defer","url","ajaxSettings","async","ajax","type","contentType","success","types","Object","defineProperty","name","get","result","field","error","e","reject","console","log","message","resolve","promise","deviceInitInfo","application","storeSchema","rangeLevel","otherLevels","fields","params","concat","cache","response","childrenDeviceInitInfo","relationType","relationDeviceType","fillChildrenTree","buckets","tree","showData","value","flag","info","fillTree","size","calTree","start","end","filter","elem","devicesStoreData","store","bucketsData","devicesNullBucket","index","bucketKeys","nullBucket","bucket","post","JSON","stringify","deviceData","currentBucketShowData","deviceStoreData","defaultColors","this$1","colors","co","lor","Math","floor","random","healthcheck","autoUpdateGraph","schema","count","fetcher","last","interval","trees","frequency","timeKey","devices","graphData","$inject","fgpWidgetContainer","attrs","hasOwnProperty","showTitle","element_id","dom_show","dom_show_notitle","widgetData","$emit","css","color","width","border","background","title","show","source","parse","fgpWidgetGraph","$filter","$location","$stateParams","_dataService","Export","DEFAULT_ATTRS","backgroundColor","titleFont","titleFontColor","axisLabelFont","axisLabelFontColor","labelFont","labelFontColor","legendFont","legendFontColor","vLabelLeft","legendHeight","legendMargin","lineHeight","maxlabelsWidth","labelTopMargin","magicNumbertop","isSupported","canvas","document","createElement","context","getContext","toDataURL","fillText","asPNG","dygraph","img","userOptions","asCanvas","src","options","createCanvas","update","width_","height","height_","drawPlot","drawLegend","ctx","fillStyle","fillRect","plotCanvas","hidden_","drawImage","axesPluginDict","getPlugin","axesPlugin","plugin","ylabels_","putLabel","xlabels_","labelsPluginDict","labelsPlugin","title_div_","xlabel_div_","putVerticalLabelY1","ylabel_div_","putVerticalLabelY2","y2label_div_","layout_","annotations","putLabelAnn","labelColor","divLabel","font","top","parseInt","left","bottom","textAlign","ceil","putText","text","innerText","textContent","textDim","measureText","save","translate","rotate","PI","restore","right","textBaseline","labelMargin","getColors","labels","attr_","slice","labelsWidth","labelsX","labelsY","labelVisibility","usedColorCount","txt","plugins_","toString","dom_loading","dom_legend","dom_empty_data","dom_alert_info","dom_datetime_interval","dom_series_list","dom_real_time_grap","dom_buttons","html","link","status","timeOut","completionPercent","getData","numSeries","numRows","initDate","Date","j","getTime","val","sampleData","movePan","event","g","side","dragEndX","dragGetX_","dragEndY","dragGetY_","is2DPan","pixelsDragged","dragStartY","axis","axes_","axis_data","axes","unitsDragged","unitsPerPixel","boundedValue","boundedValues","maxValue","initialTopValue","min","minValue","dragValueRange","attributes_","getForAxis","valueWindow","pow","LOG_SCALE","valueRange","minDate","initialLeftmostDate","dragStartX","xUnitsPerPixel","boundedDates","max","maxDate","dateRange","zoomRange","xAxisZoomRange","getOptionForAxis","dateWindow_","drawGraph_","offsetToPercentage","offsetX","offsetY","xOffset","toDomCoords","xAxisRange","yar0","yAxisRange","yOffset","x","y","w","h","xPct","yPct","zoom","zoomInPercentage","xBias","yBias","direction","basicInfo","adjustAxis","bias","delta","increment","foo","yAxes","newYAxes","numAxes","ranges","range","newZoomRange","xAxisExtremes","updateOptions","dateWindow","canScroll","timer","mouseOverHandler","cancel","mouseEnterHandler","mouseOutHandler","scroll","normal","WheelEvent","detail","deltaY","wheelDelta","percentage","layerX","target","offsetLeft","layerY","offsetTop","percentages","plotter_","area","cancelEvent","chartDateWindow","firstPoint","timer_mousedown","mousedownHandler","initializeMouseDown","clientX","startPan","preventDefault","stopPropagation","mousemoveHandler","isPanning","currentChart","mouseupHandler","endPan","currentView","currentHighlight","showOne","interactionModel","mousewheel","DOMMouseScroll","wheel","mousedown","mousemove","mouseenter","mouseup","mouseout","drawGapEdgePoints","pointSize","legend","labelsKMB","labelsSeparateLines","drawPoints","drawAxesAtZero","labelsDivStyles","text-align","position","display","yRangePad","ylabel","xlabel","series","Device0","Device4","axisLabelWidth","y2","valueFormatter","moment","format","drawCallback","isInit","refersh","plugins","Plugins","Crosshair","timer_auto","process_bar_timer","on","tempConifg","realTimeGraph","currentChartOptions","file","darkenColor","colorStr","toRGB_","r","b","barChartPlotter","drawingContext","points","y_bottom","toDomYCoord","min_sep","Infinity","sep","canvasx","bar_width","p","center_x","canvasy","strokeRect","auto_device_name","auto_schema","auto_store","auto_fields","graph_data","worker","deviceConfig","auto_metadata","groups","collections","allLines","yRanges","collection","line","timestamp","showY2axis","rows","row","label","yaxis","plotter","DygraphCanvasRenderer","_linePlotter","f","Function","counter","realLine","ex","yrange","newLines","copy","NaN","perInterval","showRealTimeGraph","modal","range_show","rangeSelectorBar","xAxisHeight","drawAxis","showRangeSelector","rangeSelectorHeight","finalDateRagne","chartDateTime","begin","finalDateRange","child","synchronize","selection","childrenChart","$window","elementId","emptyDataShow","alertMessage","showY2Btns","legendText","legendText_device","legendText_datetime","legendText_column","legendText_value","legendColor","autoupdate","dateTimeIntervals","download_image","dataurl","download","href","body","appendChild","click","removeChild","export_img","series_","currentIntervalName","download_data","content","fileName","mimeType","a","navigator","msSaveBlob","Blob","URL","createObjectURL","setAttribute","location","encodeURIComponent","export_data","getLabels","columns","csvContent","datewindow","rawData_","infoArray","tempArray","includes","dataString","join","basic","checked","currentIntervalChoosed","changeInterval","rangeConfig","loadingShow","intevals","begin_path","end_path","init_flag","fixInterval","noneFixed","fixGraphWithGap","currentInterval","fixed","tempDate","obj","labels_","file_","showOrHideDevice","childrenDevices","setVisibility","fixGraphWithGap_click","device_name","parent_container","data_from","checkY2Btns","$watch","nObj","oObj","level","patt","RegExp","lines","match","column","startsWith","initChart","relation","relation_group","initChildrenChart","newValue","oldValue","expect_points","expectedInterval","conf","preOne","lastOne","expects","cin","arr","Array","apply","series_range","l0","rangeBarLabels","objNeed2Add","dataLength","tempObj","sort","rangeSeries","currentStore","childTrees","updateChildrenDetailChart","rangeChildrenData","updateDetailChart","rangeData","group","fetchData","values","node","array","ordinalRangeData","intevalforshow","rangeTree","allData","first","newData","thePoint","updateChart","deviceDatas","devicesInfo","deviceObj","updateChildrenChart","relationConfig","leftAndRight","leftYAxis","rightYAxis","allXLabels","yRange","substr","originalData","odata","childrenRangeConfig","highlightSeriesOpts","strokeWidth","strokeBorderWidth","highlightCircleSize","y2label","highlightCallback","pts","seriesName","sn","point_show","xval","yval","point","$apply","legendTop","legendLeft","unhighlightCallback","axisLabelFormatter","d","newTime","tempData","tempTime","dateTime","indexOf","chartData","nt","timeTicket","lineData","autoUpdateChart","rangeSeriesNumber","Number","open","lastIndexOf","btntimer","btnZoomInVLeft","btnZoomOutVLeft","btnZoomInVRight","btnZoomOutVRight","btnPanVULeft","btnPanVDLeft","btnPanVURight","btnPanVDRight","btnpanleft","panRange","pan_delta","startDate","endDate","btnpanright","btnzoomin","rangeStart","rangeEnd","btnzoomout","init","fgpWidgetPageTitle","minHeight","subtitle","fgpWidgetMap","markers","details","$parent","latitude","longitude","center","fgpWidgetDeviceDetail","fgpWidgetSpan","fgpWidgetPie","chart","Chart","datasets","responsive","maintainAspectRatio","animation","pieData","fgpDockerButton","show_dom","stats","confData","repeateId","pageDevice","container","checkShow","button","shown","buttons","split","healthinfo","action","method","func","script","relationship","successCallback","errorCallback","fgpWidgetRepeatContainer","$websocket","labelstyle","listStyle","deviceType","dataStream","port","onMessage","backData","State","Health","Status","fgpImage","fgpIcon","icon","desc","fgpWidgetAppContainer","containers","containerswithTimeout","showstyle","pp","gotoContainer","showLabel","app","timer_index","t","newTimer","splice","itemIndex","fgpWidgetChartTable","chartId","sampledata","collectionName","groupName","formatter","record","cleanData","service","input","substring","setTree","localStorage","getTree","addTree","clear","directive","$last"],"mappings":"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","file":"fgp.kit.bundle.min.js","sourcesContent":["/**\n * fgp-kit\n * @version 1.0 - Homepage <http://www.future-grid.com.au>\n * @copyright (c) 2013-2016 Eric.Wang <flexdeviser@gmail.com>\n * @license Apache2. \n * @overview fgp.kit.js is a useful toolkit for future-grid's clients.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular'), require('jquery'), require('dygraphs'), require('ngmap'), require('chart.js')) :\n    typeof define === 'function' && define.amd ? define(['angular', 'jquery', 'dygraphs', 'ngmap', 'chart.js'], factory) :\n    (global.fgp_kit = factory(global.angular,global.$,global.Dygraph,global.ngmap,global.chartJS));\n}(this, (function (angular$1,$,Dygraph,ngmap,chart_js) {\n\nangular$1 = 'default' in angular$1 ? angular$1['default'] : angular$1;\n$ = 'default' in $ ? $['default'] : $;\nDygraph = 'default' in Dygraph ? Dygraph['default'] : Dygraph;\n\n/**\n * Created by ericwang on 10/06/2016.\n */\nvar fgpStage = function fgpStage() {\n    this.scope = {\n        applicationName: \"=\",\n        deviceName: \"=\",\n        server: \"=\",\n        configuration: '=',\n        scatterColors: \"=\",\n        standalone: \"=\"\n    };\n    this.replace = true;\n    this.restrict = 'A';\n};\n\nfgpStage.prototype.template = function template () {\n    return '<div id=\"pageStage\" class=\"wrapper col-md-12 col-xl-12\" style=\"background-color: #fff;height:100%;padding: 0px;\">' +\n        '</div>';\n};\n\nfgpStage.prototype.controller = function controller ($scope, $element, $timeout, $rootScope, $compile, dataService, $interval) {\n    $scope.showdata = {};\n\n    if ($scope.scatterColors && $scope.scatterColors.length > 0) {\n        dataService.setColors($scope.scatterColors);\n    }\n\n\n    $rootScope['applicationName'] = $scope.applicationName;\n    $rootScope['host'] = $scope.server;\n    $rootScope['device'] = $scope.deviceName;\n    $rootScope['standalone'] = $scope.standalone;\n\n\n    var graphBindingArray = [];\n\n    $scope.$on('bindChildChartEvent', function (evt, msg) {\n        graphBindingArray.push(msg);\n    });\n\n    $scope.$on('bindChildRepeatEvent', function (evt, msg) {\n        angular$1.forEach($scope.configuration, function (item) {\n            if (item.id == msg.id) {\n                var items = angular$1.element(\"body\").find(\"#\" + item.id).children();\n                angular$1.forEach(items, function (item_new) {\n                    $scope.showdata[item_new.id] = item;\n                    var currentElement = angular$1.element(item_new);\n                    if (currentElement.attr(\"dulp\")) {\n                        var groupItems = angular$1.element(\"body\").find(\"div[dulp='\" + item.id + \"']\");\n                        angular$1.forEach(groupItems, function (dulpItem) {\n                            findChild4Repeat(item.id, angular$1.element(dulpItem), $scope.configuration, item_new.id);\n                        });\n                    }else{\n                        findChild4Repeat(item.id, currentElement, $scope.configuration, item_new.id);\n                    }\n                });\n            }\n        });\n    });\n\n    $scope.$on('listStyleEvent', function (evt, param) {\n        var config = $scope.showdata[param.id.replace(\"edit\", \"\")];\n        param.callback(config.metadata.data.datasource.style);\n    });\n\n\n    $scope.$on('fetchWidgetMetadataEvent', function (evt, msg) {\n        angular$1.forEach($scope.showdata, function (metadata, key) {\n            if (key == msg.id) {\n                msg.callback({data: metadata, from: 'show'});\n                return;\n            }\n        });\n    });\n\n\n    function findChild4Repeat(parentId, parentHtmlObj, arrayItems, newId) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n\n                $scope.showdata[id] = arrayItems[i];\n                if (parentHtmlObj.attr(\"repeat-id\")) {\n                    $scope.repeat = parentHtmlObj.attr(\"repeat-id\");\n                }\n                if (parentHtmlObj.find('#edit' + parentId).find(\"#\" + id).length == 0) {\n                    parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                }\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems);\n            }\n            else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems);\n            }\n        }\n    }\n\n    function findChild(parentId, parentHtmlObj, arrayItems) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                findChild(arrayItems[i].id, currentItem, arrayItems);\n            } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                findChild(arrayItems[i].id, currentItem, arrayItems);\n            }\n        }\n    }\n\n    angular$1\n        .forEach($scope\n\n                .configuration\n            ,\n            function (item) {\n                if ('workingArea' === item.parent) {\n                    var currentItem = angular$1.element(item.html_render);\n                    $scope.showdata[item.id] = item;\n                    $element.append($compile(currentItem)($scope));\n                    findChild(item.id, currentItem, $scope.configuration);\n                }\n            }\n        )\n    ;\n\n    var\n        sendDeviceData = function () {\n            dataService.deviceInfo($scope.server, $scope.deviceName, null, $scope.applicationName).then(function (data) {\n                // send device info to all widget\n                $timeout(function () {\n                    $scope.$broadcast('deviceInfoEvent', {device: data, from: 'application'});\n                });\n            });\n        };\n\n    /**\n     * get device information\n     */\n    if ($scope.deviceName && $scope.deviceName != \"\" && \"undefined\" != $scope.deviceName) {\n        // first time\n        sendDeviceData();\n\n        // after every 30 seconds\n        // $interval(function () {\n        // sendDeviceData();\n        // }, 30000);\n    }\n\n\n// all item created;\n    $timeout(function () {\n        angular$1.forEach(graphBindingArray, function (graph) {\n            $scope.$broadcast('bindFatherGraphEvent', {parent: graph.graphs, children: graph.children});\n        });\n    });\n};\n\n\nfgpStage.buildFactory = function buildFactory () {\n    fgpStage.instance = new fgpStage();\n    return fgpStage.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar dataAccessApi = function dataAccessApi($http, $q, $cacheFactory, $interval) {\n    this._$http = $http;\n    this._$q = $q;\n    // get cache\n    this.indexCache = $cacheFactory('indexCache');\n    this.deviceStores = $cacheFactory('deviceStores');\n    this._$interval = $interval;\n};\n\n\n/**\n * sync using JQuery\n * @param deviceName\n * @param deviceKey\n * @param applicationName\n * @returns {*}\n */\ndataAccessApi.prototype.deviceInfo = function deviceInfo (host, deviceName, deviceKey, applicationName) {\n    var deferred = this._$q.defer();\n    var url = host + \"/rest/api/\";\n\n    if (applicationName) {\n        url += \"app/\" + applicationName;\n    }\n\n    if (deviceName) {\n        url += '/devices/' + deviceName;\n    } else if (deviceKey) {\n        url += 'devices?key=' + deviceKey;\n    }\n\n    $.ajaxSettings.async = false;\n    $.ajax({\n        type: 'GET',\n        url: url,\n        contentType: \"application/json\",\n        success: function (data) {\n            var url = host + \"/rest/api/\";\n            if (applicationName) {\n                url += \"app/\" + applicationName + \"/devices/extension-types?device_type=\";\n            } else {\n                url += \"devices/extension-types?device_type=\";\n            }\n            $.ajaxSettings.async = false;\n            $.ajax({\n                type: 'GET',\n                url: url + data.type,\n                contentType: \"application/json\",\n                success: function (types) {\n                    angular$1.forEach(types, function (type) {\n                        Object.defineProperty(data, type.name, {\n                            get: function () {\n                                var result = null;\n                                var url = host + \"/rest/api/\";\n                                if (applicationName) {\n                                    url += \"app/\" + applicationName + \"/devices/extensions?device_name=\";\n                                } else {\n                                    url += \"devices/extensions?device_name=\";\n                                }\n                                $.ajaxSettings.async = false;\n                                $.ajax({\n                                    type: 'GET',\n                                    url: url + this.name + '&extension_type=' + type.name,\n                                    contentType: \"application/json\",\n                                    success: function (field) {\n                                        result = field;\n                                    },\n                                    error: function (e) {\n                                        deferred.reject(e);\n                                    }\n                                });\n                                return result;\n                            }\n                        });\n                    });\n                },\n                error: function (e) {\n                    console.log(e.message);\n                }\n            });\n\n            deferred.resolve(data);\n        },\n        error: function (e) {\n            deferred.reject(e);\n        }\n    });\n    return deferred.promise;\n};\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.deviceInitInfo = function deviceInitInfo (host, application, deviceKey, storeSchema, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {'otherLevels': otherLevels, 'fields': [].concat(fields)}, cache: this.deviceStores\n    }).then(\n        function (response) {\n            deferred.resolve(response.data);\n        },\n        function (response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.childrenDeviceInitInfo = function childrenDeviceInitInfo (host, application, deviceKey, storeSchema, relationType, relationDeviceType, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/children/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            relationType: relationType,\n            relationDeviceType: relationDeviceType,\n            otherLevels: otherLevels,\n            fields: [].concat(fields)\n        },\n        cache: this.deviceStores\n    }).then(\n        function (response) {\n            deferred.resolve(response.data);\n        },\n        function (response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\ndataAccessApi.prototype.fillChildrenTree = function fillChildrenTree (buckets, tree, showData) {\n\n    if (tree.children[0] != null) {\n        fillChildrenTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillChildrenTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n\n        angular$1.forEach(buckets, function (value, key) {\n            if (key == tree.id && value != null) {\n                tree.data = value;\n                tree['size'] = value.length;\n\n                var flag = false;\n                angular$1.forEach(showData, function (data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        tree['size'] = value.length;\n                        flag = true;\n                    }\n                });\n\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n};\n\n\ndataAccessApi.prototype.fillTree = function fillTree (buckets, tree, showData) {\n    if (tree.children[0] != null) {\n        fillTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        angular$1.forEach(buckets, function (value, key) {\n            if (key == tree.id) {\n                tree.data = value;\n                tree['size'] = value.size;\n                var flag = false;\n                angular$1.forEach(showData, function (data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        data['size'] = tree.size;\n                        flag = true;\n                    }\n                });\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n\n};\n\ndataAccessApi.prototype.calTree = function calTree (buckets, tree, start, end) {\n    if (tree.children[0] != null) {\n        calTree(buckets, tree.children[0], start, end);\n    }\n\n    if (tree.children[1] != null) {\n        calTree(buckets, tree.children[1], start, end);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        // is overlap?\n        if (((start >= tree.start) && start < tree.end)\n            ||\n            ((start > tree.start) && start <= tree.end)\n            ||\n            ((tree.start >= start) && tree.start < end)\n            ||\n            ((tree.start > start) && tree.start <= end)) {\n            if (buckets.filter(function (elem) {\n                    return elem.id == tree.id\n                }).length == 0) {\n                buckets.push(tree);\n            }\n        }\n    }\n};\n\n\n/**\n *\n * @param application\n * @param deviceInfo deviceKey and tree\n * @param storeSchema\n * @param store\n * @param start\n * @param end\n */\ndataAccessApi.prototype.devicesStoreData = function devicesStoreData (host, application, deviceInfo, storeSchema, store, start, end, fields) {\n\n    var bucketsData = [];\n    var devicesNullBucket = [];\n    var calTree = this.calTree;\n    var fillChildrenTree = this.fillChildrenTree;\n    angular$1.forEach(deviceInfo, function (device, index) {\n        var bucketKeys = [];\n        calTree(bucketKeys, device.tree, start, end);\n        var nullBucket = [];\n        // get null buckets\n        angular$1.forEach(bucketKeys, function (bucket) {\n            if (bucket.data == null) {\n                nullBucket.push(bucket.id);\n            }\n        });\n        if (nullBucket.length != 0) {\n            devicesNullBucket.push({device: device.name, nullBucket: nullBucket});\n        }\n        bucketsData.push({device: device.name, data: bucketKeys});\n    });\n\n    if (devicesNullBucket.length == 0) {\n        // get data from rest service\n        var deferred = this._$q.defer();\n        deferred.resolve(bucketsData);\n        return deferred.promise;\n    } else {\n        // get data from rest service\n        var deferred = this._$q.defer();\n        this._$http.post(host + '/rest/api/app/' + application + '/store/index/devices/store/data/' + storeSchema + '/' + store,\n            {'bucketKeys': JSON.stringify(devicesNullBucket), 'fields': JSON.stringify(fields)}\n        ).then(\n            function (response) {\n                // response.data\n                angular$1.forEach(response.data, function (deviceData) {\n\n                    var currentBucketShowData = null;\n                    angular$1.forEach(bucketsData, function (showData) {\n                        if (showData.device == deviceData.device) {\n                            currentBucketShowData = showData.data; //  bucketKeys\n                            angular$1.forEach(deviceInfo, function (device, index) {\n                                if (deviceData.device == device.name) {\n                                    fillChildrenTree(deviceData.data, device.tree, currentBucketShowData);\n                                }\n                            });\n                        }\n                    });\n\n                });\n                // fill bucketKeys\n                deferred.resolve(bucketsData);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n};\n\n\ndataAccessApi.prototype.deviceStoreData = function deviceStoreData (host, application, deviceKey, storeSchema, store, tree, start, end, fields) {\n    var fillTree = this.fillTree;\n    var calTree = this.calTree;\n    var bucketKeys = [];\n    calTree(bucketKeys, tree, start, end);\n    var nullBucket = [];\n    // get null buckets\n    angular$1.forEach(bucketKeys, function (bucket) {\n        if (bucket.data == null) {\n            nullBucket.push(bucket.id);\n        }\n    });\n\n    if (nullBucket.length == 0) {\n        // send rest request\n        var deferred = this._$q.defer();\n        deferred.resolve(bucketKeys);\n        return deferred.promise;\n    } else {\n        // send rest request\n        var deferred = this._$q.defer();\n        this._$http.get(host + '/rest/api/app/' + application + '/store/index/store/data/' + deviceKey + '/' + storeSchema + '/' + store, {\n            params: {\n                bucketKeys: nullBucket,\n                fields: [].concat(fields)\n            }\n        }).then(\n            function (response) {\n                fillTree(response.data, tree, bucketKeys);\n                // fill bucketKeys\n                deferred.resolve(bucketKeys);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n};\n\ndataAccessApi.prototype.defaultColors = function defaultColors () {\n        var this$1 = this;\n\n    if (!this.colors) {\n        this['colors'] = [];\n        for (var i = 0; i < 300; i++) {\n            this$1.colors.push('#' + (function co(lor) {\n                    return (lor +=\n                        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                    && (lor.length == 6) ? lor : co(lor);\n                })(''));\n        }\n    }\n    return this.colors;\n};\n\ndataAccessApi.prototype.setColors = function setColors (colors) {\n    this.colors = colors;\n};\n\n\n/**\n * device id\n * @param id\n */\ndataAccessApi.prototype.healthcheck = function healthcheck (application, id) {\n\n    if (id = null || id == \"\") {\n        return;\n    }\n    this._$http.get('/rest/api/app/' + application + '/docker/healthcheck/reports?id=' + id)\n        .success(function (response) {\n            console.info(response);\n            return response;\n        });\n\n\n};\n\n\ndataAccessApi.prototype.autoUpdateGraph = function autoUpdateGraph (application, device, schema, store, fields, count, callback) {\n    var _$interval = this._$interval;\n    var _$http = this._$http;\n    var fetcher = null;\n    this._$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n        .success(function (response) {\n            var last = -1;\n            var interval = -1;\n            if (response.trees && response.trees.length === 1) {\n                interval = response.trees[0].frequency;\n                last = response.trees[0].last.timeKey;\n            }\n            if (interval != -1) {\n                var start = last - (count * interval);\n                var end = last;\n                // first time\n                _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                    params: {\n                        \"devices\": JSON.stringify([device]),\n                        \"fields\": JSON.stringify(fields),\n                        \"start\": start,\n                        \"end\": end\n                    }\n                }).success(function (graphData) {\n\n                    // start task\n                    fetcher = _$interval(function () {\n                        _$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n                            .success(function (response) {\n                                if (response.trees && response.trees.length === 1) {\n                                    last = response.trees[0].last.timeKey;\n                                    start = last - (count * interval);\n                                    end = last;\n                                    _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                                        params: {\n                                            \"devices\": JSON.stringify([device]),\n                                            \"fields\": JSON.stringify(fields),\n                                            \"start\": start,\n                                            \"end\": end\n                                        }\n                                    }).success(function (graphData) {\n                                        // put the data back\n                                        callback(graphData[device], null, interval);\n                                    });\n                                }\n                            });\n                    }, interval);\n\n                    // put the data back\n                    callback(graphData[device], fetcher, interval);\n                });\n            }\n        });\n\n};\n\n\ndataAccessApi.buildFactory = function buildFactory ($http, $q, $cacheFactory, $interval) {\n    dataAccessApi.instance = new dataAccessApi($http, $q, $cacheFactory, $interval);\n    return dataAccessApi.instance;\n};\n\ndataAccessApi.$inject = ['$http', '$q', '$cacheFactory', '$interval'];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetContainer = function fgpWidgetContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"padding: 0px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}}\">{{css.title.text}}</div>' +\n        '<div class=\"panel-body\" id=\"edit' + element_id + '\" style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n\n};\n\nfgpWidgetContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n    if (metadata.data) {\n        $scope.data[\"source\"] = metadata.data.source;\n        if ($scope.data && $scope.data.source.device && $scope.data.source.device != -1) {\n\n            if ($scope.data.source.device) {\n                /**\n                 * get device information\n                 */\n                dataService.deviceInfo($rootScope.host, JSON.parse($scope.data.source.device).name, null, $rootScope.applicationName).then(function (data) {\n                    // send device info to all widget\n                    $timeout(function () {\n                        $rootScope.$broadcast('deviceInfoEvent', {device: data, from: element_id});\n                    });\n                });\n            }\n\n        }\n    }\n\n};\n\n\nfgpWidgetContainer.buildFactory = function buildFactory () {\n    fgpWidgetContainer.instance = new fgpWidgetContainer();\n    return fgpWidgetContainer.instance;\n};\n\nfgpWidgetContainer.$inject = [];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetGraph = function fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n    this._dataService = dataService;\n    this._$interval = $interval;\n\n\n    /*jslint vars: true, nomen: true, plusplus: true, maxerr: 500, indent: 4 */\n\n    /**\n     * @license\n     * Copyright 2011 Juan Manuel Caicedo Carvajal (juan@cavorite.com)\n     * MIT-licensed (http://opensource.org/licenses/MIT)\n     */\n\n    /**\n     * @fileoverview This file contains additional features for dygraphs, which\n     * are not required but can be useful for certain use cases. Examples include\n     * exporting a dygraph as a PNG image.\n     */\n\n    /**\n     * Demo code for exporting a Dygraph object as an image.\n     *\n     * See: http://cavorite.com/labs/js/dygraphs-export/\n     */\n\n    Dygraph.Export = {};\n\n    Dygraph.Export.DEFAULT_ATTRS = {\n\n        backgroundColor: \"transparent\",\n\n        //Texts displayed below the chart's x-axis and to the left of the y-axis\n        titleFont: \"bold 18px serif\",\n        titleFontColor: \"black\",\n\n        //Texts displayed below the chart's x-axis and to the left of the y-axis\n        axisLabelFont: \"bold 14px serif\",\n        axisLabelFontColor: \"black\",\n\n        // Texts for the axis ticks\n        labelFont: \"normal 12px serif\",\n        labelFontColor: \"black\",\n\n        // Text for the chart legend\n        legendFont: \"bold 12px serif\",\n        legendFontColor: \"black\",\n\n        // Default position for vertical labels\n        vLabelLeft: 20,\n\n        legendHeight: 20,// Height of the legend area\n        legendMargin: 20,\n        lineHeight: 30,\n        maxlabelsWidth: 0,\n        labelTopMargin: 35,\n        magicNumbertop: 8\n\n    };\n\n    /**\n     * Tests whether the browser supports the canvas API and its methods for\n     * drawing text and exporting it as a data URL.\n     */\n    Dygraph.Export.isSupported = function () {\n        \"use strict\";\n        try {\n            var canvas = document.createElement(\"canvas\");\n            var context = canvas.getContext(\"2d\");\n            return (!!canvas.toDataURL && !!context.fillText);\n        } catch (e) {\n            // Silent exception.\n        }\n        return false;\n    };\n\n    /**\n     * Exports a dygraph object as a PNG image.\n     *\n     *  dygraph: A Dygraph object\n     *  img: An IMG DOM node\n     *  userOptions: An object with the user specified options.\n     *\n     */\n    Dygraph.Export.asPNG = function (dygraph, img, userOptions) {\n        \"use strict\";\n        var canvas = Dygraph.Export.asCanvas(dygraph, userOptions);\n        img.src = canvas.toDataURL();\n    };\n\n    /**\n     * Exports a dygraph into a single canvas object.\n     *\n     * Returns a canvas object that can be exported as a PNG.\n     *\n     *  dygraph: A Dygraph object\n     *  userOptions: An object with the user specified options.\n     *\n     */\n    Dygraph.Export.asCanvas = function (dygraph, userOptions) {\n        \"use strict\";\n        var options = {},\n            canvas = Dygraph.createCanvas();\n\n        Dygraph.update(options, Dygraph.Export.DEFAULT_ATTRS);\n        Dygraph.update(options, userOptions);\n\n        canvas.width = dygraph.width_;\n        canvas.height = dygraph.height_ + options.legendHeight;\n\n        Dygraph.Export.drawPlot(canvas, dygraph, options);\n        Dygraph.Export.drawLegend(canvas, dygraph, options);\n        return canvas;\n    };\n\n    /**\n     * Adds the plot and the axes to a canvas context.\n     */\n    Dygraph.Export.drawPlot = function (canvas, dygraph, options) {\n        \"use strict\";\n        var ctx = canvas.getContext(\"2d\");\n\n        // Add user defined background\n        ctx.fillStyle = options.backgroundColor;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Copy the plot canvas into the context of the new image.\n        var plotCanvas = dygraph.hidden_;\n\n        var i = 0;\n\n        ctx.drawImage(plotCanvas, 0, 0);\n\n\n        // Add the x and y axes\n        var axesPluginDict = Dygraph.Export.getPlugin(dygraph, 'Axes Plugin');\n        if (axesPluginDict) {\n            var axesPlugin = axesPluginDict.plugin;\n\n            for (i = 0; i < axesPlugin.ylabels_.length; i++) {\n                Dygraph.Export.putLabel(ctx, axesPlugin.ylabels_[i], options,\n                    options.labelFont, options.labelFontColor);\n            }\n\n            for (i = 0; i < axesPlugin.xlabels_.length; i++) {\n                Dygraph.Export.putLabel(ctx, axesPlugin.xlabels_[i], options,\n                    options.labelFont, options.labelFontColor);\n            }\n        }\n\n        // Title and axis labels\n\n        var labelsPluginDict = Dygraph.Export.getPlugin(dygraph, 'ChartLabels Plugin');\n        if (labelsPluginDict) {\n            var labelsPlugin = labelsPluginDict.plugin;\n\n            Dygraph.Export.putLabel(ctx, labelsPlugin.title_div_, options,\n                options.titleFont, options.titleFontColor);\n\n            Dygraph.Export.putLabel(ctx, labelsPlugin.xlabel_div_, options,\n                options.axisLabelFont, options.axisLabelFontColor);\n\n            Dygraph.Export.putVerticalLabelY1(ctx, labelsPlugin.ylabel_div_, options,\n                options.axisLabelFont, options.axisLabelFontColor, \"center\");\n\n            Dygraph.Export.putVerticalLabelY2(ctx, labelsPlugin.y2label_div_, options,\n                options.axisLabelFont, options.axisLabelFontColor, \"center\");\n        }\n\n\n\n\n\n\n        for (i = 0; i < dygraph.layout_.annotations.length; i++) {\n            Dygraph.Export.putLabelAnn(ctx, dygraph.layout_.annotations[i], options,\n                options.labelFont, options.labelColor);\n        }\n\n    };\n\n    /**\n     * Draws a label (axis label or graph title) at the same position\n     * where the div containing the text is located.\n     */\n    Dygraph.Export.putLabel = function (ctx, divLabel, options, font, color) {\n        \"use strict\";\n\n        if (!divLabel || !divLabel.style) {\n            return;\n        }\n\n        var top = parseInt(divLabel.style.top, 10);\n        var left = parseInt(divLabel.style.left, 10);\n\n        if (!divLabel.style.top.length) {\n            var bottom = parseInt(divLabel.style.bottom, 10);\n            var height = parseInt(divLabel.style.height, 10);\n\n            top = ctx.canvas.height - options.legendHeight - bottom - height;\n        }\n\n        // FIXME: Remove this 'magic' number needed to get the line-height.\n        top = top + options.magicNumbertop;\n\n        var width = parseInt(divLabel.style.width, 10);\n\n        switch (divLabel.style.textAlign) {\n            case \"center\":\n                left = left + Math.ceil(width / 2);\n                break;\n            case \"right\":\n                left = left + width;\n                break;\n        }\n\n        Dygraph.Export.putText(ctx, left, top, divLabel, font, color);\n    };\n\n    /**\n     * Draws a label Y1 rotated 90 degrees counterclockwise.\n     */\n    Dygraph.Export.putVerticalLabelY1 = function (ctx, divLabel, options, font, color, textAlign) {\n        \"use strict\";\n        if (!divLabel) {\n            return;\n        }\n\n        var top = parseInt(divLabel.style.top, 10);\n        var left = parseInt(divLabel.style.left, 10) + parseInt(divLabel.style.width, 10) / 2;\n        var text = divLabel.innerText || divLabel.textContent;\n\n\n        // FIXME: The value of the 'left' property is frequently 0, used the option.\n        if (!left)\n            left = options.vLabelLeft;\n\n        if (textAlign == \"center\") {\n            var textDim = ctx.measureText(text);\n            top = Math.ceil((ctx.canvas.height - textDim.width) / 2 + textDim.width);\n        }\n\n        ctx.save();\n        ctx.translate(0, ctx.canvas.height);\n        ctx.rotate(-Math.PI / 2);\n\n        ctx.fillStyle = color;\n        ctx.font = font;\n        ctx.textAlign = textAlign;\n        ctx.fillText(text, top, left);\n\n        ctx.restore();\n    };\n\n    /**\n     * Draws a label Y2 rotated 90 degrees clockwise.\n     */\n    Dygraph.Export.putVerticalLabelY2 = function (ctx, divLabel, options, font, color, textAlign) {\n        \"use strict\";\n        if (!divLabel) {\n            return;\n        }\n\n        var top = parseInt(divLabel.style.top, 10);\n\n        if(divLabel.style.right == \"\"){\n            divLabel.style.right = \"10px\";\n        }\n\n        var right = parseInt(divLabel.style.right, 10) + parseInt(divLabel.style.width, 10) * 2;\n        var text = divLabel.innerText || divLabel.textContent;\n\n        if (textAlign == \"center\") {\n            var textDim = ctx.measureText(text);\n            top = Math.ceil((ctx.canvas.height + textDim.width) / 2 - textDim.width);\n        }\n\n        ctx.save();\n        ctx.translate(parseInt(divLabel.style.width, 10), 0);\n        ctx.rotate(Math.PI / 2);\n\n        ctx.fillStyle = color;\n        ctx.font = font;\n        ctx.textAlign = textAlign;\n        ctx.fillText(text, top, right - ctx.canvas.width);\n\n        ctx.restore();\n    };\n\n    /**\n     * Draws the text contained in 'divLabel' at the specified position.\n     */\n    Dygraph.Export.putText = function (ctx, left, top, divLabel, font, color) {\n        \"use strict\";\n        var textAlign = divLabel.style.textAlign || \"left\";\n        var text = divLabel.innerText || divLabel.textContent;\n\n        ctx.fillStyle = color;\n        ctx.font = font;\n        ctx.textAlign = textAlign;\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(text, left, top);\n    };\n\n    /**\n     * Draws the legend of a dygraph\n     *\n     */\n    Dygraph.Export.drawLegend = function (canvas, dygraph, options) {\n        \"use strict\";\n        var ctx = canvas.getContext(\"2d\");\n\n        // Margin from the plot\n        var labelTopMargin = 10;\n\n        // Margin between labels\n        var labelMargin = 5;\n\n        var colors = dygraph.getColors();\n        // Drop the first element, which is the label for the time dimension\n        var labels = dygraph.attr_(\"labels\").slice(1);\n\n        // 1. Compute the width of the labels:\n        var labelsWidth = 0;\n\n        var i;\n        for (i = 0; i < labels.length; i++) {\n            if(labels[i]!=\"span_y1\" && labels[i]!=\"span_y2\"){\n                labelsWidth = labelsWidth + ctx.measureText(\"- \" + labels[i]).width + labelMargin;\n            }\n        }\n\n        var labelsX = Math.floor((canvas.width - labelsWidth) / 2);\n        var labelsY = canvas.height - options.legendHeight + labelTopMargin;\n\n\n        var labelVisibility = dygraph.attr_(\"visibility\");\n\n        ctx.font = options.legendFont;\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"middle\";\n\n        var usedColorCount = 0;\n        for (i = 0; i < labels.length; i++) {\n            if (labelVisibility[i]) {\n                if(labels[i]!=\"span_y1\" && labels[i]!=\"span_y2\") {\n                    var txt = \"- \" + labels[i];\n                    ctx.fillStyle = colors[usedColorCount];\n                    usedColorCount++;\n                    ctx.fillText(txt, labelsX, labelsY);\n                    labelsX = labelsX + ctx.measureText(txt).width + labelMargin;\n                }\n            }\n        }\n    };\n\n    /**\n     * Finds a plugin by the value returned by its toString method..\n     *\n     * Returns the the dictionary corresponding to the plugin for the argument.\n     * If the plugin is not found, it returns null.\n     */\n    Dygraph.Export.getPlugin = function (dygraph, name) {\n        for (i = 0; i < dygraph.plugins_.length; i++) {\n            if (dygraph.plugins_[i].plugin.toString() == name) {\n                return dygraph.plugins_[i];\n            }\n        }\n        return null;\n    };\n\n\n};\n\n\nfgpWidgetGraph.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    if (flag) {\n        var dom_loading = '<div ng-show=\"loadingShow\" id=\"loading_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\">' +\n            '<div class=\"rect1\"></div>' +\n            '<div class=\"rect2\"></div>' +\n            '<div class=\"rect3\"></div>' +\n            '<div class=\"rect4\"></div>' +\n            '<div class=\"rect5\"></div>' +\n            '</div></div>';\n\n\n        var dom_legend = '<li>{{legendText_device}}</li><li>{{legendText_datetime}}</li><li><label style=\"color: {{legendColor}}\">{{legendText_column}}</label>:{{legendText_value}}</li>';\n\n        var dom_empty_data = '<div ng-show=\"emptyDataShow\" id=\"emptydata_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\" style=\"width: 100%;\">' +\n            '<h1>Empty Data!</h1>' +\n            '</div></div>';\n\n        var dom_alert_info = '<span class=\"label label-warning\" ng-show=\"alertMessage\" style=\"color: #000;\">{{alertMessage}}</span>';\n\n        var dom_datetime_interval = '<div ng-show=\"rangeSelectorBar\" class=\"dropdown\"> <button class=\"btn btn-info dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">{{currentIntervalChoosed.name}}<span class=\"caret\"></span></button> <ul class=\"dropdown-menu dropdown-menu-right\" style=\"font-size:12px;\"><li ng-repeat=\"interval in dateTimeIntervals\"><a href=\"javascript:;\" ng-click=\"changeInterval(interval)\">{{interval.name}}</a></li></ul> </div>';\n\n\n        var dom_series_list = '<div ng-show=\"currentView === 1\" class=\"dropdown\"> <button class=\"btn btn-warning dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">Devices<span class=\"caret\"></span></button> <ul class=\"dropdown-menu dropdown-menu-right\" style=\"font-size:12px;\"><li ng-repeat=\"device in childrenDevices\"><input type=\"checkbox\" ng-click=\"showOrHideDevice(device)\" ng-checked=\"device.show\"/>{{device.name}}</li></ul> </div>';\n\n\n        var dom_real_time_grap = '<div class=\"modal fade \" id=\"real_time_graph_' + attrs.id + '\" role=\"dialog\">' +\n            '<div class=\"modal-dialog modal-lg\">' +\n            '<div class=\"modal-content\">' +\n            '<div class=\"col-md-12\"  style=\"padding-top:3px;height: 1px;background-color: #0e90d2;\" ng-style=\"{ \\'width\\': completionPercent + \\'%\\' }\"></div>' +\n            '<div class=\"modal-body\" style=\"width: 100%;height: 300px;\">' +\n            '<div class=\"real-time-graph\" style=\"width: 100%;height: 100%\"></div>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>';\n\n        var dom_buttons = '<div style=\"float: right;\"  class=\"dropdown\">' +\n            '<button class=\"btn btn-info badge dropdown-toggle\" data-toggle=\"dropdown\">' +\n            '<i class=\"fa fa-download\" aria-hidden=\"true\"></i>' +\n            '</button>' +\n            '<ul class=\"dropdown-menu dropdown-menu-right\" style=\"font-size:12px;\">' +\n            '<li style=\"text-align: center;\"><div class=\"col-md-6 col-xs-6\"><span><a href=\"javascript:;\" ng-click=\"export_img();\"><span class=\"fa fa-camera\" aria-hidden=\"true\"></span></a></span></div><div class=\"col-md-6 col-xs-6\"><span><a href=\"javascript:;\" ng-click=\"export_data();\"><span class=\"fa fa-table\" aria-hidden=\"true\"></span></a></span></div></li>' +\n            '</ul>' +\n            '</div>';\n\n        var html = '<div id=\"legendbox' + attrs.id + '\" ng-show=\"legendText\" ng-style=\"{top:legendTop,left:legendLeft}\" style=\"border-radius:10px;background-color:#ffffff;position: absolute;border: 1px solid {{legendColor}};-moz-box-shadow: 5px 5px 5px #888888;box-shadow: 5px 5px 5px #888888;z-index: 99999999;margin-right: 5px;\"><ul style=\"list-style: none;list-style-position: inside;text-align: right;\">' + dom_legend + '</ul></div><div class=\"{{css.width}}\"><div class=\"col-md-12\" style=\"padding:0px;height:{{css.height}}px;-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\"><div class=\"row\"><div class=\"col-md-12\">' + dom_buttons + '<a class=\"tooltips btn btn-xs btn-info badge\" href=\"javascript:;\"  style=\"float: right;margin-right: 10px;\" ng-click=\"currentView = -currentView\"><i class=\"glyphicon glyphicon-transfer\"></i><span>Scatter View</span></a><a ng-show=\"autoupdate\" class=\"tooltips btn btn-xs btn-info badge\" style=\"float: right;margin-right: 10px;\" ng-click=\"showRealTimeGraph()\" data-toggle=\"modal\"><span>Auto Update</span><i class=\"glyphicon glyphicon-random\"></i></a><div style=\"float: right; margin-right: 10px;\">' + dom_series_list + '</div><div style=\"float: right; margin-right: 10px;\">' + dom_datetime_interval + '</div><div ng-hide=\"true\" class=\"checkbox\" style=\"float: right;margin-right: 10px; margin-bottom: 5px; margin-top: 0;\" ng-model=\"fixInterval\" ng-click=\"fixInterval=!fixInterval\"><label><input type=\"checkbox\" ng-model=\"fixInterval\" ng-clicked=\"fixInterval\" ng-change=\"fixGraphWithGap_click()\"/>fixed interval</label></div><div style=\"float: right; margin-right: 10px;\"><label class=\"label-inline\" ng-repeat=\"item in intevals.device\"><span class=\"badge\" style=\"background-color: {{ item.name == currentIntervalName ? \\'#009900;\\' : \\'\\'}}\">{{item.name}}</span></label></div><div style=\"float: right; margin-right: 10px;\">' + dom_alert_info + '</div></div></div><div style=\"position: relative;width: 100%;height:100%;\"><div style=\"position: absolute;left:25px;z-index: 999;\" ng-show=\"basicInfo.zoom\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVULeft()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDLeft()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVLeft()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVLeft()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div><div class=\"line-chart-graph\" style=\"width: 100%;height:100%;\"></div><div style=\"position: absolute;right:-15px;top:0px;z-index: 999;\" ng-show=\"checkY2Btns()\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVURight()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDRight()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVRight()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVRight()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div>' + dom_loading + dom_empty_data + '<div class=\"row\"><div class=\"col-md-12\" style=\"min-height: 30px;\"></div><div class=\"col-md-6\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[0] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-6\" style=\"text-align: right;\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[1] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-12\" style=\"min-height: 40px;position: relative\"><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;left: 20px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanleft()\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanright()\"><i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></div><div class=\"range-selector-bar\" style=\"height: 0px;margin-top: 30px;width: 100%;position: absolute;\"></div><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;right: 1px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomin()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomout()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div></div></div>' + dom_real_time_grap;\n\n        return html;\n    }\n};\n\nfgpWidgetGraph.prototype.link = function link (scope, element, attrs) {\n    scope['defaultColors'] = this._dataService.defaultColors();\n    var dataService = this._dataService;\n    var _$interval = this._$interval;\n    scope.status = true;\n    var timeOut = this.$timeout;\n    scope.completionPercent = 0;\n    this.$timeout(function () {\n        var getData = function (numSeries, numRows, name) {\n            var result = {labels: null, data: null};\n            var data = [];\n            var labels = [];\n            //init date\n            var initDate = new Date(\"2014/01/01 00:00:00\");\n            for (var j = 0; j < numRows; ++j) {\n                data[j] = [new Date(initDate.getTime() + 900000)];\n                initDate = new Date(initDate.getTime() + 900000);\n            }\n            for (var i = 0; i < numSeries; ++i) {\n                labels.push(name + i);\n                var val = 0;\n                for (var j = 0; j < numRows; ++j) {\n                    val += Math.random() - 0.5;\n                    data[j][i + 1] = val;\n                }\n            }\n            result.labels = labels;\n            result.data = data;\n            return result;\n        };\n\n\n        var sampleData = getData(1, 10, 'Device');\n\n        function movePan(event, g, context, side) {\n\n            context.dragEndX = Dygraph.dragGetX_(event, context);\n            context.dragEndY = Dygraph.dragGetY_(event, context);\n\n\n            // y-axis scaling is automatic unless this is a full 2D pan.\n            if (context.is2DPan) {\n\n                var pixelsDragged = context.dragEndY - context.dragStartY;\n                // Adjust each axis appropriately.\n                if (side == \"r\") {\n                    var axis = g.axes_[0];\n                    var axis_data = context.axes[0];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[0] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 0)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else if (side == 'l') {\n                    var axis = g.axes_[1];\n                    var axis_data = context.axes[1];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[1] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 1)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else {\n                    var minDate = context.initialLeftmostDate -\n                        (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n                    if (context.boundedDates) {\n                        minDate = Math.max(minDate, context.boundedDates[0]);\n                    }\n                    var maxDate = minDate + context.dateRange;\n                    if (context.boundedDates) {\n                        if (maxDate > context.boundedDates[1]) {\n                            // Adjust minDate, and recompute maxDate.\n                            minDate = minDate - (maxDate - context.boundedDates[1]);\n                            maxDate = minDate + context.dateRange;\n                        }\n                    }\n                    var zoomRange = g.xAxisZoomRange;\n                    if (g.xAxisZoomRange[0] instanceof Date) {\n                        zoomRange[0] = g.xAxisZoomRange[0].getTime();\n                    }\n                    if (g.xAxisZoomRange[1] instanceof Date) {\n                        zoomRange[1] = g.xAxisZoomRange[1].getTime();\n                    }\n\n                    if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                        return;\n                    }\n\n                    if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                        g.dateWindow_ = [Math.pow(Dygraph.LOG_SCALE, minDate),\n                            Math.pow(Dygraph.LOG_SCALE, maxDate)];\n                    } else {\n                        g.dateWindow_ = [minDate, maxDate];\n                    }\n                }\n            }\n            g.drawGraph_(false);\n        }\n\n\n        function offsetToPercentage(g, offsetX, offsetY) {\n            // This is calculating the pixel offset of the leftmost date.\n            var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n            var yar0 = g.yAxisRange(0);\n\n            // This is calculating the pixel of the higest value. (Top pixel)\n            var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n            // x y w and h are relative to the corner of the drawing area,\n            // so that the upper corner of the drawing area is (0, 0).\n            var x = offsetX - xOffset;\n            var y = offsetY - yOffset;\n\n            // This is computing the rightmost pixel, effectively defining the\n            // width.\n            var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n            // This is computing the lowest pixel, effectively defining the height.\n            var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n            // Percentage from the left.\n            var xPct = w == 0 ? 0 : (x / w);\n            // Percentage from the top.\n            var yPct = h == 0 ? 0 : (y / h);\n\n            // The (1-) part below changes it from \"% distance down from the top\"\n            // to \"% distance up from the bottom\".\n            return [xPct, (1 - yPct)];\n        }\n\n\n        function zoom(g, zoomInPercentage, xBias, yBias, direction, side) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n\n            function adjustAxis(axis, zoomInPercentage, bias) {\n                var delta = axis[1] - axis[0];\n                var increment = delta * zoomInPercentage;\n                var foo = [increment * bias, increment * (1 - bias)];\n                return [axis[0] + foo[0], axis[1] - foo[1]];\n            }\n\n            xBias = xBias || 0.5;\n            yBias = yBias || 0.5;\n            var yAxes = g.axes_;\n            var newYAxes = [];\n            for (var i = 0; i < g.numAxes(); i++) {\n                newYAxes[i] = adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n            }\n            if ('v' == direction) {\n                if ('l' == side) {\n                    yAxes[0]['valueRange'] = newYAxes[0];\n                    yAxes[0]['valueWindow'] = newYAxes[0];\n                } else if ('r' == side && g.numAxes() == 2) {\n                    yAxes[1]['valueRange'] = newYAxes[1];\n                    yAxes[1]['valueWindow'] = newYAxes[1];\n                }\n                g.drawGraph_(false);\n            } else {\n\n                var ranges = [];\n                angular$1.forEach(g.xAxisRange(), function (range) {\n                    if (range instanceof Date) {\n                        ranges.push(range.getTime());\n                    } else {\n                        ranges.push(range);\n                    }\n                });\n\n                var newZoomRange = adjustAxis(ranges, zoomInPercentage, xBias);\n                // do not bigger than range data\n                var zoomRange = [];\n                if (g.hasOwnProperty(\"xAxisZoomRange\") && g.xAxisZoomRange) {\n                    zoomRange[0] = g.xAxisZoomRange[0];\n                    zoomRange[1] = g.xAxisZoomRange[1];\n                } else {\n                    zoomRange[0] = g.xAxisExtremes()[0];\n                    zoomRange[1] = g.xAxisExtremes()[1];\n                }\n                if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] >= newZoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [zoomRange[0], newZoomRange[1]]\n                    });\n                } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [newZoomRange[0], zoomRange[1]]\n                    });\n                } else {\n                    g.updateOptions({\n                        dateWindow: newZoomRange\n                    });\n                }\n            }\n        }\n\n\n        var canScroll = false;\n\n        var timer = null;\n        var mouseOverHandler = function (e, g, context) {\n            //\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function () {\n                canScroll = true;\n            }, 1000);\n        };\n\n\n        var mouseEnterHandler = function (e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function () {\n                canScroll = true;\n            }, 1000);\n        };\n\n        var mouseOutHandler = function (e, g, context) {\n            // set flag to false\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            canScroll = false;\n        };\n\n        var scroll = function (e, g, context) {\n\n            if ((scope.basicInfo && !scope.basicInfo.zoom) || !canScroll) {\n                return;\n            }\n\n            var normal;\n\n            if (e instanceof WheelEvent) {\n                normal = e.detail ? e.detail * -1 : e.deltaY / 40;\n            } else {\n                normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n            }\n\n            // For me the normalized value shows 0.075 for one click. If I took\n            // that verbatim, it would be a 7.5%.\n            var percentage = normal / 50;\n\n            if (!(e.offsetX && e.offsetY)) {\n                e.offsetX = e.layerX - e.target.offsetLeft;\n                e.offsetY = e.layerY - e.target.offsetTop;\n            }\n            var percentages = offsetToPercentage(g, e.offsetX, e.offsetY);\n            var xPct = percentages[0];\n            var yPct = percentages[1];\n            //\n            if (e.offsetX <= (g.plotter_.area.x)) {\n                // console.info(\"v\", \"l\")\n                // left zoom\n                zoom(g, percentage, xPct, yPct, 'v', 'l');\n            } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                // right zoom\n                // console.info(\"v\", \"r\")\n                zoom(g, percentage, xPct, yPct, 'v', 'r');\n            } else {\n                // middle zoom\n                // console.info(\"h\")\n                zoom(g, percentage, xPct, yPct, 'h', null);\n            }\n            Dygraph.cancelEvent(e);\n            timeOut(function () {\n                scope.chartDateWindow = g.xAxisRange();\n            });\n        };\n\n        var firstPoint = null;\n        var timer_mousedown = null;\n        var mousedownHandler = function (e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n\n            if (timer_mousedown != null) {\n                timeOut.cancel(timer_mousedown);\n            }\n            timer_mousedown = timeOut(function () {\n                context.initializeMouseDown(e, g, context);\n                firstPoint = e.clientX;\n                Dygraph.startPan(e, g, context);\n                e.preventDefault();\n                e.stopPropagation();\n            }, 300);\n\n        };\n        var mousemoveHandler = function (e, g, context) {\n            if (context.isPanning) {\n                if (e.offsetX <= (g.plotter_.area.x)) {\n                    movePan(e, g, context, 'r');\n                } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                    movePan(e, g, context, 'l');\n                } else {\n                    movePan(e, g, context, 'h');\n                }\n                timeOut(function () {\n                    scope.chartDateWindow = scope.currentChart.xAxisRange();\n                });\n            }\n        };\n\n\n        var mouseupHandler = function (e, g, context) {\n            if (context.isPanning) {\n                Dygraph.endPan(e, g, context);\n            } else {\n                if (scope.currentView != -1 && scope.currentHighlight != \"\") {\n                    scope.showOne(scope.currentHighlight);\n                }\n            }\n            if (timer_mousedown) {\n                timeOut.cancel(timer_mousedown);\n            }\n            canScroll = true;\n        };\n\n\n        var interactionModel = {\n            'mousewheel': scroll,\n            'DOMMouseScroll': scroll,\n            'wheel': scroll,\n            'mousedown': mousedownHandler,\n            'mousemove': mousemoveHandler,\n            'mouseenter': mouseEnterHandler,\n            'mouseup': mouseupHandler,\n            // 'mouseover': mouseOverHandler,\n            'mouseout': mouseOutHandler\n        };\n\n\n        //init configuration\n        var configuration = {\n            drawGapEdgePoints: true,\n            'pointSize': 3,\n            legend: 'follow',\n            labelsKMB: true,\n            labelsSeparateLines: true,\n            // data formate\n            labels: ['x'].concat(sampleData.labels),\n            // highlightSeriesOpts: {\n            // strokeWidth: 2,\n            // strokeBorderWidth: 1,\n            // highlightCircleSize: 2\n            // },\n            drawPoints: false,\n            drawAxesAtZero: false,\n            labelsDivStyles: {\n                'text-align': 'right',\n                'position': 'relative',\n                'display': 'inline-block'\n            },\n            yRangePad: 10,\n            // x label y label\n            ylabel: 'Value',\n            xlabel: 'Date',\n            colors: scope.defaultColors,\n            // multiple Y axis\n            series: {\n                'Device0': {\n                    axis: 'y2'\n                },\n                'Device4': {\n                    axis: 'y2'\n                }\n            },\n            // showRangeSelector: true,\n            axes: {\n                y: {\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                y2: {\n                    // set axis-related properties here\n                    'labelsKMB': true,\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                x: {\n                    // datetime format\n                    valueFormatter: function (y) {\n                        return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                    }\n                }\n            },\n            // pointClickCallback: function (e, p) {\n            // if (scope.currentView != -1) {\n            //     scope.showOne(p.name);\n            // }\n            // },\n            drawCallback: function (g, isInit) {\n                if (scope.refersh) { // make sure \"scope.refersh\" doesn't call when the graph create first time.\n                    scope.refersh(g, isInit);\n                }\n            },\n            'interactionModel': interactionModel,\n            'plugins': [\n                new Dygraph.Plugins.Crosshair({\n                    direction: \"vertical\"\n                }),\n\n            ]\n        };\n\n        scope.currentChart = new Dygraph(element.find(\"div[class='line-chart-graph']\")[0], sampleData.data, configuration);\n        element.find(\"canvas\").css(\"zIndex\", 99);\n\n        var timer_auto = null;\n        var process_bar_timer = null;\n        element.find(\"#real_time_graph_\" + attrs.id).on(\"hidden.bs.modal\", function () {\n            // put your default event here\n            _$interval.cancel(timer_auto);\n            _$interval.cancel(process_bar_timer);\n        });\n\n\n        //real-time-graph\n        element.find(\"#real_time_graph_\" + attrs.id).on('shown.bs.modal', function () {\n\n            var tempConifg = {\n                drawGapEdgePoints: true,\n                'pointSize': 3,\n                labelsKMB: true,\n                labelsSeparateLines: false,\n                drawPoints: false,\n                drawAxesAtZero: false,\n                labelsDivStyles: {\n                    'text-align': 'right',\n                    'position': 'relative',\n                    'display': 'inline-block'\n                },\n                // x label y label\n                ylabel: 'Value',\n                xlabel: 'Date',\n                colors: scope.defaultColors,\n                // multiple Y axis\n                series: {\n                    'Device0': {\n                        axis: 'y2'\n                    },\n                    'Device4': {\n                        axis: 'y2'\n                    }\n                },\n                // showRangeSelector: true,\n                axes: {\n                    y: {\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    y2: {\n                        // set axis-related properties here\n                        'labelsKMB': true,\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    x: {\n                        // datetime format\n                        valueFormatter: function (y) {\n                            return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                        }\n                    }\n                },\n                interactionModel: {}\n            };\n\n            scope.realTimeGraph = new Dygraph(element.find(\"div[class='real-time-graph']\")[0], sampleData.data, tempConifg);\n            scope.realTimeGraph.updateOptions(scope.currentChartOptions);\n            scope.realTimeGraph.updateOptions({\"file\": []});\n\n\n            var darkenColor = function (colorStr) {\n                // Defined in dygraph-utils.js\n                var color = Dygraph.toRGB_(colorStr);\n                color.r = Math.floor((255 + color.r) / 2);\n                color.g = Math.floor((255 + color.g) / 2);\n                color.b = Math.floor((255 + color.b) / 2);\n                return 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n            };\n\n            var barChartPlotter = function (e) {\n                var ctx = e.drawingContext;\n                var points = e.points;\n                var y_bottom = e.dygraph.toDomYCoord(0);\n\n                ctx.fillStyle = darkenColor(e.color);\n\n                // Find the minimum separation between x-values.\n                // This determines the bar width.\n                var min_sep = Infinity;\n                for (var i = 1; i < points.length; i++) {\n                    var sep = points[i].canvasx - points[i - 1].canvasx;\n                    if (sep < min_sep) min_sep = sep;\n                }\n                var bar_width = Math.floor(2.0 / 3 * min_sep);\n\n                // Do the actual plotting.\n                for (var i = 0; i < points.length; i++) {\n                    var p = points[i];\n                    var center_x = p.canvasx;\n\n                    ctx.fillRect(center_x - bar_width / 2, p.canvasy,\n                        bar_width, y_bottom - p.canvasy);\n\n                    ctx.strokeRect(center_x - bar_width / 2, p.canvasy,\n                        bar_width, y_bottom - p.canvasy);\n                }\n            };\n\n            timer_auto = dataService.autoUpdateGraph(scope.applicationName, scope.auto_device_name, scope.auto_schema, scope.auto_store, scope.auto_fields, element.find(\"div[class='real-time-graph']\").width() / 4, function (graph_data, worker, interval) {\n                // update graph\n                var deviceConfig = scope.auto_metadata.data.groups[1];\n                var collections = deviceConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var allLines = [];\n                //0 for y  1 for y2\n                var yRanges = [{min: null, max: null}, {min: null, max: null}];\n                angular$1.forEach(collections, function (collection) {\n                    if (collection.name == scope.auto_store) {\n                        angular$1.forEach(graph_data.data, function (line) {\n                            allLines.push([new Date(line.timestamp)]);\n                        });\n\n                        var showY2axis = false;\n                        angular$1.forEach(collection.rows, function (row) {\n                            labels.push(row.label);\n                            colors.push(row.color);\n\n                            if (row.yaxis == 0) {\n                                series[row.label] = {'axis': 'y1'};\n                                if (row.type == 'line') {\n                                    series[row.label] = {\n                                        'axis': 'y1',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                } else if (row.type == 'bar') {\n                                    series[row.label] = {'axis': 'y1', 'plotter': barChartPlotter};\n                                } else {\n                                    series[row.label] = {\n                                        'axis': 'y1',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                }\n                            } else {\n                                series[row.label] = {'axis': 'y2'};\n                                if (row.type == 'line') {\n                                    series[row.label] = {\n                                        'axis': 'y2',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                } else if (row.type == 'bar') {\n                                    series[row.label] = {'axis': 'y2', 'plotter': barChartPlotter};\n                                } else {\n                                    series[row.label] = {\n                                        'axis': 'y2',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                }\n                                showY2axis = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                            // add value\n                            var counter = 0;\n                            angular$1.forEach(allLines, function (realLine) {\n                                try {\n                                    var value = f(graph_data.data[counter]);\n                                    realLine.push(value);\n                                    if (row.yaxis == 0) {\n                                        if (yRanges[0].min == null) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max == null) {\n                                            yRanges[0].max = value;\n                                        }\n\n                                        if (yRanges[0].min > value) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max < value) {\n                                            yRanges[0].max = value;\n                                        }\n                                    } else {\n                                        if (yRanges[1].min == null) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max == null) {\n                                            yRanges[1].max = value;\n                                        }\n\n                                        if (yRanges[1].min > value) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max < value) {\n                                            yRanges[1].max = value;\n                                        }\n                                    }\n                                } catch (ex) {\n                                    realLine.push(null);\n                                }\n                                counter++;\n                            });\n\n                        });\n\n                        angular$1.forEach(yRanges, function (yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.min) * 0.10;\n                            } else {\n                                yrange.min = yrange.min - (yrange.max - yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max - yrange.min) * 0.10;\n                            }\n                        });\n\n                        var newLines = [];\n                        if (!showY2axis) {\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function (line) {\n                                line.push(NaN);\n                            });\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: newLines,\n                                axes: {\n                                    y: {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                    y2: {valueRange: [yRanges[1].min, yRanges[1].max]}\n                                }\n                            });\n                        } else {\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: allLines,\n                                axes: {\n                                    y: {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                    y2: {valueRange: [yRanges[1].min, yRanges[1].max]}\n                                }\n                            });\n                        }\n                    }\n                });\n                if (worker) {\n                    timer_auto = worker;\n                }\n\n\n                //\n                var perInterval = interval / 100;\n                var counter = 0;\n\n                if (process_bar_timer) {\n                    _$interval.cancel(process_bar_timer);\n                    counter = 0;\n                }\n\n                process_bar_timer = _$interval(function () {\n                    scope.completionPercent = counter;\n                    counter++;\n                }, perInterval, 100);\n\n\n            });\n        });\n\n\n        scope.currentChartOptions = {};\n\n        scope.showRealTimeGraph = function () {\n            element.find(\"#real_time_graph_\" + attrs.id).modal();\n        };\n\n\n        if (attrs.hasOwnProperty(\"shown\")) {\n\n\n            var basicInfo = scope.basicInfo;\n            if (basicInfo && basicInfo.range_show) {\n                scope.rangeSelectorBar = new Dygraph(element.find(\"div[class='range-selector-bar']\")[0], sampleData.data, {\n                        xAxisHeight: 0,\n                        axes: {\n                            x: {\n                                drawAxis: false\n                            }\n                        },\n                        showRangeSelector: true,\n                        rangeSelectorHeight: 30\n                    }\n                );\n                scope.chartDateWindow = scope.rangeSelectorBar.xAxisRange();\n            }\n\n\n            var status = false;\n            // add mouse up event to range select\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mouseup', function (event) {\n                status = false;\n                timeOut(function () {\n                    var finalDateRagne = scope.currentChart.xAxisRange();\n                    scope.chartDateTime = {begin: finalDateRagne[0], end: finalDateRagne[1]};\n                });\n            });\n\n            scope.$on('mouseUpMessage', function ($scope, e) {\n                if (\"mouseup\" === e.type && status) {\n                    status = false;\n                    timeOut(function () {\n                        var finalDateRange = scope.currentChart.xAxisRange();\n                        scope.chartDateTime = {begin: finalDateRange[0], end: finalDateRange[1]};\n                    });\n                }\n            });\n\n            scope.$on('bindFatherGraphEvent', function (event, data) {\n                angular$1.forEach(data.children, function (child) {\n                    if (child == attrs.id) {\n                        Dygraph.synchronize([scope.currentChart].concat(data.parent), {\n                            zoom: true,\n                            selection: false,\n                            range: false\n                        });\n                        scope.currentChart.updateOptions({\n                            drawCallback: function (g, isInit) {\n                                // console.info(\"refersh running!\" + \" is  Init?\"+ isInit);\n                                scope.refersh(g, isInit);\n                            }\n                        });\n\n                    }\n                });\n\n\n            });\n\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousemove', function (event) {\n                if (status) {\n                    timeOut(function () {\n                        scope.chartDateWindow = scope.currentChart.xAxisRange();\n                    });\n                }\n            });\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousedown', function (event) {\n                status = true;\n            });\n\n            //bind chart\n            if (basicInfo && basicInfo.childrenChart.length > 0) {\n                var param = {'graphs': [scope.currentChart], children: basicInfo.childrenChart};\n                if (scope.rangeSelectorBar) {\n                    param.graphs.push(scope.rangeSelectorBar);\n                }\n                scope.$emit('bindChildChartEvent', param);\n            }\n        }\n    }, 0);\n};\n\n//controller: ['$scope', '$element', '$window', '$interval', '$timeout', '$filter', '$location', function ($scope, $element, $window, $interval, $timeout, $filter, $location) {\nfgpWidgetGraph.prototype.controller = function controller ($scope, $element, $window, $interval, $timeout, $filter, $location, dataService, $rootScope, $stateParams) {\n    var element_id = $element.attr(\"id\");\n    $scope.elementId = element_id;\n\n    $scope.currentHighlight = \"\";\n\n    $scope['defaultColors'] = dataService.defaultColors();\n    var metadata = null;\n    var widgetData = null;\n    $scope.emptyDataShow = false;\n    // attributes----------------------\n    $scope.applicationName = $rootScope.applicationName;\n\n    $scope.alertMessage;\n\n\n    $scope.showY2Btns = false;\n\n    $scope.legendText = null;\n    $scope.legendText_device = null;\n    $scope.legendText_datetime = null;\n    $scope.legendText_column = null;\n    $scope.legendText_value = null;\n    $scope.legendColor = null;\n    $scope.autoupdate = false;\n    $scope.auto_device_name = \"\";\n    $scope.auto_schema = \"\";\n    $scope.auto_store = \"\";\n    $scope.auto_fields = [];\n    // default data-time intervals\n    $scope.dateTimeIntervals = [{name: \"5 minutes\", interval: 300000}, {\n        name: \"1 hour\",\n        interval: 3600000\n    }, {name: \"1 day\", interval: 86400000}, {name: \"1 week\", interval: 604800017}, {\n        name: \"1 month\",\n        interval: 2629800000\n    }, {name: \"1 year\", interval: 31557600000}];\n\n\n    var download_image = function (dataurl, name) {\n        var link = document.createElement(\"a\");\n        link.download = name;\n        link.href = dataurl;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    $scope.export_img = function () {\n        // export canvas\n        var canvas = Dygraph.Export.asCanvas($scope.currentChart, {\"series\":$scope.currentChart.attributes_.series_});\n        download_image(canvas.toDataURL(), $scope.currentIntervalName + \".png\");\n    };\n\n\n    var download_data = function (content, fileName, mimeType) {\n        var a = document.createElement('a');\n        mimeType = mimeType || 'application/octet-stream';\n\n        if (navigator.msSaveBlob) { // IE10\n            navigator.msSaveBlob(new Blob([content], {\n                type: mimeType\n            }), fileName);\n        } else if (URL && 'download' in a) { //html5 A[download]\n            a.href = URL.createObjectURL(new Blob([content], {\n                type: mimeType\n            }));\n            a.setAttribute('download', fileName);\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n        } else {\n            location.href = 'data:application/octet-stream,' + encodeURIComponent(content); // only this mime type is supported\n        }\n    };\n\n\n    $scope.export_data = function () {\n\n        // columns\n        var labels = $scope.currentChart.getLabels();\n\n        var columns = [$scope.currentIntervalName];\n\n        var csvContent = $scope.currentIntervalName;\n        angular$1.forEach(labels, function (label, index) {\n            if (label !== \"x\" && label != \"span_y1\" && label != \"span_y2\") {\n                columns.push(index);\n                csvContent += \",\" + label;\n            }\n        });\n\n        csvContent += \"\\n\";\n\n        var result = [];\n\n        var datewindow = $scope.currentChart.dateWindow_;\n\n        if ($scope.currentChart.dateWindow_[0] instanceof Date && $scope.currentChart.dateWindow_[1] instanceof Date) {\n            datewindow[0] = $scope.currentChart.dateWindow_[0].getTime();\n            datewindow[1] = $scope.currentChart.dateWindow_[1].getTime();\n        }\n\n        // add title\n        angular$1.forEach($scope.currentChart.rawData_, function (data) {\n\n            if (data[0] >= datewindow[0] && data[0] <= datewindow[1]) {\n                result.push(data);\n            }\n        });\n\n        result.forEach(function (infoArray, index) {\n            var tempArray = [].concat(infoArray[0]);\n            angular$1.forEach(infoArray, function (data, index) {\n                if (columns.includes(index)) {\n                    tempArray.push(data);\n                }\n            });\n            var dataString = tempArray.join(',');\n            csvContent += index < result.length ? dataString + '\\n' : dataString;\n        });\n\n\n        download_data(csvContent, $scope.auto_device_name + '_' + new Date() + '.csv', 'text/csv;encoding:utf-8');\n    };\n\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n                if (widgetData.data.metadata.data.basic.ranges) {\n                    if (widgetData.data.metadata.data.basic.hasOwnProperty(\"ranges\")) {\n                        $scope.dateTimeIntervals = widgetData.data.metadata.data.basic.ranges;\n                        angular$1.forEach($scope.dateTimeIntervals, function (range) {\n                            range[\"interval\"] = range.value;\n                            if (range.checked == true) {\n                                $scope.currentIntervalChoosed = range;\n                            }\n                        });\n                    }\n                } else {\n                    $scope.currentIntervalChoosed = $scope.dateTimeIntervals[1];\n                }\n            }\n        }\n    });\n\n\n    var darkenColor = function (colorStr) {\n        // Defined in dygraph-utils.js\n        var color = Dygraph.toRGB_(colorStr);\n        color.r = Math.floor((255 + color.r) / 2);\n        color.g = Math.floor((255 + color.g) / 2);\n        color.b = Math.floor((255 + color.b) / 2);\n        return 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n    };\n\n    var barChartPlotter = function (e) {\n        var ctx = e.drawingContext;\n        var points = e.points;\n        var y_bottom = e.dygraph.toDomYCoord(0);\n\n        ctx.fillStyle = darkenColor(e.color);\n\n        // Find the minimum separation between x-values.\n        // This determines the bar width.\n        var min_sep = Infinity;\n        for (var i = 1; i < points.length; i++) {\n            var sep = points[i].canvasx - points[i - 1].canvasx;\n            if (sep < min_sep) min_sep = sep;\n        }\n        var bar_width = Math.floor(2.0 / 3 * min_sep);\n\n        // Do the actual plotting.\n        for (var i = 0; i < points.length; i++) {\n            var p = points[i];\n            var center_x = p.canvasx;\n\n            ctx.fillRect(center_x - bar_width / 2, p.canvasy,\n                bar_width, y_bottom - p.canvasy);\n\n            ctx.strokeRect(center_x - bar_width / 2, p.canvasy,\n                bar_width, y_bottom - p.canvasy);\n        }\n    };\n\n\n    $scope.changeInterval = function (interval) {\n\n        var range = $scope.currentChart[\"xAxisZoomRange\"];\n\n        if (range[0] instanceof Date) {\n            range[0] = range[0].getTime();\n        }\n\n        if (range[1] instanceof Date) {\n            range[1] = range[1].getTime();\n        }\n\n        if (interval && ((range[1] - interval.interval) >= range[0])) {\n            $scope.rangeConfig.dateWindow = [new Date(range[1] - interval.interval), range[1]];\n            $scope.currentChart.updateOptions($scope.rangeConfig);\n            $scope.currentIntervalChoosed = interval;\n        }\n    };\n\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.loadingShow = false;\n\n        $scope.intevals = {device: []};\n\n\n        // update chart\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if (widgetData.data.metadata.css) {\n            $scope.css = widgetData.data.metadata.css;\n        }\n\n        // get start and end from url\n        var begin_path = $stateParams.begin;\n        var end_path = $stateParams.end;\n        var init_flag = false;\n\n\n        //fix interval\n        $scope.fixInterval = false;\n        var noneFixed = [];\n        $scope.fixGraphWithGap = function () {\n            if ($scope.currentChart && $scope.fixInterval) {\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function (item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({file: fixed});\n                }\n            } else if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                $scope.currentChart.updateOptions({file: noneFixed});\n            }\n\n        };\n\n\n        $scope.showOrHideDevice = function (device) {\n            angular$1.forEach($scope.childrenDevices, function (item, index) {\n                if (item.name === device.name) {\n                    var graph = $scope.currentChart;\n\n                    if (device.show == true) {\n                        graph.setVisibility(index, false);\n                        device.show = false;\n                    } else {\n                        graph.setVisibility(index, true);\n                        device.show = true;\n                    }\n\n                }\n            });\n        };\n\n        $scope.fixGraphWithGap_click = function () {\n            if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function (item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({file: fixed});\n                }\n            } else if ($scope.currentChart && $scope.fixInterval) {\n                $scope.currentChart.updateOptions({file: noneFixed});\n            }\n\n        };\n\n\n        metadata = widgetData.data.metadata;\n        $scope.basicInfo = metadata.data.basic;\n        $scope.currentView = -1; // -1 is device view and 1 is scatter view\n\n        $scope.device_name = \"\";\n\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.data_from = \"application\";\n\n        $scope.checkY2Btns = function () {\n            return $scope.basicInfo.zoom === true && $scope.showY2Btns === true;\n        };\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            $scope.auto_schema = metadata.data.source.store;\n            $scope.auto_metadata = metadata;\n            $scope.auto_device_name = deviceData.device.name;\n            $scope.$watch('currentView', function (nObj, oObj) {\n                // change\n                if (nObj != oObj) {\n                    if (nObj == -1) {\n                        $scope.autoupdate = true;\n                        var rangeLevel = null;\n                        var otherLevels = [];\n                        angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                            if (level.rows.length > 0) {\n                                if (rangeLevel != null) {\n                                    otherLevels.push(rangeLevel);\n                                }\n                                rangeLevel = level.name;\n                            }\n                        });\n                        if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                            // show device view\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                            angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                if (level.rows.length > 0 && level.name === rangeLevel) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function (line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function (column) {\n                                                    if (column.startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n                            $scope.auto_fields = fields;\n                            dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function (data) {\n                                initChart(data);\n                            }, function (error) {\n                                console.error(error);\n                            });\n                        }\n\n                    } else {\n                        $scope.autoupdate = false;\n                        //get relation config\n                        if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                            return;\n                        } else {\n                            var rangeLevel = null;\n                            var otherLevels = [];\n                            angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                if (level.rows.length > 0) {\n                                    if (rangeLevel != null) {\n                                        otherLevels.push(rangeLevel);\n                                    }\n                                    rangeLevel = level.name;\n                                }\n                            });\n                            if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                    if (level.rows.length > 0 && level.name === rangeLevel) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function (line) {\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function (column) {\n                                                        if (column.startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n                                                }\n                                            });\n                                        }\n                                    }\n                                });\n                                $scope.auto_fields = fields;\n                                // show children view\n                                dataService.childrenDeviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, metadata.data.source.relation, metadata.data.source.relation_group, rangeLevel, otherLevels, fields).then(function (data) {\n                                    // get all device trees\n                                    if (data != null && data.length > 0) {\n                                        initChildrenChart(data);\n                                    } else {\n                                        return;\n                                    }\n\n                                }, function (error) {\n                                    console.error(error);\n                                });\n\n                            }\n                        }\n                    }\n                }\n                $scope.fixInterval = false;\n\n            });\n            // first time of showing chart\n            $scope.$watch('currentChart', function (newValue) {\n                if (newValue) {\n                    //device first level\n                    var rangeLevel = null;\n                    var otherLevels = [];\n                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                        if (level.rows.length > 0) {\n                            if (rangeLevel != null) {\n                                otherLevels.push(rangeLevel);\n                            }\n                            rangeLevel = level.name;\n                        }\n                    });\n\n                    // fields of range level\n                    var fields = [];\n                    var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                        if (level.rows.length > 0 && level.name === rangeLevel) {\n                            var lines = level.rows;\n                            if (lines) {\n                                angular$1.forEach(lines, function (line) {\n                                    //\n                                    if (line.value) {\n                                        var columns = (line.value).match(patt);\n                                        angular$1.forEach(columns, function (column) {\n                                            if ((column).startsWith('data.')) {\n                                                fields.push(column.replace('data.', ''));\n                                            }\n                                        });\n                                    }\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.auto_fields = fields;\n                    //send a rest request\n                    dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function (data) {\n                        initChart(data);\n                    }, function (error) {\n                        console.error(error);\n                    });\n                }\n            });\n            $scope.$watch(\"chartDateTime\", function (newValue, oldValue) {\n                if (newValue.begin != null && newValue.end != null) {\n                    var expect_points = Math.floor($element.parent().width());\n                    // find a interval\n                    var expectedInterval = (newValue.end - newValue.begin) / expect_points;\n                    var conf = $scope.intevals.device;\n                    // device detail view\n                    var preOne = conf[0].interval;\n                    var lastOne = conf[conf.length - 1].interval;\n\n                    // get the max\n                    var expects = {interval: null, points: 0, name: \"\"};\n                    angular$1.forEach(conf, function (config) {\n                        if (((newValue.end - newValue.begin) / config.interval) <= expect_points) {\n                            if (expects.points < ((newValue.end - newValue.begin) / config.interval)) {\n                                expects.interval = config.interval;\n                                expects.points = ((newValue.end - newValue.begin) / config.interval);\n                                expects.name = config.name;\n                            }\n                        }\n                    });\n\n                    var cin = \"\";\n                    if (expects.interval == preOne) {\n                        expectedInterval = preOne;\n                        $scope.autoupdate = false;\n                    } else if (expects.interval == lastOne) {\n                        expectedInterval = lastOne;\n                        if ($scope.currentView == -1) {\n                            $scope.autoupdate = true;\n                            $scope.auto_store = conf[conf.length - 1].name;\n                        }\n                    } else {\n                        $scope.autoupdate = false;\n                        cin = expects.name;\n                        expectedInterval = expects.interval;\n                    }\n\n\n                    $scope.currentIntervalName = \"\";\n\n                    angular$1.forEach(conf, function (config) {\n                        if (config.interval == expectedInterval) {\n                            $scope.currentIntervalName = config.name;\n                        }\n                    });\n\n                    // check the interval(raw data) no more than 1000 points\n                    if (expectedInterval == lastOne) {\n                        //\n                        if (((newValue.end - newValue.begin) / expectedInterval) > expect_points) {\n                            // reset range bar\n                            $scope.rangeConfig.dateWindow = [new Date(newValue.end - (expect_points - 1) * expectedInterval), new Date(newValue.end)];\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n\n                            $scope.alertMessage = \"Limit the number of \\\"Zoom-Out\\\" points to \" + expect_points * 2 + \".\";\n                            $timeout(function () {\n                                $scope.alertMessage = null;\n                            }, 5000);\n\n                            return;\n                        }\n\n                    }\n\n                    // update range-bar\n                    if ($scope.rangeSelectorBar) {\n                        angular$1.forEach($scope.trees, function (tree) {\n                            if (tree.range == true) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                    if (level.rows.length > 0 && level.name === tree.store) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function (line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function (column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n\n                                                }\n\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                dataService.deviceStoreData($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, newValue.begin, newValue.end, fields).then(function (data) {\n                                        // udpate chart\n                                        var showData = [];\n                                        angular$1.forEach(data, function (arr) {\n                                            Array.prototype.push.apply(showData, arr.data.slice(0, arr.size));\n                                        });\n                                        showData = showData.filter(function (obj) {\n                                            return obj != null;\n                                        });\n\n                                        // update range bar\n                                        var basicInfo = $scope.basicInfo;\n                                        var allLines = [];\n                                        angular$1.forEach(showData, function (line) {\n                                            allLines.push([new Date(line.timestamp)]);\n                                        });\n                                        var series_range = {'l0': {axis: 'y1'}};\n\n                                        var rangeBarLabels = [];\n                                        for (var i = 0; i < fields.length; i++) {\n                                            rangeBarLabels.push(fields[i]);\n\n                                            var f = new Function(\"data\", \"with(data) { if(data.\" + fields[i] + \"!=null)return data.\" + fields[i] + \";return null;}\");\n                                            // add value\n                                            var counter = 0;\n                                            angular$1.forEach(allLines, function (realLine) {\n                                                try {\n                                                    var value = f(showData[counter]);\n                                                    realLine.push(value);\n                                                } catch (ex) {\n                                                    realLine.push(null);\n                                                }\n                                                counter++;\n                                            });\n                                        }\n                                        //\n\n                                        if ($scope.rangeConfig && $scope.rangeConfig.file && $scope.rangeConfig.file != null) {\n                                            var objNeed2Add = [];\n                                            angular$1.forEach($scope.rangeConfig.file, function (item) {\n                                                var flag = false;\n                                                var dataLength = -1;\n                                                angular$1.forEach(allLines, function (line) {\n                                                    dataLength = line.length;\n                                                    if (line.length > 0 && line[0].getTime() === item[0].getTime()) {\n                                                        flag = true;\n                                                    } else if (line.length === 0) {\n                                                        flag = true;\n                                                    } else {\n                                                        dataLength = line.length;\n                                                    }\n\n                                                });\n                                                if (!flag) {\n                                                    var tempObj = [];\n                                                    for (var i = 0; i < dataLength; i++) {\n                                                        tempObj[i] = item[i];\n                                                    }\n                                                    objNeed2Add.push(tempObj);\n                                                }\n                                            });\n                                        }\n                                        allLines = allLines.concat(objNeed2Add);\n                                        allLines.sort(function (a, b) {\n                                            return a[0] > b[0] ? 1 : -1;\n                                        });\n                                        if ($scope.showY2Btns) {\n                                            //noinspection JSDuplicatedDeclaration\n                                            if (!$scope.rangeConfig.axes.hasOwnProperty(\"y2\")) {\n                                                series_range = {\n                                                    'l0': {axis: 'y1'},\n                                                    'l0': {axis: 'y2'}\n                                                };\n                                                $scope.rangeSeries = series_range;\n                                                $scope.rangeConfig = {\n                                                    'file': allLines,\n                                                    'labels': ['x'].concat(rangeBarLabels),\n                                                    'series': series_range\n                                                };\n                                                if (basicInfo && basicInfo.range_show) {\n                                                    $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                                }\n                                            }\n\n                                        } else {\n                                            series_range[\"span_y2\"] = {axis: 'y2'};\n                                            $scope.rangeSeries = series_range;\n                                            var newLines = [];\n                                            angular$1.copy(allLines, newLines);\n                                            angular$1.forEach(newLines, function (line) {\n                                                line.push(NaN);\n                                            });\n                                            $scope.rangeConfig = {\n                                                'file': newLines,\n                                                'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                                'series': series_range\n                                            };\n                                            if (basicInfo && basicInfo.range_show) {\n                                                $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                            }\n                                        }\n                                    },\n                                    function (data) {\n                                        console.info(data);\n                                    }\n                                );\n                            }\n                        });\n                    }\n\n\n                    $scope.loadingShow = true;\n                    if ($scope.currentView == 1) {\n                        // scatter detail view\n                        if (expectedInterval == conf[0].interval) {\n                            $scope.currentChart.updateOptions({dateWindow: $scope.chartDateWindow});\n                            $scope.loadingShow = false;\n                        } else {\n                            $scope.legendText = null;\n                            var deviceInfo = [];\n                            var currentStore = \"\";\n\n                            $scope.childrenDevices = [];\n\n                            // has problem....\n                            angular$1.forEach($scope.childTrees, function (device) {\n                                angular$1.forEach(device.trees, function (tree, index) {\n                                    if (expectedInterval == tree.frequency && index != 0) {\n                                        currentStore = tree.store;\n                                        deviceInfo.push({name: device.name, tree: tree.tree});\n                                        device[\"show\"] = true;\n                                        $scope.childrenDevices.push(device);\n                                    }\n                                });\n                            });\n\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                            angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function (line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function (column) {\n                                                    if (column && (column).startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n\n                            $scope.auto_fields = fields;\n                            dataService.devicesStoreData($rootScope.host, $rootScope.applicationName, deviceInfo, metadata.data.source.store, currentStore, newValue.begin, newValue.end, fields).then(function (data) {\n                                var showData = [];\n                                angular$1.forEach(data, function (arr) {\n                                    var deviceData = [];\n                                    angular$1.forEach(arr.data, function (bucket) {\n                                        if (bucket.data != null) {\n                                            Array.prototype.push.apply(deviceData, bucket.data.slice(0, bucket.size));\n                                        }\n                                    });\n                                    showData.push({device: arr.device, data: deviceData});\n                                });\n                                //get configuration\n                                updateChildrenDetailChart(metadata, currentStore, $scope.rangeChildrenData, showData);\n\n                            }, function (data) {\n                                console.info(data);\n                            });\n                        }\n                        $scope.fixGraphWithGap();\n                    } else {\n                        // cal tree\n                        angular$1.forEach($scope.trees, function (tree, index) {\n                            if (expectedInterval == tree.frequency) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                    if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function (line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function (column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n\n                                                }\n\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                dataService.deviceStoreData($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, newValue.begin, newValue.end, fields).then(function (data) {\n                                    // udpate chart\n                                    var showData = [];\n                                    angular$1.forEach(data, function (arr) {\n                                        Array.prototype.push.apply(showData, arr.data.slice(0, arr.size));\n                                    });\n                                    showData = showData.filter(function (obj) {\n                                        return obj != null;\n                                    });\n                                    showData.sort(function (a, b) {\n                                        return a.timestamp > b.timestamp ? 1 : -1;\n                                    });\n                                    //get configuration\n                                    updateDetailChart(metadata, tree.store, $scope.rangeData, showData);\n\n                                    // tell some other widgets, the graph is changed.\n                                    $timeout(function () {\n                                        $rootScope.$broadcast('chartDataChangeEvent', {\n                                            'id': element_id,\n                                            'group': 'device',\n                                            'data': {\n                                                'collection': tree.store,\n                                                'group': 'device',\n                                                'data': showData\n                                            }\n                                        });\n                                    });\n\n                                }, function (data) {\n                                    console.info(data);\n                                });\n                            }\n                        });\n\n                        $scope.fixGraphWithGap();\n                    }\n                    $scope.status = false;\n                }\n            });\n\n        });\n\n\n        var fetchData = function (values, node) {\n            if (node.children[0] != null) {\n                fetchData(values, node.children[0]);\n            }\n\n            if (node.children[1] != null) {\n                fetchData(values, node.children[1]);\n            }\n\n            if (node.children[0] == null && node.children[1] == null) {\n                if (node.data != null && node.data.array) {\n                    Array.prototype.push.apply(values, node.data.array.slice(0, node.data.size));\n                } else if (node.data != null) {\n                    Array.prototype.push.apply(values, node.data.slice(0, node.data.length));\n                }\n\n            }\n\n        };\n\n\n        $scope.trees = [];\n        $scope.rangeData = [];\n\n        $scope.ordinalRangeData = [];\n\n        var initChart = function (data) {\n            $scope.intevalforshow = [];\n            //\n            $scope.intevals.device = [];\n            var trees = data.trees;\n            $scope.trees = trees;\n            var rangeTree = null;\n            angular$1.forEach(trees, function (tree) {\n                if (tree.range) {\n                    rangeTree = tree;\n                }\n                $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n            });\n\n\n            // init chart with range data\n            var store = rangeTree.store;\n\n            // get all data\n            var allData = [];\n            // fetchData(allData, rangeTree.tree);only get first and last\n            allData = allData.concat([rangeTree.first, rangeTree.last]);\n\n            allData = allData.filter(function (obj) {\n                return obj != null;\n            });\n\n            allData.sort(function (a, b) {\n                return a.timestamp > b.timestamp ? 1 : -1;\n            });\n\n\n            if ($scope.trees.length == 0 || allData.length == 0) {\n                $scope.emptyDataShow = true;\n                return;\n            }\n\n            // if the data only has one point. change the data range to bigger\n            if (allData.length == 1) { //  means only one point.\n                var newData = [];\n                // add 1 points into both side\n                var thePoint = allData[0];\n                var timestamp = thePoint.timestamp;\n                var currentInterval = $scope.intevals.device[0].interval;\n                newData.push({timestamp: timestamp - currentInterval});\n                Array.prototype.push.apply(newData, allData);\n                newData.push({timestamp: timestamp + currentInterval});\n                allData = newData;\n            }\n            $scope.ordinalRangeData = allData;\n            // get configuration and make real data\n            updateChart(metadata, store, allData);\n        };\n\n        var initChildrenChart = function (deviceDatas) {\n            var devicesInfo = {};\n            $scope.intevals.device = [];\n            //range data with all device\n            $scope.childTrees = [];\n            $scope.childrenDevices = [];\n\n            angular$1.forEach(deviceDatas, function (deviceData) {\n                var device = deviceData.device;\n                device[\"show\"] = true;\n                $scope.childrenDevices.push(device);\n                var trees = deviceData.trees;\n                $scope.childTrees.push({name: device.name, trees: trees});\n                var rangeTree = null;\n                angular$1.forEach(trees, function (tree) {\n                    if (tree.range) {\n                        rangeTree = tree;\n                    }\n\n                    var flag = false;\n                    angular$1.forEach($scope.intevals.device, function (interval) {\n                        if (interval.name == tree.store && interval.interval == tree.frequency) {\n                            // has same one\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n                    }\n\n                });\n\n                if (rangeTree != null) {\n                    var deviceObj = devicesInfo[device.name] = {};\n                    // get all data\n                    var allData = [];\n                    fetchData(allData, rangeTree.tree);\n                    allData = allData.filter(function (obj) {\n                        return obj != null;\n                    });\n                    allData.sort(function (a, b) {\n                        return a.timestamp > b.timestamp ? 1 : -1;\n                    });\n                    //\n                    deviceObj[\"range\"] = rangeTree;\n                    deviceObj[\"data\"] = allData;\n                } else {\n                    console.info(device.name + \" has none data.\");\n                }\n\n            });\n\n            updateChildrenChart(metadata, devicesInfo);\n        };\n\n\n        var updateChildrenChart = function (metadata, devicesInfo) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n            var allLines = [];\n            var allXLabels = [];\n            angular$1.forEach(devicesInfo, function (device, key) {\n                angular$1.forEach(device.data, function (item) {\n                    var flag = false;\n                    angular$1.forEach(allXLabels, function (label) {\n                        if (label.getTime() == item.timestamp) {\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        allXLabels.push(new Date(item.timestamp));\n                    }\n\n\n                });\n            });\n            // order\n            allXLabels.sort(function (a, b) {\n                return a > b ? 1 : -1;\n            });\n\n            // make all line\n            angular$1.forEach(allXLabels, function (label) {\n                allLines.push([label]);\n            });\n\n\n            var yRange = {min: null, max: null};\n            var showY2axis = false;\n            var counter = 0;\n\n\n            angular$1.forEach(devicesInfo, function (device, key) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                angular$1.forEach(collections, function (collection) {\n                    if (collection.name == device.range.store) {\n                        $scope.currentIntervalName = device.range.store;\n                        var originalData = device.data;\n\n                        // always same for each device\n                        if (collection.rows[0].yaxis == 0) {\n                            if (collection.rows[0].type == 'line') {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y1',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            } else if (collection.rows[0].type == 'bar') {\n                                series[collection.rows[0].label] = {'axis': 'y1', 'plotter': barChartPlotter};\n                            } else {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y1',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            }\n\n                        } else {\n                            series[collection.rows[0].label] = {'axis': 'y2'};\n\n                            if (collection.rows[0].type == 'line') {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y2',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            } else if (collection.rows[0].type == 'bar') {\n                                series[collection.rows[0].label] = {'axis': 'y2', 'plotter': barChartPlotter};\n                            } else {\n                                series[collection.rows[0].label] = {\n                                    'axis': 'y2',\n                                    'plotter': DygraphCanvasRenderer._linePlotter\n                                };\n                            }\n\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        labels.push(key);\n                        // make a line\n                        var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                        // add value\n                        angular$1.forEach(allLines, function (realLine, index) {\n\n                            var flag = false;\n                            angular$1.forEach(originalData, function (odata) {\n                                if (realLine[0].getTime() == odata.timestamp) {\n                                    try {\n                                        var value = f(odata);\n                                        realLine.push(value);\n                                        if (yRange.min == null) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max == null) {\n                                            yRange.max = value;\n                                        }\n\n                                        if (yRange.min > value) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max < value) {\n                                            yRange.max = value;\n                                        }\n                                    } catch (ex) {\n                                        realLine.push(null);\n                                    }\n                                    flag = true;\n                                }\n                            });\n\n                            if (!flag) {\n                                realLine.push(null);\n                            }\n                        });\n\n\n                    }\n                });\n            });\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n            //update chart\n            if ($scope.currentChart) {\n                $scope.rangeChildrenData = allLines;\n\n                if (showY2axis) {\n                    $scope.childrenRangeConfig = {\n                        'labelsKMB': true,\n                        'file': allLines,\n                        legend: 'never',\n                        labelsKMB: true,\n                        labelsSeparateLines: false,\n                        // data formate\n                        labels: ['x'].concat(sampleData.labels),\n                        highlightSeriesOpts: {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        'labels': ['x'].concat(labels),\n                        'ylabel': leftAndRight.left,\n                        'y2label': leftAndRight.right,\n                        'series': series,\n                        'colors': colors,\n                        highlightCallback: function (e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            $scope.currentHighlight = seriesName;\n                            angular$1.forEach(series, function (value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {x: 0, y: 0};\n                            angular$1.forEach(pts, function (item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function (point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n\n                            $scope.$apply(function () {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n\n\n                        },\n\n                        unhighlightCallback: function (e) {\n                            $scope.currentHighlight = \"\";\n                            $scope.$apply(function () {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'axes': {\n                            'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                            'y2': {}\n                        }\n                        // showRangeSelector: true\n                    };\n                } else {\n                    $scope.showY2Btns = false;\n                    var newLines = [];\n                    angular$1.copy(allLines, newLines);\n                    angular$1.forEach(newLines, function (line) {\n                        line.push(NaN);\n                    });\n                    series[\"span_y2\"] = {'axis': 'y2'};\n                    $scope.childrenRangeConfig = {\n                        'drawGapEdgePoints': true,\n                        'pointSize': 3,\n                        'legend': 'never',\n                        'labelsKMB': true,\n                        'file': newLines,\n                        'labelsSeparateLines': false,\n                        'highlightSeriesOpts': {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        highlightCallback: function (e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            $scope.currentHighlight = seriesName;\n                            angular$1.forEach(series, function (value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {x: 0, y: 0};\n                            angular$1.forEach(pts, function (item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function (point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n                            $scope.$apply(function () {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n                        },\n\n                        unhighlightCallback: function (e) {\n                            $scope.currentHighlight = \"\";\n                            $scope.$apply(function () {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                        'ylabel': leftAndRight.left,\n                        'y2label': \"\",\n                        'series': series,\n                        'colors': colors,\n                        'axes': {\n                            'y': {valueRange: [yRange.min, yRange.max]},\n                            'y2': {\n                                axisLabelFormatter: function (d) {\n                                    return '';\n                                }\n                            }\n                        }\n                        // showRangeSelector: true\n                    };\n                }\n                //\n                $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n                //  keep the same time window and refersh\n                $scope.chartDateTime = {begin: $scope.chartDateTime.begin, end: $scope.chartDateTime.end};\n                $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                $scope.loadingShow = false;\n            }\n\n\n        };\n\n\n        var updateChildrenDetailChart = function (metadata, store, rangeData, allData) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var newLines = [];\n            var newTime = [];\n            var series = {};\n            var labels = [];\n            var colors = [];\n            var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n            var yRange = {min: null, max: null};\n            var counter = 0;\n            var showY2axis = null;\n            angular$1.forEach(allData, function (device) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                if (device.data.length > 0) {\n                    labels.push(device.device);\n                    angular$1.forEach(collections, function (collection) {\n                        if (collection.name == store) {\n                            $scope.currentIntervalName = store;\n                            if (collection.rows[0].yaxis == 0) {\n                                if (collection.rows[0].type == 'line') {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y1',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                } else if (collection.rows[0].type == 'bar') {\n                                    series[collection.rows[0].label] = {'axis': 'y1', 'plotter': barChartPlotter};\n                                } else {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y1',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                }\n\n                            } else {\n\n                                if (collection.rows[0].type == 'line') {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y2',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                } else if (collection.rows[0].type == 'bar') {\n                                    series[collection.rows[0].label] = {'axis': 'y2', 'plotter': barChartPlotter};\n                                } else {\n                                    series[collection.rows[0].label] = {\n                                        'axis': 'y2',\n                                        'plotter': DygraphCanvasRenderer._linePlotter\n                                    };\n                                }\n\n                                showY2axis = true;\n                                $scope.showY2Btns = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                            var tempData = [];\n                            var tempTime = [];\n                            // make data\n                            angular$1.forEach(device.data, function (data) {\n                                var dateTime = new Date(data.timestamp);\n                                try {\n                                    var value = f(data);\n                                    tempData.push({timestamp: dateTime, value: value});\n\n                                    if (yRange.min == null) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max == null) {\n                                        yRange.max = value;\n                                    }\n\n                                    if (yRange.min > value) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max < value) {\n                                        yRange.max = value;\n                                    }\n\n                                } catch (e) {\n                                    tempData.push({timestamp: dateTime, value: null});\n                                }\n                                tempTime.push(dateTime.getTime());\n                            });\n                            newTime = newTime.concat(tempTime.filter(function (item) {\n                                return newTime.indexOf(item) < 0;\n                            }));\n                            newLines.push({device: device.device, data: tempData});\n                        }\n                    });\n                }\n            });\n\n            var chartData = [];\n            // time needs sort!!!\n            newTime = newTime.sort();\n            angular$1.forEach(newTime, function (nt) {\n                chartData.push([new Date(nt)]);\n            });\n\n\n            angular$1.forEach(newLines, function (line) {\n                angular$1.forEach(chartData, function (timeTicket) {\n                    // line data\n                    var flag = false;\n                    var lineData = line.data;\n                    for (var i = 0; i < lineData.length; i++) {\n                        if (lineData[i].timestamp.getTime() == timeTicket[0].getTime()) {\n                            timeTicket.push(lineData[i].value);\n                            flag = true;\n                            break;\n                        }\n                    }\n                    if (flag != true) {\n                        // we should use \"NaN\"\n                        timeTicket.push(NaN);\n                    }\n                });\n            });\n\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n\n\n            if (chartData.length == 0) {\n                $scope.currentChart.updateOptions({\n                    'file': []\n                });\n                $scope.loadingShow = false;\n            } else {\n                if ($scope.currentChart) {\n\n                    if (showY2axis) {\n\n                        $scope.currentChartOptions = {\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80}\n                            }\n                        };\n\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function (e, x, pts, row, seriesName) {\n                                var sn = \"\";\n                                $scope.currentHighlight = seriesName;\n                                angular$1.forEach(series, function (value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {x: 0, y: 0};\n                                angular$1.forEach(pts, function (item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function (point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n                                $scope.$apply(function () {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n                            },\n\n                            unhighlightCallback: function (e) {\n                                $scope.currentHighlight = \"\";\n                                $scope.$apply(function () {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80}\n                            }\n                            // showRangeSelector: true\n                        });\n                    } else {\n                        var newLines = [];\n                        $scope.showY2Btns = false;\n                        angular$1.copy(chartData, newLines);\n                        angular$1.forEach(newLines, function (line) {\n                            line.push(NaN);\n                        });\n                        series[\"span_y2\"] = {axis: 'y2'};\n                        $scope.currentChartOptions = {\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                                \"y2\": {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        };\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function (e, x, pts, row, seriesName) {\n\n                                var sn = \"\";\n                                $scope.currentHighlight = seriesName;\n                                angular$1.forEach(series, function (value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {x: 0, y: 0};\n                                angular$1.forEach(pts, function (item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function (point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n\n                                $scope.$apply(function () {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n\n                            },\n\n                            unhighlightCallback: function (e) {\n                                $scope.currentHighlight = \"\";\n                                $scope.$apply(function () {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                                \"y2\": {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    }\n                    $scope.loadingShow = false;\n                }\n            }\n\n\n        };\n\n\n        /**\n         * update detail chart\n         * @param metadata\n         * @param store\n         * @param rangeData\n         * @param allData\n         */\n        var updateDetailChart = function (metadata, store, rangeData, allData) {\n\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{min: null, max: null}, {min: null, max: null}];\n            angular$1.forEach(collections, function (collection) {\n                if (collection.name == store) {\n                    angular$1.forEach(allData, function (line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    // var yRange = {'min': null, 'max': null};\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function (row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {'axis': 'y1'};\n                            if (row.type == 'line') {\n                                series[row.label] = {'axis': 'y1', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {'axis': 'y1', 'plotter': barChartPlotter};\n                            } else {\n                                series[row.label] = {'axis': 'y1', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            }\n                        } else {\n                            series[row.label] = {'axis': 'y2'};\n                            if (row.type == 'line') {\n                                series[row.label] = {'axis': 'y2', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {'axis': 'y2', 'plotter': barChartPlotter};\n                            } else {\n                                series[row.label] = {'axis': 'y2', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            }\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function (realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    angular$1.forEach(yRanges, function (yrange) {\n                        if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                            yrange.min = yrange.min - (yrange.min) * 0.10;\n                            yrange.max = yrange.max + (yrange.max) * 0.10;\n                        }\n                    });\n\n\n                    if (allLines.length == 0) {\n\n                        $scope.currentChart.updateOptions({\n                            'file': []\n                        });\n                        if ($scope.rangeSelectorBar) {\n                            $scope.currentChart[\"xAxisZoomRange\"] = $scope.rangeSelectorBar.xAxisExtremes();\n                        }\n\n\n                        $scope.loadingShow = false;\n                    } else {\n                        if ($scope.currentChart) {\n\n                            if (showY2axis) {\n                                $scope.currentChartOptions = {\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n\n\n                            } else {\n\n                                var newLines = [];\n                                $scope.showY2Btns = false;\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function (line) {\n                                    line.push(NaN);\n                                });\n\n                                series[\"span-Y2\"] = {axis: 'y2'};\n\n\n                                $scope.currentChartOptions = {\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            axisLabelFormatter: function (d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            axisLabelFormatter: function (d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n                            }\n                            $scope.loadingShow = false;\n                        }\n                    }\n\n\n                }\n            });\n\n\n        };\n\n        $scope.autoUpdateChart = updateDetailChart;\n\n        /**\n         * update range chart\n         * @param metadata\n         * @param store\n         * @param allData\n         */\n        var updateChart = function (metadata, store, allData) {\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{min: null, max: null}, {min: null, max: null}];\n            angular$1.forEach(collections, function (collection) {\n                if (collection.name == store) {\n                    $scope.currentIntervalName = store;\n                    angular$1.forEach(allData, function (line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    $scope.rangeSeriesNumber = collection.rows.length;\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function (row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {'axis': 'y1'};\n                            if (row.type == 'line') {\n                                series[row.label] = {'axis': 'y1', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {'axis': 'y1', 'plotter': barChartPlotter};\n                            } else {\n                                series[row.label] = {'axis': 'y1', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            }\n                        } else {\n                            series[row.label] = {'axis': 'y2'};\n                            if (row.type == 'line') {\n                                series[row.label] = {'axis': 'y2', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {'axis': 'y2', 'plotter': barChartPlotter};\n                            } else {\n                                series[row.label] = {'axis': 'y2', 'plotter': DygraphCanvasRenderer._linePlotter};\n                            }\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function (realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    if ($scope.currentChart) {\n                        $scope.rangeData = allLines;\n                        var basicInfo = $scope.basicInfo;\n                        if (basicInfo && basicInfo.range_show) {\n                            var rangeBarLabels = [];\n                            for (var i = 0; i < labels.length; i++) {\n                                rangeBarLabels.push(\"l\" + i);\n                            }\n                            var series_range = {'l0': {axis: 'y1'}};\n                            if (showY2axis) {\n                                //noinspection JSDuplicatedDeclaration\n                                series_range = {\n                                    'l0': {axis: 'y1'},\n                                    'l0': {axis: 'y2'}\n                                };\n                                $scope.rangeSeries = series_range;\n\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': allLines,\n                                    'labels': ['x'].concat(rangeBarLabels),\n                                    'series': series_range\n                                });\n                            } else {\n                                series_range[\"span_y2\"] = {axis: 'y2'};\n                                $scope.showY2Btns = false;\n                                $scope.rangeSeries = series_range;\n                                var newLines = [];\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function (line) {\n                                    line.push(NaN);\n                                });\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': newLines,\n                                    'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                    'series': series_range\n                                });\n                            }\n\n\n                        }\n\n                        angular$1.forEach(yRanges, function (yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max) * 0.10;\n                            }\n                        });\n\n\n                        // if graph has 2 yAxis or a yAxis\n\n\n                        if (showY2axis) {\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: null,\n                                'labelsKMB': true,\n                                'file': allLines,\n                                'labels': ['x'].concat(labels),\n                                'ylabel': leftAndRight.left,\n                                'y2label': leftAndRight.right,\n\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                    'y2': {\n                                        'labelsKMB': true,\n                                        valueRange: [yRanges[1].min, yRanges[1].max],\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        } else {\n                            series['span_y2'] = {axis: 'y2'};\n                            $scope.showY2Btns = false;\n                            var newLines = [];\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function (line) {\n                                line.push(NaN);\n                            });\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: null,\n                                'labelsKMB': true,\n                                'file': newLines,\n                                'labels': ['x'].concat(labels).concat(['span_y2']),\n                                'ylabel': leftAndRight.left,\n                                'y2label': \"\",\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                    'y2': {\n                                        axisLabelFormatter: function (d) {\n                                            return '';\n                                        },\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        }\n\n\n                        if (basicInfo && basicInfo.range_show) {\n                            Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                zoom: true,\n                                selection: false,\n                                range: false\n                            });\n                        }\n\n\n                        if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                            // keep the current range bar refresh once.\n                            $scope.chartDateTime = {\n                                begin: $scope.chartDateTime.begin,\n                                end: $scope.chartDateTime.end\n                            };\n                            $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                        } else {\n\n                            $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            if (begin_path && end_path && !init_flag) {\n                                // $scope.chartDateTime = {\n                                // \"begin\": new Date(new Number(begin_path)),\n                                // \"end\": new Date(new Number(end_path))\n                                // };\n                                $scope.chartDateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                init_flag = true;\n                            } else {\n                                if ($scope.currentIntervalChoosed && ((allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= allLines[0][0].getTime())) {\n                                    $scope.rangeConfig.dateWindow = [new Date(allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval), allLines[allLines.length - 1][0]];\n                                } else {\n                                    $scope.chartDateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                    $scope.rangeConfig.dateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                }\n                            }\n\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n\n                        }\n\n\n                        //bind\n                        $scope.loadingShow = false;\n                    }\n\n                }\n            });\n        };\n\n        $scope.chartDateTime = {begin: null, end: null};\n\n        // function for show one\n        $scope.showOne = function (deviceName) {\n\n            if ($rootScope['standalone'] && $rootScope['standalone'] == true) {\n                return false;\n            }\n\n\n            // device type is\n            if ($location.url().indexOf('/app/page/param/') != -1) {\n                //open window\n                $window.open(\"/#/app/page/param/\" + $rootScope.applicationName + \"/\" + metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1]));\n            } else {\n                //open window\n                $window.open(\"/#\" + $location.url().replace(\"show\", \"param\").replace($location.url().substr($location.url().lastIndexOf('/', $location.url().lastIndexOf('/') - 1) + 1), metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1])));\n            }\n\n        };\n\n\n        var btntimer = null;\n\n\n        $scope.btnZoomInVLeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVLeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomInVRight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVRight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVULeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVDLeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVURight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVDRight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        // functions for buttons\n        $scope.btnpanleft = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[0] - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0] - pan_delta;\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[1] - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1] - pan_delta;\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnpanright = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = $scope.chartDateWindow[0].getTime() + pan_delta;\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            } else {\n                if (($scope.chartDateWindow[0] + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = ($scope.chartDateWindow[0] + pan_delta);\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1].getTime() + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            } else {\n                if (($scope.chartDateWindow[1] + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1] + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        $scope.btnzoomin = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            startDate = rangeStart + (delta * 2);\n            endDate = rangeEnd - (delta * 2);\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            //\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnzoomout = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            if ((rangeStart - (delta * 2)) > panRange[0]) {\n                startDate = rangeStart - (delta * 2);\n            } else {\n                startDate = panRange[0];\n            }\n\n            if ((rangeEnd + (delta * 2)) < panRange[1]) {\n                endDate = rangeEnd + (delta * 2);\n            } else {\n                endDate = panRange[1];\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        var timer = null;\n        $scope.refersh = function (g, init) {\n            if (timer) {\n                $timeout.cancel(timer);\n            }\n            timer = $timeout(function () {\n                if (init || g.xAxisRange()[0] != $scope.chartDateTime.begin || g.xAxisRange()[1] != $scope.chartDateTime.end) {\n                    $scope.chartDateTime = {begin: g.xAxisRange()[0], end: g.xAxisRange()[1]};\n                    $scope.chartDateWindow = g.xAxisRange();\n                }\n            }, 600);\n        };\n    }\n\n};\n\n\nfgpWidgetGraph.buildFactory = function buildFactory ($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    fgpWidgetGraph.instance = new fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams);\n    return fgpWidgetGraph.instance;\n};\n\nfgpWidgetGraph\n    .$inject = ['$timeout', 'dataService', '$rootScope', '$interval', '$filter', '$location', '$stateParams'];\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPageTitle = function fgpWidgetPageTitle() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetPageTitle.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //drag-channel  item means this widget accepts items\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"\">' +\n        '<h1>{{css.title.text}}</h1>' +\n        '<h3>{{css.subtitle.text}}</h3>' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div>';\n    return dom_show;\n};\n\n\nfgpWidgetPageTitle.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"minHeight\"] = metadata.css.minHeight;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n        $scope.css[\"title\"] = metadata.css.title;\n        $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n        $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n        $scope.css[\"subtitle\"] = metadata.css.subtitle;\n        $scope.css[\"subtitle\"][\"color\"] = metadata.css.subtitle.color;\n        $scope.css[\"subtitle\"][\"show\"] = metadata.css.subtitle.show;\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"title\"].text + \"}\");\n            $scope.css[\"title\"].text = f(deviceData.device);\n            f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"subtitle\"].text + \"}\");\n            $scope.css[\"subtitle\"].text = f(deviceData.device);\n        });\n    }\n\n\n\n\n};\n\nfgpWidgetPageTitle.buildFactory = function buildFactory () {\n    fgpWidgetPageTitle.instance = new fgpWidgetPageTitle();\n    return fgpWidgetPageTitle.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetMap = function fgpWidgetMap() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetMap.prototype.template = function template (element, attrs) {\n    var dom_show = '<div class = \"{{css.width}}\" style=\"padding:0px;height:{{css.height}}px;\" map-lazy-load=\"https://maps.google.com/maps/api/js\">' +\n        '<ng-map style=\"height: 100%;width: 100%;\" center=\"{{center}}\" zoom=\"15\">' +\n        '<marker on-click=\"map.showInfoWindow(\\'info_' + attrs.id + '\\')\" id=\"marker_' + attrs.id + '\" ng-repeat=\"item in markers\" icon=\"{{item.image}}\" position=\"{{item.latitude}},{{item.longitude}}\" title=\"{{item.name}}\" animation=\"Animation.DROP\" ></marker>' +\n        '</ng-map>' +\n        '</div>' +\n        '';\n    return dom_show;\n};\n\n\nfgpWidgetMap.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n            var location = {};\n            $scope.markers = [];\n            $scope.details = $scope.$parent.device;\n\n\n            // show one point.\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { return \" + item.value + \";}\");\n                    var result = f(deviceData.device);\n                    if (result) {\n                        location[item.label] = result;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n                } catch (error) {\n                    // show image\n                    if (\"image\" == item.label) {\n                        location[item.label] = item.value;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n\n                }\n            });\n\n\n            //do not show\n            if (location.latitude == \"\" || location.longitude == \"\") {\n                //hard code. the location is Melbourne\n                location.latitude = \"-37.810000\";\n                location.longitude = \"144.950000\";\n                $scope.center = [location.latitude, location.longitude];\n                // $scope.markers.push(location);\n            } else {\n                $scope.center = [location.latitude, location.longitude];\n                $scope.markers.push(location);\n            }\n\n        });\n    }\n\n};\n\nfgpWidgetMap.buildFactory = function buildFactory () {\n    fgpWidgetMap.instance = new fgpWidgetMap();\n    return fgpWidgetMap.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetDeviceDetail = function fgpWidgetDeviceDetail() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetDeviceDetail.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '<div class=\"row\" ng-repeat=\"item in data\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"text-align: right; font-weight: bold;line-height: 30px;\">{{item.label}}</div><div class=\"col-xs-8 col-md-8\" style=\"text-align: left;line-height: 30px;\">{{item.value}}</div>' +\n        '</div>' +\n        '</div>' +\n        '<div id=\"detail_status_' + attrs.id + '\" class=\"row\" style=\"min-height: 50px;\">' +\n        '</div>' +\n        '</div>';\n};\n\n\nfgpWidgetDeviceDetail.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n\n            $scope.data = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = \"\";\n                    $scope.data.push(item);\n                }\n            });\n\n\n        });\n\n    }\n\n};\n\n\nfgpWidgetDeviceDetail.buildFactory = function buildFactory () {\n    fgpWidgetDeviceDetail.instance = new fgpWidgetDeviceDetail();\n    return fgpWidgetDeviceDetail.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetSpan = function fgpWidgetSpan() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetSpan.prototype.template = function template (scope, element) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '</div>';\n};\n\nfgpWidgetSpan.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n};\n\nfgpWidgetSpan.buildFactory = function buildFactory () {\n    fgpWidgetSpan.instance = new fgpWidgetSpan();\n    return fgpWidgetSpan.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPie = function fgpWidgetPie($timeout) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n};\n\n\nfgpWidgetPie.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" ><div style=\"height: {{css.height}}px;\">' +\n        '<canvas class=\"fgpPieChart\"></canvas>' +\n        '</div>' +\n        '</div>';\n};\n\nfgpWidgetPie.prototype.link = function link (scope, element) {\n\n    this.$timeout(function () {\n        var ctx = element.find(\"canvas\")[0];\n        scope.chart = new Chart(ctx, {\n            type: 'pie',\n            data: {\n                labels: ['1'],\n                datasets: [\n                    {\n                        data: [1],\n                        backgroundColor: []\n                    }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                animation: false,\n                legend: {display: true}\n            }\n        });\n    });\n};\n\n\nfgpWidgetPie.prototype.controller = function controller ($scope, $element, $timeout) {\n\n    var id = $element.attr(\"id\");\n    var metadata = null;\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n            $scope.showdata = widgetData.data;\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n            $scope.data = [];\n            var colors = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = item.value;\n                    $scope.data.push(item);\n                }\n                if (item.color) {\n                    colors.push(item.color);\n                } else {\n                    colors.push('#' + (function co(lor) {\n                            return (lor +=\n                                [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                            && (lor.length == 6) ? lor : co(lor);\n                        })(''));\n                }\n            });\n            // timeout\n            $scope.pieData = {labels: [], value: []};\n            $timeout(function () {\n                // create data\n                angular$1.forEach($scope.data, function (item) {\n                    $scope.pieData.labels.push(item.label);\n                    $scope.pieData.value.push(item.value);\n                });\n\n                $scope.chart.data.labels = $scope.pieData.labels;\n                $scope.chart.data.datasets[0].data = $scope.pieData.value;\n                $scope.chart.data.datasets[0].backgroundColor = colors;\n                // update chart\n                $scope.chart.update();\n            });\n\n        });\n\n\n    }\n\n\n};\n\nfgpWidgetPie.buildFactory = function buildFactory ($timeout) {\n    fgpWidgetPie.instance = new fgpWidgetPie($timeout);\n    return fgpWidgetPie.instance;\n};\nfgpWidgetPie.$inject = ['$timeout'];\n\n/**\n * Created by eric on 22/11/16.\n */\n\nvar fgpDockerButton = function fgpDockerButton() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\n\nfgpDockerButton.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"col-xs-12 btn-group\" role=\"group\" style=\"padding: 2px;\" aria-label=\"...\">' +\n        '<div style=\"float: right;\">' +\n        '<button type=\"button\" class=\"btn btn-{{button.color}} btn-xs\" ' +\n        ' ng-click=\"action(button)\" ng-repeat=\"button in buttons\" ng-show=\"checkShow(button)\"><i class=\"fa {{button.icon}}\"' +\n        ' aria-hidden=\"true\"></i>' +\n        '</button>' +\n        '</div>' +\n        '</div>';\n    return show_dom;\n};\n\n\nfgpDockerButton.prototype.controller = function controller ($scope, $element, $http, $timeout) {\n\n    $scope.stats = \"\";\n\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var confData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                confData = data.data;\n            }\n        }\n    });\n\n    var repeateId = [];\n\n    var pageDevice = null;\n    $scope.$on('deviceInfoEvent', function (event, data) {\n        pageDevice = data.device;\n    });\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n        if (data.application === repeateId[2] && data.container === repeateId[0] && data.host === repeateId[1]) {\n            $scope.stats = data.stats;\n        }\n    });\n\n    $scope.checkShow = function (button) {\n\n\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            return true;\n        }\n\n\n        if (button.type === \"stop\") {\n            if ($scope.stats === \"running\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"start\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"delete\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    // how many buttons?\n    $scope.buttons = [];\n\n    if ($scope.$parent.repeat) {\n        repeateId = $scope.$parent.repeat.split(\",\");\n    }\n\n    angular.forEach(configuration, function (item) {\n        if (item.label == \"buttons\") {\n            $scope.buttons = item.value;\n        }\n    });\n\n    $scope.healthinfo = \"\";\n\n\n    // submit \"action\" to rest api\n    $scope.action = function (button) {\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/exec',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    deviceName: pageDevice.name,\n                    deviceKey: pageDevice.key.id,\n                    relationship: 'node_application'\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        } else {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/hosts/action',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    container: repeateId[0],\n                    host: repeateId[1],\n                    application: repeateId[2]\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        }\n\n    };\n};\n\n\nfgpDockerButton.buildFactory = function buildFactory () {\n    fgpDockerButton.instance = new fgpDockerButton();\n    return fgpDockerButton.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetRepeatContainer = function fgpWidgetRepeatContainer($http) {\n    this.restrict = 'E';\n    this.scope = {};\n    this._$http = $http;\n};\n\nfgpWidgetRepeatContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{item.device.key.id}}\" ng-repeat=\"item in items\" emit-last-repeater-element style=\"padding-left: 2px; padding-right: 2px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding-left: 1px; padding-right: 1px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}};\"><i class=\"fa fa-desktop\" aria-hidden=\"true\" style=\"margin-right: 5px;\"></i>{{item.device.name}}</div>' +\n        '<div class=\"panel-body\"  style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\'}};\">' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" ng-repeat=\"item in items\" repeat-id=\"{{item.device.key.id}}\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;padding-left: 2px; padding-right: 2px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n};\n\nfgpWidgetRepeatContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout, $http, $location, $stateParams, $websocket) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    // all items\n    $scope.items = [];\n\n    $scope.labelstyle = [\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"];\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n\n    $scope.listStyle = \"list\";\n\n    $scope.labels = [];\n\n    var deviceType = $stateParams.type;\n    var deviceName = $stateParams.device;\n\n    if (metadata.data) {\n\n\n        $scope.labels = [];\n\n\n        if (metadata.data.datasource.labels) {\n            $scope.labels = metadata.data.datasource.labels.split(\" \");\n        }\n\n        if (metadata.data.datasource.style) {\n            $scope.listStyle = metadata.data.datasource.style;\n        }\n\n        // show different type\n        var relation = metadata.data.datasource.type;\n        $scope.items = [];\n        $http({\n            method: 'GET',\n            url: 'api/docker/repeat/' + deviceType + '/' + deviceName + '/' + relation\n        }).then(function (data) {\n            $scope.items = data.data;\n        }, function (error) {\n            console.error(error);\n        });\n\n        // I'm ready. please give all my children to me~\n        // call stage\n        $scope.$on('LastRepeaterElement', function () {\n            $timeout(function () {\n                $scope.$emit('bindChildRepeatEvent', {\n                    id: element_id\n                });\n            });\n        });\n\n\n    }\n    //establish a connection with websocket\n    var dataStream = $websocket('ws://' + $location.host() + \":\" + $location.port() + '/ws/hosts');\n    dataStream.onMessage(function (message) {\n        try {\n            var backData = JSON.parse(message.data);\n            if (backData.hasOwnProperty(\"container\")) {\n                // tell children\n                $scope.$parent.$broadcast('containerStatusEvent', backData);\n                // update health-check status\n                angular.forEach($scope.items, function (item) {\n                    if (backData.application == item.device.key.id) {\n                        if (backData.config.State.Health) {\n                            item[\"health\"] = backData.config.State.Health.Status;\n                        } else {\n                            item[\"health\"] = null;\n                        }\n\n                        if (backData.stats == \"exited\") {\n                            item[\"health\"] = null;\n                        }\n                    }\n                });\n            }\n        } catch (e) {\n        }\n    });\n\n    $scope.healthcheck = function (item) {\n        // call server and get the exception.\n        dataService.healthcheck(item.name, item.device.key.id);\n    };\n\n\n};\n\n\nfgpWidgetRepeatContainer.buildFactory = function buildFactory ($http) {\n    fgpWidgetRepeatContainer.instance = new fgpWidgetRepeatContainer($http);\n    return fgpWidgetRepeatContainer.instance;\n};\n\nfgpWidgetRepeatContainer.$inject = ['$http'];\n\n/**\n * Created by eric on 25/11/16.\n */\nvar fgpImage = function fgpImage() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpImage.prototype.template = function template (scope, element) {\n    return '' +\n        '<img src=\"{{url}}\" style=\"width:{{css.width}}px;height:{{css.height}}px;\">' +\n        '';\n};\n\nfgpImage.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"0\",\n        height: \"0\"\n    };\n\n    $scope.url = \"\";\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n    if($scope.showdata.metadata.data){\n        $scope.url = $scope.showdata.metadata.data.url;\n    }\n};\n\nfgpImage.buildFactory = function buildFactory () {\n    fgpImage.instance = new fgpImage();\n    return fgpImage.instance;\n};\n\n/**\n * Created by eric on 28/11/16.\n */\nvar fgpIcon = function fgpIcon() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpIcon.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"{{css.width}}\" style=\"margin-top: 10px;background-color: {{css.background.color}};border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"padding: 5px;\">' +\n        '<i class=\"fa fa-{{icon}}\" style=\"font-size: 60px;\"></i>' +\n        '</div>' +\n        '<div class=\"col-xs-8 col-md-8\">' +\n        '<div style=\"text-align: right;font-size: large;\"><label>{{title}}</label></div>' +\n        '<div style=\"text-align: right;font-size: small;\"><label>{{desc}}</label></div>' +\n        '</div>' +\n        '</div>' +\n        '';\n    return show_dom;\n};\n\nfgpIcon.prototype.controller = function controller ($scope, $element) {\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.icon = configuration.content.icon;\n\n    $scope.desc = configuration.content.desc;\n\n    $scope.title = \"\";\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + configuration.content.f + \"}\");\n            $scope.title = f(deviceData.device);\n        });\n\n    }\n\n};\n\n\nfgpIcon.buildFactory = function buildFactory () {\n    fgpIcon.instance = new fgpIcon();\n    return fgpIcon.instance;\n};\n\n/**\n * Created by eric on 29/11/16.\n */\nvar fgpWidgetAppContainer = function fgpWidgetAppContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetAppContainer.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //<div class=\"alert alert-info\" role=\"alert\">...</div>\n    return '' +\n        '<div ng-show=\"showstyle == \\'list\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-12 col-xs-12  alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px; text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n\n        '<div ng-show=\"showstyle == \\'grid\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-6 col-xs-6 alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px;text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n        '';\n};\n\nfgpWidgetAppContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.containers = [];\n    $scope.containerswithTimeout = [];\n    var metadata = widgetData.data.metadata;\n    // should be a host id\n    var repeat = $scope.$parent.repeat;\n\n    $scope.showstyle = \"list\";\n\n    $scope.host = repeat;\n\n\n    // I'm ready. please give all my children to me~\n    // call stage\n    $scope.$on('LastRepeaterElement', function () {\n        $timeout(function () {\n            $scope.$emit('bindChildRepeatEvent', {\n                id: element_id\n            });\n        });\n    });\n\n    $timeout(function () {\n        var pp = $scope.$emit('listStyleEvent', {\n            id: widgetData.data.parent,\n            callback: function (style) {\n                $scope.showstyle = style;\n            }\n        });\n\n    });\n\n    $scope.gotoContainer = function (container) {\n        // \"device type and device name\" display by a dynamic page!\n        console.info(container);\n        return false;\n    };\n\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n\n        if (data.host == repeat) {\n            //f\n            var labels = [];\n\n            if (metadata.data.datasource.labels) {\n                labels = metadata.data.datasource.labels.split(\" \");\n            }\n            var showLabel = \"\";\n            angular.forEach(labels, function (label) {\n                showLabel += data.config[label] + \" \";\n            });\n\n            var app = {\n                id: data.container,\n                label: showLabel,\n                application: data.application,\n                name: data.deviceName,\n                type: data.deviceType\n            };\n            var flag = false;\n            angular.forEach($scope.containers, function (container) {\n                if (container.id == app.id) {\n                    // update timer\n                    var timer_index = -1;\n                    var timer = $scope.containerswithTimeout.filter(function (item, index) {\n                        if(item.app.id == app.id){\n                            timer_index = index;\n                            return true;\n                        }else{\n                            false;\n                        }\n                    });\n                    $timeout.cancel(timer[0].t);\n                    if (data.stats != \"removed\") {\n                        var newTimer = $timeout(function () {\n                            var index = $scope.containers.indexOf(app);\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }, 30000);\n                        timer[0].t = newTimer;\n                        flag = true;\n                    } else {\n                        var index = -1;\n                        angular.forEach($scope.containers, function (item, itemIndex) {\n                            if (item.id === app.id) {\n                                index = itemIndex;\n                            }\n                        });\n                        if (index != -1 && timer_index != -1) {\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            flag = true;\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }\n                    }\n                }\n            });\n\n            if (!flag) {\n                // add to\n                $scope.containers.push(app);\n                // delete it after 30 seconds!\n                var t = $timeout(function () {\n                    var index = $scope.containers.indexOf(app);\n                    $scope.containers.splice(index, 1);\n                }, 30000);\n                $scope.containerswithTimeout.push({t: t, app: app});\n            }\n        }\n\n    });\n\n};\n\nfgpWidgetAppContainer.buildFactory = function buildFactory () {\n    fgpWidgetAppContainer.instance = new fgpWidgetAppContainer();\n    return fgpWidgetAppContainer.instance;\n};\n\nfgpWidgetAppContainer.$inject = [];\n\n/**\n * Created by ericwang on 21/06/2016.\n */\nvar fgpWidgetChartTable = function fgpWidgetChartTable() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetChartTable.prototype.template = function template (element, attrs) {\n    return '<div style=\"padding:0px;height: {{css.height}}px;position: relative; overflow-y : auto;\">' +\n        '<table st-table=\"rowCollection\" class=\"col-md-12 table table-striped\">' +\n        '<thead>' +\n        '<tr>' +\n        '<th ng-repeat=\"column in sampledata.columns\">{{column.label}}</th>' +\n        '</tr>' +\n        '</thead>' +\n        '<tbody>' +\n        '<tr ng-repeat=\"value in sampledata.values\">' +\n        '<td ng-repeat=\"col in sampledata.columns\">{{value[col.label] | tableformatter: value : col.label : col.formatter}}</td>' +\n        '</tr>' +\n        '</tbody>' +\n        '</table>' +\n        '</div>';\n};\n\nfgpWidgetChartTable.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    //show\n    $scope.showdata = widgetData.data;\n\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n\n\n    $scope.$on('chartDataChangeEvent', function (event, chartData) {\n        var chartId = chartData.id;\n        if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"device\") {\n            $scope.sampledata = {};\n            // make data\n            var collectionName = chartData.data.collection;\n            var groupName = chartData.group;\n            var columns = [];\n            //get group and collection configuration\n            angular$1.forEach($scope.showdata.metadata.data.groups, function (group) {\n                if (group.name == groupName) {\n                    angular$1.forEach(group.collections, function (collection) {\n                        if (collection.name === collectionName) {\n                            columns = collection.rows;\n                        }\n                    });\n                }\n            });\n\n\n            $scope.sampledata.columns = [];\n\n            angular$1.forEach(columns, function (column) {\n                $scope.sampledata.columns.push({label: column.label, formatter: column.formatter});\n            });\n            $scope.sampledata.values = [];\n            angular$1.forEach(columns, function (column) {\n                var f = new Function(\"data\", \"with(data) { if(\" + column.value + \") return \" + column.value + \";return '';}\");\n                angular$1.forEach(chartData.data.data, function (record, index) {\n                    if ($scope.sampledata.values.length < chartData.data.data.length) {\n                        //add new one\n                        var item = {};\n                        item[column.label] = f(record);\n                        $scope.sampledata.values.push(item);\n                    } else {\n                        $scope.sampledata.values[index][column.label] = f(record);\n                    }\n                });\n            });\n\n            var cleanData = [];\n            angular$1.forEach($scope.sampledata.values, function (value, index) {\n                var flag = false;\n                angular$1.forEach(columns, function (column) {\n                    if (value[column.label] && value[column.label] != \"\") {\n                        flag = true;\n                    }\n                });\n\n                if (flag) {\n                    cleanData.push(value);\n                }\n            });\n            $scope.sampledata.values = cleanData;\n\n        } else if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"relation\") {\n            //\n\n\n        }\n\n    });\n\n\n};\n\nfgpWidgetChartTable.buildFactory = function buildFactory () {\n    fgpWidgetChartTable.instance = new fgpWidgetChartTable();\n    return fgpWidgetChartTable.instance;\n};\n\n/**\n * Created by ericwang on 10/06/2016.\n */\n// angular module\nangular$1.module('fgp-kit', ['ngMap','ui.router']).service('dataService', dataAccessApi.buildFactory)\n    .filter('removeSlash', function () {\n        return function (input) {\n            if (input.startsWith(\"/\")) {\n                return input.substring(1, input.length);\n            }\n            return input;\n        }\n    })\n    .factory('$graphstorage', ['$window', function($window) {\n    return {\n        setTree: function(key, value) {\n            $window.localStorage[key] = JSON.stringify(value);\n        },\n        getTree: function(key) {\n            return JSON.parse($window.localStorage[key]) || false;\n        },\n        addTree: function (key,value) {\n            if($window.localStorage[key]){\n                var trees = JSON.parse($window.localStorage[key]);\n                trees.push(value);\n                this.setTree(key,trees);\n            }else{\n                this.setTree(key, [value]);\n            }\n        },\n        clear: function(){\n            $window.localStorage.clear();\n        }\n    }\n    }])\n    .directive('fgpContainer', fgpStage.buildFactory)\n    .directive('widgetContainer', fgpWidgetContainer.buildFactory)\n    .directive('widgetGraph', fgpWidgetGraph.buildFactory)\n    .directive('widgetPageTitle', fgpWidgetPageTitle.buildFactory)\n    .directive('widgetMap', fgpWidgetMap.buildFactory)\n    .directive('widgetStatus', fgpStage.buildFactory)\n    .directive('widgetDeviceDetail', fgpWidgetDeviceDetail.buildFactory)\n    .directive('widgetDeviceSpan', fgpWidgetSpan.buildFactory)\n    .directive('widgetPie', fgpWidgetPie.buildFactory)\n    .directive('widgetDockerButton', fgpDockerButton.buildFactory)\n    .directive('widgetRepeatContainer', fgpWidgetRepeatContainer.buildFactory)\n    .directive('widgetImage', fgpImage.buildFactory)\n    .directive('widgetIcon', fgpIcon.buildFactory)\n    .directive('widgetAppContainer', fgpWidgetAppContainer.buildFactory)\n    .directive('widgetChartTable', fgpWidgetChartTable.buildFactory)\n    .directive('emitLastRepeaterElement', [function () {\n        return function (scope) {\n            if (scope.$last) {\n                scope.$emit('LastRepeaterElement');\n            }\n        };\n    }]).filter('tableformatter', ['$filter', function ($filter) {\n    return function (input, obj, field, formatter) {\n        if (formatter) {\n            if (obj[field]) {\n                if (\"date\" == formatter) {\n                    return $filter('date')(new Date(obj[field]), 'd/M/yy h:mm a');\n                } else {\n                    return input;\n                }\n            }\n        } else {\n            return input;\n        }\n    };\n}]);\nvar index = 'fgp-kit';\n\nreturn index;\n\n})));\n\n//# sourceMappingURL=fgp.kit.bundle.js.map\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["fgp.kit.bundle.js"],"names":["global","factory","exports","module","require","define","amd","fgp_kit","angular","$","Dygraph","ngmap","chartJS","this","angular$1","chart_js","fgpStage","scope","applicationName","deviceName","server","configuration","scatterColors","standalone","replace","restrict","prototype","template","controller","$scope","$element","$timeout","$rootScope","$compile","dataService","$interval","showdata","length","setColors","graphBindingArray","$on","evt","msg","push","forEach","item","id","items","element","find","children","item_new","currentElement","attr","groupItems","dulpItem","findChild4Repeat","param","config","callback","metadata","data","datasource","style","key","from","parentId","parentHtmlObj","arrayItems","newId","i","parent","currentItem","html_render","repeat","append","findChild","sendDeviceData","deviceInfo","then","$broadcast","device","graph","graphs","buildFactory","instance","dataAccessApi","$http","$q","$cacheFactory","_$http","_$q","indexCache","deviceStores","_$interval","host","deviceKey","deferred","defer","url","ajaxSettings","async","ajax","type","contentType","success","types","Object","defineProperty","name","get","result","field","error","e","reject","console","log","message","resolve","promise","deviceInitInfo","application","storeSchema","rangeLevel","otherLevels","fields","params","concat","cache","response","childrenDeviceInitInfo","relationType","relationDeviceType","fillChildrenTree","buckets","tree","showData","value","flag","info","fillTree","size","calTree","start","end","filter","elem","devicesStoreData","store","bucketsData","devicesNullBucket","index","bucketKeys","nullBucket","bucket","post","JSON","stringify","deviceData","currentBucketShowData","deviceStoreData","defaultColors","this$1","colors","co","lor","Math","floor","random","healthcheck","autoUpdateGraph","schema","count","fetcher","last","interval","trees","frequency","timeKey","devices","graphData","$inject","fgpWidgetContainer","attrs","hasOwnProperty","showTitle","element_id","dom_show","dom_show_notitle","widgetData","$emit","css","color","width","border","background","title","show","source","parse","fgpWidgetGraph","$filter","$location","$stateParams","_dataService","dom_loading","dom_legend","dom_empty_data","dom_alert_info","dom_datetime_interval","dom_series_list","dom_real_time_grap","html","link","status","timeOut","completionPercent","getData","numSeries","numRows","labels","initDate","Date","j","getTime","val","sampleData","movePan","event","g","context","side","dragEndX","dragGetX_","dragEndY","dragGetY_","is2DPan","pixelsDragged","dragStartY","axis","axes_","axis_data","axes","unitsDragged","unitsPerPixel","boundedValue","boundedValues","maxValue","initialTopValue","min","minValue","dragValueRange","attributes_","getForAxis","valueWindow","pow","LOG_SCALE","valueRange","minDate","initialLeftmostDate","dragStartX","xUnitsPerPixel","boundedDates","max","maxDate","dateRange","zoomRange","xAxisZoomRange","getOptionForAxis","dateWindow_","drawGraph_","offsetToPercentage","offsetX","offsetY","xOffset","toDomCoords","xAxisRange","yar0","yAxisRange","yOffset","x","y","w","h","xPct","yPct","zoom","zoomInPercentage","xBias","yBias","direction","basicInfo","adjustAxis","bias","delta","increment","foo","yAxes","newYAxes","numAxes","ranges","range","newZoomRange","xAxisExtremes","updateOptions","dateWindow","canScroll","timer","mouseOverHandler","cancel","mouseEnterHandler","mouseOutHandler","scroll","normal","WheelEvent","detail","deltaY","wheelDelta","percentage","layerX","target","offsetLeft","layerY","offsetTop","percentages","plotter_","area","cancelEvent","chartDateWindow","firstPoint","mousedownHandler","initializeMouseDown","clientX","startPan","mousemoveHandler","isPanning","currentChart","mouseupHandler","endPan","interactionModel","mousewheel","DOMMouseScroll","wheel","mousedown","mousemove","mouseenter","mouseup","mouseout","drawGapEdgePoints","pointSize","legend","labelsKMB","labelsSeparateLines","drawPoints","drawAxesAtZero","labelsDivStyles","text-align","position","display","yRangePad","ylabel","xlabel","series","Device0","Device4","axisLabelWidth","y2","valueFormatter","moment","format","pointClickCallback","p","currentView","showOne","drawCallback","isInit","refersh","plugins","Plugins","Crosshair","timer_auto","process_bar_timer","on","tempConifg","realTimeGraph","currentChartOptions","file","auto_device_name","auto_schema","auto_store","auto_fields","graph_data","worker","deviceConfig","auto_metadata","groups","collections","allLines","yRanges","collection","line","timestamp","showY2axis","rows","row","label","yaxis","f","Function","counter","realLine","ex","yrange","newLines","copy","NaN","perInterval","showRealTimeGraph","modal","range_show","rangeSelectorBar","xAxisHeight","drawAxis","showRangeSelector","rangeSelectorHeight","finalDateRagne","chartDateTime","begin","finalDateRange","child","synchronize","selection","childrenChart","$window","elementId","emptyDataShow","alertMessage","showY2Btns","legendText","legendText_device","legendText_datetime","legendText_column","legendText_value","legendColor","autoupdate","dateTimeIntervals","darkenColor","colorStr","toRGB_","r","b","barChartPlotter","ctx","drawingContext","points","y_bottom","dygraph","toDomYCoord","fillStyle","min_sep","Infinity","sep","canvasx","bar_width","center_x","fillRect","canvasy","strokeRect","basic","checked","currentIntervalChoosed","changeInterval","rangeConfig","loadingShow","intevals","height","begin_path","end_path","init_flag","fixInterval","noneFixed","fixGraphWithGap","currentInterval","currentIntervalName","fixed","tempDate","obj","labels_","file_","showOrHideDevice","childrenDevices","setVisibility","fixGraphWithGap_click","parent_container","data_from","checkY2Btns","$watch","nObj","oObj","level","patt","RegExp","lines","columns","match","column","startsWith","initChart","relation","relation_group","initChildrenChart","newValue","oldValue","expect_points","expectedInterval","conf","preOne","lastOne","cin","arr","Array","apply","slice","series_range","l0","rangeBarLabels","objNeed2Add","dataLength","tempObj","sort","a","rangeSeries","currentStore","childTrees","updateChildrenDetailChart","rangeChildrenData","updateDetailChart","rangeData","group","fetchData","values","node","array","ordinalRangeData","intevalforshow","rangeTree","allData","first","newData","thePoint","updateChart","deviceDatas","devicesInfo","deviceObj","updateChildrenChart","relationConfig","leftAndRight","left","leftYAxis","right","rightYAxis","allXLabels","yRange","toString","substr","originalData","plotter","odata","childrenRangeConfig","highlightSeriesOpts","strokeWidth","strokeBorderWidth","highlightCircleSize","y2label","highlightCallback","pts","seriesName","sn","point_show","xval","yval","point","legendbox","$apply","legendTop","legendLeft","unhighlightCallback","axisLabelFormatter","d","newTime","tempData","tempTime","dateTime","indexOf","chartData","nt","timeTicket","lineData","autoUpdateChart","rangeSeriesNumber","Number","open","lastIndexOf","btntimer","btnZoomInVLeft","btnZoomOutVLeft","btnZoomInVRight","btnZoomOutVRight","btnPanVULeft","btnPanVDLeft","btnPanVURight","btnPanVDRight","btnpanleft","panRange","pan_delta","startDate","endDate","btnpanright","btnzoomin","rangeStart","rangeEnd","btnzoomout","init","fgpWidgetPageTitle","minHeight","subtitle","text","fgpWidgetMap","location","markers","details","$parent","latitude","longitude","center","fgpWidgetDeviceDetail","fgpWidgetSpan","fgpWidgetPie","chart","Chart","datasets","backgroundColor","options","responsive","maintainAspectRatio","animation","pieData","update","fgpDockerButton","show_dom","stats","confData","repeateId","pageDevice","container","checkShow","button","shown","buttons","split","healthinfo","action","method","func","script","relationship","successCallback","errorCallback","fgpWidgetRepeatContainer","$websocket","labelstyle","listStyle","deviceType","dataStream","port","onMessage","backData","State","Health","Status","fgpImage","fgpIcon","icon","content","desc","fgpWidgetAppContainer","containers","containerswithTimeout","showstyle","pp","gotoContainer","showLabel","app","timer_index","t","newTimer","splice","itemIndex","fgpWidgetChartTable","chartId","sampledata","collectionName","groupName","formatter","record","cleanData","service","input","substring","setTree","localStorage","getTree","addTree","clear","directive","$last"],"mappings":"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","file":"fgp.kit.bundle.min.js","sourcesContent":["/**\n * fgp-kit\n * @version 1.0 - Homepage <http://www.future-grid.com.au>\n * @copyright (c) 2013-2016 Eric.Wang <flexdeviser@gmail.com>\n * @license Apache2. \n * @overview fgp.kit.js is a useful toolkit for future-grid's clients.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular'), require('jquery'), require('dygraphs'), require('ngmap'), require('chart.js')) :\n    typeof define === 'function' && define.amd ? define(['angular', 'jquery', 'dygraphs', 'ngmap', 'chart.js'], factory) :\n    (global.fgp_kit = factory(global.angular,global.$,global.Dygraph,global.ngmap,global.chartJS));\n}(this, (function (angular$1,$,Dygraph,ngmap,chart_js) {\n\nangular$1 = 'default' in angular$1 ? angular$1['default'] : angular$1;\n$ = 'default' in $ ? $['default'] : $;\nDygraph = 'default' in Dygraph ? Dygraph['default'] : Dygraph;\n\n/**\n * Created by ericwang on 10/06/2016.\n */\nvar fgpStage = function fgpStage() {\n    this.scope = {\n        applicationName: \"=\",\n        deviceName: \"=\",\n        server: \"=\",\n        configuration: '=',\n        scatterColors: \"=\",\n        standalone: \"=\"\n    };\n    this.replace = true;\n    this.restrict = 'A';\n};\n\nfgpStage.prototype.template = function template () {\n    return '<div id=\"pageStage\" class=\"wrapper col-md-12 col-xl-12\" style=\"background-color: #fff;height:100%;padding: 0px;\">' +\n        '</div>';\n};\n\nfgpStage.prototype.controller = function controller ($scope, $element, $timeout, $rootScope, $compile, dataService, $interval) {\n    $scope.showdata = {};\n\n    if ($scope.scatterColors && $scope.scatterColors.length > 0) {\n        dataService.setColors($scope.scatterColors);\n    }\n\n\n    $rootScope['applicationName'] = $scope.applicationName;\n    $rootScope['host'] = $scope.server;\n    $rootScope['device'] = $scope.deviceName;\n    $rootScope['standalone'] = $scope.standalone;\n\n\n    var graphBindingArray = [];\n\n    $scope.$on('bindChildChartEvent', function (evt, msg) {\n        graphBindingArray.push(msg);\n    });\n\n    $scope.$on('bindChildRepeatEvent', function (evt, msg) {\n        angular$1.forEach($scope.configuration, function (item) {\n            if (item.id == msg.id) {\n                var items = angular$1.element(\"body\").find(\"#\" + item.id).children();\n                angular$1.forEach(items, function (item_new) {\n                    $scope.showdata[item_new.id] = item;\n                    var currentElement = angular$1.element(item_new);\n                    if (currentElement.attr(\"dulp\")) {\n                        var groupItems = angular$1.element(\"body\").find(\"div[dulp='\" + item.id + \"']\");\n                        angular$1.forEach(groupItems, function (dulpItem) {\n                            findChild4Repeat(item.id, angular$1.element(dulpItem), $scope.configuration, item_new.id);\n                        });\n                    }else{\n                        findChild4Repeat(item.id, currentElement, $scope.configuration, item_new.id);\n                    }\n                });\n            }\n        });\n    });\n\n    $scope.$on('listStyleEvent', function (evt, param) {\n        var config = $scope.showdata[param.id.replace(\"edit\", \"\")];\n        param.callback(config.metadata.data.datasource.style);\n    });\n\n\n    $scope.$on('fetchWidgetMetadataEvent', function (evt, msg) {\n        angular$1.forEach($scope.showdata, function (metadata, key) {\n            if (key == msg.id) {\n                msg.callback({data: metadata, from: 'show'});\n                return;\n            }\n        });\n    });\n\n\n    function findChild4Repeat(parentId, parentHtmlObj, arrayItems, newId) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n\n                $scope.showdata[id] = arrayItems[i];\n                if (parentHtmlObj.attr(\"repeat-id\")) {\n                    $scope.repeat = parentHtmlObj.attr(\"repeat-id\");\n                }\n                if (parentHtmlObj.find('#edit' + parentId).find(\"#\" + id).length == 0) {\n                    parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                }\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems);\n            }\n            else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                findChild4Repeat(arrayItems[i].id, currentItem, arrayItems);\n            }\n        }\n    }\n\n    function findChild(parentId, parentHtmlObj, arrayItems) {\n\n        for (var i = 0; i < arrayItems.length; i++) {\n            if ('edit' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#edit' + parentId).append($compile(currentItem)($scope));\n                findChild(arrayItems[i].id, currentItem, arrayItems);\n            } else if ('detail_status_' + parentId === arrayItems[i].parent) {\n                var currentItem = angular$1.element(arrayItems[i].html_render);\n                var id = arrayItems[i].id;\n                $scope.showdata[id] = arrayItems[i];\n                parentHtmlObj.find('#detail_status_' + parentId).append($compile(currentItem)($scope));\n                findChild(arrayItems[i].id, currentItem, arrayItems);\n            }\n        }\n    }\n\n    angular$1\n        .forEach($scope\n\n                .configuration\n            ,\n            function (item) {\n                if ('workingArea' === item.parent) {\n                    var currentItem = angular$1.element(item.html_render);\n                    $scope.showdata[item.id] = item;\n                    $element.append($compile(currentItem)($scope));\n                    findChild(item.id, currentItem, $scope.configuration);\n                }\n            }\n        )\n    ;\n\n    var\n        sendDeviceData = function () {\n            dataService.deviceInfo($scope.server, $scope.deviceName, null, $scope.applicationName).then(function (data) {\n                // send device info to all widget\n                $timeout(function () {\n                    $scope.$broadcast('deviceInfoEvent', {device: data, from: 'application'});\n                });\n            });\n        };\n\n    /**\n     * get device information\n     */\n    if ($scope.deviceName && $scope.deviceName != \"\" && \"undefined\" != $scope.deviceName) {\n        // first time\n        sendDeviceData();\n\n        // after every 30 seconds\n        // $interval(function () {\n        // sendDeviceData();\n        // }, 30000);\n    }\n\n\n// all item created;\n    $timeout(function () {\n        angular$1.forEach(graphBindingArray, function (graph) {\n            $scope.$broadcast('bindFatherGraphEvent', {parent: graph.graphs, children: graph.children});\n        });\n    });\n};\n\n\nfgpStage.buildFactory = function buildFactory () {\n    fgpStage.instance = new fgpStage();\n    return fgpStage.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar dataAccessApi = function dataAccessApi($http, $q, $cacheFactory, $interval) {\n    this._$http = $http;\n    this._$q = $q;\n    // get cache\n    this.indexCache = $cacheFactory('indexCache');\n    this.deviceStores = $cacheFactory('deviceStores');\n    this._$interval = $interval;\n};\n\n\n/**\n * sync using JQuery\n * @param deviceName\n * @param deviceKey\n * @param applicationName\n * @returns {*}\n */\ndataAccessApi.prototype.deviceInfo = function deviceInfo (host, deviceName, deviceKey, applicationName) {\n    var deferred = this._$q.defer();\n    var url = host + \"/rest/api/\";\n\n    if (applicationName) {\n        url += \"app/\" + applicationName;\n    }\n\n    if (deviceName) {\n        url += '/devices/' + deviceName;\n    } else if (deviceKey) {\n        url += 'devices?key=' + deviceKey;\n    }\n\n    $.ajaxSettings.async = false;\n    $.ajax({\n        type: 'GET',\n        url: url,\n        contentType: \"application/json\",\n        success: function (data) {\n            var url = host + \"/rest/api/\";\n            if (applicationName) {\n                url += \"app/\" + applicationName + \"/devices/extension-types?device_type=\";\n            } else {\n                url += \"devices/extension-types?device_type=\";\n            }\n            $.ajaxSettings.async = false;\n            $.ajax({\n                type: 'GET',\n                url: url + data.type,\n                contentType: \"application/json\",\n                success: function (types) {\n                    angular$1.forEach(types, function (type) {\n                        Object.defineProperty(data, type.name, {\n                            get: function () {\n                                var result = null;\n                                var url = host + \"/rest/api/\";\n                                if (applicationName) {\n                                    url += \"app/\" + applicationName + \"/devices/extensions?device_name=\";\n                                } else {\n                                    url += \"devices/extensions?device_name=\";\n                                }\n                                $.ajaxSettings.async = false;\n                                $.ajax({\n                                    type: 'GET',\n                                    url: url + this.name + '&extension_type=' + type.name,\n                                    contentType: \"application/json\",\n                                    success: function (field) {\n                                        result = field;\n                                    },\n                                    error: function (e) {\n                                        deferred.reject(e);\n                                    }\n                                });\n                                return result;\n                            }\n                        });\n                    });\n                },\n                error: function (e) {\n                    console.log(e.message);\n                }\n            });\n\n            deferred.resolve(data);\n        },\n        error: function (e) {\n            deferred.reject(e);\n        }\n    });\n    return deferred.promise;\n};\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.deviceInitInfo = function deviceInitInfo (host, application, deviceKey, storeSchema, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {'otherLevels': otherLevels, 'fields': [].concat(fields)}, cache: this.deviceStores\n    }).then(\n        function (response) {\n            deferred.resolve(response.data);\n        },\n        function (response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\n/**\n *\n * @param application\n * @param deviceKey\n * @param storeSchema\n * @returns {Promise}\n */\ndataAccessApi.prototype.childrenDeviceInitInfo = function childrenDeviceInitInfo (host, application, deviceKey, storeSchema, relationType, relationDeviceType, rangeLevel, otherLevels, fields) {\n    var deferred = this._$q.defer();\n    this._$http.get(host + '/rest/api/app/' + application + '/store/index/children/' + deviceKey + '/' + storeSchema + '/' + rangeLevel, {\n        params: {\n            relationType: relationType,\n            relationDeviceType: relationDeviceType,\n            otherLevels: otherLevels,\n            fields: [].concat(fields)\n        },\n        cache: this.deviceStores\n    }).then(\n        function (response) {\n            deferred.resolve(response.data);\n        },\n        function (response) {\n            deferred.reject(response.data);\n        }\n    );\n    return deferred.promise;\n};\n\n\ndataAccessApi.prototype.fillChildrenTree = function fillChildrenTree (buckets, tree, showData) {\n\n    if (tree.children[0] != null) {\n        fillChildrenTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillChildrenTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n\n        angular$1.forEach(buckets, function (value, key) {\n            if (key == tree.id && value != null) {\n                tree.data = value;\n                tree['size'] = value.length;\n\n                var flag = false;\n                angular$1.forEach(showData, function (data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        tree['size'] = value.length;\n                        flag = true;\n                    }\n                });\n\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n};\n\n\ndataAccessApi.prototype.fillTree = function fillTree (buckets, tree, showData) {\n    if (tree.children[0] != null) {\n        fillTree(buckets, tree.children[0], showData);\n    }\n\n    if (tree.children[1] != null) {\n        fillTree(buckets, tree.children[1], showData);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        angular$1.forEach(buckets, function (value, key) {\n            if (key == tree.id) {\n                tree.data = value;\n                tree['size'] = value.size;\n                var flag = false;\n                angular$1.forEach(showData, function (data) {\n                    if (data.id == tree.id) {\n                        data.data = tree.data;\n                        data['size'] = tree.size;\n                        flag = true;\n                    }\n                });\n                if (!flag) {\n                    console.info(\"error:\" + key);\n                }\n            }\n        });\n    }\n\n};\n\ndataAccessApi.prototype.calTree = function calTree (buckets, tree, start, end) {\n    if (tree.children[0] != null) {\n        calTree(buckets, tree.children[0], start, end);\n    }\n\n    if (tree.children[1] != null) {\n        calTree(buckets, tree.children[1], start, end);\n    }\n\n    if (tree.children[0] == null && tree.children[1] == null) {\n        // is overlap?\n        if (((start >= tree.start) && start < tree.end)\n            ||\n            ((start > tree.start) && start <= tree.end)\n            ||\n            ((tree.start >= start) && tree.start < end)\n            ||\n            ((tree.start > start) && tree.start <= end)) {\n            if (buckets.filter(function (elem) {\n                    return elem.id == tree.id\n                }).length == 0) {\n                buckets.push(tree);\n            }\n        }\n    }\n};\n\n\n/**\n *\n * @param application\n * @param deviceInfo deviceKey and tree\n * @param storeSchema\n * @param store\n * @param start\n * @param end\n */\ndataAccessApi.prototype.devicesStoreData = function devicesStoreData (host, application, deviceInfo, storeSchema, store, start, end, fields) {\n\n    var bucketsData = [];\n    var devicesNullBucket = [];\n    var calTree = this.calTree;\n    var fillChildrenTree = this.fillChildrenTree;\n    angular$1.forEach(deviceInfo, function (device, index) {\n        var bucketKeys = [];\n        calTree(bucketKeys, device.tree, start, end);\n        var nullBucket = [];\n        // get null buckets\n        angular$1.forEach(bucketKeys, function (bucket) {\n            if (bucket.data == null) {\n                nullBucket.push(bucket.id);\n            }\n        });\n        if (nullBucket.length != 0) {\n            devicesNullBucket.push({device: device.name, nullBucket: nullBucket});\n        }\n        bucketsData.push({device: device.name, data: bucketKeys});\n    });\n\n    if (devicesNullBucket.length == 0) {\n        // get data from rest service\n        var deferred = this._$q.defer();\n        deferred.resolve(bucketsData);\n        return deferred.promise;\n    } else {\n        // get data from rest service\n        var deferred = this._$q.defer();\n        this._$http.post(host + '/rest/api/app/' + application + '/store/index/devices/store/data/' + storeSchema + '/' + store,\n            {'bucketKeys': JSON.stringify(devicesNullBucket), 'fields': JSON.stringify(fields)}\n        ).then(\n            function (response) {\n                // response.data\n                angular$1.forEach(response.data, function (deviceData) {\n\n                    var currentBucketShowData = null;\n                    angular$1.forEach(bucketsData, function (showData) {\n                        if (showData.device == deviceData.device) {\n                            currentBucketShowData = showData.data; //  bucketKeys\n                            angular$1.forEach(deviceInfo, function (device, index) {\n                                if (deviceData.device == device.name) {\n                                    fillChildrenTree(deviceData.data, device.tree, currentBucketShowData);\n                                }\n                            });\n                        }\n                    });\n\n                });\n                // fill bucketKeys\n                deferred.resolve(bucketsData);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n};\n\n\ndataAccessApi.prototype.deviceStoreData = function deviceStoreData (host, application, deviceKey, storeSchema, store, tree, start, end, fields) {\n    var fillTree = this.fillTree;\n    var calTree = this.calTree;\n    var bucketKeys = [];\n    calTree(bucketKeys, tree, start, end);\n    var nullBucket = [];\n    // get null buckets\n    angular$1.forEach(bucketKeys, function (bucket) {\n        if (bucket.data == null) {\n            nullBucket.push(bucket.id);\n        }\n    });\n\n    if (nullBucket.length == 0) {\n        // send rest request\n        var deferred = this._$q.defer();\n        deferred.resolve(bucketKeys);\n        return deferred.promise;\n    } else {\n        // send rest request\n        var deferred = this._$q.defer();\n        this._$http.get(host + '/rest/api/app/' + application + '/store/index/store/data/' + deviceKey + '/' + storeSchema + '/' + store, {\n            params: {\n                bucketKeys: nullBucket,\n                fields: [].concat(fields)\n            }\n        }).then(\n            function (response) {\n                fillTree(response.data, tree, bucketKeys);\n                // fill bucketKeys\n                deferred.resolve(bucketKeys);\n            },\n            function (response) {\n                deferred.reject(response.data);\n            }\n        );\n        return deferred.promise;\n    }\n\n\n};\n\ndataAccessApi.prototype.defaultColors = function defaultColors () {\n        var this$1 = this;\n\n    if (!this.colors) {\n        this['colors'] = [];\n        for (var i = 0; i < 300; i++) {\n            this$1.colors.push('#' + (function co(lor) {\n                    return (lor +=\n                        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                    && (lor.length == 6) ? lor : co(lor);\n                })(''));\n        }\n    }\n    return this.colors;\n};\n\ndataAccessApi.prototype.setColors = function setColors (colors) {\n    this.colors = colors;\n};\n\n\n/**\n * device id\n * @param id\n */\ndataAccessApi.prototype.healthcheck = function healthcheck (application, id) {\n\n    if (id = null || id == \"\") {\n        return;\n    }\n    this._$http.get('/rest/api/app/' + application + '/docker/healthcheck/reports?id=' + id)\n        .success(function (response) {\n            console.info(response);\n            return response;\n        });\n\n\n};\n\n\ndataAccessApi.prototype.autoUpdateGraph = function autoUpdateGraph (application, device, schema, store, fields, count, callback) {\n    var _$interval = this._$interval;\n    var _$http = this._$http;\n    var fetcher = null;\n    this._$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n        .success(function (response) {\n            var last = -1;\n            var interval = -1;\n            if (response.trees && response.trees.length === 1) {\n                interval = response.trees[0].frequency;\n                last = response.trees[0].last.timeKey;\n            }\n            if (interval != -1) {\n                var start = last - (count * interval);\n                var end = last;\n                // first time\n                _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                    params: {\n                        \"devices\": JSON.stringify([device]),\n                        \"fields\": JSON.stringify(fields),\n                        \"start\": start,\n                        \"end\": end\n                    }\n                }).success(function (graphData) {\n\n                    // start task\n                    fetcher = _$interval(function () {\n                        _$http.get('/rest/api/app/' + application + '/store/index/' + device + '/' + schema + '/' + store)\n                            .success(function (response) {\n                                if (response.trees && response.trees.length === 1) {\n                                    last = response.trees[0].last.timeKey;\n                                    start = last - (count * interval);\n                                    end = last;\n                                    _$http.get('/rest/api/app/' + application + '/store/devices/store/data/' + schema + '/' + store, {\n                                        params: {\n                                            \"devices\": JSON.stringify([device]),\n                                            \"fields\": JSON.stringify(fields),\n                                            \"start\": start,\n                                            \"end\": end\n                                        }\n                                    }).success(function (graphData) {\n                                        // put the data back\n                                        callback(graphData[device], null, interval);\n                                    });\n                                }\n                            });\n                    }, interval);\n\n                    // put the data back\n                    callback(graphData[device], fetcher, interval);\n                });\n            }\n        });\n\n};\n\n\ndataAccessApi.buildFactory = function buildFactory ($http, $q, $cacheFactory, $interval) {\n    dataAccessApi.instance = new dataAccessApi($http, $q, $cacheFactory, $interval);\n    return dataAccessApi.instance;\n};\n\ndataAccessApi.$inject = ['$http', '$q', '$cacheFactory', '$interval'];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetContainer = function fgpWidgetContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"padding: 0px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}}\">{{css.title.text}}</div>' +\n        '<div class=\"panel-body\" id=\"edit' + element_id + '\" style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n\n};\n\nfgpWidgetContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n    if (metadata.data) {\n        $scope.data[\"source\"] = metadata.data.source;\n        if ($scope.data && $scope.data.source.device && $scope.data.source.device != -1) {\n\n            if ($scope.data.source.device) {\n                /**\n                 * get device information\n                 */\n                dataService.deviceInfo($rootScope.host, JSON.parse($scope.data.source.device).name, null, $rootScope.applicationName).then(function (data) {\n                    // send device info to all widget\n                    $timeout(function () {\n                        $rootScope.$broadcast('deviceInfoEvent', {device: data, from: element_id});\n                    });\n                });\n            }\n\n        }\n    }\n\n};\n\n\nfgpWidgetContainer.buildFactory = function buildFactory () {\n    fgpWidgetContainer.instance = new fgpWidgetContainer();\n    return fgpWidgetContainer.instance;\n};\n\nfgpWidgetContainer.$inject = [];\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetGraph = function fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n    this._dataService = dataService;\n    this._$interval = $interval;\n};\n\nfgpWidgetGraph.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    if (flag) {\n        var dom_loading = '<div ng-show=\"loadingShow\" id=\"loading_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\">' +\n            '<div class=\"rect1\"></div>' +\n            '<div class=\"rect2\"></div>' +\n            '<div class=\"rect3\"></div>' +\n            '<div class=\"rect4\"></div>' +\n            '<div class=\"rect5\"></div>' +\n            '</div></div>';\n\n\n        var dom_legend = '<li>{{legendText_device}}</li><li>{{legendText_datetime}}</li><li><label style=\"color: {{legendColor}}\">{{legendText_column}}</label>:{{legendText_value}}</li>';\n\n        var dom_empty_data = '<div ng-show=\"emptyDataShow\" id=\"emptydata_' + attrs.id + '\" style=\"width: 100%;height:100%;position: absolute;background: rgba(255, 255, 255, 0.1);\" data-chartloading><div class=\"spinner\" style=\"width: 100%;\">' +\n            '<h1>Empty Data!</h1>' +\n            '</div></div>';\n\n        var dom_alert_info = '<span class=\"label label-warning\" ng-show=\"alertMessage\" style=\"color: #000;\">{{alertMessage}}</span>';\n\n        var dom_datetime_interval = '<div ng-show=\"rangeSelectorBar\" class=\"dropdown\"> <button class=\"btn btn-info dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">{{currentIntervalChoosed.name}}<span class=\"caret\"></span></button> <ul class=\"dropdown-menu\" style=\"font-size:12px;\"><li ng-repeat=\"interval in dateTimeIntervals\"><a href=\"javascript:;\" ng-click=\"changeInterval(interval)\">{{interval.name}}</a></li></ul> </div>';\n\n\n        var dom_series_list = '<div ng-show=\"currentView === 1\" class=\"dropdown\"> <button class=\"btn btn-warning dropdown-toggle badge\" type=\"button\" data-toggle=\"dropdown\">Devices<span class=\"caret\"></span></button> <ul class=\"dropdown-menu\" style=\"font-size:12px;\"><li ng-repeat=\"device in childrenDevices\"><input type=\"checkbox\" ng-click=\"showOrHideDevice(device)\" ng-checked=\"device.show\"/>{{device.name}}</li></ul> </div>';\n\n\n        var dom_real_time_grap = '<div class=\"modal fade \" id=\"real_time_graph_' + attrs.id + '\" role=\"dialog\">' +\n            '<div class=\"modal-dialog modal-lg\">' +\n            '<div class=\"modal-content\">' +\n            '<div class=\"col-md-12\"  style=\"padding-top:3px;height: 1px;background-color: #0e90d2;\" ng-style=\"{ \\'width\\': completionPercent + \\'%\\' }\"></div>' +\n            '<div class=\"modal-body\" style=\"width: 100%;height: 300px;\">' +\n            '<div class=\"real-time-graph\" style=\"width: 100%;height: 100%\"></div>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>';\n\n        var html = '<div id=\"legendbox' + attrs.id + '\" ng-show=\"legendText\" ng-style=\"{top:legendTop,left:legendLeft}\" style=\"border-radius:10px;background-color:#ffffff;position: absolute;border: 1px solid {{legendColor}};-moz-box-shadow: 5px 5px 5px #888888;box-shadow: 5px 5px 5px #888888;z-index: 99999999;margin-right: 5px;\"><ul style=\"list-style: none;list-style-position: inside;text-align: right;\">' + dom_legend + '</ul></div><div class=\"{{css.width}}\"><div class=\"col-md-12\" style=\"padding:0px;height:{{css.height}}px;-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\"><div class=\"row\"><div class=\"col-md-12\"><a class=\"tooltips btn btn-xs btn-info badge\" href=\"javascript:;\"  style=\"float: right;margin-right: 10px;\" ng-click=\"currentView = -currentView\"><i class=\"glyphicon glyphicon-transfer\"></i><span>Scatter View</span></a><a ng-show=\"autoupdate\" class=\"tooltips btn btn-xs btn-info badge\" style=\"float: right;margin-right: 10px;\" ng-click=\"showRealTimeGraph()\" data-toggle=\"modal\"><span>Auto Update</span><i class=\"glyphicon glyphicon-random\"></i></a><div style=\"float: right; margin-right: 10px;\">' + dom_series_list + '</div><div style=\"float: right; margin-right: 10px;\">' + dom_datetime_interval + '</div><div ng-hide=\"true\" class=\"checkbox\" style=\"float: right;margin-right: 10px; margin-bottom: 5px; margin-top: 0;\" ng-model=\"fixInterval\" ng-click=\"fixInterval=!fixInterval\"><label><input type=\"checkbox\" ng-model=\"fixInterval\" ng-clicked=\"fixInterval\" ng-change=\"fixGraphWithGap_click()\"/>fixed interval</label></div><div style=\"float: right; margin-right: 10px;\"><label class=\"label-inline\" ng-repeat=\"item in intevals.device\"><span class=\"badge\" style=\"background-color: {{ item.name == currentIntervalName ? \\'#009900;\\' : \\'\\'}}\">{{item.name}}</span></label></div><div style=\"float: right; margin-right: 10px;\">' + dom_alert_info + '</div></div></div><div style=\"position: relative;width: 100%;height:100%;\"><div style=\"position: absolute;left:25px;z-index: 999;\" ng-show=\"basicInfo.zoom\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVULeft()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDLeft()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVLeft()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVLeft()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div><div class=\"line-chart-graph\" style=\"width: 100%;height:100%;\"></div><div style=\"position: absolute;right:-15px;top:0px;z-index: 999;\" ng-show=\"checkY2Btns()\" class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVURight()\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnPanVDRight()\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomInVRight()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnZoomOutVRight()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div>' + dom_loading + dom_empty_data + '<div class=\"row\"><div class=\"col-md-12\" style=\"min-height: 30px;\"></div><div class=\"col-md-6\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[0] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-6\" style=\"text-align: right;\" ng-show=\"rangeSelectorBar\">{{chartDateWindow[1] | date : \\'dd/MM/yyyy HH:mm:ss\\'}}</div><div class=\"col-md-12\" style=\"min-height: 40px;position: relative\"><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;left: 20px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanleft()\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnpanright()\"><i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i></button></div><div class=\"range-selector-bar\" style=\"height: 0px;margin-top: 30px;width: 100%;position: absolute;\"></div><div class=\"btn-group btn-group-xs\" role=\"group\" style=\"position: absolute;right: -5px;\" ng-show=\"basicInfo.range_show\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomin()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button><button type=\"button\" class=\"btn btn-default\" ng-click=\"btnzoomout()\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button></div></div></div></div></div>' + dom_real_time_grap;\n\n        return html;\n    }\n};\n\nfgpWidgetGraph.prototype.link = function link (scope, element, attrs) {\n    scope['defaultColors'] = this._dataService.defaultColors();\n    var dataService = this._dataService;\n    var _$interval = this._$interval;\n    scope.status = true;\n    var timeOut = this.$timeout;\n    scope.completionPercent = 0;\n    this.$timeout(function () {\n        var getData = function (numSeries, numRows, name) {\n            var result = {labels: null, data: null};\n            var data = [];\n            var labels = [];\n            //init date\n            var initDate = new Date(\"2014/01/01 00:00:00\");\n            for (var j = 0; j < numRows; ++j) {\n                data[j] = [new Date(initDate.getTime() + 900000)];\n                initDate = new Date(initDate.getTime() + 900000);\n            }\n            for (var i = 0; i < numSeries; ++i) {\n                labels.push(name + i);\n                var val = 0;\n                for (var j = 0; j < numRows; ++j) {\n                    val += Math.random() - 0.5;\n                    data[j][i + 1] = val;\n                }\n            }\n            result.labels = labels;\n            result.data = data;\n            return result;\n        };\n\n\n        var sampleData = getData(1, 10, 'Device');\n\n        function movePan(event, g, context, side) {\n\n            context.dragEndX = Dygraph.dragGetX_(event, context);\n            context.dragEndY = Dygraph.dragGetY_(event, context);\n\n\n            // y-axis scaling is automatic unless this is a full 2D pan.\n            if (context.is2DPan) {\n\n                var pixelsDragged = context.dragEndY - context.dragStartY;\n                // Adjust each axis appropriately.\n                if (side == \"r\") {\n                    var axis = g.axes_[0];\n                    var axis_data = context.axes[0];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[0] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 0)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else if (side == 'l') {\n                    var axis = g.axes_[1];\n                    var axis_data = context.axes[1];\n                    var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n                    var boundedValue = context.boundedValues ? context.boundedValues[1] : null;\n\n                    // In log scale, maxValue and minValue are the logs of those values.\n                    var maxValue = axis_data.initialTopValue + unitsDragged;\n                    if (boundedValue) {\n                        maxValue = Math.min(maxValue, boundedValue[1]);\n                    }\n                    var minValue = maxValue - axis_data.dragValueRange;\n                    if (boundedValue) {\n                        if (minValue < boundedValue[0]) {\n                            // Adjust maxValue, and recompute minValue.\n                            maxValue = maxValue - (minValue - boundedValue[0]);\n                            minValue = maxValue - axis_data.dragValueRange;\n                        }\n                    }\n                    if (g.attributes_.getForAxis(\"logscale\", 1)) {\n                        axis.valueWindow = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                        axis.valueRange = [Math.pow(Dygraph.LOG_SCALE, minValue),\n                            Math.pow(Dygraph.LOG_SCALE, maxValue)];\n                    } else {\n                        axis.valueWindow = [minValue, maxValue];\n                        axis.valueRange = [minValue, maxValue];\n                    }\n                } else {\n                    var minDate = context.initialLeftmostDate -\n                        (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n                    if (context.boundedDates) {\n                        minDate = Math.max(minDate, context.boundedDates[0]);\n                    }\n                    var maxDate = minDate + context.dateRange;\n                    if (context.boundedDates) {\n                        if (maxDate > context.boundedDates[1]) {\n                            // Adjust minDate, and recompute maxDate.\n                            minDate = minDate - (maxDate - context.boundedDates[1]);\n                            maxDate = minDate + context.dateRange;\n                        }\n                    }\n                    var zoomRange = g.xAxisZoomRange;\n                    if (g.xAxisZoomRange[0] instanceof Date) {\n                        zoomRange[0] = g.xAxisZoomRange[0].getTime();\n                    }\n                    if (g.xAxisZoomRange[1] instanceof Date) {\n                        zoomRange[1] = g.xAxisZoomRange[1].getTime();\n                    }\n\n                    if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                        return;\n                    }\n\n                    if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                        g.dateWindow_ = [Math.pow(Dygraph.LOG_SCALE, minDate),\n                            Math.pow(Dygraph.LOG_SCALE, maxDate)];\n                    } else {\n                        g.dateWindow_ = [minDate, maxDate];\n                    }\n                }\n            }\n            g.drawGraph_(false);\n        }\n\n\n        function offsetToPercentage(g, offsetX, offsetY) {\n            // This is calculating the pixel offset of the leftmost date.\n            var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n            var yar0 = g.yAxisRange(0);\n\n            // This is calculating the pixel of the higest value. (Top pixel)\n            var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n            // x y w and h are relative to the corner of the drawing area,\n            // so that the upper corner of the drawing area is (0, 0).\n            var x = offsetX - xOffset;\n            var y = offsetY - yOffset;\n\n            // This is computing the rightmost pixel, effectively defining the\n            // width.\n            var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n            // This is computing the lowest pixel, effectively defining the height.\n            var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n            // Percentage from the left.\n            var xPct = w == 0 ? 0 : (x / w);\n            // Percentage from the top.\n            var yPct = h == 0 ? 0 : (y / h);\n\n            // The (1-) part below changes it from \"% distance down from the top\"\n            // to \"% distance up from the bottom\".\n            return [xPct, (1 - yPct)];\n        }\n\n\n        function zoom(g, zoomInPercentage, xBias, yBias, direction, side) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n\n            function adjustAxis(axis, zoomInPercentage, bias) {\n                var delta = axis[1] - axis[0];\n                var increment = delta * zoomInPercentage;\n                var foo = [increment * bias, increment * (1 - bias)];\n                return [axis[0] + foo[0], axis[1] - foo[1]];\n            }\n\n            xBias = xBias || 0.5;\n            yBias = yBias || 0.5;\n            var yAxes = g.axes_;\n            var newYAxes = [];\n            for (var i = 0; i < g.numAxes(); i++) {\n                newYAxes[i] = adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n            }\n            if ('v' == direction) {\n                if ('l' == side) {\n                    yAxes[0]['valueRange'] = newYAxes[0];\n                    yAxes[0]['valueWindow'] = newYAxes[0];\n                } else if ('r' == side && g.numAxes() == 2) {\n                    yAxes[1]['valueRange'] = newYAxes[1];\n                    yAxes[1]['valueWindow'] = newYAxes[1];\n                }\n                g.drawGraph_(false);\n            } else {\n\n                var ranges = [];\n                angular$1.forEach(g.xAxisRange(), function (range) {\n                    if (range instanceof Date) {\n                        ranges.push(range.getTime());\n                    } else {\n                        ranges.push(range);\n                    }\n                });\n\n                var newZoomRange = adjustAxis(ranges, zoomInPercentage, xBias);\n                // do not bigger than range data\n                var zoomRange = [];\n                if (g.hasOwnProperty(\"xAxisZoomRange\") && g.xAxisZoomRange) {\n                    zoomRange[0] = g.xAxisZoomRange[0];\n                    zoomRange[1] = g.xAxisZoomRange[1];\n                } else {\n                    zoomRange[0] = g.xAxisExtremes()[0];\n                    zoomRange[1] = g.xAxisExtremes()[1];\n                }\n                if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] >= newZoomRange[1]) {\n                    return;\n                } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [zoomRange[0], newZoomRange[1]]\n                    });\n                } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                    g.updateOptions({\n                        dateWindow: [newZoomRange[0], zoomRange[1]]\n                    });\n                } else {\n                    g.updateOptions({\n                        dateWindow: newZoomRange\n                    });\n                }\n            }\n        }\n\n\n        var canScroll = false;\n\n        var timer = null;\n        var mouseOverHandler = function (e, g, context) {\n            //\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function () {\n                canScroll = true;\n            }, 1000);\n        };\n\n\n        var mouseEnterHandler = function (e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            //\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            timer = timeOut(function () {\n                canScroll = true;\n            }, 1000);\n        };\n\n        var mouseOutHandler = function (e, g, context) {\n            // set flag to false\n            if (timer != null) {\n                timeOut.cancel(timer);\n            }\n            canScroll = false;\n        };\n\n        var scroll = function (e, g, context) {\n\n            if ((scope.basicInfo && !scope.basicInfo.zoom) || !canScroll) {\n                return;\n            }\n\n            var normal;\n\n            if (e instanceof WheelEvent) {\n                normal = e.detail ? e.detail * -1 : e.deltaY / 40;\n            } else {\n                normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n            }\n\n            // For me the normalized value shows 0.075 for one click. If I took\n            // that verbatim, it would be a 7.5%.\n            var percentage = normal / 50;\n\n            if (!(e.offsetX && e.offsetY)) {\n                e.offsetX = e.layerX - e.target.offsetLeft;\n                e.offsetY = e.layerY - e.target.offsetTop;\n            }\n            var percentages = offsetToPercentage(g, e.offsetX, e.offsetY);\n            var xPct = percentages[0];\n            var yPct = percentages[1];\n            //\n            if (e.offsetX <= (g.plotter_.area.x)) {\n                // console.info(\"v\", \"l\")\n                // left zoom\n                zoom(g, percentage, xPct, yPct, 'v', 'l');\n            } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                // right zoom\n                // console.info(\"v\", \"r\")\n                zoom(g, percentage, xPct, yPct, 'v', 'r');\n            } else {\n                // middle zoom\n                // console.info(\"h\")\n                zoom(g, percentage, xPct, yPct, 'h', null);\n            }\n            Dygraph.cancelEvent(e);\n            timeOut(function () {\n                scope.chartDateWindow = g.xAxisRange();\n            });\n        };\n\n        var firstPoint = null;\n        var mousedownHandler = function (e, g, context) {\n            if (scope.basicInfo && !scope.basicInfo.zoom) {\n                return;\n            }\n            context.initializeMouseDown(e, g, context);\n            firstPoint = e.clientX;\n            Dygraph.startPan(e, g, context);\n        };\n        var mousemoveHandler = function (e, g, context) {\n            if (context.isPanning) {\n                if (e.offsetX <= (g.plotter_.area.x)) {\n                    movePan(e, g, context, 'r');\n                } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                    movePan(e, g, context, 'l');\n                } else {\n                    movePan(e, g, context, 'h');\n                }\n                timeOut(function () {\n                    scope.chartDateWindow = scope.currentChart.xAxisRange();\n                });\n            }\n        };\n\n\n        var mouseupHandler = function (e, g, context) {\n            if (context.isPanning) {\n                Dygraph.endPan(e, g, context);\n            }\n\n            canScroll = true;\n        };\n\n        var interactionModel = {\n            'mousewheel': scroll,\n            'DOMMouseScroll': scroll,\n            'wheel': scroll,\n            'mousedown': mousedownHandler,\n            'mousemove': mousemoveHandler,\n            'mouseenter': mouseEnterHandler,\n            'mouseup': mouseupHandler,\n            // 'mouseover': mouseOverHandler,\n            'mouseout': mouseOutHandler\n        };\n\n\n        //init configuration\n        var configuration = {\n            drawGapEdgePoints: true,\n            'pointSize': 3,\n            legend: 'follow',\n            labelsKMB: true,\n            labelsSeparateLines: true,\n            // data formate\n            labels: ['x'].concat(sampleData.labels),\n            // highlightSeriesOpts: {\n            // strokeWidth: 2,\n            // strokeBorderWidth: 1,\n            // highlightCircleSize: 2\n            // },\n            drawPoints: false,\n            drawAxesAtZero: false,\n            labelsDivStyles: {\n                'text-align': 'right',\n                'position': 'relative',\n                'display': 'inline-block'\n            },\n            yRangePad: 10,\n            // x label y label\n            ylabel: 'Value',\n            xlabel: 'Date',\n            colors: scope.defaultColors,\n            // multiple Y axis\n            series: {\n                'Device0': {\n                    axis: 'y2'\n                },\n                'Device4': {\n                    axis: 'y2'\n                }\n            },\n            // showRangeSelector: true,\n            axes: {\n                y: {\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                y2: {\n                    // set axis-related properties here\n                    'labelsKMB': true,\n                    valueRange: [0, 1],\n                    axisLabelWidth: 80\n                },\n                x: {\n                    // datetime format\n                    valueFormatter: function (y) {\n                        return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                    }\n                }\n            },\n            pointClickCallback: function (e, p) {\n                if (scope.currentView != -1) {\n                    scope.showOne(p.name);\n                }\n            },\n            drawCallback: function (g, isInit) {\n                if (scope.refersh) { // make sure \"scope.refersh\" doesn't call when the graph create first time.\n                    scope.refersh(g, isInit);\n                }\n            },\n            'interactionModel': interactionModel,\n            'plugins': [\n                new Dygraph.Plugins.Crosshair({\n                    direction: \"vertical\"\n                })\n            ]\n        };\n\n        scope.currentChart = new Dygraph(element.find(\"div[class='line-chart-graph']\")[0], sampleData.data, configuration);\n        element.find(\"canvas\").css(\"zIndex\", 99);\n\n        var timer_auto = null;\n        var process_bar_timer = null;\n        element.find(\"#real_time_graph_\" + attrs.id).on(\"hidden.bs.modal\", function () {\n            // put your default event here\n            _$interval.cancel(timer_auto);\n            _$interval.cancel(process_bar_timer);\n        });\n\n\n        //real-time-graph\n        element.find(\"#real_time_graph_\" + attrs.id).on('shown.bs.modal', function () {\n\n            var tempConifg = {\n                drawGapEdgePoints: true,\n                'pointSize': 3,\n                labelsKMB: true,\n                labelsSeparateLines: false,\n                drawPoints: false,\n                drawAxesAtZero: false,\n                labelsDivStyles: {\n                    'text-align': 'right',\n                    'position': 'relative',\n                    'display': 'inline-block'\n                },\n                // x label y label\n                ylabel: 'Value',\n                xlabel: 'Date',\n                colors: scope.defaultColors,\n                // multiple Y axis\n                series: {\n                    'Device0': {\n                        axis: 'y2'\n                    },\n                    'Device4': {\n                        axis: 'y2'\n                    }\n                },\n                // showRangeSelector: true,\n                axes: {\n                    y: {\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    y2: {\n                        // set axis-related properties here\n                        'labelsKMB': true,\n                        valueRange: [0, 1],\n                        axisLabelWidth: 80\n                    },\n                    x: {\n                        // datetime format\n                        valueFormatter: function (y) {\n                            return moment(y).format('DD/MM/YYYY HH:mm:ss'); //Hide legend label\n                        }\n                    }\n                },\n                interactionModel: {}\n            };\n\n            scope.realTimeGraph = new Dygraph(element.find(\"div[class='real-time-graph']\")[0], sampleData.data, tempConifg);\n            scope.realTimeGraph.updateOptions(scope.currentChartOptions);\n            scope.realTimeGraph.updateOptions({\"file\": []});\n\n            timer_auto = dataService.autoUpdateGraph(scope.applicationName, scope.auto_device_name, scope.auto_schema, scope.auto_store, scope.auto_fields, element.find(\"div[class='real-time-graph']\").width() / 4, function (graph_data, worker, interval) {\n                // update graph\n                var deviceConfig = scope.auto_metadata.data.groups[1];\n                var collections = deviceConfig.collections;\n                var labels = [];\n                var series = {};\n                var colors = [];\n                var allLines = [];\n                //0 for y  1 for y2\n                var yRanges = [{min: null, max: null}, {min: null, max: null}];\n                angular$1.forEach(collections, function (collection) {\n                    if (collection.name == scope.auto_store) {\n                        angular$1.forEach(graph_data.data, function (line) {\n                            allLines.push([new Date(line.timestamp)]);\n                        });\n\n                        var showY2axis = false;\n                        angular$1.forEach(collection.rows, function (row) {\n                            labels.push(row.label);\n                            colors.push(row.color);\n\n                            if (row.yaxis == 0) {\n                                series[row.label] = {'axis': 'y1'};\n                            } else {\n                                series[row.label] = {'axis': 'y2'};\n                                showY2axis = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                            // add value\n                            var counter = 0;\n                            angular$1.forEach(allLines, function (realLine) {\n                                try {\n                                    var value = f(graph_data.data[counter]);\n                                    realLine.push(value);\n                                    if (row.yaxis == 0) {\n                                        if (yRanges[0].min == null) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max == null) {\n                                            yRanges[0].max = value;\n                                        }\n\n                                        if (yRanges[0].min > value) {\n                                            yRanges[0].min = value;\n                                        }\n\n                                        if (yRanges[0].max < value) {\n                                            yRanges[0].max = value;\n                                        }\n                                    } else {\n                                        if (yRanges[1].min == null) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max == null) {\n                                            yRanges[1].max = value;\n                                        }\n\n                                        if (yRanges[1].min > value) {\n                                            yRanges[1].min = value;\n                                        }\n\n                                        if (yRanges[1].max < value) {\n                                            yRanges[1].max = value;\n                                        }\n                                    }\n                                } catch (ex) {\n                                    realLine.push(null);\n                                }\n                                counter++;\n                            });\n\n                        });\n\n                        angular$1.forEach(yRanges, function (yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.min) * 0.10;\n                            } else {\n                                yrange.min = yrange.min - (yrange.max - yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max - yrange.min) * 0.10;\n                            }\n                        });\n\n                        var newLines = [];\n                        if (!showY2axis) {\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function (line) {\n                                line.push(NaN);\n                            });\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: newLines,\n                                axes: {\n                                    y: {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                    y2: {valueRange: [yRanges[1].min, yRanges[1].max]}\n                                }\n                            });\n                        } else {\n                            // update graph\n                            scope.realTimeGraph.updateOptions({\n                                file: allLines,\n                                axes: {\n                                    y: {valueRange: [yRanges[0].min, yRanges[0].max]},\n                                    y2: {valueRange: [yRanges[1].min, yRanges[1].max]}\n                                }\n                            });\n                        }\n                    }\n                });\n                if (worker) {\n                    timer_auto = worker;\n                }\n\n\n                //\n                var perInterval = interval / 100;\n                var counter = 0;\n\n                if (process_bar_timer) {\n                    _$interval.cancel(process_bar_timer);\n                    counter = 0;\n                }\n\n                process_bar_timer = _$interval(function () {\n                    scope.completionPercent = counter;\n                    counter++;\n                }, perInterval, 100);\n\n\n            });\n        });\n\n\n        scope.currentChartOptions = {};\n\n        scope.showRealTimeGraph = function () {\n            element.find(\"#real_time_graph_\" + attrs.id).modal();\n        };\n\n\n        if (attrs.hasOwnProperty(\"shown\")) {\n\n\n            var basicInfo = scope.basicInfo;\n            if (basicInfo && basicInfo.range_show) {\n                scope.rangeSelectorBar = new Dygraph(element.find(\"div[class='range-selector-bar']\")[0], sampleData.data, {\n                        xAxisHeight: 0,\n                        axes: {\n                            x: {\n                                drawAxis: false\n                            }\n                        },\n                        showRangeSelector: true,\n                        rangeSelectorHeight: 30\n                    }\n                );\n                scope.chartDateWindow = scope.rangeSelectorBar.xAxisRange();\n            }\n\n\n            var status = false;\n            // add mouse up event to range select\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mouseup', function (event) {\n                status = false;\n                timeOut(function () {\n                    var finalDateRagne = scope.currentChart.xAxisRange();\n                    scope.chartDateTime = {begin: finalDateRagne[0], end: finalDateRagne[1]};\n                });\n            });\n\n            scope.$on('mouseUpMessage', function ($scope, e) {\n                if (\"mouseup\" === e.type && status) {\n                    status = false;\n                    timeOut(function () {\n                        var finalDateRange = scope.currentChart.xAxisRange();\n                        scope.chartDateTime = {begin: finalDateRange[0], end: finalDateRange[1]};\n                    });\n                }\n            });\n\n            scope.$on('bindFatherGraphEvent', function (event, data) {\n                angular$1.forEach(data.children, function (child) {\n                    if (child == attrs.id) {\n                        Dygraph.synchronize([scope.currentChart].concat(data.parent), {\n                            zoom: true,\n                            selection: false,\n                            range: false\n                        });\n                        scope.currentChart.updateOptions({\n                            drawCallback: function (g, isInit) {\n                                // console.info(\"refersh running!\" + \" is  Init?\"+ isInit);\n                                scope.refersh(g, isInit);\n                            }\n                        });\n\n                    }\n                });\n\n\n            });\n\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousemove', function (event) {\n                if (status) {\n                    timeOut(function () {\n                        scope.chartDateWindow = scope.currentChart.xAxisRange();\n                    });\n                }\n            });\n\n            element.find('.dygraph-rangesel-fgcanvas, .dygraph-rangesel-zoomhandle').on('mousedown', function (event) {\n                status = true;\n            });\n\n            //bind chart\n            if (basicInfo && basicInfo.childrenChart.length > 0) {\n                var param = {'graphs': [scope.currentChart], children: basicInfo.childrenChart};\n                if (scope.rangeSelectorBar) {\n                    param.graphs.push(scope.rangeSelectorBar);\n                }\n                scope.$emit('bindChildChartEvent', param);\n            }\n        }\n    }, 0);\n};\n\n//controller: ['$scope', '$element', '$window', '$interval', '$timeout', '$filter', '$location', function ($scope, $element, $window, $interval, $timeout, $filter, $location) {\nfgpWidgetGraph.prototype.controller = function controller ($scope, $element, $window, $interval, $timeout, $filter, $location, dataService, $rootScope, $stateParams) {\n    var element_id = $element.attr(\"id\");\n    $scope.elementId = element_id;\n\n    $scope['defaultColors'] = dataService.defaultColors();\n    var metadata = null;\n    var widgetData = null;\n    $scope.emptyDataShow = false;\n    // attributes----------------------\n    $scope.applicationName = $rootScope.applicationName;\n\n    $scope.alertMessage;\n\n    $scope.showY2Btns = false;\n\n    $scope.legendText = null;\n    $scope.legendText_device = null;\n    $scope.legendText_datetime = null;\n    $scope.legendText_column = null;\n    $scope.legendText_value = null;\n    $scope.legendColor = null;\n    $scope.autoupdate = false;\n    $scope.auto_device_name = \"\";\n    $scope.auto_schema = \"\";\n    $scope.auto_store = \"\";\n    $scope.auto_fields = [];\n    // default data-time intervals\n    $scope.dateTimeIntervals = [{name: \"5 minutes\", interval: 300000}, {\n        name: \"1 hour\",\n        interval: 3600000\n    }, {name: \"1 day\", interval: 86400000}, {name: \"1 week\", interval: 604800017}, {\n        name: \"1 month\",\n        interval: 2629800000\n    }, {name: \"1 year\", interval: 31557600000}];\n\n\n    var darkenColor = function (colorStr) {\n        // Defined in dygraph-utils.js\n        var color = Dygraph.toRGB_(colorStr);\n        color.r = Math.floor((255 + color.r) / 2);\n        color.g = Math.floor((255 + color.g) / 2);\n        color.b = Math.floor((255 + color.b) / 2);\n        return 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n    };\n\n    var barChartPlotter = function (e) {\n        var ctx = e.drawingContext;\n        var points = e.points;\n        var y_bottom = e.dygraph.toDomYCoord(0);\n\n        ctx.fillStyle = darkenColor(e.color);\n\n        // Find the minimum separation between x-values.\n        // This determines the bar width.\n        var min_sep = Infinity;\n        for (var i = 1; i < points.length; i++) {\n            var sep = points[i].canvasx - points[i - 1].canvasx;\n            if (sep < min_sep) min_sep = sep;\n        }\n        var bar_width = Math.floor(2.0 / 3 * min_sep);\n\n        // Do the actual plotting.\n        for (var i = 0; i < points.length; i++) {\n            var p = points[i];\n            var center_x = p.canvasx;\n\n            ctx.fillRect(center_x - bar_width / 2, p.canvasy,\n                bar_width, y_bottom - p.canvasy);\n\n            ctx.strokeRect(center_x - bar_width / 2, p.canvasy,\n                bar_width, y_bottom - p.canvasy);\n        }\n    };\n\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n                if (widgetData.data.metadata.data.basic.ranges) {\n                    if (widgetData.data.metadata.data.basic.hasOwnProperty(\"ranges\")) {\n                        $scope.dateTimeIntervals = widgetData.data.metadata.data.basic.ranges;\n                        angular$1.forEach($scope.dateTimeIntervals, function (range) {\n                            range[\"interval\"] = range.value;\n                            if (range.checked == true) {\n                                $scope.currentIntervalChoosed = range;\n                            }\n                        });\n                    }\n                } else {\n                    $scope.currentIntervalChoosed = $scope.dateTimeIntervals[1];\n                }\n            }\n        }\n    });\n\n\n    $scope.changeInterval = function (interval) {\n\n        var range = $scope.currentChart[\"xAxisZoomRange\"];\n\n        if (range[0] instanceof Date) {\n            range[0] = range[0].getTime();\n        }\n\n        if (range[1] instanceof Date) {\n            range[1] = range[1].getTime();\n        }\n\n        if (interval && ((range[1] - interval.interval) >= range[0])) {\n            $scope.rangeConfig.dateWindow = [new Date(range[1] - interval.interval), range[1]];\n            $scope.currentChart.updateOptions($scope.rangeConfig);\n            $scope.currentIntervalChoosed = interval;\n        }\n    };\n\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.loadingShow = false;\n\n        $scope.intevals = {device: []};\n\n\n        // update chart\n        $scope.css = {\n            width: \"col-md-12\",\n            height: \"400\"\n        };\n        if (widgetData.data.metadata.css) {\n            $scope.css = widgetData.data.metadata.css;\n        }\n\n        // get start and end from url\n        var begin_path = $stateParams.begin;\n        var end_path = $stateParams.end;\n        var init_flag = false;\n\n\n        //fix interval\n        $scope.fixInterval = false;\n        var noneFixed = [];\n        $scope.fixGraphWithGap = function () {\n            if ($scope.currentChart && $scope.fixInterval) {\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function (item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({file: fixed});\n                }\n            } else if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                $scope.currentChart.updateOptions({file: noneFixed});\n            }\n\n        };\n\n\n        $scope.showOrHideDevice = function (device) {\n            angular$1.forEach($scope.childrenDevices, function (item, index) {\n                if (item.name === device.name) {\n                    var graph = $scope.currentChart;\n\n                    if (device.show == true) {\n                        graph.setVisibility(index, false);\n                        device.show = false;\n                    } else {\n                        graph.setVisibility(index, true);\n                        device.show = true;\n                    }\n\n                }\n            });\n        };\n\n        $scope.fixGraphWithGap_click = function () {\n            if ($scope.currentChart && !$scope.fixInterval) {\n                noneFixed = [];\n                angular$1.copy($scope.currentChart.file_, noneFixed);\n                var currentInterval = -1;\n                angular$1.forEach($scope.intevals.device, function (item) {\n                    if (item.name === $scope.currentIntervalName) {\n                        currentInterval = item.interval;\n                    }\n                });\n                if (noneFixed && noneFixed.length > 0) {\n                    //fix\n                    //get first one\n                    var fixed = [noneFixed[0]];\n                    var tempDate = fixed[0][0].getTime() + currentInterval;\n                    while (tempDate <= noneFixed[noneFixed.length - 1][0].getTime()) {\n                        var flag = false;\n                        // add new\n                        for (var i = 0; i < noneFixed.length; i++) {\n                            if (noneFixed[i][0].getTime() == tempDate) {\n                                flag = true;\n                                fixed.push(noneFixed[i]);\n                                break;\n                            }\n                        }\n\n                        if (!flag) {\n                            var obj = [new Date(tempDate)];\n                            // add NaN\n                            for (var j = 0; j < $scope.currentChart.attributes_.labels_.length; j++) {\n                                obj.push(NaN);\n                            }\n                            fixed.push(obj);\n                        }\n                        tempDate += currentInterval;\n                    }\n                    $scope.currentChart.updateOptions({file: fixed});\n                }\n            } else if ($scope.currentChart && $scope.fixInterval) {\n                $scope.currentChart.updateOptions({file: noneFixed});\n            }\n\n        };\n\n\n        metadata = widgetData.data.metadata;\n        $scope.basicInfo = metadata.data.basic;\n        $scope.currentView = -1; // -1 is device view and 1 is scatter view\n\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.data_from = \"application\";\n\n        $scope.checkY2Btns = function () {\n            return $scope.basicInfo.zoom === true && $scope.showY2Btns === true;\n        };\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            $scope.auto_schema = metadata.data.source.store;\n            $scope.auto_metadata = metadata;\n            $scope.auto_device_name = deviceData.device.name;\n            $scope.$watch('currentView', function (nObj, oObj) {\n                // change\n                if (nObj != oObj) {\n                    if (nObj == -1) {\n                        $scope.autoupdate = true;\n                        var rangeLevel = null;\n                        var otherLevels = [];\n                        angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                            if (level.rows.length > 0) {\n                                if (rangeLevel != null) {\n                                    otherLevels.push(rangeLevel);\n                                }\n                                rangeLevel = level.name;\n                            }\n                        });\n                        if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n                            // show device view\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                            angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                if (level.rows.length > 0 && level.name === rangeLevel) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function (line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function (column) {\n                                                    if (column.startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n                            $scope.auto_fields = fields;\n                            dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function (data) {\n                                initChart(data);\n                            }, function (error) {\n                                console.error(error);\n                            });\n                        }\n\n                    } else {\n                        $scope.autoupdate = false;\n                        //get relation config\n                        if (!metadata.data.source.relation || \"none\" === metadata.data.source.relation) {\n                            return;\n                        } else {\n                            var rangeLevel = null;\n                            var otherLevels = [];\n                            angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                if (level.rows.length > 0) {\n                                    if (rangeLevel != null) {\n                                        otherLevels.push(rangeLevel);\n                                    }\n                                    rangeLevel = level.name;\n                                }\n                            });\n                            if (deviceData.device.name && deviceData.device.name != \"\" && deviceData.device.name != \"undefined\") {\n\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                    if (level.rows.length > 0 && level.name === rangeLevel) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function (line) {\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function (column) {\n                                                        if (column.startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n                                                }\n                                            });\n                                        }\n                                    }\n                                });\n                                $scope.auto_fields = fields;\n                                // show children view\n                                dataService.childrenDeviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, metadata.data.source.relation, metadata.data.source.relation_group, rangeLevel, otherLevels, fields).then(function (data) {\n                                    // get all device trees\n                                    if (data != null && data.length > 0) {\n                                        initChildrenChart(data);\n                                    } else {\n                                        return;\n                                    }\n\n                                }, function (error) {\n                                    console.error(error);\n                                });\n\n                            }\n                        }\n                    }\n                }\n                $scope.fixInterval = false;\n\n            });\n            // first time of showing chart\n            $scope.$watch('currentChart', function (newValue) {\n                if (newValue) {\n                    //device first level\n                    var rangeLevel = null;\n                    var otherLevels = [];\n                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                        if (level.rows.length > 0) {\n                            if (rangeLevel != null) {\n                                otherLevels.push(rangeLevel);\n                            }\n                            rangeLevel = level.name;\n                        }\n                    });\n\n                    // fields of range level\n                    var fields = [];\n                    var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                    angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                        if (level.rows.length > 0 && level.name === rangeLevel) {\n                            var lines = level.rows;\n                            if (lines) {\n                                angular$1.forEach(lines, function (line) {\n                                    //\n                                    if (line.value) {\n                                        var columns = (line.value).match(patt);\n                                        angular$1.forEach(columns, function (column) {\n                                            if ((column).startsWith('data.')) {\n                                                fields.push(column.replace('data.', ''));\n                                            }\n                                        });\n                                    }\n                                });\n                            }\n                        }\n                    });\n\n                    $scope.auto_fields = fields;\n                    //send a rest request\n                    dataService.deviceInitInfo($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, rangeLevel, otherLevels, fields).then(function (data) {\n                        initChart(data);\n                    }, function (error) {\n                        console.error(error);\n                    });\n                }\n            });\n            $scope.$watch(\"chartDateTime\", function (newValue, oldValue) {\n                if (newValue.begin != null && newValue.end != null) {\n                    var expect_points = Math.floor($element.parent().width() / 2);\n                    // find a interval\n                    var expectedInterval = (newValue.end - newValue.begin) / expect_points;\n                    var conf = $scope.intevals.device;\n                    // device detail view\n                    var preOne = conf[0].interval;\n                    var lastOne = conf[conf.length - 1].interval;\n                    var cin = \"\";\n                    if (expectedInterval >= preOne) {\n                        expectedInterval = preOne;\n                        $scope.autoupdate = false;\n                    } else if (expectedInterval <= lastOne) {\n                        expectedInterval = lastOne;\n\n\n                        if ($scope.currentView == -1) {\n                            $scope.autoupdate = true;\n                            $scope.auto_store = conf[conf.length - 1].name;\n                        }\n\n\n                    } else {\n                        for (var i = 1; i < conf.length; i++) {\n                            if (expectedInterval <= preOne && expectedInterval > conf[i].interval) {\n                                expectedInterval = preOne;\n                            } else {\n                                preOne = conf[i].interval;\n                                cin = conf[i].name;\n                            }\n                        }\n                        $scope.autoupdate = false;\n                    }\n\n                    $scope.currentIntervalName = \"\";\n\n                    angular$1.forEach(conf, function (config) {\n                        if (config.interval == expectedInterval) {\n                            $scope.currentIntervalName = config.name;\n                        }\n                    });\n\n                    // check the interval(raw data) no more than 1000 points\n                    if (expectedInterval == lastOne) {\n                        //\n                        if (((newValue.end - newValue.begin) / expectedInterval) > expect_points) {\n                            // reset range bar\n                            $scope.rangeConfig.dateWindow = [new Date(newValue.end - (expect_points - 1) * expectedInterval), new Date(newValue.end)];\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n\n                            $scope.alertMessage = \"Limit the number of \\\"Zoom-Out\\\" points to \" + expect_points * 2 + \".\";\n                            $timeout(function () {\n                                $scope.alertMessage = null;\n                            }, 5000);\n\n                            return;\n                        }\n\n                    }\n\n                    // update range-bar\n                    if ($scope.rangeSelectorBar) {\n                        angular$1.forEach($scope.trees, function (tree) {\n                            if (tree.range == true) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                    if (level.rows.length > 0 && level.name === tree.store) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function (line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function (column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n\n                                                }\n\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                dataService.deviceStoreData($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, newValue.begin, newValue.end, fields).then(function (data) {\n                                        // udpate chart\n                                        var showData = [];\n                                        angular$1.forEach(data, function (arr) {\n                                            Array.prototype.push.apply(showData, arr.data.slice(0, arr.size));\n                                        });\n                                        showData = showData.filter(function (obj) {\n                                            return obj != null;\n                                        });\n\n                                        // update range bar\n                                        var basicInfo = $scope.basicInfo;\n                                        var allLines = [];\n                                        angular$1.forEach(showData, function (line) {\n                                            allLines.push([new Date(line.timestamp)]);\n                                        });\n                                        var series_range = {'l0': {axis: 'y1'}};\n\n                                        var rangeBarLabels = [];\n                                        for (var i = 0; i < fields.length; i++) {\n                                            rangeBarLabels.push(fields[i]);\n\n                                            var f = new Function(\"data\", \"with(data) { if(data.\" + fields[i] + \"!=null)return data.\" + fields[i] + \";return null;}\");\n                                            // add value\n                                            var counter = 0;\n                                            angular$1.forEach(allLines, function (realLine) {\n                                                try {\n                                                    var value = f(showData[counter]);\n                                                    realLine.push(value);\n                                                } catch (ex) {\n                                                    realLine.push(null);\n                                                }\n                                                counter++;\n                                            });\n                                        }\n                                        //\n\n                                        if ($scope.rangeConfig && $scope.rangeConfig.file && $scope.rangeConfig.file != null) {\n                                            var objNeed2Add = [];\n                                            angular$1.forEach($scope.rangeConfig.file, function (item) {\n                                                var flag = false;\n                                                var dataLength = -1;\n                                                angular$1.forEach(allLines, function (line) {\n                                                    dataLength = line.length;\n                                                    if (line.length > 0 && line[0].getTime() === item[0].getTime()) {\n                                                        flag = true;\n                                                    } else if (line.length === 0) {\n                                                        flag = true;\n                                                    } else {\n                                                        dataLength = line.length;\n                                                    }\n\n                                                });\n                                                if (!flag) {\n                                                    var tempObj = [];\n                                                    for (var i = 0; i < dataLength; i++) {\n                                                        tempObj[i] = item[i];\n                                                    }\n                                                    objNeed2Add.push(tempObj);\n                                                }\n                                            });\n                                        }\n                                        allLines = allLines.concat(objNeed2Add);\n                                        allLines.sort(function (a, b) {\n                                            return a[0] > b[0] ? 1 : -1;\n                                        });\n                                        if ($scope.showY2Btns) {\n                                            //noinspection JSDuplicatedDeclaration\n                                            if (!$scope.rangeConfig.axes.hasOwnProperty(\"y2\")) {\n                                                series_range = {\n                                                    'l0': {axis: 'y1'},\n                                                    'l0': {axis: 'y2'}\n                                                };\n                                                $scope.rangeSeries = series_range;\n                                                $scope.rangeConfig = {\n                                                    'file': allLines,\n                                                    'labels': ['x'].concat(rangeBarLabels),\n                                                    'series': series_range\n                                                };\n                                                if (basicInfo && basicInfo.range_show) {\n                                                    $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                                }\n                                            }\n\n                                        } else {\n                                            series_range[\"span_y2\"] = {axis: 'y2'};\n                                            $scope.rangeSeries = series_range;\n                                            var newLines = [];\n                                            angular$1.copy(allLines, newLines);\n                                            angular$1.forEach(newLines, function (line) {\n                                                line.push(NaN);\n                                            });\n                                            $scope.rangeConfig = {\n                                                'file': newLines,\n                                                'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                                'series': series_range\n                                            };\n                                            if (basicInfo && basicInfo.range_show) {\n                                                $scope.rangeSelectorBar.updateOptions($scope.rangeConfig);\n                                            }\n                                        }\n                                    },\n                                    function (data) {\n                                        console.info(data);\n                                    }\n                                );\n                            }\n                        });\n                    }\n\n\n                    $scope.loadingShow = true;\n                    if ($scope.currentView == 1) {\n                        // scatter detail view\n                        if (expectedInterval == conf[0].interval) {\n                            $scope.currentChart.updateOptions({dateWindow: $scope.chartDateWindow});\n                            $scope.loadingShow = false;\n                        } else {\n                            $scope.legendText = null;\n                            var deviceInfo = [];\n                            var currentStore = \"\";\n\n                            $scope.childrenDevices = [];\n\n                            // has problem....\n                            angular$1.forEach($scope.childTrees, function (device) {\n                                angular$1.forEach(device.trees, function (tree, index) {\n                                    if (expectedInterval == tree.frequency && index != 0) {\n                                        currentStore = tree.store;\n                                        deviceInfo.push({name: device.name, tree: tree.tree});\n                                        device[\"show\"] = true;\n                                        $scope.childrenDevices.push(device);\n                                    }\n                                });\n                            });\n\n                            var fields = [];\n                            var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                            angular$1.forEach(metadata.data.groups[2].collections, function (level) {\n                                if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                    var lines = level.rows;\n                                    if (lines) {\n                                        angular$1.forEach(lines, function (line) {\n                                            if (line.value) {\n                                                var columns = (line.value).match(patt);\n                                                angular$1.forEach(columns, function (column) {\n                                                    if (column && (column).startsWith('data.')) {\n                                                        fields.push(column.replace('data.', ''));\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n\n                            $scope.auto_fields = fields;\n                            dataService.devicesStoreData($rootScope.host, $rootScope.applicationName, deviceInfo, metadata.data.source.store, currentStore, newValue.begin, newValue.end, fields).then(function (data) {\n                                var showData = [];\n                                angular$1.forEach(data, function (arr) {\n                                    var deviceData = [];\n                                    angular$1.forEach(arr.data, function (bucket) {\n                                        if (bucket.data != null) {\n                                            Array.prototype.push.apply(deviceData, bucket.data.slice(0, bucket.size));\n                                        }\n                                    });\n                                    showData.push({device: arr.device, data: deviceData});\n                                });\n                                //get configuration\n                                updateChildrenDetailChart(metadata, currentStore, $scope.rangeChildrenData, showData);\n\n                            }, function (data) {\n                                console.info(data);\n                            });\n                        }\n                        $scope.fixGraphWithGap();\n                    } else {\n                        // cal tree\n                        angular$1.forEach($scope.trees, function (tree, index) {\n                            if (expectedInterval == tree.frequency) {\n                                // send request\n                                var fields = [];\n                                var patt = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n                                angular$1.forEach(metadata.data.groups[1].collections, function (level) {\n                                    if (level.rows.length > 0 && level.name === $scope.currentIntervalName) {\n                                        var lines = level.rows;\n                                        if (lines) {\n                                            angular$1.forEach(lines, function (line) {\n                                                //\n                                                if (line.value) {\n                                                    var columns = (line.value).match(patt);\n                                                    angular$1.forEach(columns, function (column) {\n                                                        if ((column).startsWith('data.')) {\n                                                            fields.push(column.replace('data.', ''));\n                                                        }\n                                                    });\n\n                                                }\n\n                                            });\n                                        }\n                                    }\n                                });\n\n                                $scope.auto_fields = fields;\n                                dataService.deviceStoreData($rootScope.host, $rootScope.applicationName, deviceData.device.name, metadata.data.source.store, tree.store, tree.tree, newValue.begin, newValue.end, fields).then(function (data) {\n                                    // udpate chart\n                                    var showData = [];\n                                    angular$1.forEach(data, function (arr) {\n                                        Array.prototype.push.apply(showData, arr.data.slice(0, arr.size));\n                                    });\n                                    showData = showData.filter(function (obj) {\n                                        return obj != null;\n                                    });\n                                    showData.sort(function (a, b) {\n                                        return a.timestamp > b.timestamp ? 1 : -1;\n                                    });\n                                    //get configuration\n                                    updateDetailChart(metadata, tree.store, $scope.rangeData, showData);\n\n                                    // tell some other widgets, the graph is changed.\n                                    $timeout(function () {\n                                        $rootScope.$broadcast('chartDataChangeEvent', {\n                                            'id': element_id,\n                                            'group': 'device',\n                                            'data': {\n                                                'collection': tree.store,\n                                                'group': 'device',\n                                                'data': showData\n                                            }\n                                        });\n                                    });\n\n                                }, function (data) {\n                                    console.info(data);\n                                });\n                            }\n                        });\n\n                        $scope.fixGraphWithGap();\n                    }\n                    $scope.status = false;\n                }\n            });\n\n        });\n\n\n        var fetchData = function (values, node) {\n            if (node.children[0] != null) {\n                fetchData(values, node.children[0]);\n            }\n\n            if (node.children[1] != null) {\n                fetchData(values, node.children[1]);\n            }\n\n            if (node.children[0] == null && node.children[1] == null) {\n                if (node.data != null && node.data.array) {\n                    Array.prototype.push.apply(values, node.data.array.slice(0, node.data.size));\n                } else if (node.data != null) {\n                    Array.prototype.push.apply(values, node.data.slice(0, node.data.length));\n                }\n\n            }\n\n        };\n\n\n        $scope.trees = [];\n        $scope.rangeData = [];\n\n        $scope.ordinalRangeData = [];\n\n        var initChart = function (data) {\n            $scope.intevalforshow = [];\n            //\n            $scope.intevals.device = [];\n            var trees = data.trees;\n            $scope.trees = trees;\n            var rangeTree = null;\n            angular$1.forEach(trees, function (tree) {\n                if (tree.range) {\n                    rangeTree = tree;\n                }\n                $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n            });\n\n\n            // init chart with range data\n            var store = rangeTree.store;\n\n            // get all data\n            var allData = [];\n            // fetchData(allData, rangeTree.tree);only get first and last\n            allData = allData.concat([rangeTree.first, rangeTree.last]);\n\n            allData = allData.filter(function (obj) {\n                return obj != null;\n            });\n\n            allData.sort(function (a, b) {\n                return a.timestamp > b.timestamp ? 1 : -1;\n            });\n\n\n            if ($scope.trees.length == 0 || allData.length == 0) {\n                $scope.emptyDataShow = true;\n                return;\n            }\n\n            // if the data only has one point. change the data range to bigger\n            if (allData.length == 1) { //  means only one point.\n                var newData = [];\n                // add 1 points into both side\n                var thePoint = allData[0];\n                var timestamp = thePoint.timestamp;\n                var currentInterval = $scope.intevals.device[0].interval;\n                newData.push({timestamp: timestamp - currentInterval});\n                Array.prototype.push.apply(newData, allData);\n                newData.push({timestamp: timestamp + currentInterval});\n                allData = newData;\n            }\n            $scope.ordinalRangeData = allData;\n            // get configuration and make real data\n            updateChart(metadata, store, allData);\n        };\n\n        var initChildrenChart = function (deviceDatas) {\n            var devicesInfo = {};\n            $scope.intevals.device = [];\n            //range data with all device\n            $scope.childTrees = [];\n            $scope.childrenDevices = [];\n\n            angular$1.forEach(deviceDatas, function (deviceData) {\n                var device = deviceData.device;\n                device[\"show\"] = true;\n                $scope.childrenDevices.push(device);\n                var trees = deviceData.trees;\n                $scope.childTrees.push({name: device.name, trees: trees});\n                var rangeTree = null;\n                angular$1.forEach(trees, function (tree) {\n                    if (tree.range) {\n                        rangeTree = tree;\n                    }\n\n                    var flag = false;\n                    angular$1.forEach($scope.intevals.device, function (interval) {\n                        if (interval.name == tree.store && interval.interval == tree.frequency) {\n                            // has same one\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        $scope.intevals.device.push({name: tree.store, interval: tree.frequency});\n                    }\n\n                });\n\n                if (rangeTree != null) {\n                    var deviceObj = devicesInfo[device.name] = {};\n                    // get all data\n                    var allData = [];\n                    fetchData(allData, rangeTree.tree);\n                    allData = allData.filter(function (obj) {\n                        return obj != null;\n                    });\n                    allData.sort(function (a, b) {\n                        return a.timestamp > b.timestamp ? 1 : -1;\n                    });\n                    //\n                    deviceObj[\"range\"] = rangeTree;\n                    deviceObj[\"data\"] = allData;\n                } else {\n                    console.info(device.name + \" has none data.\");\n                }\n\n            });\n\n            updateChildrenChart(metadata, devicesInfo);\n        };\n\n\n        var updateChildrenChart = function (metadata, devicesInfo) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n            var allLines = [];\n            var allXLabels = [];\n            angular$1.forEach(devicesInfo, function (device, key) {\n                angular$1.forEach(device.data, function (item) {\n                    var flag = false;\n                    angular$1.forEach(allXLabels, function (label) {\n                        if (label.getTime() == item.timestamp) {\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        allXLabels.push(new Date(item.timestamp));\n                    }\n\n\n                });\n            });\n            // order\n            allXLabels.sort(function (a, b) {\n                return a > b ? 1 : -1;\n            });\n\n            // make all line\n            angular$1.forEach(allXLabels, function (label) {\n                allLines.push([label]);\n            });\n\n\n            var yRange = {min: null, max: null};\n            var showY2axis = false;\n            var counter = 0;\n\n\n\n\n            angular$1.forEach(devicesInfo, function (device, key) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                angular$1.forEach(collections, function (collection) {\n                    if (collection.name == device.range.store) {\n                        $scope.currentIntervalName = device.range.store;\n                        var originalData = device.data;\n\n                        // always same for each device\n                        if (collection.rows[0].yaxis == 0) {\n                            if (collection.rows[0].type == 'line') {\n                                series[collection.rows[0].label] = {'axis': 'y1'};\n                            } else if (collection.rows[0].type == 'bar') {\n                                series[collection.rows[0].label] = {'axis': 'y1', 'plotter': barChartPlotter};\n                            } else {\n                                series[collection.rows[0].label] = {'axis': 'y1'};\n                            }\n\n                        } else {\n                            series[collection.rows[0].label] = {'axis': 'y2'};\n\n                            if (collection.rows[0].type == 'line') {\n                                series[collection.rows[0].label] = {'axis': 'y2'};\n                            } else if (collection.rows[0].type == 'bar') {\n                                series[collection.rows[0].label] = {'axis': 'y2', 'plotter': barChartPlotter};\n                            } else {\n                                series[collection.rows[0].label] = {'axis': 'y2'};\n                            }\n\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        labels.push(key);\n                        // make a line\n                        var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                        // add value\n                        angular$1.forEach(allLines, function (realLine, index) {\n\n                            var flag = false;\n                            angular$1.forEach(originalData, function (odata) {\n                                if (realLine[0].getTime() == odata.timestamp) {\n                                    try {\n                                        var value = f(odata);\n                                        realLine.push(value);\n                                        if (yRange.min == null) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max == null) {\n                                            yRange.max = value;\n                                        }\n\n                                        if (yRange.min > value) {\n                                            yRange.min = value;\n                                        }\n\n                                        if (yRange.max < value) {\n                                            yRange.max = value;\n                                        }\n                                    } catch (ex) {\n                                        realLine.push(null);\n                                    }\n                                    flag = true;\n                                }\n                            });\n\n                            if (!flag) {\n                                realLine.push(null);\n                            }\n                        });\n\n\n                    }\n                });\n            });\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n            //update chart\n            if ($scope.currentChart) {\n                $scope.rangeChildrenData = allLines;\n\n                if (showY2axis) {\n                    $scope.childrenRangeConfig = {\n                        'labelsKMB': true,\n                        'file': allLines,\n                        legend: 'never',\n                        labelsKMB: true,\n                        labelsSeparateLines: false,\n                        // data formate\n                        labels: ['x'].concat(sampleData.labels),\n                        highlightSeriesOpts: {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        'labels': ['x'].concat(labels),\n                        'ylabel': leftAndRight.left,\n                        'y2label': leftAndRight.right,\n                        'series': series,\n                        'colors': colors,\n                        highlightCallback: function (e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            angular$1.forEach(series, function (value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {x: 0, y: 0};\n                            angular$1.forEach(pts, function (item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function (point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n                            var legendbox = angular$1.element(\"#legendbox\" + element_id);\n\n\n                            $scope.$apply(function () {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n\n                        },\n\n                        unhighlightCallback: function (e) {\n                            $scope.$apply(function () {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'axes': {\n                            'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                            'y2': {}\n                        }\n                        // showRangeSelector: true\n                    };\n                } else {\n                    $scope.showY2Btns = false;\n                    var newLines = [];\n                    angular$1.copy(allLines, newLines);\n                    angular$1.forEach(newLines, function (line) {\n                        line.push(NaN);\n                    });\n                    series[\"span_y2\"] = {'axis': 'y2'};\n                    $scope.childrenRangeConfig = {\n                        'drawGapEdgePoints': true,\n                        'pointSize': 3,\n                        'legend': 'never',\n                        'labelsKMB': true,\n                        'file': newLines,\n                        'labelsSeparateLines': false,\n                        'highlightSeriesOpts': {\n                            strokeWidth: 2,\n                            strokeBorderWidth: 1,\n                            highlightCircleSize: 2\n                        },\n                        highlightCallback: function (e, x, pts, row, seriesName) {\n                            var sn = \"\";\n                            angular$1.forEach(series, function (value, name, item) {\n                                if (value.axis === \"y1\") {\n                                    sn = name;\n                                }\n                            });\n                            var point_show = {x: 0, y: 0};\n                            angular$1.forEach(pts, function (item, index) {\n                                if (item.name === seriesName) {\n                                    $scope.legendText = seriesName;\n                                    $scope.legendColor = colors[index];\n                                    // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                    $scope.legendText_device = seriesName;\n                                    $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                    $scope.legendText_column = sn;\n                                    $scope.legendText_value = item.yval;\n                                    angular$1.forEach(pts, function (point) {\n                                        if (point.name === seriesName) {\n                                            point_show.y = point.canvasy + 30;\n                                            point_show.x = point.canvasx + 30;\n                                        }\n                                    });\n                                }\n                            });\n                            var legendbox = angular$1.element(\"#legendbox\" + element_id);\n                            $scope.$apply(function () {\n                                $scope.legendTop = point_show.y;\n                                $scope.legendLeft = point_show.x;\n                            });\n                        },\n\n                        unhighlightCallback: function (e) {\n                            $scope.$apply(function () {\n                                $scope.legendText = null;\n                                $scope.legendText_device = null;\n                                $scope.legendText_datetime = null;\n                                $scope.legendText_column = null;\n                                $scope.legendText_value = null;\n                            });\n                        },\n                        'labels': ['x'].concat(labels).concat(['span_y2']),\n                        'ylabel': leftAndRight.left,\n                        'y2label': \"\",\n                        'series': series,\n                        'colors': colors,\n                        'axes': {\n                            'y': {valueRange: [yRange.min, yRange.max]},\n                            'y2': {\n                                axisLabelFormatter: function (d) {\n                                    return '';\n                                }\n                            }\n                        }\n                        // showRangeSelector: true\n                    };\n                }\n                //\n                $scope.currentChart.updateOptions($scope.childrenRangeConfig);\n                //  keep the same time window and refersh\n                $scope.chartDateTime = {begin: $scope.chartDateTime.begin, end: $scope.chartDateTime.end};\n                $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                $scope.loadingShow = false;\n            }\n\n\n        };\n\n\n        var updateChildrenDetailChart = function (metadata, store, rangeData, allData) {\n            //relation\n            var relationConfig = metadata.data.groups[2];\n            // scatter view shows only one collection\n            var collections = relationConfig.collections;\n            var newLines = [];\n            var newTime = [];\n            var series = {};\n            var labels = [];\n            var colors = [];\n            var leftAndRight = {left: relationConfig.leftYAxis, right: relationConfig.rightYAxis};\n            var yRange = {min: null, max: null};\n            var counter = 0;\n            var showY2axis = null;\n            angular$1.forEach(allData, function (device) {\n                if ($scope.defaultColors[counter]) {\n                    colors.push($scope.defaultColors[counter]);\n                } else {\n                    colors.push('#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6));\n                }\n                counter++;\n\n                if (device.data.length > 0) {\n                    labels.push(device.device);\n                    angular$1.forEach(collections, function (collection) {\n                        if (collection.name == store) {\n                            $scope.currentIntervalName = store;\n                            if (collection.rows[0].yaxis == 0) {\n                                if (collection.rows[0].type == 'line') {\n                                    series[collection.rows[0].label] = {'axis': 'y1'};\n                                } else if (collection.rows[0].type == 'bar') {\n                                    series[collection.rows[0].label] = {'axis': 'y1', 'plotter': barChartPlotter};\n                                } else {\n                                    series[collection.rows[0].label] = {'axis': 'y1'};\n                                }\n\n                            } else {\n\n                                if (collection.rows[0].type == 'line') {\n                                    series[collection.rows[0].label] = {'axis': 'y2'};\n                                } else if (collection.rows[0].type == 'bar') {\n                                    series[collection.rows[0].label] = {'axis': 'y2', 'plotter': barChartPlotter};\n                                } else {\n                                    series[collection.rows[0].label] = {'axis': 'y2'};\n                                }\n\n                                showY2axis = true;\n                                $scope.showY2Btns = true;\n                            }\n                            var f = new Function(\"data\", \"with(data) { if(\" + collection.rows[0].value + \"!=null)return \" + collection.rows[0].value + \";return null;}\");\n                            var tempData = [];\n                            var tempTime = [];\n                            // make data\n                            angular$1.forEach(device.data, function (data) {\n                                var dateTime = new Date(data.timestamp);\n                                try {\n                                    var value = f(data);\n                                    tempData.push({timestamp: dateTime, value: value});\n\n                                    if (yRange.min == null) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max == null) {\n                                        yRange.max = value;\n                                    }\n\n                                    if (yRange.min > value) {\n                                        yRange.min = value;\n                                    }\n\n                                    if (yRange.max < value) {\n                                        yRange.max = value;\n                                    }\n\n                                } catch (e) {\n                                    tempData.push({timestamp: dateTime, value: null});\n                                }\n                                tempTime.push(dateTime.getTime());\n                            });\n                            newTime = newTime.concat(tempTime.filter(function (item) {\n                                return newTime.indexOf(item) < 0;\n                            }));\n                            newLines.push({device: device.device, data: tempData});\n                        }\n                    });\n                }\n            });\n\n            var chartData = [];\n            // time needs sort!!!\n            newTime = newTime.sort();\n            angular$1.forEach(newTime, function (nt) {\n                chartData.push([new Date(nt)]);\n            });\n\n\n            angular$1.forEach(newLines, function (line) {\n                angular$1.forEach(chartData, function (timeTicket) {\n                    // line data\n                    var flag = false;\n                    var lineData = line.data;\n                    for (var i = 0; i < lineData.length; i++) {\n                        if (lineData[i].timestamp.getTime() == timeTicket[0].getTime()) {\n                            timeTicket.push(lineData[i].value);\n                            flag = true;\n                            break;\n                        }\n                    }\n                    if (flag != true) {\n                        // we should use \"NaN\"\n                        timeTicket.push(NaN);\n                    }\n                });\n            });\n\n\n            if (yRange.min == yRange.max && yRange.min != null && yRange.max != null) {\n                yRange.min = yRange.min - (yRange.min) * 0.10;\n                yRange.max = yRange.max + (yRange.max) * 0.10;\n            }\n\n\n            if (chartData.length == 0) {\n                $scope.currentChart.updateOptions({\n                    'file': []\n                });\n                $scope.loadingShow = false;\n            } else {\n                if ($scope.currentChart) {\n\n                    if (showY2axis) {\n\n                        $scope.currentChartOptions = {\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80}\n                            }\n                        };\n\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function (e, x, pts, row, seriesName) {\n                                var sn = \"\";\n                                angular$1.forEach(series, function (value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {x: 0, y: 0};\n                                angular$1.forEach(pts, function (item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function (point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n                                var legendbox = angular$1.element(\"#legendbox\" + element_id);\n                                $scope.$apply(function () {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n                            },\n\n                            unhighlightCallback: function (e) {\n                                $scope.$apply(function () {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            labelsSeparateLines: false,\n                            'file': chartData,\n                            'labels': ['x'].concat(labels),\n                            'ylabel': leftAndRight.left,\n                            'y2label': leftAndRight.right,\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80}\n                            }\n                            // showRangeSelector: true\n                        });\n                    } else {\n                        var newLines = [];\n                        $scope.showY2Btns = false;\n                        angular$1.copy(chartData, newLines);\n                        angular$1.forEach(newLines, function (line) {\n                            line.push(NaN);\n                        });\n                        series[\"span_y2\"] = {axis: 'y2'};\n                        $scope.currentChartOptions = {\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                                \"y2\": {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        };\n                        $scope.currentChart.updateOptions({\n                            'drawGapEdgePoints': true,\n                            'pointSize': 3,\n                            'legend': 'never',\n                            'labelsKMB': true,\n                            'file': newLines,\n                            labelsSeparateLines: false,\n                            'labels': ['x'].concat(labels).concat([\"span_y2\"]),\n                            'ylabel': leftAndRight.left,\n                            'highlightSeriesOpts': {\n                                strokeWidth: 2,\n                                strokeBorderWidth: 1,\n                                highlightCircleSize: 2\n                            },\n                            highlightCallback: function (e, x, pts, row, seriesName) {\n\n                                var sn = \"\";\n                                angular$1.forEach(series, function (value, name, item) {\n                                    if (value.axis === \"y1\") {\n                                        sn = name;\n                                    }\n                                });\n                                var point_show = {x: 0, y: 0};\n                                angular$1.forEach(pts, function (item, index) {\n                                    if (item.name === seriesName) {\n                                        $scope.legendText = seriesName;\n                                        $scope.legendColor = colors[index];\n                                        // $scope.legendText = seriesName +\"[\"+moment(item.xval).format('l HH:mm:ss')+\", \"+sn+\":\"+ item.yval+\"]\";\n                                        $scope.legendText_device = seriesName;\n                                        $scope.legendText_datetime = moment(item.xval).format('l HH:mm:ss');\n                                        $scope.legendText_column = sn;\n                                        $scope.legendText_value = item.yval;\n                                        angular$1.forEach(pts, function (point) {\n                                            if (point.name === seriesName) {\n                                                point_show.y = point.canvasy + 30;\n                                                point_show.x = point.canvasx + 30;\n                                            }\n                                        });\n                                    }\n                                });\n                                var legendbox = angular$1.element(\"#legendbox\" + element_id);\n\n                                $scope.$apply(function () {\n                                    $scope.legendTop = point_show.y;\n                                    $scope.legendLeft = point_show.x;\n                                });\n\n                            },\n\n                            unhighlightCallback: function (e) {\n                                $scope.$apply(function () {\n                                    $scope.legendText = null;\n                                    $scope.legendText_device = null;\n                                    $scope.legendText_datetime = null;\n                                    $scope.legendText_column = null;\n                                    $scope.legendText_value = null;\n                                });\n                            },\n                            'y2label': \"\",\n                            'series': series,\n                            'colors': colors,\n                            'axes': {\n                                'y': {valueRange: [yRange.min, yRange.max], axisLabelWidth: 80},\n                                \"y2\": {\n                                    axisLabelFormatter: function (d) {\n                                        return '';\n                                    },\n                                    axisLabelWidth: 80\n                                }\n                            }\n                            // showRangeSelector: true\n                        });\n                    }\n                    $scope.loadingShow = false;\n                }\n            }\n\n\n        };\n\n\n        /**\n         * update detail chart\n         * @param metadata\n         * @param store\n         * @param rangeData\n         * @param allData\n         */\n        var updateDetailChart = function (metadata, store, rangeData, allData) {\n\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{min: null, max: null}, {min: null, max: null}];\n            angular$1.forEach(collections, function (collection) {\n                if (collection.name == store) {\n                    angular$1.forEach(allData, function (line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    // var yRange = {'min': null, 'max': null};\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function (row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {'axis': 'y1'};\n                            if (row.type == 'line') {\n                                series[row.label] = {'axis': 'y1'};\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {'axis': 'y1', 'plotter': barChartPlotter};\n                            } else {\n                                series[row.label] = {'axis': 'y1'};\n                            }\n                        } else {\n                            series[row.label] = {'axis': 'y2'};\n                            if (row.type == 'line') {\n                                series[row.label] = {'axis': 'y2'};\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {'axis': 'y2', 'plotter': barChartPlotter};\n                            } else {\n                                series[row.label] = {'axis': 'y2'};\n                            }\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function (realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    angular$1.forEach(yRanges, function (yrange) {\n                        if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                            yrange.min = yrange.min - (yrange.min) * 0.10;\n                            yrange.max = yrange.max + (yrange.max) * 0.10;\n                        }\n                    });\n\n\n                    if (allLines.length == 0) {\n\n                        $scope.currentChart.updateOptions({\n                            'file': []\n                        });\n                        if ($scope.rangeSelectorBar) {\n                            $scope.currentChart[\"xAxisZoomRange\"] = $scope.rangeSelectorBar.xAxisExtremes();\n                        }\n\n\n                        $scope.loadingShow = false;\n                    } else {\n                        if ($scope.currentChart) {\n\n                            if (showY2axis) {\n                                $scope.currentChartOptions = {\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': allLines,\n                                    'labels': ['x'].concat(labels),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': leftAndRight.right,\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            'labelsKMB': true,\n                                            valueRange: [yRanges[1].min, yRanges[1].max],\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n\n\n                            } else {\n\n                                var newLines = [];\n                                $scope.showY2Btns = false;\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function (line) {\n                                    line.push(NaN);\n                                });\n\n                                series[\"span-Y2\"] = {axis: 'y2'};\n\n\n                                $scope.currentChartOptions = {\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            axisLabelFormatter: function (d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                };\n                                $scope.currentChart.updateOptions({\n                                    'drawGapEdgePoints': true,\n                                    'pointSize': 3,\n                                    'legend': 'follow',\n                                    labelsSeparateLines: true,\n                                    highlightSeriesOpts: null,\n                                    'labelsKMB': true,\n                                    'file': newLines,\n                                    'labels': ['x'].concat(labels).concat(['span_y2']),\n                                    'ylabel': leftAndRight.left,\n                                    'y2label': \"\",\n                                    'series': series,\n                                    'axes': {\n                                        'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                        'y2': {\n                                            axisLabelFormatter: function (d) {\n                                                return '';\n                                            },\n                                            axisLabelWidth: 80\n                                        }\n                                    },\n                                    'colors': colors\n                                    // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                });\n                            }\n                            $scope.loadingShow = false;\n                        }\n                    }\n\n\n                }\n            });\n\n\n        };\n\n        $scope.autoUpdateChart = updateDetailChart;\n\n        /**\n         * update range chart\n         * @param metadata\n         * @param store\n         * @param allData\n         */\n        var updateChart = function (metadata, store, allData) {\n            var deviceConfig = metadata.data.groups[1];\n            var collections = deviceConfig.collections;\n            var labels = [];\n            var series = {};\n            var colors = [];\n            var leftAndRight = {left: deviceConfig.leftYAxis, right: deviceConfig.rightYAxis};\n            var allLines = [];\n            //0 for y  1 for y2\n            var yRanges = [{min: null, max: null}, {min: null, max: null}];\n            angular$1.forEach(collections, function (collection) {\n                if (collection.name == store) {\n                    $scope.currentIntervalName = store;\n                    angular$1.forEach(allData, function (line) {\n                        allLines.push([new Date(line.timestamp)]);\n                    });\n\n                    $scope.rangeSeriesNumber = collection.rows.length;\n                    var showY2axis = false;\n                    angular$1.forEach(collection.rows, function (row) {\n                        labels.push(row.label);\n                        colors.push(row.color);\n\n                        if (row.yaxis == 0) {\n                            series[row.label] = {'axis': 'y1'};\n                            if (row.type == 'line') {\n                                series[row.label] = {'axis': 'y1'};\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {'axis': 'y1', 'plotter': barChartPlotter};\n                            } else {\n                                series[row.label] = {'axis': 'y1'};\n                            }\n                        } else {\n                            series[row.label] = {'axis': 'y2'};\n                            if (row.type == 'line') {\n                                series[row.label] = {'axis': 'y2'};\n                            } else if (row.type == 'bar') {\n                                series[row.label] = {'axis': 'y2', 'plotter': barChartPlotter};\n                            } else {\n                                series[row.label] = {'axis': 'y2'};\n                            }\n                            showY2axis = true;\n                            $scope.showY2Btns = true;\n                        }\n\n                        var f = new Function(\"data\", \"with(data) { if(\" + row.value + \"!=null)return \" + row.value + \";return null;}\");\n                        // add value\n                        var counter = 0;\n                        angular$1.forEach(allLines, function (realLine) {\n                            try {\n                                var value = f(allData[counter]);\n                                realLine.push(value);\n                                if (row.yaxis == 0) {\n                                    if (yRanges[0].min == null) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max == null) {\n                                        yRanges[0].max = value;\n                                    }\n\n                                    if (yRanges[0].min > value) {\n                                        yRanges[0].min = value;\n                                    }\n\n                                    if (yRanges[0].max < value) {\n                                        yRanges[0].max = value;\n                                    }\n                                } else {\n                                    if (yRanges[1].min == null) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max == null) {\n                                        yRanges[1].max = value;\n                                    }\n\n                                    if (yRanges[1].min > value) {\n                                        yRanges[1].min = value;\n                                    }\n\n                                    if (yRanges[1].max < value) {\n                                        yRanges[1].max = value;\n                                    }\n                                }\n\n                            } catch (ex) {\n                                realLine.push(null);\n                            }\n                            counter++;\n                        });\n\n                    });\n\n                    if ($scope.currentChart) {\n                        $scope.rangeData = allLines;\n                        var basicInfo = $scope.basicInfo;\n                        if (basicInfo && basicInfo.range_show) {\n                            var rangeBarLabels = [];\n                            for (var i = 0; i < labels.length; i++) {\n                                rangeBarLabels.push(\"l\" + i);\n                            }\n                            var series_range = {'l0': {axis: 'y1'}};\n                            if (showY2axis) {\n                                //noinspection JSDuplicatedDeclaration\n                                series_range = {\n                                    'l0': {axis: 'y1'},\n                                    'l0': {axis: 'y2'}\n                                };\n                                $scope.rangeSeries = series_range;\n\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': allLines,\n                                    'labels': ['x'].concat(rangeBarLabels),\n                                    'series': series_range\n                                });\n                            } else {\n                                series_range[\"span_y2\"] = {axis: 'y2'};\n                                $scope.showY2Btns = false;\n                                $scope.rangeSeries = series_range;\n                                var newLines = [];\n                                angular$1.copy(allLines, newLines);\n                                angular$1.forEach(newLines, function (line) {\n                                    line.push(NaN);\n                                });\n                                $scope.rangeSelectorBar.updateOptions({\n                                    'file': newLines,\n                                    'labels': ['x'].concat(rangeBarLabels).concat(['span_y2']),\n                                    'series': series_range\n                                });\n                            }\n\n\n                        }\n\n                        angular$1.forEach(yRanges, function (yrange) {\n                            if (yrange.min == yrange.max && yrange.min != null && yrange.max != null) {\n                                yrange.min = yrange.min - (yrange.min) * 0.10;\n                                yrange.max = yrange.max + (yrange.max) * 0.10;\n                            }\n                        });\n\n\n                        // if graph has 2 yAxis or a yAxis\n\n\n                        if (showY2axis) {\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: null,\n                                'labelsKMB': true,\n                                'file': allLines,\n                                'labels': ['x'].concat(labels),\n                                'ylabel': leftAndRight.left,\n                                'y2label': leftAndRight.right,\n\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                    'y2': {\n                                        'labelsKMB': true,\n                                        valueRange: [yRanges[1].min, yRanges[1].max],\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        } else {\n                            series['span_y2'] = {axis: 'y2'};\n                            $scope.showY2Btns = false;\n                            var newLines = [];\n                            angular$1.copy(allLines, newLines);\n                            angular$1.forEach(newLines, function (line) {\n                                line.push(NaN);\n                            });\n                            $scope.rangeConfig = {\n                                'drawGapEdgePoints': true,\n                                'pointSize': 3,\n                                'legend': 'follow',\n                                labelsSeparateLines: true,\n                                highlightSeriesOpts: null,\n                                'labelsKMB': true,\n                                'file': newLines,\n                                'labels': ['x'].concat(labels).concat(['span_y2']),\n                                'ylabel': leftAndRight.left,\n                                'y2label': \"\",\n                                'series': series,\n                                'colors': colors,\n                                'axes': {\n                                    'y': {valueRange: [yRanges[0].min, yRanges[0].max], axisLabelWidth: 80},\n                                    'y2': {\n                                        axisLabelFormatter: function (d) {\n                                            return '';\n                                        },\n                                        axisLabelWidth: 80\n                                    }\n                                },\n                                'dateWindow': [allLines[0][0], allLines[allLines.length - 1][0]],\n                                // 'valueRange': [yRange.min - (Math.abs(yRange.min) * 0.1), yRange.max + (Math.abs(yRange.max) * 0.1)]\n                                // showRangeSelector: true\n                            };\n                        }\n\n\n                        if (basicInfo && basicInfo.range_show) {\n                            Dygraph.synchronize([$scope.rangeSelectorBar, $scope.currentChart], {\n                                zoom: true,\n                                selection: false,\n                                range: false\n                            });\n                        }\n\n\n                        if ($scope.chartDateWindow && ($scope.chartDateWindow[0] != 1388495700000 || $scope.chartDateWindow[0] != 1388503800000) && ($scope.chartDateWindow[0] >= allLines[0][0] && $scope.chartDateWindow[1] <= allLines[allLines.length - 1][0])) {\n                            // keep the current range bar refresh once.\n                            $scope.chartDateTime = {\n                                begin: $scope.chartDateTime.begin,\n                                end: $scope.chartDateTime.end\n                            };\n                            $scope.chartDateWindow = [$scope.chartDateTime.begin, $scope.chartDateTime.end];\n                        } else {\n\n                            $scope.currentChart[\"xAxisZoomRange\"] = [allLines[0][0], allLines[allLines.length - 1][0]];\n                            if (begin_path && end_path && !init_flag) {\n                                // $scope.chartDateTime = {\n                                // \"begin\": new Date(new Number(begin_path)),\n                                // \"end\": new Date(new Number(end_path))\n                                // };\n                                $scope.chartDateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                $scope.rangeConfig.dateWindow = [new Date(new Number(begin_path)), new Date(new Number(end_path))];\n                                init_flag = true;\n                            } else {\n                                if ($scope.currentIntervalChoosed && ((allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval) >= allLines[0][0].getTime())) {\n                                    $scope.rangeConfig.dateWindow = [new Date(allLines[allLines.length - 1][0].getTime() - $scope.currentIntervalChoosed.interval), allLines[allLines.length - 1][0]];\n                                } else {\n                                    $scope.chartDateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                    $scope.rangeConfig.dateWindow = [allLines[0][0], allLines[allLines.length - 1][0]];\n                                }\n                            }\n\n                            $scope.currentChart.updateOptions($scope.rangeConfig);\n                            $scope.currentChartOptions = $scope.rangeConfig;\n\n                        }\n\n\n                        //bind\n                        $scope.loadingShow = false;\n                    }\n\n                }\n            });\n        };\n\n        $scope.chartDateTime = {begin: null, end: null};\n\n        // function for show one\n        $scope.showOne = function (deviceName) {\n\n            if ($rootScope['standalone'] && $rootScope['standalone'] == true) {\n                return false;\n            }\n\n\n            // device type is\n            if ($location.url().indexOf('/app/page/param/') != -1) {\n                //open window\n                $window.open(\"/#/app/page/param/\" + $rootScope.applicationName + \"/\" + metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1]));\n            } else {\n                //open window\n                $window.open(\"/#\" + $location.url().replace(\"show\", \"param\").replace($location.url().substr($location.url().lastIndexOf('/', $location.url().lastIndexOf('/') - 1) + 1), metadata.data.source.relation_group + \"/\" + deviceName + \"/\" + Math.floor($scope.chartDateWindow[0]) + \"/\" + Math.floor($scope.chartDateWindow[1])));\n            }\n\n        };\n\n\n        var btntimer = null;\n\n\n        $scope.btnZoomInVLeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVLeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomInVRight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnZoomOutVRight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVULeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVDLeft = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[0].valueRange;\n            yAxes[0]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[0]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n\n        $scope.btnPanVURight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] - (range[1] - range[0]) * 0.2, range[1] - (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        $scope.btnPanVDRight = function () {\n            var g = $scope.currentChart;\n            var yAxes = g.axes_;\n            var range = yAxes[1].valueRange;\n            yAxes[1]['valueRange'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            yAxes[1]['valueWindow'] = [range[0] + (range[1] - range[0]) * 0.2, range[1] + (range[1] - range[0]) * 0.2];\n            g.drawGraph_(false);\n        };\n\n        // functions for buttons\n        $scope.btnpanleft = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[0] - pan_delta) < panRange[0]) {\n                    // go to the left\n                    startDate = panRange[0];\n                } else {\n                    startDate = $scope.chartDateWindow[0] - pan_delta;\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1].getTime() - pan_delta;\n                }\n            } else {\n                if (($scope.chartDateWindow[1] - pan_delta) < (panRange[0] + pan_delta)) {\n                    // go to the left\n                    endDate = panRange[0] + pan_delta;\n                } else {\n                    endDate = $scope.chartDateWindow[1] - pan_delta;\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnpanright = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n\n            //split range to 20 pieces\n            var pan_delta = (panRange[1] - panRange[0]) / 20;\n            var startDate;\n            var endDate;\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                if (($scope.chartDateWindow[0].getTime() + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = $scope.chartDateWindow[0].getTime() + pan_delta;\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            } else {\n                if (($scope.chartDateWindow[0] + pan_delta) < (panRange[1] - pan_delta)) {\n                    // go to the left\n                    startDate = ($scope.chartDateWindow[0] + pan_delta);\n                } else {\n                    startDate = (panRange[1] - pan_delta);\n                }\n            }\n\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                if (($scope.chartDateWindow[1].getTime() + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1].getTime() + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            } else {\n                if (($scope.chartDateWindow[1] + pan_delta) < panRange[1]) {\n                    // go to the left\n                    endDate = ($scope.chartDateWindow[1] + pan_delta);\n                } else {\n                    endDate = panRange[1];\n                }\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        $scope.btnzoomin = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            startDate = rangeStart + (delta * 2);\n            endDate = rangeEnd - (delta * 2);\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            //\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n        $scope.btnzoomout = function () {\n            // get current datetime window\n            var g = $scope.currentChart;\n            var panRange = g.xAxisZoomRange;\n            if (g.xAxisZoomRange[0] instanceof Date) {\n                panRange[0] = g.xAxisZoomRange[0].getTime();\n            }\n            if (g.xAxisZoomRange[1] instanceof Date) {\n                panRange[1] = g.xAxisZoomRange[1].getTime();\n            }\n            //split range to 20 pieces\n            var startDate;\n            var endDate;\n\n            var rangeStart = $scope.chartDateWindow[0];\n            if ($scope.chartDateWindow[0] instanceof Date) {\n                rangeStart = $scope.chartDateWindow[0].getTime();\n            }\n            var rangeEnd = $scope.chartDateWindow[1];\n            if ($scope.chartDateWindow[1] instanceof Date) {\n                rangeEnd = $scope.chartDateWindow[1].getTime();\n            }\n\n            var delta = (rangeEnd - rangeStart) / 20;\n\n            if ((rangeStart - (delta * 2)) > panRange[0]) {\n                startDate = rangeStart - (delta * 2);\n            } else {\n                startDate = panRange[0];\n            }\n\n            if ((rangeEnd + (delta * 2)) < panRange[1]) {\n                endDate = rangeEnd + (delta * 2);\n            } else {\n                endDate = panRange[1];\n            }\n\n            //update graph\n            $scope.chartDateWindow = [new Date(new Number(startDate)), new Date(new Number(endDate))];\n            g.updateOptions({\n                dateWindow: [new Date(new Number(startDate)), new Date(new Number(endDate))]\n            });\n\n            if (btntimer) {\n                $timeout.cancel(btntimer);\n            }\n\n            btntimer = $timeout(function () {\n                $scope.chartDateTime = {\n                    begin: new Date(new Number(startDate)),\n                    end: new Date(new Number(endDate))\n                };\n            }, 600);\n        };\n\n\n        var timer = null;\n        $scope.refersh = function (g, init) {\n            if (timer) {\n                $timeout.cancel(timer);\n            }\n            timer = $timeout(function () {\n                if (init || g.xAxisRange()[0] != $scope.chartDateTime.begin || g.xAxisRange()[1] != $scope.chartDateTime.end) {\n                    $scope.chartDateTime = {begin: g.xAxisRange()[0], end: g.xAxisRange()[1]};\n                    $scope.chartDateWindow = g.xAxisRange();\n                }\n            }, 600);\n        };\n    }\n\n};\n\n\nfgpWidgetGraph.buildFactory = function buildFactory ($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams) {\n    fgpWidgetGraph.instance = new fgpWidgetGraph($timeout, dataService, $rootScope, $interval, $filter, $location, $stateParams);\n    return fgpWidgetGraph.instance;\n};\n\nfgpWidgetGraph\n    .$inject = ['$timeout', 'dataService', '$rootScope', '$interval', '$filter', '$location', '$stateParams'];\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPageTitle = function fgpWidgetPageTitle() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetPageTitle.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //drag-channel  item means this widget accepts items\n    var dom_show = '<div class=\"\" id=\"' + element_id + '\">' +\n        '<div class=\"{{css.width}}\" style=\"-webkit-user-select: none; /* Chrome all / Safari all */  -moz-user-select: none; /* Firefox all */  -ms-user-select: none; /* IE 10+ */  user-select: none;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div id=\"edit' + element_id + '\" style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"\">' +\n        '<h1>{{css.title.text}}</h1>' +\n        '<h3>{{css.subtitle.text}}</h3>' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div>';\n    return dom_show;\n};\n\n\nfgpWidgetPageTitle.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.data && widgetData.from == \"show\") {\n        metadata = widgetData.data.metadata;\n        $scope.css = {};\n        $scope.css[\"color\"] = metadata.css.color;\n        $scope.css[\"width\"] = metadata.css.width;\n        $scope.css[\"minHeight\"] = metadata.css.minHeight;\n        $scope.css[\"border\"] = {};\n        $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n        $scope.css[\"background\"] = {};\n        $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n        $scope.css[\"title\"] = metadata.css.title;\n        $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n        $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n        $scope.css[\"subtitle\"] = metadata.css.subtitle;\n        $scope.css[\"subtitle\"][\"color\"] = metadata.css.subtitle.color;\n        $scope.css[\"subtitle\"][\"show\"] = metadata.css.subtitle.show;\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"title\"].text + \"}\");\n            $scope.css[\"title\"].text = f(deviceData.device);\n            f = new Function(\"device\", \"with(device) { return \" + $scope.css[\"subtitle\"].text + \"}\");\n            $scope.css[\"subtitle\"].text = f(deviceData.device);\n        });\n    }\n\n\n\n\n};\n\nfgpWidgetPageTitle.buildFactory = function buildFactory () {\n    fgpWidgetPageTitle.instance = new fgpWidgetPageTitle();\n    return fgpWidgetPageTitle.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetMap = function fgpWidgetMap() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetMap.prototype.template = function template (element, attrs) {\n    var dom_show = '<div class = \"{{css.width}}\" style=\"padding:0px;height:{{css.height}}px;\" map-lazy-load=\"https://maps.google.com/maps/api/js\">' +\n        '<ng-map style=\"height: 100%;width: 100%;\" center=\"{{center}}\" zoom=\"15\">' +\n        '<marker on-click=\"map.showInfoWindow(\\'info_' + attrs.id + '\\')\" id=\"marker_' + attrs.id + '\" ng-repeat=\"item in markers\" icon=\"{{item.image}}\" position=\"{{item.latitude}},{{item.longitude}}\" title=\"{{item.name}}\" animation=\"Animation.DROP\" ></marker>' +\n        '</ng-map>' +\n        '</div>' +\n        '';\n    return dom_show;\n};\n\n\nfgpWidgetMap.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n            var location = {};\n            $scope.markers = [];\n            $scope.details = $scope.$parent.device;\n\n\n            // show one point.\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { return \" + item.value + \";}\");\n                    var result = f(deviceData.device);\n                    if (result) {\n                        location[item.label] = result;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n                } catch (error) {\n                    // show image\n                    if (\"image\" == item.label) {\n                        location[item.label] = item.value;\n                    } else {\n                        location[item.label] = \"\";\n                    }\n\n                }\n            });\n\n\n            //do not show\n            if (location.latitude == \"\" || location.longitude == \"\") {\n                //hard code. the location is Melbourne\n                location.latitude = \"-37.810000\";\n                location.longitude = \"144.950000\";\n                $scope.center = [location.latitude, location.longitude];\n                // $scope.markers.push(location);\n            } else {\n                $scope.center = [location.latitude, location.longitude];\n                $scope.markers.push(location);\n            }\n\n        });\n    }\n\n};\n\nfgpWidgetMap.buildFactory = function buildFactory () {\n    fgpWidgetMap.instance = new fgpWidgetMap();\n    return fgpWidgetMap.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetDeviceDetail = function fgpWidgetDeviceDetail() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetDeviceDetail.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '<div class=\"row\" ng-repeat=\"item in data\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"text-align: right; font-weight: bold;line-height: 30px;\">{{item.label}}</div><div class=\"col-xs-8 col-md-8\" style=\"text-align: left;line-height: 30px;\">{{item.value}}</div>' +\n        '</div>' +\n        '</div>' +\n        '<div id=\"detail_status_' + attrs.id + '\" class=\"row\" style=\"min-height: 50px;\">' +\n        '</div>' +\n        '</div>';\n};\n\n\nfgpWidgetDeviceDetail.prototype.controller = function controller ($scope, $element) {\n    var metadata = null;\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n\n    /**\n     * get device information\n     */\n    if (widgetData.data && widgetData.from == \"show\") {\n\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n\n            $scope.showdata = widgetData.data;\n\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n\n\n            $scope.data = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = \"\";\n                    $scope.data.push(item);\n                }\n            });\n\n\n        });\n\n    }\n\n};\n\n\nfgpWidgetDeviceDetail.buildFactory = function buildFactory () {\n    fgpWidgetDeviceDetail.instance = new fgpWidgetDeviceDetail();\n    return fgpWidgetDeviceDetail.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetSpan = function fgpWidgetSpan() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetSpan.prototype.template = function template (scope, element) {\n    return '<div class = \"{{css.width}}\" style=\"padding:0px;\"><div class=\"row\" style=\"height: {{css.height}}px;\">' +\n        '</div>';\n};\n\nfgpWidgetSpan.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n};\n\nfgpWidgetSpan.buildFactory = function buildFactory () {\n    fgpWidgetSpan.instance = new fgpWidgetSpan();\n    return fgpWidgetSpan.instance;\n};\n\n/**\n * Created by ericwang on 20/06/2016.\n */\nvar fgpWidgetPie = function fgpWidgetPie($timeout) {\n    this.restrict = 'E';\n    this.scope = {};\n    this.$timeout = $timeout;\n};\n\n\nfgpWidgetPie.prototype.template = function template (element, attrs) {\n    return '<div class = \"{{css.width}}\" ><div style=\"height: {{css.height}}px;\">' +\n        '<canvas class=\"fgpPieChart\"></canvas>' +\n        '</div>' +\n        '</div>';\n};\n\nfgpWidgetPie.prototype.link = function link (scope, element) {\n\n    this.$timeout(function () {\n        var ctx = element.find(\"canvas\")[0];\n        scope.chart = new Chart(ctx, {\n            type: 'pie',\n            data: {\n                labels: ['1'],\n                datasets: [\n                    {\n                        data: [1],\n                        backgroundColor: []\n                    }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                animation: false,\n                legend: {display: true}\n            }\n        });\n    });\n};\n\n\nfgpWidgetPie.prototype.controller = function controller ($scope, $element, $timeout) {\n\n    var id = $element.attr(\"id\");\n    var metadata = null;\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            metadata = widgetData.data.metadata;\n            $scope.showdata = widgetData.data;\n            $scope.css = {\n                width: \"col-md-12\",\n                height: \"400\"\n            };\n            if ($scope.showdata.metadata.css) {\n                $scope.css = $scope.showdata.metadata.css;\n            }\n            $scope.data = [];\n            var colors = [];\n            //get all columns\n            var f = null;\n            angular$1.forEach($scope.showdata.metadata.data, function (item) {\n                try {\n                    f = new Function(\"device\", \"with(device) { if(\" + item.value + \") return \" + item.value + \";}\");\n                    item.value = f(deviceData.device);\n                    $scope.data.push(item);\n                } catch (error) {\n                    item.value = item.value;\n                    $scope.data.push(item);\n                }\n                if (item.color) {\n                    colors.push(item.color);\n                } else {\n                    colors.push('#' + (function co(lor) {\n                            return (lor +=\n                                [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f'][Math.floor(Math.random() * 16)])\n                            && (lor.length == 6) ? lor : co(lor);\n                        })(''));\n                }\n            });\n            // timeout\n            $scope.pieData = {labels: [], value: []};\n            $timeout(function () {\n                // create data\n                angular$1.forEach($scope.data, function (item) {\n                    $scope.pieData.labels.push(item.label);\n                    $scope.pieData.value.push(item.value);\n                });\n\n                $scope.chart.data.labels = $scope.pieData.labels;\n                $scope.chart.data.datasets[0].data = $scope.pieData.value;\n                $scope.chart.data.datasets[0].backgroundColor = colors;\n                // update chart\n                $scope.chart.update();\n            });\n\n        });\n\n\n    }\n\n\n};\n\nfgpWidgetPie.buildFactory = function buildFactory ($timeout) {\n    fgpWidgetPie.instance = new fgpWidgetPie($timeout);\n    return fgpWidgetPie.instance;\n};\nfgpWidgetPie.$inject = ['$timeout'];\n\n/**\n * Created by eric on 22/11/16.\n */\n\nvar fgpDockerButton = function fgpDockerButton() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\n\nfgpDockerButton.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"col-xs-12 btn-group\" role=\"group\" style=\"padding: 2px;\" aria-label=\"...\">' +\n        '<div style=\"float: right;\">' +\n        '<button type=\"button\" class=\"btn btn-{{button.color}} btn-xs\" ' +\n        ' ng-click=\"action(button)\" ng-repeat=\"button in buttons\" ng-show=\"checkShow(button)\"><i class=\"fa {{button.icon}}\"' +\n        ' aria-hidden=\"true\"></i>' +\n        '</button>' +\n        '</div>' +\n        '</div>';\n    return show_dom;\n};\n\n\nfgpDockerButton.prototype.controller = function controller ($scope, $element, $http, $timeout) {\n\n    $scope.stats = \"\";\n\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var confData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                confData = data.data;\n            }\n        }\n    });\n\n    var repeateId = [];\n\n    var pageDevice = null;\n    $scope.$on('deviceInfoEvent', function (event, data) {\n        pageDevice = data.device;\n    });\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n        if (data.application === repeateId[2] && data.container === repeateId[0] && data.host === repeateId[1]) {\n            $scope.stats = data.stats;\n        }\n    });\n\n    $scope.checkShow = function (button) {\n\n\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            return true;\n        }\n\n\n        if (button.type === \"stop\") {\n            if ($scope.stats === \"running\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"start\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (button.type === \"delete\") {\n            if ($scope.stats === \"exited\" || $scope.stats === \"created\") {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    // how many buttons?\n    $scope.buttons = [];\n\n    if ($scope.$parent.repeat) {\n        repeateId = $scope.$parent.repeat.split(\",\");\n    }\n\n    angular.forEach(configuration, function (item) {\n        if (item.label == \"buttons\") {\n            $scope.buttons = item.value;\n        }\n    });\n\n    $scope.healthinfo = \"\";\n\n\n    // submit \"action\" to rest api\n    $scope.action = function (button) {\n        if (button.hasOwnProperty(\"shown\") && button.shown) {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/exec',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    deviceName: pageDevice.name,\n                    deviceKey: pageDevice.key.id,\n                    relationship: 'node_application'\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        } else {\n            // send request through $http\n            $http({\n                method: 'POST',\n                url: '/api/docker/hosts/action',\n                data: {\n                    func: button.func,\n                    script: button.script,\n                    container: repeateId[0],\n                    host: repeateId[1],\n                    application: repeateId[2]\n                }\n            }).then(function successCallback(response) {\n                console.info(response.data);\n            }, function errorCallback(response) {\n                console.error(response.data);\n            });\n        }\n\n    };\n};\n\n\nfgpDockerButton.buildFactory = function buildFactory () {\n    fgpDockerButton.instance = new fgpDockerButton();\n    return fgpDockerButton.instance;\n};\n\n/**\n * Created by ericwang on 15/06/2016.\n */\nvar fgpWidgetRepeatContainer = function fgpWidgetRepeatContainer($http) {\n    this.restrict = 'E';\n    this.scope = {};\n    this._$http = $http;\n};\n\nfgpWidgetRepeatContainer.prototype.template = function template (element, attrs) {\n    var flag = attrs.hasOwnProperty(\"shown\");\n    var showTitle = attrs.hasOwnProperty(\"showtitle\");\n    var element_id = attrs.id;\n    var dom_show = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{item.device.key.id}}\" ng-repeat=\"item in items\" emit-last-repeater-element style=\"padding-left: 2px; padding-right: 2px;\">' +\n        '<div class=\"{{css.width}}\" style=\"padding-left: 1px; padding-right: 1px;\">' +\n        '<div class=\"panel\" style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"panel-heading\" style=\"background-color: {{css.title.color || \\'#fff\\'}};\"><i class=\"fa fa-desktop\" aria-hidden=\"true\" style=\"margin-right: 5px;\"></i>{{item.device.name}}</div>' +\n        '<div class=\"panel-body\"  style=\"padding:0px;min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\'}};\">' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n    var dom_show_notitle = '<div class=\"\" id=\"' + element_id + '_{{$index}}\" ng-repeat=\"item in items\" repeat-id=\"{{item.device.key.id}}\">' +\n        '<div class=\"{{css.width}}\" style=\"margin-bottom:15px;padding-left: 2px; padding-right: 2px;\">' +\n        '<div style=\"border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div style=\"min-height:{{css.minHeight || 100}}px;background-color: {{css.background.color||\\'#fff\\';}}\"></div>' +\n        '<div style=\"float:left;padding-top: 5px;padding-left:5px;padding-right:5px;\">' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-{{labelstyle[$index]}}\" ng-repeat=\"label in labels\">{{label}}:{{item.labels[label]}}</span>' +\n        '<span style=\"float:left;margin-right: 5px;\" class=\"label label-success\" ng-click=\"healthcheck(item)\">{{item.health}}</span>' +\n        '</div>' +\n        '<div class=\"col-md-12 col-xs-12\" style=\"padding-top: 5px;padding-left:5px;padding-right:5px;float:left;max-height: 200px; overflow-y: auto;\" id=\"edit' + element_id + '\" list-type=\"{{listStyle}}\">' +\n        '</div>' +\n        '</div>' +\n        '</div></div>';\n\n    // show or design\n    if (flag) {\n        if (showTitle) {\n            return dom_show;\n        } else {\n            // without title\n            return dom_show_notitle;\n        }\n    }\n};\n\nfgpWidgetRepeatContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout, $http, $location, $stateParams, $websocket) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    // all items\n    $scope.items = [];\n\n    $scope.labelstyle = [\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"];\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n    $scope.css[\"title\"] = metadata.css.title;\n    $scope.css[\"title\"][\"color\"] = metadata.css.title.color;\n    $scope.css[\"title\"][\"show\"] = metadata.css.title.show;\n\n    $scope.data = {};\n\n    $scope.listStyle = \"list\";\n\n    $scope.labels = [];\n\n    var deviceType = $stateParams.type;\n    var deviceName = $stateParams.device;\n\n    if (metadata.data) {\n\n\n        $scope.labels = [];\n\n\n        if (metadata.data.datasource.labels) {\n            $scope.labels = metadata.data.datasource.labels.split(\" \");\n        }\n\n        if (metadata.data.datasource.style) {\n            $scope.listStyle = metadata.data.datasource.style;\n        }\n\n        // show different type\n        var relation = metadata.data.datasource.type;\n        $scope.items = [];\n        $http({\n            method: 'GET',\n            url: 'api/docker/repeat/' + deviceType + '/' + deviceName + '/' + relation\n        }).then(function (data) {\n            $scope.items = data.data;\n        }, function (error) {\n            console.error(error);\n        });\n\n        // I'm ready. please give all my children to me~\n        // call stage\n        $scope.$on('LastRepeaterElement', function () {\n            $timeout(function () {\n                $scope.$emit('bindChildRepeatEvent', {\n                    id: element_id\n                });\n            });\n        });\n\n\n    }\n    //establish a connection with websocket\n    var dataStream = $websocket('ws://' + $location.host() + \":\" + $location.port() + '/ws/hosts');\n    dataStream.onMessage(function (message) {\n        try {\n            var backData = JSON.parse(message.data);\n            if (backData.hasOwnProperty(\"container\")) {\n                // tell children\n                $scope.$parent.$broadcast('containerStatusEvent', backData);\n                // update health-check status\n                angular.forEach($scope.items, function (item) {\n                    if (backData.application == item.device.key.id) {\n                        if (backData.config.State.Health) {\n                            item[\"health\"] = backData.config.State.Health.Status;\n                        } else {\n                            item[\"health\"] = null;\n                        }\n\n                        if (backData.stats == \"exited\") {\n                            item[\"health\"] = null;\n                        }\n                    }\n                });\n            }\n        } catch (e) {\n        }\n    });\n\n    $scope.healthcheck = function (item) {\n        // call server and get the exception.\n        dataService.healthcheck(item.name, item.device.key.id);\n    };\n\n\n};\n\n\nfgpWidgetRepeatContainer.buildFactory = function buildFactory ($http) {\n    fgpWidgetRepeatContainer.instance = new fgpWidgetRepeatContainer($http);\n    return fgpWidgetRepeatContainer.instance;\n};\n\nfgpWidgetRepeatContainer.$inject = ['$http'];\n\n/**\n * Created by eric on 25/11/16.\n */\nvar fgpImage = function fgpImage() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpImage.prototype.template = function template (scope, element) {\n    return '' +\n        '<img src=\"{{url}}\" style=\"width:{{css.width}}px;height:{{css.height}}px;\">' +\n        '';\n};\n\nfgpImage.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    $scope.showdata = widgetData.data;\n    $scope.css = {\n        width: \"0\",\n        height: \"0\"\n    };\n\n    $scope.url = \"\";\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n    if($scope.showdata.metadata.data){\n        $scope.url = $scope.showdata.metadata.data.url;\n    }\n};\n\nfgpImage.buildFactory = function buildFactory () {\n    fgpImage.instance = new fgpImage();\n    return fgpImage.instance;\n};\n\n/**\n * Created by eric on 28/11/16.\n */\nvar fgpIcon = function fgpIcon() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpIcon.prototype.template = function template (element, attrs) {\n    var show_dom = '<div class=\"{{css.width}}\" style=\"margin-top: 10px;background-color: {{css.background.color}};border-color:{{css.border.color || \\'#fff\\'}};\">' +\n        '<div class=\"col-xs-4 col-md-4\" style=\"padding: 5px;\">' +\n        '<i class=\"fa fa-{{icon}}\" style=\"font-size: 60px;\"></i>' +\n        '</div>' +\n        '<div class=\"col-xs-8 col-md-8\">' +\n        '<div style=\"text-align: right;font-size: large;\"><label>{{title}}</label></div>' +\n        '<div style=\"text-align: right;font-size: small;\"><label>{{desc}}</label></div>' +\n        '</div>' +\n        '</div>' +\n        '';\n    return show_dom;\n};\n\nfgpIcon.prototype.controller = function controller ($scope, $element) {\n    // get configuration\n    var id = $element.attr(\"id\");\n    var configuration = null;\n    var widgetData = null;\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: id, callback: function (data) {\n            if (data) {\n                configuration = data.data.metadata.data;\n                widgetData = data;\n            }\n        }\n    });\n\n\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.icon = configuration.content.icon;\n\n    $scope.desc = configuration.content.desc;\n\n    $scope.title = \"\";\n\n    if (widgetData.from == \"show\" && widgetData.data) {\n        $scope.data_from = \"application\";\n        $scope.parent_container = widgetData.data.parent;\n        $scope.$on('deviceInfoEvent', function (event, deviceData) {\n            // if the parent container sends a device to here, ignore global device.\n            if ($scope.data_from != \"application\" && deviceData.from == \"application\") {\n                return;\n            } else if (deviceData.from != \"application\") {\n                if ($scope.parent_container != \"edit\" + deviceData.from) {\n                    return;\n                } else {\n                    $scope.data_from = deviceData.from;\n                }\n            }\n            var f = new Function(\"device\", \"with(device) { return \" + configuration.content.f + \"}\");\n            $scope.title = f(deviceData.device);\n        });\n\n    }\n\n};\n\n\nfgpIcon.buildFactory = function buildFactory () {\n    fgpIcon.instance = new fgpIcon();\n    return fgpIcon.instance;\n};\n\n/**\n * Created by eric on 29/11/16.\n */\nvar fgpWidgetAppContainer = function fgpWidgetAppContainer() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetAppContainer.prototype.template = function template (element, attrs) {\n    var element_id = attrs.id;\n    //<div class=\"alert alert-info\" role=\"alert\">...</div>\n    return '' +\n        '<div ng-show=\"showstyle == \\'list\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-12 col-xs-12  alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px; text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n\n        '<div ng-show=\"showstyle == \\'grid\\'\" style=\"padding:0;margin-bottom: 5px;background-color: {{css.background.color}}; border: 1px solid; border-color: {{css.border.color}};border-radius: 5px;\"  class=\"col-md-6 col-xs-6 alert alert-info\" dulp=\"'+element_id+'\" id=\"' + element_id + '_{{$index}}\" repeat-id=\"{{container.id}},{{host}},{{container.application}}\" ng-repeat=\"container in containers | orderBy: \\'Name\\' as filtered_result track by $index\" emit-last-repeater-element>' +\n        '<div class=\"col-md-8 col-xs-8\" role=\"alert\" style=\"min-height: 24px;text-align: left;margin-bottom: 0px;padding: 3px;\">' +\n        '<i class=\"fa fa-hdd-o\" aria-hidden=\"true\" style=\"padding-right: 5px;\"></i><a href=\"javascript:;\" ng-click=\"gotoContainer(container);\">{{container.name | removeSlash}}</a>' +\n        '</div>' +\n        '<div class=\"col-md-4 col-xs-4\" id=\"edit' + element_id + '\" style=\"min-height: 24px; padding: 0;\">' +\n        '</div>' +\n        '</div>' +\n        '';\n};\n\nfgpWidgetAppContainer.prototype.controller = function controller ($scope, $element, dataService, $rootScope, $timeout) {\n    // only show\n    var element_id = $element.attr(\"id\");\n\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n    var metadata = widgetData.data.metadata;\n    $scope.css = {};\n    $scope.css[\"color\"] = metadata.css.color;\n    $scope.css[\"width\"] = metadata.css.width;\n    $scope.css[\"border\"] = {};\n    $scope.css[\"border\"][\"color\"] = metadata.css.border.color;\n    $scope.css[\"background\"] = {};\n    $scope.css[\"background\"][\"color\"] = metadata.css.background.color;\n\n    $scope.containers = [];\n    $scope.containerswithTimeout = [];\n    var metadata = widgetData.data.metadata;\n    // should be a host id\n    var repeat = $scope.$parent.repeat;\n\n    $scope.showstyle = \"list\";\n\n    $scope.host = repeat;\n\n\n    // I'm ready. please give all my children to me~\n    // call stage\n    $scope.$on('LastRepeaterElement', function () {\n        $timeout(function () {\n            $scope.$emit('bindChildRepeatEvent', {\n                id: element_id\n            });\n        });\n    });\n\n    $timeout(function () {\n        var pp = $scope.$emit('listStyleEvent', {\n            id: widgetData.data.parent,\n            callback: function (style) {\n                $scope.showstyle = style;\n            }\n        });\n\n    });\n\n    $scope.gotoContainer = function (container) {\n        // \"device type and device name\" display by a dynamic page!\n        console.info(container);\n        return false;\n    };\n\n\n    $scope.$on('containerStatusEvent', function (event, data) {\n\n        if (data.host == repeat) {\n            //f\n            var labels = [];\n\n            if (metadata.data.datasource.labels) {\n                labels = metadata.data.datasource.labels.split(\" \");\n            }\n            var showLabel = \"\";\n            angular.forEach(labels, function (label) {\n                showLabel += data.config[label] + \" \";\n            });\n\n            var app = {\n                id: data.container,\n                label: showLabel,\n                application: data.application,\n                name: data.deviceName,\n                type: data.deviceType\n            };\n            var flag = false;\n            angular.forEach($scope.containers, function (container) {\n                if (container.id == app.id) {\n                    // update timer\n                    var timer_index = -1;\n                    var timer = $scope.containerswithTimeout.filter(function (item, index) {\n                        if(item.app.id == app.id){\n                            timer_index = index;\n                            return true;\n                        }else{\n                            false;\n                        }\n                    });\n                    $timeout.cancel(timer[0].t);\n                    if (data.stats != \"removed\") {\n                        var newTimer = $timeout(function () {\n                            var index = $scope.containers.indexOf(app);\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }, 30000);\n                        timer[0].t = newTimer;\n                        flag = true;\n                    } else {\n                        var index = -1;\n                        angular.forEach($scope.containers, function (item, itemIndex) {\n                            if (item.id === app.id) {\n                                index = itemIndex;\n                            }\n                        });\n                        if (index != -1 && timer_index != -1) {\n                            $scope.containers.splice(index, 1);\n                            $scope.containerswithTimeout.splice(timer_index, 1);\n                            flag = true;\n                            $timeout(function () {\n                                $scope.$emit('bindChildRepeatEvent', {\n                                    id: element_id\n                                });\n                            });\n                        }\n                    }\n                }\n            });\n\n            if (!flag) {\n                // add to\n                $scope.containers.push(app);\n                // delete it after 30 seconds!\n                var t = $timeout(function () {\n                    var index = $scope.containers.indexOf(app);\n                    $scope.containers.splice(index, 1);\n                }, 30000);\n                $scope.containerswithTimeout.push({t: t, app: app});\n            }\n        }\n\n    });\n\n};\n\nfgpWidgetAppContainer.buildFactory = function buildFactory () {\n    fgpWidgetAppContainer.instance = new fgpWidgetAppContainer();\n    return fgpWidgetAppContainer.instance;\n};\n\nfgpWidgetAppContainer.$inject = [];\n\n/**\n * Created by ericwang on 21/06/2016.\n */\nvar fgpWidgetChartTable = function fgpWidgetChartTable() {\n    this.restrict = 'E';\n    this.scope = {};\n};\n\nfgpWidgetChartTable.prototype.template = function template (element, attrs) {\n    return '<div style=\"padding:0px;height: {{css.height}}px;position: relative; overflow-y : auto;\">' +\n        '<table st-table=\"rowCollection\" class=\"col-md-12 table table-striped\">' +\n        '<thead>' +\n        '<tr>' +\n        '<th ng-repeat=\"column in sampledata.columns\">{{column.label}}</th>' +\n        '</tr>' +\n        '</thead>' +\n        '<tbody>' +\n        '<tr ng-repeat=\"value in sampledata.values\">' +\n        '<td ng-repeat=\"col in sampledata.columns\">{{value[col.label] | tableformatter: value : col.label : col.formatter}}</td>' +\n        '</tr>' +\n        '</tbody>' +\n        '</table>' +\n        '</div>';\n};\n\nfgpWidgetChartTable.prototype.controller = function controller ($scope, $element) {\n\n    var element_id = $element.attr(\"id\");\n    var widgetData = null;\n\n    $scope.$emit('fetchWidgetMetadataEvent', {\n        id: element_id, callback: function (data) {\n            if (data) {\n                widgetData = data;\n            }\n        }\n    });\n\n    //show\n    $scope.showdata = widgetData.data;\n\n    $scope.css = {\n        width: \"col-md-12\",\n        height: \"400\"\n    };\n    if ($scope.showdata.metadata.css) {\n        $scope.css = $scope.showdata.metadata.css;\n    }\n\n\n    $scope.$on('chartDataChangeEvent', function (event, chartData) {\n        var chartId = chartData.id;\n        if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"device\") {\n            $scope.sampledata = {};\n            // make data\n            var collectionName = chartData.data.collection;\n            var groupName = chartData.group;\n            var columns = [];\n            //get group and collection configuration\n            angular$1.forEach($scope.showdata.metadata.data.groups, function (group) {\n                if (group.name == groupName) {\n                    angular$1.forEach(group.collections, function (collection) {\n                        if (collection.name === collectionName) {\n                            columns = collection.rows;\n                        }\n                    });\n                }\n            });\n\n\n            $scope.sampledata.columns = [];\n\n            angular$1.forEach(columns, function (column) {\n                $scope.sampledata.columns.push({label: column.label, formatter: column.formatter});\n            });\n            $scope.sampledata.values = [];\n            angular$1.forEach(columns, function (column) {\n                var f = new Function(\"data\", \"with(data) { if(\" + column.value + \") return \" + column.value + \";return '';}\");\n                angular$1.forEach(chartData.data.data, function (record, index) {\n                    if ($scope.sampledata.values.length < chartData.data.data.length) {\n                        //add new one\n                        var item = {};\n                        item[column.label] = f(record);\n                        $scope.sampledata.values.push(item);\n                    } else {\n                        $scope.sampledata.values[index][column.label] = f(record);\n                    }\n                });\n            });\n\n            var cleanData = [];\n            angular$1.forEach($scope.sampledata.values, function (value, index) {\n                var flag = false;\n                angular$1.forEach(columns, function (column) {\n                    if (value[column.label] && value[column.label] != \"\") {\n                        flag = true;\n                    }\n                });\n\n                if (flag) {\n                    cleanData.push(value);\n                }\n            });\n            $scope.sampledata.values = cleanData;\n\n        } else if ($scope.showdata.metadata.data.chartId === chartId && chartData.group == \"relation\") {\n            //\n\n\n        }\n\n    });\n\n\n};\n\nfgpWidgetChartTable.buildFactory = function buildFactory () {\n    fgpWidgetChartTable.instance = new fgpWidgetChartTable();\n    return fgpWidgetChartTable.instance;\n};\n\n/**\n * Created by ericwang on 10/06/2016.\n */\n// angular module\nangular$1.module('fgp-kit', ['ngMap','ui.router']).service('dataService', dataAccessApi.buildFactory)\n    .filter('removeSlash', function () {\n        return function (input) {\n            if (input.startsWith(\"/\")) {\n                return input.substring(1, input.length);\n            }\n            return input;\n        }\n    })\n    .factory('$graphstorage', ['$window', function($window) {\n    return {\n        setTree: function(key, value) {\n            $window.localStorage[key] = JSON.stringify(value);\n        },\n        getTree: function(key) {\n            return JSON.parse($window.localStorage[key]) || false;\n        },\n        addTree: function (key,value) {\n            if($window.localStorage[key]){\n                var trees = JSON.parse($window.localStorage[key]);\n                trees.push(value);\n                this.setTree(key,trees);\n            }else{\n                this.setTree(key, [value]);\n            }\n        },\n        clear: function(){\n            $window.localStorage.clear();\n        }\n    }\n    }])\n    .directive('fgpContainer', fgpStage.buildFactory)\n    .directive('widgetContainer', fgpWidgetContainer.buildFactory)\n    .directive('widgetGraph', fgpWidgetGraph.buildFactory)\n    .directive('widgetPageTitle', fgpWidgetPageTitle.buildFactory)\n    .directive('widgetMap', fgpWidgetMap.buildFactory)\n    .directive('widgetStatus', fgpStage.buildFactory)\n    .directive('widgetDeviceDetail', fgpWidgetDeviceDetail.buildFactory)\n    .directive('widgetDeviceSpan', fgpWidgetSpan.buildFactory)\n    .directive('widgetPie', fgpWidgetPie.buildFactory)\n    .directive('widgetDockerButton', fgpDockerButton.buildFactory)\n    .directive('widgetRepeatContainer', fgpWidgetRepeatContainer.buildFactory)\n    .directive('widgetImage', fgpImage.buildFactory)\n    .directive('widgetIcon', fgpIcon.buildFactory)\n    .directive('widgetAppContainer', fgpWidgetAppContainer.buildFactory)\n    .directive('widgetChartTable', fgpWidgetChartTable.buildFactory)\n    .directive('emitLastRepeaterElement', [function () {\n        return function (scope) {\n            if (scope.$last) {\n                scope.$emit('LastRepeaterElement');\n            }\n        };\n    }]).filter('tableformatter', ['$filter', function ($filter) {\n    return function (input, obj, field, formatter) {\n        if (formatter) {\n            if (obj[field]) {\n                if (\"date\" == formatter) {\n                    return $filter('date')(new Date(obj[field]), 'd/M/yy h:mm a');\n                } else {\n                    return input;\n                }\n            }\n        } else {\n            return input;\n        }\n    };\n}]);\nvar index = 'fgp-kit';\n\nreturn index;\n\n})));\n\n//# sourceMappingURL=fgp.kit.bundle.js.map\n"],"sourceRoot":"/source/"}